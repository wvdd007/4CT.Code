(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    590949,      11962]
NotebookOptionsPosition[    587603,      11903]
NotebookOutlinePosition[    587946,      11918]
CellTagsIndexPosition[    587903,      11915]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"InNodes", "[", 
   RowBox[{"g_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{"First", ",", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"EdgeList", "[", "g", "]"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", "v"}], ")"}], 
       "&"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7800587418578157`*^9, 3.7800587974487486`*^9}},
 CellLabel->
  "In[674]:=",ExpressionUUID->"f2899bf3-a652-4e09-9f77-f6a7114b2553"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OutNodes", "[", 
   RowBox[{"g_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"out", "=", 
      RowBox[{"VertexOutComponent", "[", 
       RowBox[{"g", ",", 
        RowBox[{"{", "v", "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"Select", "[", 
     RowBox[{"out", ",", 
      RowBox[{
       RowBox[{"#", "\[NotEqual]", "v"}], "&"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.780058911148844*^9, 3.780058949984677*^9}, {
   3.7800590109015484`*^9, 3.7800590476204615`*^9}, {3.7800591146699963`*^9, 
   3.7800591952547884`*^9}, 3.78005922708139*^9},
 CellLabel->
  "In[696]:=",ExpressionUUID->"92e5e66c-07c4-45cd-af18-c45be0f72784"],

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"VertexList", "[", 
    RowBox[{"VertexOutComponent", "[", 
     RowBox[{"g", ",", "v"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"#", "\[NotEqual]", "v"}], "&"}]}], "]"}]], "Input",ExpressionUUID\
->"be54d64c-1540-4a68-b082-cc8bac9d97a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MobiusMatrix", "[", "g_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vertices", "=", 
       RowBox[{"VertexList", "[", "g", "]"}]}], ",", " ", "zero", ",", " ", 
      RowBox[{"result", "=", 
       RowBox[{"Association", "[", "]"}]}], ",", " ", "todo", ",", "current", 
      ",", " ", "outNodes", ",", " ", "out"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"result", "[", "v", "]"}], "=", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"v", ",", "vertices"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"zero", "=", 
      RowBox[{"First", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"vertices", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"VertexOutDegree", "[", 
            RowBox[{"g", ",", "#"}], "]"}], "\[Equal]", "0"}], "&"}]}], "]"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", "[", "zero", "]"}], "=", "1"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"todo", "=", 
      RowBox[{"InNodes", "[", 
       RowBox[{"g", ",", "zero"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"todo", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"current", "=", 
         RowBox[{"First", "[", "todo", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"todo", "=", 
         RowBox[{"Rest", "[", "todo", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"out", "=", 
         RowBox[{"OutNodes", "[", 
          RowBox[{"g", ",", "current"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"result", "[", "current", "]"}], "=", 
         RowBox[{"-", 
          RowBox[{"Total", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"result", "[", "v", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"v", ",", "out"}], "}"}]}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"todo", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"todo", ",", 
           RowBox[{"InNodes", "[", 
            RowBox[{"g", ",", "current"}], "]"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "result"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7800574477303205`*^9, 3.7800575200911503`*^9}, {
   3.780057555551146*^9, 3.78005763152036*^9}, {3.780058072645149*^9, 
   3.7800581115385957`*^9}, {3.7800581480252333`*^9, 
   3.7800581543401637`*^9}, {3.7800582018178654`*^9, 
   3.7800583334178205`*^9}, {3.7800583734670377`*^9, 
   3.7800583966839075`*^9}, {3.780058475903596*^9, 3.7800585087399216`*^9}, 
   3.7800586208231044`*^9, {3.7800586547912645`*^9, 3.7800587267818646`*^9}, {
   3.78005878057032*^9, 3.7800587832630277`*^9}, {3.7800588220004745`*^9, 
   3.7800589069095097`*^9}, {3.780058955707073*^9, 3.7800589911934447`*^9}, {
   3.7800590764902925`*^9, 3.7800590819027276`*^9}, {3.7800592416895084`*^9, 
   3.7800593025759373`*^9}, {3.7800593349844837`*^9, 3.78005939314668*^9}, {
   3.780059444284943*^9, 3.780059447829909*^9}, 3.7800595501934958`*^9, {
   3.780059594815014*^9, 3.7800596295278587`*^9}},
 CellLabel->
  "In[714]:=",ExpressionUUID->"a929cd4a-62a2-445b-8416-47de20466955"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MobiusMatrix", "[", "gg", "]"}]], "Input",
 CellChangeTimes->{{3.780057525805274*^9, 3.780057543499175*^9}, {
   3.7800581663730135`*^9, 3.7800581769718866`*^9}, 3.780059575687664*^9},
 CellLabel->
  "In[715]:=",ExpressionUUID->"8d073a1a-3d39-496d-b23e-5086a38d09a6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", "5", "}"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "4", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"-", "1"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7800575445986795`*^9, {3.7800581585919724`*^9, 3.7800581778810544`*^9}, {
   3.7800582510538645`*^9, 3.780058337949275*^9}, {3.7800583832004857`*^9, 
   3.7800584014702635`*^9}, {3.780058687259615*^9, 3.7800587320575724`*^9}, {
   3.780058787730255*^9, 3.7800588018717375`*^9}, 3.7800588837659397`*^9, {
   3.7800589845908146`*^9, 3.780058995903144*^9}, {3.7800590266211176`*^9, 
   3.780059051733452*^9}, 3.7800590867419844`*^9, {3.7800591199087887`*^9, 
   3.7800591356287413`*^9}, 3.7800591677479124`*^9, 3.7800592004833593`*^9, 
   3.7800592315851617`*^9, 3.7800593069374895`*^9, {3.780059343576875*^9, 
   3.7800593973596897`*^9}, 3.780059452413772*^9, {3.7800595548340425`*^9, 
   3.780059576516881*^9}, {3.7800596218189573`*^9, 3.780059633211774*^9}},
 CellLabel->
  "Out[715]=",ExpressionUUID->"fa0d095e-0855-4030-9725-80d02072437e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToLabels", "[", "assoc_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"key", "\[Rule]", 
     RowBox[{"Rotate", "[", 
      RowBox[{
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Row", "[", "key", "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"assoc", "[", "key", "]"}], ",", "Bold", ",", "Red"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Pi", "/", "6"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"key", ",", 
      RowBox[{"Keys", "[", "assoc", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7800597189714985`*^9, 3.780059789906197*^9}, {
  3.780063245290094*^9, 3.7800632687970734`*^9}},
 CellLabel->
  "In[737]:=",ExpressionUUID->"9e69f2d8-1c4d-4b45-8fa4-09607b2f611f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"EdgeList", "[", "gg", "]"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"ToLabels", "[", 
     RowBox[{"MobiusMatrix", "[", "gg", "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7800596462649364`*^9, 3.7800596963774366`*^9}, 
   3.7800597751749063`*^9},
 CellLabel->
  "In[738]:=",ExpressionUUID->"7df3f068-3978-4409-8a49-db519266bff1"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{1}, {1}, {1}, {1}, {1}}, {{2}, {1}, {1}, {1}}, {{3}, {2}}, {{
       5}}, {{4}, {1}}, {{2}, {2}, {1}}, {{3}, {1}, {1}}}, {{{1, 2}, {3, 4}, {
       5, 4}, {2, 6}, {2, 7}, {6, 3}, {6, 5}, {7, 3}, {7, 5}}, Null}, {
      VertexLabels -> {{{2}, {2}, {1}} -> Rotate[
           Column[{
             Row[{{2}, {2}, {1}}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{3}, {1}, {1}} -> 
         Rotate[
           Column[{
             Row[{{3}, {1}, {1}}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{2}, {1}, {1}, {1}} -> 
         Rotate[
           Column[{
             Row[{{2}, {1}, {1}, {1}}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{1}, {1}, {1}, {1}, {
          1}} -> Rotate[
           Column[{
             Row[{{1}, {1}, {1}, {1}, {1}}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{3}, {2}} -> Rotate[
           Column[{
             Row[{{3}, {2}}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{5}} -> Rotate[
           Column[{
             Row[{{5}}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{4}, {1}} -> Rotate[
           Column[{
             Row[{{4}, {1}}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 4.}, {0., 3.}}, 0.03700564971751412], 
        ArrowBox[{{0., 3.}, {-1., 2.}}, 0.03700564971751412], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.03700564971751412], 
        ArrowBox[{{-1., 1.}, {-1., 0.}}, 0.03700564971751412], 
        ArrowBox[{{0., 1.}, {-1., 0.}}, 0.03700564971751412], 
        ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.03700564971751412], 
        ArrowBox[{{-1., 2.}, {0., 1.}}, 0.03700564971751412], 
        ArrowBox[{{0., 2.}, {-1., 1.}}, 0.03700564971751412], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.03700564971751412]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 4.}, 0.03700564971751412], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               
               TemplateBox[{
                RowBox[{"{", "1", "}"}],RowBox[{"{", "1", "}"}],
                 RowBox[{"{", "1", "}"}],RowBox[{"{", "1", "}"}],
                 RowBox[{"{", "1", "}"}]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 4.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 3.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               
               TemplateBox[{
                RowBox[{"{", "2", "}"}],RowBox[{"{", "1", "}"}],
                 RowBox[{"{", "1", "}"}],RowBox[{"{", "1", "}"}]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 3.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{RowBox[{"{", "3", "}"}],RowBox[{"{", "2", "}"}]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9629943502824859, 1.0370056497175142}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{RowBox[{"{", "5", "}"}]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9629943502824859, 0.03700564971751412}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{RowBox[{"{", "4", "}"}],RowBox[{"{", "1", "}"}]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 1.0370056497175142}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               
               TemplateBox[{
                RowBox[{"{", "2", "}"}],RowBox[{"{", "2", "}"}],
                 RowBox[{"{", "1", "}"}]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9629943502824859, 2.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               
               TemplateBox[{
                RowBox[{"{", "3", "}"}],RowBox[{"{", "1", "}"}],
                 RowBox[{"{", "1", "}"}]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 2.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageMargins->0.,
  ImageSize->{348., Automatic}]], "Output",
 CellChangeTimes->{{3.780059668540209*^9, 3.7800596972132473`*^9}, {
   3.7800597767379923`*^9, 3.780059793891096*^9}, 3.7800632791193123`*^9},
 CellLabel->"Out[738]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXXl8FUXWfZKXhT3ucRvijjvuuBJBMKJoFIGwhbAEwiZBQCJbWISACAEU
QQWBAQyLEKMICmgQxaiAcXAJDkrGYTQyOkRGxgzOfPO+W32rXnedd1PwLX/C
LySvq8+5VXWrqrvfrVPVHXqPzM0Z2nvkwL69U+95rHde7sC+I1LbDXuMkuJO
CoVO6hEKhR9JCdHnSCjE/9W/nvSfPx7Pp0bqd9z27dsnPzmtR1afUL1WrduG
4nIHDZ0zd97evXs95L0esoH6HX/gwAE6mZ07YtyMF+cu3Riqt3zDrlD8UwvX
jZo0r3P3ftNnzDxy5IjHusdj1ffsr1q9plO33oQKJSl83JhpC7t067V7924P
2c5DJnnIpcuW9x82dsmr5aEGHnLhqnc6de9rkG09ZKKH3L9/f9esHIVsZJAd
O3c7evSoh7zbQyZ4SErLyR0ye/FroSYecvSUZ2fPmatOKWSbAHLTpk05Q8co
UFMPmdGpO1XYIFsHkI/mjZj27CofOeTxaStWrpSQ5FBC+EiiEdlGxnvIQ4cO
tX+gowIle0jyLzXJ/xZ5/Ln/T2t0/F4izw9+dLhq97o9z61JBqiH+K05f8Xm
rj2y7dbkHrJufQl1P6uHdO01YM+ePYEewr1u85YtwV4Xz73uk4pPF73yfvWP
hwOWHX27AfRtQn7w6Te5k15e8+buX2t/82vsjaSk6Ei6M60t+T46kMLqbPjJ
hRuJ+fisku279inmXR6zqVdasvrTz8o8+y5h/4EfCcs/xKNDxWgVYCxcvZ1I
6mOiOWZ4qJ76FUfVPPzLr8bbtweYw2espZM+kzIeOnW1R/J+0cFb73/527/+
7TFv85hNPORXVT8Qgvjax+QFK08qwxdff2/yDDDDG7Z9xsgDP9R4LZlA9skV
lNJ/4soxc0q1N+8IcGYs3syctz/c6+WXQI6jw5UbPiYrs5Zu1RyuW2OvFSkp
6jcqDbdtAnmQGPQxyvNaJC5SWxupqTHlvSFgp6LyQNSOqq9nJ5GbiP9FTZEZ
z1ZeXiQlhSyirbhlpR9aXtKNSae8XpNoVaayMpKUFCkq8qzcGLAydm6pZYU8
qq145xPIypr8WcpKRkakeXNVtagFzod6PTEpq/HzXpuz/O2J8zfQZ+4T8ZTv
v884Y8PAser+UFLi5X6TzeXKU2W421EtQsleO0XS0/+TmLjvutt0FW4K9LUo
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
1123aNGCPG75AcvK67e9aE08bxURUe+7rUxLS2Osv3I/2plM/b4J5hpPBeVd
COgD1bKO3SE4J97VgjKjqlGurt0gCKH2izA1/drKk+pFEOqi1EeoMYS9H/jq
1cyzRnYKCwul/Tm8K24SGaHz3FNr+BXEHkLlty8SHDfUoSk7qmhMLflOTCUS
9nS4MBIYM9auJoSnnKk29FvtQ2Jq+8eIfy1RzESTOxVSjTZ5Z4ZL7XaLeEOZ
hkU4tg+R7a/0X3nfBWpJKpx/jDsNXBpIJbdpVGpqqnZgfCBPyoR+9gbz072d
+gPvokK9IrrjhNWOXDMvgp1ANU/zrrcRb7RT5czVrVL/5X0SCEcFoValJg/X
YdFrmUQaItQNaWBy/rrV6kXsUfal/svPKsTh7WOs0nLvZd9wrJ86ArdtXTuT
hGmwkpvZO19YeVAPI6dEvS/sakJ11KXA9uF3i16l64A9JbofhrHv3SH983/Q
5TjXyScfkNPqzv1akUUe0W/fradz+Uz/TRXx3C+inpZzSYxenviORS1vjRB2
r7fjeDQnfz8cvnJRZ1JjGnPx7jF6lpAgdEWiLELBHsXGjc/4qYCalGqp9h7B
PTqC9sgSjWWhz2tbn1o2yRNJSUnqeohl/F3AJp3ne0dMq5g7bYVllXym72SI
b+ZZbQmp5vr/if57qe4j/H5eowrYHQk+jxilwS4r1agXdlqpRhHxsZVqVBYf
WalGufGhlWrUIOVWqlGYfGClGtXKDivVKGHet1KNuuY9K9UodrZbqUYF9K6V
apRF26xUo1Yqs1KNAuodK9Woqt62Uo1Sa6uVatRfW6xUoyjbbKUaldpbVqpR
vr1ppRo13SYr1Sj0NlqpRvX3hpVqlIQbrFSjTnzdSjWKx9esVKOiLLVSjTLz
VSu1lz4qsVKNgnS9lWpUqeusVKN0fcVKNerZtVaqUeSusVKNyne1lWqUw6us
VKNGLrZSjcL5ZSvVqKZXWqmD9NEKK9Wou5dbqUYx/nsr1ajQl1mpRtm+1Eod
po+WWKlGgf+SlWpU/YutVLNSYJGValYfvGilmhUNL1ipZpXE81aqWXmx0Eo1
qzkWWKlmhchzVqpZdTLfSjUrWZ61Us3qmGesVLNyaJ6VOl4fzbVSzZqeOVZq
gT4qslIn6qPZVuokfTTLSp2sj562Uqfoo5lW6pP66Ckrdao+mmGlTtNH063U
Qn1UaKUazDQr1dibaqWavJ+0Uk05p1ippk6TrVRT/0lWqvHVRCvV+LXASjVt
YK+zMu013ko1bWuvEjP9wF41ZfqMvRrK9C97lZPpi/bqJdNv7VVJpo/bq43M
eLBXEZmxY68OMuPMXvVjxqS9mseMX3uVjhnr9uqbJfpomJVqriH2ahlzvbFX
wZhrk726xVzH7FUr5po3yEo110d7lYm5ltqrR8x1114VYq7R9moPcz23V3GY
a7+9OsPcJ+xVF+aeYq+mMPcfe5WEuVfZqx/Mfa2XlWrugfZqBXO/tFchmHur
vbrA3IftVQPmnm2vBjD3d1vlb54FbPW+eW6wVfnmGcNW25vnEVtFb55dbHW8
ec6xVe/mmchWs5vnJ1ulbp61bPV5mT6yVeXmGc5Wi5vnPVsFbp4NbXW3eY60
VdvBZ04/1Tyf2ipr8yxrq6fNc6+tijbPyLba2TxP2yrmj/WRrU42z+m26tg8
09tqYvP8b6uEzXcGW/1rvo+0slLNdx9brWu+ZdkqXPO9zlbXmu+Vtmr2c31k
q2HNN29b5Wq+89vqVRNnsFWpJrJhq01NfMVWkZrIjq0ONVEmW/VpYl62mtNE
32yVpokE2urLKn1kqypNLNRWS5oorK2CNHFfW91oosm2atFEoi+3Uk0U21YZ
moi3rR400XFbFWgi67baz0TobRXfX/WRrc77UR/Zqruf9JGtpvubPrJVcof0
ka1+q9FHzazUn/WRrVY7rI9sFdrf9ZGtLvtFH9mqsSP6yFaD/UMf2SqvX/WR
rd6q1Ue2Kuuf+shWWx3VR7aK6jd9ZKuj/qWPbNXTv/WRrWb6L31kq5T+o49s
9VFEHzWNST1JpzSJxeuUxjFnTBSkUcwZE+lrGHPGxDwaxJwxMwv1Y84k6hR+
n8fRo0f37Nnz7Evr6YdnV9OjSDO7wjGgQ4cOTX5yWvp9D2ZmDajXqUdOKMxz
veMmTDxw4EC7KMvk6AVk+OUo42a8qGbl441yolO33qtWr+H1Lx6ngZfDmjc/
zuo3LPB+Fv8tTlSuNjY67oVFi4ePm+nPoJNdawbdlCWoI5Fn7E1dg+oXWSHg
I4+lSPCRx1JA+MhjKS58pK+6kBUePvJYWhAfeSwFi49cs3btoJGTfeSoSfPm
zJ0nIY+l0PHb6FiKIL/dj6VA8pGUe3bf/nUrnhSS365zPCorhWaF4LGUXgrp
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
0a9q2wAQZIdXpcXU00dm1Hmm7ntR6KT/BqwZb9U=\
\>"],ExpressionUUID->"4bdab7d3-a803-40d6-a243-8a7a2d28499c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gg", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{{{1}, {1}, {1}, {1}, {1}}, {{5}}, {{2}, {1}, {1}, {1}}, {{2}, {
         2}, {1}}, {{3}, {1}, {1}}, {{3}, {2}}, {{4}, {1}}}, {{{1, 3}, {6, 
         2}, {7, 2}, {3, 4}, {3, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 7}}, Null}, {
        GraphHighlight -> {{{1}, {1}, {1}, {1}, {1}}}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
         VertexLabels -> {{{3}, {1}, {1}} -> Rotate[
             Column[{$CellContext`p3x1x1, 
               Style[10, Bold, 
                RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
             Pi], {{3}, {2}} -> Rotate[
             Column[{$CellContext`p3x2, 
               Style[10, Bold, 
                RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
             Pi], {{4}, {1}} -> Rotate[
             Column[{$CellContext`p4x1, 
               Style[5, Bold, 
                RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
             Pi], {{5}} -> Rotate[
             Column[{$CellContext`p5, 
               Style[1, Bold, 
                RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
             Pi], {{2}, {1}, {1}, {1}} -> Rotate[
             Column[{$CellContext`p2x1x1x1, 
               Style[10, Bold, 
                RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
             Pi], {{1}, {1}, {1}, {1}, {1}} -> Rotate[
             Column[{$CellContext`p1x1x1x1x1, 
               Style[1, Bold, 
                RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
             Pi], {{2}, {2}, {1}} -> Rotate[
             Column[{$CellContext`p2x2x1, 
               Style[15, Bold, 
                RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
             Pi]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
          ArrowBox[{{0., 4.}, {0., 3.}}, 0.03700564971751412], 
          ArrowBox[{{0., 3.}, {-1., 2.}}, 0.03700564971751412], 
          ArrowBox[{{0., 3.}, {0., 2.}}, 0.03700564971751412], 
          ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.03700564971751412], 
          ArrowBox[{{-1., 2.}, {0., 1.}}, 0.03700564971751412], 
          ArrowBox[{{0., 2.}, {-1., 1.}}, 0.03700564971751412], 
          ArrowBox[{{0., 2.}, {0., 1.}}, 0.03700564971751412], 
          ArrowBox[{{-1., 1.}, {-1., 0.}}, 0.03700564971751412], 
          ArrowBox[{{0., 1.}, {-1., 0.}}, 0.03700564971751412]}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
           {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
            DiskBox[{0., 4.}, 0.03700564971751412]}, InsetBox[
            RotationBox[
             TagBox[GridBox[{
                {"p1x1x1x1x1"},
                {
                 StyleBox["1",
                  StripOnInput->False,
                  LineColor->RGBColor[1, 0, 0],
                  FrontFaceColor->RGBColor[1, 0, 0],
                  BackFaceColor->RGBColor[1, 0, 0],
                  GraphicsColor->RGBColor[1, 0, 0],
                  FontWeight->Bold,
                  FontColor->RGBColor[1, 0, 0]]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.03700564971751412, 4.037005649717514}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.03700564971751412],
            InsetBox[
            RotationBox[
             TagBox[GridBox[{
                {"p5"},
                {
                 StyleBox["1",
                  StripOnInput->False,
                  LineColor->RGBColor[1, 0, 0],
                  FrontFaceColor->RGBColor[1, 0, 0],
                  BackFaceColor->RGBColor[1, 0, 0],
                  GraphicsColor->RGBColor[1, 0, 0],
                  FontWeight->Bold,
                  FontColor->RGBColor[1, 0, 0]]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9629943502824859, 0.03700564971751412}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{0., 3.}, 0.03700564971751412], 
           InsetBox[
            RotationBox[
             TagBox[GridBox[{
                {"p2x1x1x1"},
                {
                 StyleBox["10",
                  StripOnInput->False,
                  LineColor->RGBColor[1, 0, 0],
                  FrontFaceColor->RGBColor[1, 0, 0],
                  BackFaceColor->RGBColor[1, 0, 0],
                  GraphicsColor->RGBColor[1, 0, 0],
                  FontWeight->Bold,
                  FontColor->RGBColor[1, 0, 0]]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.03700564971751412, 3.037005649717514}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.03700564971751412],
            InsetBox[
            RotationBox[
             TagBox[GridBox[{
                {"p2x2x1"},
                {
                 StyleBox["15",
                  StripOnInput->False,
                  LineColor->RGBColor[1, 0, 0],
                  FrontFaceColor->RGBColor[1, 0, 0],
                  BackFaceColor->RGBColor[1, 0, 0],
                  GraphicsColor->RGBColor[1, 0, 0],
                  FontWeight->Bold,
                  FontColor->RGBColor[1, 0, 0]]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9629943502824859, 2.037005649717514}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.03700564971751412], 
           InsetBox[
            RotationBox[
             TagBox[GridBox[{
                {"p3x1x1"},
                {
                 StyleBox["10",
                  StripOnInput->False,
                  LineColor->RGBColor[1, 0, 0],
                  FrontFaceColor->RGBColor[1, 0, 0],
                  BackFaceColor->RGBColor[1, 0, 0],
                  GraphicsColor->RGBColor[1, 0, 0],
                  FontWeight->Bold,
                  FontColor->RGBColor[1, 0, 0]]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.03700564971751412, 2.037005649717514}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.03700564971751412],
            InsetBox[
            RotationBox[
             TagBox[GridBox[{
                {"p3x2"},
                {
                 StyleBox["10",
                  StripOnInput->False,
                  LineColor->RGBColor[1, 0, 0],
                  FrontFaceColor->RGBColor[1, 0, 0],
                  BackFaceColor->RGBColor[1, 0, 0],
                  GraphicsColor->RGBColor[1, 0, 0],
                  FontWeight->Bold,
                  FontColor->RGBColor[1, 0, 0]]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9629943502824859, 1.0370056497175142}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.03700564971751412], 
           InsetBox[
            RotationBox[
             TagBox[GridBox[{
                {"p4x1"},
                {
                 StyleBox["5",
                  StripOnInput->False,
                  LineColor->RGBColor[1, 0, 0],
                  FrontFaceColor->RGBColor[1, 0, 0],
                  BackFaceColor->RGBColor[1, 0, 0],
                  GraphicsColor->RGBColor[1, 0, 0],
                  FontWeight->Bold,
                  FontColor->RGBColor[1, 0, 0]]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.03700564971751412, 1.0370056497175142}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJxlmQtwVNUZx6+7eWxIAnmShQoJihITowlFG1FCbNGkUum2ZWwkEhOUGirU
LaKuQ9toW6FqIeqoEQVDfRBAa0pHRVuctLZjfBS301e0DzItncapTlNH2x1t
Z25/5/zPvbvYHVjunvud//f+f+deLu3b0r9+U9+WDVf11XVs7kv2b7jq+rqL
r9vMUvQkz/NW8Xdj3OPa50p/o77vHz58+IMPPvBWcsla9NixYys6Vr40/kqw
ksc/z7/4+vM//92Lv/jDJVor4J9b7nv6nen3vnr7E99+4Nljx9/udNLH35ru
v3Xfm5NvvfDyGxGuvOjuJ3/+7nv/Nrcvkkw+t7hz8LmjH/7nv8B4ktt02wGU
sOStcHIPHHiRO+DzOz1x3MuzclvvPvTbP/7NiHzSWcNO7vDn35kPWbrnsbF8
K8nF1NvvGqF2Kxm1q6/95s/8wk6HB/5Lv/yT0XthVirve4de9u0HM2Xf9Xd8
/wS9Vq4IaySHjwTjxh2j/8p8gOGI2jAR48OHJeGdZ/dZrUXv/PN9rRIM3OYC
C9y+PO0bHkban5jwlrp4gL/hmyNoBAGTvYhZL2Sf4nsCRkQYmYwfj/u9vd75
DoN/+lIP8Y0Qqr3CAIN9f/jW7ZSCn0r5sZg/NRXsMTXRumzF0aNHvRlmJR/p
dQvrb1l9mZHbvt27IFspw4/se2H8d9hTZCVR8sPNqWO4gRWZTCCZryxRNrhk
rLCRKiBZrJKPVx4ZNa6Pji6TfDGJxWdyppKgaJSK8fFxbpEiV0OSeOGuvV6b
00TdcAcd2ESdOLk7dv1gdnzuptv26bfLtorZ7ZzJGveA4/dTR9Jcd9/4cPX8
pkUXXPH5r+y65pbHgQOUUhemis9sdnGbqUwhRsCOT/1j1bVDTR0buTGr5tQ5
9cvarty56+DPEH36J78WAjk9AcFWWDEKUL/25uHSqtqGC69e2n1n/LTzGtt7
7nz4xwRsx94jzqewYnN3zwCcX7v37Kk+edF5l9/B7nlNF135pSSLGBwNOur/
d84CmV+1C049Z1nHqo1DSy//TvzkU27aPpz+5a+bzl48b+HZi1ra+m7ejSy1
7DKrnXg89uqbu594saurqyPRM3t+Y2rrAKkB8a49JiSfWNHVsmwVF1BKUKkj
I/70tLn8hMsct9d97VG+v3j9Q9sefE5ys5559rmHDzyv1IP62Y1D6wceu+iy
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
t3fS/wBORK0g\
\>"]]}], ";"}]], "Input",
 CellChangeTimes->{{3.78005752824597*^9, 3.7800575337177353`*^9}, 
   3.7800632971750436`*^9},ExpressionUUID->"043cec9d-1c4a-4671-bc97-\
7dcc6df86e68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionTypeLattice3", "[", 
  RowBox[{"PartitionTypeFormula", "[", 
   RowBox[{"allGraphs5", "[", 
    RowBox[{"0", ",", "\"\<graph\>\""}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7800600671543083`*^9, 3.780060088191491*^9}},
 CellLabel->
  "In[732]:=",ExpressionUUID->"439f15a3-ea36-43e0-a271-d09b9c62abfe"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{1}, {1}, {1}, {1}, {1}}, {{5}}, {{2}, {1}, {1}, {1}}, {{2}, {
       2}, {1}}, {{3}, {1}, {1}}, {{3}, {2}}, {{4}, {1}}}, {{{1, 3}, {6, 2}, {
       7, 2}, {3, 4}, {3, 5}, {4, 6}, {4, 7}, {5, 6}, {5, 7}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {{{2}, {2}, {1}} -> Rotate[
           Column[{$CellContext`p2x2x1, 
             Style[15, Bold, 
              RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
           Pi], {{3}, {1}, {1}} -> Rotate[
           Column[{$CellContext`p3x1x1, 
             Style[10, Bold, 
              RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
           Pi], {{2}, {1}, {1}, {1}} -> Rotate[
           Column[{$CellContext`p2x1x1x1, 
             Style[10, Bold, 
              RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
           Pi], {{1}, {1}, {1}, {1}, {1}} -> Rotate[
           Column[{$CellContext`p1x1x1x1x1, 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
           Pi], {{3}, {2}} -> Rotate[
           Column[{$CellContext`p3x2, 
             Style[10, Bold, 
              RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
           Pi], {{5}} -> Rotate[
           Column[{$CellContext`p5, 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
           Pi], {{4}, {1}} -> Rotate[
           Column[{$CellContext`p4x1, 
             Style[5, Bold, 
              RGBColor[1, 0, 0]]}, Alignment -> Center], Rational[1, 6] 
           Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 4.}, {0., 3.}}, 0.03700564971751412], 
        ArrowBox[{{0., 3.}, {-1., 2.}}, 0.03700564971751412], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.03700564971751412], 
        ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.03700564971751412], 
        ArrowBox[{{-1., 2.}, {0., 1.}}, 0.03700564971751412], 
        ArrowBox[{{0., 2.}, {-1., 1.}}, 0.03700564971751412], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.03700564971751412], 
        ArrowBox[{{-1., 1.}, {-1., 0.}}, 0.03700564971751412], 
        ArrowBox[{{0., 1.}, {-1., 0.}}, 0.03700564971751412]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 4.}, 0.03700564971751412], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {"p1x1x1x1x1"},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Center}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 4.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {"p5"},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Center}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9629943502824859, 0.03700564971751412}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 3.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {"p2x1x1x1"},
              {
               StyleBox["10",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Center}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 3.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {"p2x2x1"},
              {
               StyleBox["15",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Center}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9629943502824859, 2.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {"p3x1x1"},
              {
               StyleBox["10",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Center}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 2.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {"p3x2"},
              {
               StyleBox["10",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Center}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9629943502824859, 1.0370056497175142}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {"p4x1"},
              {
               StyleBox["5",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Center}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 1.0370056497175142}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.780060077597381*^9, 3.7800600908217106`*^9}},
 CellLabel->"Out[732]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
J21ArgFCrv6hcoEHFTRPPPCBrXJzc6Gt4jmkp1zZYAZF0JtgnNY5ak5eKtMd
9TwICuIu/ErKda6Q65zQngM5UscHnkwGuMOVCuTlwIsMduTTz6YYhxNE9EZj
nL2OnyBldQ3I1F/IdG6oTMC3jzlco2NACx1LmWAPJsyFTHw+Y+yxIsCBDjmk
R58lZPiekCHXG1m0i9EBXl3ClaP7vO/n9SbdHrLChD1mlTMFzwGCJ1dR4Anx
SUL5REEIJ6iODqJ+mNF6rDBPF5zyBad+ng1BBa4nnlPkwWcF/B++pSoZ2YJH
P8FjYCgPqAIBj/V4EuvnWYwzF9wWDeRT6RRB/7xQ+vA+k41w6Z8vqPUV1M4X
1EY42IME9skCe1BG7AsEdi+BfUFG7MECO1tgD86IfaHATgrsCzNiFwjsuMAu
yIh9kcCOCuyLMmLrOTkZjFB8zIszYupZ06ygOv/rjwZnSEYcrm7f+eDTe+Y1
fvWnY5FL/gYOlOfXn/zOWTdl1icY2/qWyayPXBHJZ2BmOxYIbLmmyNyHcuUT
vjLK7Lsikg1gZ/ZdudrpJbAzj5tBAvtkgZ15zMoVTl+BnXm+OE9gnyKw5dzl
Yss1TT+BLWdWFztfYJ8usOXc72IPENhnCuwBGbG/J7DPEtjyqepiy7VJf4Et
1wUu9jkC+1yBLVc6LrZcgwwQ2HL95mKfLbAHCmy5KnWx5dpDPqvk6trFzhPY
8mkjYwQXW65B5PNCRjou9hkCW874MnZzseWqZIjAlnGni32awL5UYMsI2cWW
q5WhAlvG9i72qQL7coEtcxMutlzJXCGwZWbFxc4V2FcKbJkhcrHluudqgS3z
Wy52H4F9jcCWGTkXW66arhPYJ2fE7i2whwvs3hmx5ZprhMDulRE7R2DfILBz
MmLLFduNAjs7I3ZKYN8ksFMZseV67xaBncyInRDYtwrsREZsuVq8TWDHM2LH
BPZogR3LiC3XmrcL7GhG7CyBPVZgZ4ViMzN19OjR1U+tGV5889XXFc+dN//j
TztJRNcJzXr2Xz7YN6l86uVXDR8zdvyWra8YfGYYjh8/Xlk1c97StY2vt23e
/uHSNU03jZ74h+4vda0y+ULza2NLp655fgdADVvemTG7dtXqpyLBKvCLm5se
rKnza6a1qxoXLtabtlgzhXxj77xrY8svTc20tHz6/v37FShYM4Xk4By2Z5dU
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
Qffu3VtSPmdrS6s9F1XutVnz4q6yyZVTqubcP3d55az5wfNPkzX1OXMfNdlm
e77prklTjh8/bvLAmtK3nl9iK/89E+Hnk9jq8OHDo8aM81uVV1abXWjDAnI9
u3HT9OrFvlwQ0pxiolw6REigFWiVlk+HdHPnzYf+1K3C47T51R0qt8zcrD6Q
FeWbBnx7si0zrOo8UHHgLrOo/hka3m0QJ1703ZjNhILUCF/G+MGuQzarqs77
BGHhp0EIs6danJMbtI48TdH1hbeXPWDDJM+TAHf6kpcerX8d1z9/95NIoPeT
kAcqp71sKERV51+uD1hLet//5y7HGXeqqUvOjCpbqHc4m5WfxOK4Y8QawMIy
Ly9PZWEHZsDC2tSsnfXMqXe2p9WWWpVq8fanRlWeCiturN/PCaXFHBcW/lgd
I+zAslntqu1DEHAhFxbAPIdicpTQSb9UxpzC6B9Kl7kq0IKYjEWx2IW8mnJv
k/1EFKfPlii5eUIBwSJ+6lRmBrrZWIHb/Y3cu5vWoYJatHO+Vold/+yIyssx
c8hjDG1tJ6aehQhBT8FMZTEYQTiGYBW6qLcOmHwyJPYiX2UpLwmoUmaFhRms
HYPEWMwzw8D4CcqAMJb34M0QhjUTleriWyh4EKWxMZwunz5+foF9jx8mejE5
Z54oQpeCVFWVibkkLeZWoDYzwwx/TdwND+Fd+x4I5R3otOZmEyGFU4MYNiS2
eQDlddynbCLri09MoRdzZGCOvmaoiTvobgRWiET9eJXJO3U5OJQaczXctwuR
2Lu4oGa4MM8vJm5OTIerFbBy4mC++YRhGnf7DgrF1iuiBENhKwJYRr2RTVNx
/d4D22ZGGBybEzN2rzePF9R4NQ2JzZUdd3GrfHbU6yGYkjkSRS0DbjbTfhQR
eLAAusZkCWg98GeW6QSzjl6Dpmgn+hgdFY4APCuRNYSak8JH7NlebwXzCgmO
LeJCFgh8dii2lk69fwSiUKuoN0I5p8DP8zJj0pDAp9RAo09jJKsc6Jmh2Hrk
ZcPgTD/SBPRmzpfGjjYxyD4Pp6OktSnOLFDUTxSerDGjglLZHuxB53yPm5eH
9saS2WN+WiiW9u2EnSZoa2hxemhrHf3GmSPk+2eUv4S3Hex5kfHRMzK04kEO
dRneihG89bUTcBzx3d3v7n539+92l+t+9Q6MefMLrxw2ueK+XW+9FVz3J997
772J90zjJqPVm35WObPmp8+/aNbrjK4QAiHIa9jyjomuJpRNA0EFCsZg37YT
ia2+bacRWyFWRMSIuNHfSTT+7goVdQ0PSL5//37cRRS3Yu0WyA/ub765y0hO
vYGxcPESBHnQHvIZvZv+bt/6TUhq/WeiEZ7E1G9AUmeUzLNB50355qMYc9Qs
ywTux1klY0FCPZdISb8PKcbVDllkYTHHvJiKXvDcbm9nnoxtE3i02joRLrDa
Na3xWOJekWBrPNE4p3O1Z6ui9qCqG/PYvSFnBzRiVMWlpV1vUvO0rn1FzDvv
ioqMyIWFXGPoZV/g6cenoa2QMW8UU4t/IAWiCf3uKrVGBkfoCCWing1hWFAy
5zqdvQ0INs4JYPMULc1KbCCxSM/g0sOG5rAQqBFbv1UrlZuby8dxWi9dYHQW
HriawCrKZDYGB3AYRPIDCwE/UEMKnJ8mjn7jWI91r12FpvW6F2sQrnv128sS
7DKu8IAGDuHrXP0mtBj3SUAqNGUdC+34tjwIw3WpPmwYhYGhsH9akrVJnrFV
d8/z22ZDcet/PCKJn+ZkOjW1bwk0Fq31xpBZyZJHcO2rTlT399smIbM9VUjv
UV5G74FJuKI0fq7ftRfjOUTWUG1vox1jGzXezgy0RlO70LYe7fgGWz+uNWa5
i9IAE4rAF1gv92Mlk0Ho5+OlrANx+OEnK9s6NoYrcy34hOcH4O/7ga3T0g8w
ZHSkw7dEJriapTm584hysJqrLvWI5NswYzxpi36DzvQD6GkHtc4j8B2Wyg/Q
6Xb/QgxS4zeGOm719dtl822MZAUprA/4621IZXxAx4l8Q6nyAadq6a84c/xW
SUhqYw7KriTSozWy1pOLh7vBtnfgvu1XmIz313njw4y94F1wN7M67wbn/chJ
/wd+k4sC\
\>"],ExpressionUUID->"ae0a99f8-65fc-4421-8d5c-89dbec8356eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MobiusMatrix", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.7800601007049026`*^9, 3.780060105588503*^9}},
 CellLabel->
  "In[733]:=",ExpressionUUID->"740d3899-0d1c-4b3d-a8a9-3a67d4178bef"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", "5", "}"}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "4", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"-", "1"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7800601065939865`*^9},
 CellLabel->
  "Out[733]=",ExpressionUUID->"44b16d10-022b-462e-9c20-de3e5349ef57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ggg", "=", 
     RowBox[{"PartitionTypeLattice3", "[", 
      RowBox[{"PartitionTypeFormula", "[", 
       RowBox[{"allGraphs5", "[", 
        RowBox[{"0", ",", "\"\<graph\>\""}], "]"}], "]"}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"EdgeList", "[", "ggg", "]"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", 
      RowBox[{"ToLabels", "[", 
       RowBox[{"MobiusMatrix", "[", "ggg", "]"}], "]"}]}], ",", " ", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7800598160788307`*^9, 3.7800599473656983`*^9}, {
  3.780059978477821*^9, 3.780059981451397*^9}, {3.7800636759446297`*^9, 
  3.7800636818232746`*^9}},
 CellLabel->
  "In[741]:=",ExpressionUUID->"ccd703e8-a603-45e2-809a-b5f221454e90"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{1}, {1}, {1}, {1}, {1}}, {{2}, {1}, {1}, {1}}, {{3}, {2}}, {{
       5}}, {{4}, {1}}, {{2}, {2}, {1}}, {{3}, {1}, {1}}}, {{{1, 2}, {3, 4}, {
       5, 4}, {2, 6}, {2, 7}, {6, 3}, {6, 5}, {7, 3}, {7, 5}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {{{2}, {2}, {1}} -> Rotate[
           Column[{
             Row[{{2}, {2}, {1}}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{3}, {1}, {1}} -> 
         Rotate[
           Column[{
             Row[{{3}, {1}, {1}}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{2}, {1}, {1}, {1}} -> 
         Rotate[
           Column[{
             Row[{{2}, {1}, {1}, {1}}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{1}, {1}, {1}, {1}, {
          1}} -> Rotate[
           Column[{
             Row[{{1}, {1}, {1}, {1}, {1}}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{3}, {2}} -> Rotate[
           Column[{
             Row[{{3}, {2}}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{5}} -> Rotate[
           Column[{
             Row[{{5}}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {{4}, {1}} -> Rotate[
           Column[{
             Row[{{4}, {1}}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 4.}, {0., 3.}}, 0.03700564971751412], 
        ArrowBox[{{0., 3.}, {-1., 2.}}, 0.03700564971751412], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.03700564971751412], 
        ArrowBox[{{-1., 1.}, {-1., 0.}}, 0.03700564971751412], 
        ArrowBox[{{0., 1.}, {-1., 0.}}, 0.03700564971751412], 
        ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.03700564971751412], 
        ArrowBox[{{-1., 2.}, {0., 1.}}, 0.03700564971751412], 
        ArrowBox[{{0., 2.}, {-1., 1.}}, 0.03700564971751412], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.03700564971751412]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 4.}, 0.03700564971751412], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               
               TemplateBox[{
                RowBox[{"{", "1", "}"}],RowBox[{"{", "1", "}"}],
                 RowBox[{"{", "1", "}"}],RowBox[{"{", "1", "}"}],
                 RowBox[{"{", "1", "}"}]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 4.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 3.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               
               TemplateBox[{
                RowBox[{"{", "2", "}"}],RowBox[{"{", "1", "}"}],
                 RowBox[{"{", "1", "}"}],RowBox[{"{", "1", "}"}]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 3.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{RowBox[{"{", "3", "}"}],RowBox[{"{", "2", "}"}]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9629943502824859, 1.0370056497175142}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{RowBox[{"{", "5", "}"}]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9629943502824859, 0.03700564971751412}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{RowBox[{"{", "4", "}"}],RowBox[{"{", "1", "}"}]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 1.0370056497175142}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               
               TemplateBox[{
                RowBox[{"{", "2", "}"}],RowBox[{"{", "2", "}"}],
                 RowBox[{"{", "1", "}"}]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9629943502824859, 2.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               
               TemplateBox[{
                RowBox[{"{", "3", "}"}],RowBox[{"{", "1", "}"}],
                 RowBox[{"{", "1", "}"}]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 2.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.7800598577973013`*^9, {3.780059888936257*^9, 3.780059914598875*^9}, 
   3.780060043890006*^9, 3.780060113238531*^9, 3.780063685563779*^9},
 CellLabel->"Out[741]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXH1wVFWWf6Y7nQB+RFSMHyNRUYIiBlCJIhJEIaBgFEUcEBsEDSoSBSTy
YRSQgCIRBwgqGB3ixK/ZqIPEr91YURfLgc1szazRGtfsFFsTLSwYa7KmYKbq
7e/ec/u9d399u2G3tmr/sSs03e+c3znnnvvx7jnnvp40a1Hl3PmzFs27c1bR
+AdnVVXOu3Nh0bgFD+JS7BjP85o875g3Cz189vFN/2vyffyfq95j3d3dBw4c
UB8b9NWYek/s27ev8p754yZOnjh5yoyZs/H1BU3N0RgAps+c88TWX3s5O3bu
8WIbX9w19baZuOptj3BteHrjklWbNIN+W77u+ZWr1yjStgjXrDl3b9j+dsi1
ufH9W6bNYK7FS5au2tgYcgECIHN9+umnd9xdFXLNva/6/Q8+CLl02/J+1fTq
1Olz7ln8OP6mz7534+bnvur81lgeV+/5X3755Ysv7djy7Pa9e/fiwrrt7299
te37v3Q/H/qtV3vHvn/87Etfv/Z9e7DysV/Nf/zVnR/9/vDf/u49G/Hvyzs/
B1h91DbmvvTWZ+DF30NPNf/2D3/ytkZ4l21864F1rwe8sR/++iOEgtfLUW8x
GAJVirQ5tDYOw0QiaLqFsfc++UKueDH9BhsgSpF+EcHBfOHCB8HBdlgV4qD8
tXf3qhZFcWiO4J568UN9JQFfyJU5K3bUPv/ujz2HN0fGEvDSCvERvmpULlqD
K5AGl/zz7/5dpMf8zk6/vl593BDKiKGHTIvEE/gurhdPJaQHvtm3H99EnOD8
igq/qMjv6bGkoZssafhupGl676BjA2nqU2srBPjNzXWRtq3eugsSZi/fgT/x
SC/dNmj8qvwmBSwp8cvKvKcjoxTueXTzzrY9f/RyXn93rxcDF3DKy/mC7ery
Cwu/HnudUtfebrBqhOTA0GN1H/jV1bj2xeRpADvouTDTLyiAJOPbOovnuJSN
0SYaD6V4TtS2Bq331lvUvkR90qJqH8TUSiNezSPuJyzufOLuRdzrLO6E+t9L
+bKjo2P37t160hJqbRrKyw90NDQ0lJaWVlZWlpeX9/T0MLY2HRuxT/d8bk1N
Tb0ep5rX8xIkY016GxNRTFVVVXNzcw7JziUpj1tSNLVPwF1SUlJRUQGJaE5x
cXEXxo3Ywh5cbUmR3oDbpPFeDszy4gcPHgwa05vwqxx4GA/9LS0tet6qHulD
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
m825Xqld6ZO7cL2pJOodkTnP23npKBinZOWoLlBOtaphEGVaKfcXVbGCrIoK
qSiKrFy/qQm2Hd73n6a/J9CqanyPboWHOjsN9mTB6hOX4YpcTljZDQiX+iht
kN1siBpPKBmNHLWMc3JFM4q6ewh1LaG4YqT3TmlZTY6QryEp7rqRrr96Ji18
8ODBioqK9vZ2ljWWZKVy/tJnXUGla0Q4g8KTyCAXFhaWlJRIYYMrUVe7WhvH
UlhcXFxWVlZVVRWR2ieaZ4VIWFxfX2+dDOas5BiH7RHrpGLi64JSQ0ODu9oi
a0JUN8wCd5y4OUNS5tKdds66trYWsswlvGQW6nGYF1R2pIGtra3Tpk3jqofv
ru2MJu3RWo6Ik0IO+kVKTVTL0WuVquHU6mUCbioqKjqKGs5VpFfTE5ADF/u6
FgTvQXV6bWJoRO/u3bsxGH1dZcQ4SKvZCA6SMADY76NcFhiJaIapHWWu1Oi5
FYezoRj+BiTdVo0uLy/3YnChqaVwfu1KsiMvJRd2wAiMvUz1GfCYU/9SnznJ
j9Zl0CFotZw0d9VlRpLetDqMqW666zCnpo12jA14IlP95QrS5q63SLeH37my
cWrkKpYgwxUWMRklPReegCl1WRHOHzQB7xjnrtqKkqVzgpIxyQWbUExdRbwu
/KGXWaNUU5qbm9G7mFPoGF5zB0R0wKHoAgwtKEtVVeKOWTyCtEiGACBTb4wZ
3MBQtnrSIZlMRqon6SNM8Wzbvl2UXObUUV1dbcZgplEKX0p9VzKLOs8WrkQ0
AhIy7cKWmZNGEb39In4OVBldWDwy1Ot0fs7kNklnHkYS/NSjDxWJZs+hV3J2
mWtvEQ1hpU/mPPpanUMIEKZtw0nDaTZW/IrRhVUxTZvOVkqeOC41U3BhpsdT
vRC4cBhpOSOFKS0tlTMMfIcS2ZLpwyqSjx0e5lqqEqddHUgfStIlD6rq+J6H
BgSo/hGZkJahl3htLHFKlxp9OFeKfXet8WJCFxk+GYecVRtC3LIPG0pcFzm5
OMc22Mk1nLjc1RzOuLmrN5cSl7tKw/k3dzVmBHG5qy6cjXNXVy4nLncVhXNz
7mrJSOJyV0U4U+eufowiLneVg/N27mrGaOLq7+TiLJ67OjGGuNxVCM7puasN
Y4nLXVXgDJ+7enAtcbmrBJzvc1cDxhOXO+vP2T93dn8Ccbmz+JwLdGfrryMu
d1aeM4Pu7Psk4nJn2TlP6M6m30Bc7qw5Zw3d2fEbicudBb+JuNzZ7inE5c5q
30xc7uz1LcTlzlJPJS53NvpW4nJnnacRlzu7fBtxubPIPycud7Z4OnG5s8Iz
iMud/dVPc5n87u86/vTctu3XV0wdOWb8ytVrgvyufh5MZXAn3nT7gyvWb258
f9sbHy9f93w0g6t5Yq+8+tp9i1e5nnspi3Ad6bkV4TpShlW4OMMK+9CGkOsO
9W4yqKs2NkLvPYtWWllS/aRcvK2tbfGSpXffu+C1118Xz+jn61Q23cp6ylXO
b8rVp1780DzFMTYi+ceew5L1/Gbf/uj19PyjXA/ynUGeUV/P8AyBbl+WTKD7
tL+ggqc00k77K1QstWcQ7jCPN7emUaxLPz8v6MGRUSM5Owy5HW9/VvfSh/KE
TnjevanJj553DzCSigsGq1wxJ6mxny4sVFm5IRHfh+PanDaX0/wI+qOnzZ28
cZWuxL4RjNXVF2fjE2t1CjYLn87fgQ+76xInl1ptwojY7+gwfnPLdOfOmMvO
ikkmTX0ckZE7kofCq6CgIMiSXZYZkzEHFj5LPvwoNUrOy9dZMHfmi2XocWbi
GCiW2FwetNdeCrNHTu1KPgIThAjmuS0EN4E1XuC70Aq3rCCfI8/3t7S06GPb
2kDBRrM5zt5UWRg5aZs6Y+2Ib6HB9OGFTkmuvEoqnkrPqzD6f5cnySZFna3N
0QdsMRzMyX/xM8fU5zllHW0Gg3HZcxJubjTyyNkFGZ0mqmM52bIFiG0zePFM
p6yjywAwiqJ6GSvmjLk7R3u6U06GuN3yiduCTDF5KqeZ2XaOt/ukJJlx08+J
SsXZeSm08depTu4B5MVgZWyWihv3TV+nFD171Cllmeqpk+BHxGntJl+JWYUh
IdPztMxa1JjDMoyx77GOk5yogakWZchSnuxEXWC86Pba2J+u/nT1p6v/B1dl
146IaMq0O8ZOuHHD0xu7u7uju/Y8BByIljZsfxuhzZJVmyrvq1Ic2eKp8ERM
NAY60okWdzy19ZV/qpgylbne2bXrrgXLQq6Fj9Rtqd8ackUtRzCFP0Rcd8+b
T/GUajfCPPwhGlM0aXfTUbzrG2dcVfOTSb+83G9pkR2l/k2ahNrUFxerHx3D
HRYrXUfHsChVtvHYUWNF1EcHhKp/sSZPYQsKfH1rDp9DjXAkTNUe4NTjtMOj
VGwI9HkKdWgBUcDBgxGq/r2vigpfHhrFPuySDO1Tv4Cj1l/Zx+tfvEnb3c/z
o09AziMe2R/gbimlBXPCgLnkboD7cuTZsPQ9thsFSHR/lIaq1P6kvQf2S6o+
bO/EtXxzHwQV916pqvEeZ1jEG1Cdn5+PW6aXvhMZGvhQ7/mMBzLt4mBYhw6v
zB56gZ+lRhSTO7Sr1bKHXuhEYb+FW7YLNTBEWbV0qbsFz6Jl2B/r342Ky5N6
Ur1y74cfSvkCe5PU7jHc/woVBh7hmTwgzb5I9rtLnZYJb+YoQXZ7+pfJYlLx
dD1xJ1wrXGMIhjqerPSj+1d94C8O0RJ5wfD0UwFnhpxqnmA0pZ5n5Jp7lBND
Rar+Zj8KjLUfXe1H95/hft29k1zrHC1SdnP5TlD6t/vUL7NBsMxd3gsqCwpC
DeEeEy+ZtzxOTgglq34uLCxU8zR9bokF+vainpSL7iodIwY2mpMHOqurf98w
89yCYzO0W1vrPeNEQUEkqsuACseQzPUMcbDO8XqbdGvkGWfM3GQyyf4VPv0L
m2reYEeeGsPBk3mGCrypQHObhOs559X0O4J3zH8De2WY0w==\
\>"],ExpressionUUID->"2fb95491-b396-45cf-b018-99443b28f06c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PartitionTypeLattice", "[", 
  RowBox[{"IntegerPartitions", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.780063169821782*^9, 3.78006318497511*^9}},
 CellLabel->
  "In[735]:=",ExpressionUUID->"b1ce9d18-22e0-48cb-bdb2-62772189bee3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], "\[DirectedEdge]", 
    RowBox[{"{", "3", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[DirectedEdge]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.7800631858683276`*^9},
 CellLabel->
  "Out[735]=",ExpressionUUID->"e2a86605-1624-4b95-a949-8c63607decbb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToLabels2", "[", "assoc_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"key", "\[Rule]", 
     RowBox[{"Rotate", "[", 
      RowBox[{
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ExponentNotation", "[", "key", "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"assoc", "[", "key", "]"}], ",", "Bold", ",", "Red"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Pi", "/", "6"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"key", ",", 
      RowBox[{"Keys", "[", "assoc", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7800638138874865`*^9, 3.7800638232865925`*^9}, {
  3.7800643000786004`*^9, 3.780064339925517*^9}, {3.780064411513981*^9, 
  3.7800644448083396`*^9}},
 CellLabel->
  "In[758]:=",ExpressionUUID->"4eee1ebd-6fff-442b-bd67-8f7fd32d2dac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExponentNotation", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7800642402526207`*^9, 3.7800642548000565`*^9}},
 CellLabel->
  "In[745]:=",ExpressionUUID->"1f750651-9a3c-43be-8858-c7343ba01479"],

Cell[BoxData[
 TemplateBox[{SuperscriptBox["\"1\"", 
    StyleBox["3", 10, 
     RGBColor[0, 
      Rational[2, 3], 0], Bold, StripOnInput -> False]]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.7800642558470697`*^9},
 CellLabel->
  "Out[745]=",ExpressionUUID->"8a967400-83d0-485e-b0b5-77ca6689f5b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ggg", "=", 
     RowBox[{"PartitionTypeLattice", "[", 
      RowBox[{"IntegerPartitions", "[", "11", "]"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"EdgeList", "[", "ggg", "]"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", 
      RowBox[{"ToLabels2", "[", 
       RowBox[{"MobiusMatrix", "[", "ggg", "]"}], "]"}]}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7800632005427113`*^9, 3.780063211133582*^9}, {
   3.780063316566961*^9, 3.780063316789074*^9}, {3.7800636946945267`*^9, 
   3.780063695050394*^9}, 3.780063831191703*^9, 3.7800642845037193`*^9, 
   3.7800643699688516`*^9, {3.780064469687804*^9, 3.7800644701443415`*^9}},
 CellLabel->
  "In[760]:=",ExpressionUUID->"4143bd24-84d8-4184-8f12-03a311500705"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{10, 1}, {11}, {9, 2}, {8, 3}, {7, 4}, {6, 5}, {9, 1, 1}, {8, 2, 
       1}, {7, 3, 1}, {6, 4, 1}, {5, 5, 1}, {7, 2, 2}, {6, 3, 2}, {5, 4, 2}, {
       8, 1, 1, 1}, {7, 2, 1, 1}, {6, 3, 1, 1}, {5, 4, 1, 1}, {5, 3, 3}, {4, 
       4, 3}, {6, 2, 2, 1}, {5, 3, 2, 1}, {4, 4, 2, 1}, {7, 1, 1, 1, 1}, {6, 
       2, 1, 1, 1}, {5, 3, 1, 1, 1}, {4, 4, 1, 1, 1}, {4, 3, 3, 1}, {5, 2, 2, 
       2}, {4, 3, 2, 2}, {5, 2, 2, 1, 1}, {4, 3, 2, 1, 1}, {6, 1, 1, 1, 1, 
       1}, {5, 2, 1, 1, 1, 1}, {4, 3, 1, 1, 1, 1}, {3, 3, 3, 2}, {3, 3, 3, 1, 
       1}, {4, 2, 2, 2, 1}, {3, 3, 2, 2, 1}, {4, 2, 2, 1, 1, 1}, {3, 3, 2, 1, 
       1, 1}, {5, 1, 1, 1, 1, 1, 1}, {4, 2, 1, 1, 1, 1, 1}, {3, 3, 1, 1, 1, 1,
        1}, {3, 2, 2, 2, 2}, {3, 2, 2, 2, 1, 1}, {3, 2, 2, 1, 1, 1, 1}, {4, 1,
        1, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1, 1, 1, 1}, {2, 2, 2, 2, 2, 1}, {2, 
       2, 2, 2, 1, 1, 1}, {2, 2, 2, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1, 1, 1, 
       1}, {2, 2, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1}}, {CompressedData["
1:eJwVxdd1gzAAAEDThQCBBAhEFb03g3HmyAhZIHtlyiQf9674+v78Eh+Px8+f
/wVREmVREVVRE4CgC1AwBE0CkilZEpJszdGwRjQg67Ilu7In28ABPqAgAKHN
7MiObV0xFaggxVMcHetUT3TH9M3UzMzQYU7ucKcIy7AKoWqphopUV8XQhwQG
MIHY8i1qZVZtMRxhjhvM/Nxv/c4vWMl6NrCxmIq5IAY1CKIoRQHKUERyEhNO
qJu4tRvRnHLa0TKqoiHK0zZd0jLv8zUfy6ncyn08xsBLvMyLAx60QRX3MU+a
pEt41mZdtmQV7/nAVz5Vc7VVfbu2z3bqt/7s9+mYrum133tTd/XQDN3azcM2
HPO6PJdtPddju7bXcR/v1/m8zvt63x/vX/crJWA=
       "], Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {{6, 3, 2} -> Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[2, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 2, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-5, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {7, 3, 1} -> Rotate[
           Column[{
             Row[{"7"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[2, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {2, 2, 2, 2, 2, 1} -> 
         Rotate[
           Column[{
             Row[{"2"^Style[5, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 3, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-6, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 2, 2, 2, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[4, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 3, 2, 1} -> Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-6, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {7, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"7"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 3, 3, 1} -> Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-3, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {7, 4} -> Rotate[
           Column[{
             Row[{"7"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 1, 1, 1, 1, 1, 1, 
          1} -> Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[7, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 4, 3} -> Rotate[
           Column[{
             Row[{"4"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {11} -> Rotate[
           Column[{
             Row[{"11"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 5} -> Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 2, 2, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[6, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 3, 2, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[13, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 1, 1, 1, 1, 1, 1, 
          1, 1} -> Rotate[
           Column[{
             Row[{"3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[8, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 1, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[5, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 2, 1, 1, 1, 1, 1, 
          1} -> Rotate[
           Column[{
             Row[{"3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[6, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-11, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 1, 1, 1, 1, 1, 1}
           -> Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[6, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 2, 2, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-11, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 2, 2, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[21, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {1, 1, 1, 1, 1, 1, 1, 
          1, 1, 1, 1} -> Rotate[
           Column[{
             Row[{"1"^Style[11, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 2, 2, 2} -> Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 3, 2, 2, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[6, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {2, 1, 1, 1, 1, 1, 1, 
          1, 1, 1} -> Rotate[
           Column[{
             Row[{"2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[9, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 3, 1, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[5, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[4, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 3, 3} -> Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 3, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[4, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {7, 2, 2} -> Rotate[
           Column[{
             Row[{"7"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {2, 2, 1, 1, 1, 1, 1, 
          1, 1} -> Rotate[
           Column[{
             Row[{"2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[7, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[7, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 3, 2, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-11, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {7, 2, 1, 1} -> Rotate[
           Column[{
             Row[{"7"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-3, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {9, 1, 1} -> Rotate[
           Column[{
             Row[{"9"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 4, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[2, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {2, 2, 2, 1, 1, 1, 1, 
          1} -> Rotate[
           Column[{
             Row[{"2"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[5, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-12, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 3, 3, 2} -> Rotate[
           Column[{
             Row[{"3"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 4, 2, 1} -> Rotate[
           Column[{
             Row[{"4"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-3, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {9, 2} -> Rotate[
           Column[{
             Row[{"9"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 4, 1} -> Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[2, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 3, 2, 2} -> Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-3, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 2, 1, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[5, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[7, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 4, 2} -> Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[2, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 2, 2, 2, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-12, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 2, 2, 1} -> Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-3, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 3, 1, 1} -> Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-3, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {8, 3} -> Rotate[
           Column[{
             Row[{"8"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 2, 2, 2, 2} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 3, 3, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[2, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {8, 2, 1} -> Rotate[
           Column[{
             Row[{"8"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[2, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 4, 1, 1} -> Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-3, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {10, 1} -> Rotate[
           Column[{
             Row[{"10"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 5, 1} -> Rotate[
           Column[{
             Row[{"5"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {8, 1, 1, 1} -> Rotate[
           Column[{
             Row[{"8"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {2, 2, 2, 2, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"2"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[7, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 2, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[4, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.016402953587755745`], 
        ArrowBox[{{0., 1.}, {2.5621914993049018`, 0.}}, 0.06561181434599156], 
        ArrowBox[{{3.5621915001044044`, 1.}, {2.5621914993049018`, 0.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.5621914997165334`, 1.}, {2.5621914993049018`, 0.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191499685468, 1.}, {2.5621914993049018`, 0.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621914992540837`, 1.}, {2.5621914993049018`, 0.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.4378085006895276`, 2.}, {0., 1.}}, 0.06561181434599156],
         ArrowBox[{{-2.4378085006895276`, 2.}, {3.5621915001044044`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621914991452002, 2.}, {0., 1.}}, 0.06561181434599156], 
        ArrowBox[{{0.5621914991452002, 2.}, {3.5621915001044044`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621914991452002, 2.}, {2.5621914997165334`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780850130201543`, 2.}, {0., 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780850130201543`, 2.}, {2.5621914997165334`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780850130201543`, 2.}, {4.562191499685468, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621915000045874`, 2.}, {0., 1.}}, 0.06561181434599156], 
        ArrowBox[{{1.5621915000045874`, 2.}, {4.562191499685468, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621915000045874`, 2.}, {1.5621914992540837`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378085002835803`, 2.}, {0., 1.}}, 0.06561181434599156],
         ArrowBox[{{-1.4378085002835803`, 2.}, {1.5621914992540837`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{6.5621915007389475`, 2.}, {3.5621915001044044`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{6.5621915007389475`, 2.}, {4.562191499685468, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{3.562191500590359, 2.}, {3.5621915001044044`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{3.562191500590359, 2.}, {2.5621914997165334`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{3.562191500590359, 2.}, {1.5621914992540837`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191500855221, 2.}, {3.5621915001044044`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191500855221, 2.}, {4.562191499685468, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191500855221, 2.}, {1.5621914992540837`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{-3.437808498458139, 3.}, {-2.4378085006895276`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-3.437808498458139, 3.}, {0.5621914991452002, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.437808497343667, 3.}, {-2.4378085006895276`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.437808497343667, 3.}, {0.5621914991452002, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.437808497343667, 3.}, {-0.43780850130201543`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.437808497343667, 3.}, {6.5621915007389475`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378085016385285`, 3.}, {-2.4378085006895276`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378085016385285`, 3.}, {-0.43780850130201543`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378085016385285`, 3.}, {1.5621915000045874`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378085016385285`, 3.}, {3.562191500590359, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780850203702926`, 3.}, {-2.4378085006895276`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780850203702926`, 3.}, {1.5621915000045874`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780850203702926`, 3.}, {-1.4378085002835803`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780850203702926`, 3.}, {4.562191500855221, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.562191499186895, 2.}, {2.5621914997165334`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.562191499186895, 2.}, {1.5621914992540837`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{5.562191500855391, 2.}, {2.5621914997165334`, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{5.562191500855391, 2.}, {4.562191499685468, 1.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191500812162, 3.}, {0.5621914991452002, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191500812162, 3.}, {1.5621915000045874`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191500812162, 3.}, {6.5621915007389475`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191500812162, 3.}, {3.562191500590359, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621914991227186, 3.}, {0.5621914991452002, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621914991227186, 3.}, {-0.43780850130201543`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621914991227186, 3.}, {-1.4378085002835803`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621914991227186, 3.}, {3.562191500590359, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621914991227186, 3.}, {4.562191500855221, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621914991227186, 3.}, {2.562191499186895, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.5621914999873354`, 3.}, {0.5621914991452002, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.5621914999873354`, 3.}, {1.5621915000045874`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.5621914999873354`, 3.}, {4.562191500855221, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.5621914999873354`, 3.}, {5.562191500855391, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{-3.4378084979829, 4.}, {-3.437808498458139, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-3.4378084979829, 4.}, {-2.437808497343667, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.4378084977253422`, 4.}, {-3.437808498458139, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.4378084977253422`, 4.}, {-2.437808497343667, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.4378084977253422`, 4.}, {-1.4378085016385285`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.4378084977253422`, 4.}, {4.562191500812162, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.437808498070524, 4.}, {-3.437808498458139, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.437808498070524, 4.}, {-1.4378085016385285`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.437808498070524, 4.}, {-0.43780850203702926`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.437808498070524, 4.}, {0.5621914991227186, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780849778650577`, 4.}, {-3.437808498458139, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780849778650577`, 4.}, {-0.43780850203702926`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780849778650577`, 4.}, {2.5621914999873354`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621914995156487`, 3.}, {-0.43780850130201543`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621914995156487`, 3.}, {1.5621915000045874`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621914995156487`, 3.}, {2.562191499186895, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621914995156487`, 3.}, {5.562191500855391, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{6.562191500775015, 3.}, {6.5621915007389475`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{6.562191500775015, 3.}, {4.562191500855221, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{5.562191500989883, 3.}, {6.5621915007389475`, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{5.562191500989883, 3.}, {3.562191500590359, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{5.562191500989883, 3.}, {4.562191500855221, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{5.562191500989883, 3.}, {5.562191500855391, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.562191500254869, 4.}, {-2.437808497343667, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.562191500254869, 4.}, {-0.43780850203702926`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.562191500254869, 4.}, {4.562191500812162, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.562191500254869, 4.}, {0.5621914991227186, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.562191500254869, 4.}, {6.562191500775015, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915014885417, 4.}, {-2.437808497343667, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915014885417, 4.}, {-1.4378085016385285`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915014885417, 4.}, {-0.43780850203702926`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915014885417, 4.}, {0.5621914991227186, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915014885417, 4.}, {2.5621914999873354`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915014885417, 4.}, {1.5621914995156487`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915014885417, 4.}, {5.562191500989883, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.4378084983824806`, 5.}, {-3.4378084979829, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.4378084983824806`, 5.}, {-2.4378084977253422`, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378084983471808`, 5.}, {-3.4378084979829, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378084983471808`, 5.}, {-2.4378084977253422`, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378084983471808`, 5.}, {-1.437808498070524, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378084983471808`, 5.}, {2.562191500254869, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780849643746933`, 5.}, {-3.4378084979829, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780849643746933`, 5.}, {-1.437808498070524, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780849643746933`, 5.}, {-0.43780849778650577`, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.43780849643746933`, 5.}, {0.5621915014885417, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{3.5621915001131583`, 3.}, {3.562191500590359, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{3.5621915001131583`, 3.}, {2.562191499186895, 2.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.562191501056816, 4.}, {-1.4378085016385285`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.562191501056816, 4.}, {1.5621914995156487`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.562191501056816, 4.}, {3.5621915001131583`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191499681376, 4.}, {4.562191500812162, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191499681376, 4.}, {2.5621914999873354`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191499681376, 4.}, {6.562191500775015, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191499681376, 4.}, {5.562191500989883, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{3.5621915009091367`, 4.}, {4.562191500812162, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{3.5621915009091367`, 4.}, {0.5621914991227186, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{3.5621915009091367`, 4.}, {1.5621914995156487`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{3.5621915009091367`, 4.}, {5.562191500989883, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{3.5621915009091367`, 4.}, {3.5621915001131583`, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621915033882203`, 5.}, {-2.4378084977253422`, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621915033882203`, 5.}, {-0.43780849778650577`, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621915033882203`, 5.}, {2.562191500254869, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621915033882203`, 5.}, {0.5621915014885417, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{1.5621915033882203`, 5.}, {4.562191499681376, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915027629427, 5.}, {-2.4378084977253422`, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915027629427, 5.}, {-1.437808498070524, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915027629427, 5.}, {0.5621915014885417, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915027629427, 5.}, {1.562191501056816, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915027629427, 5.}, {3.5621915009091367`, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.4378084986509805`, 6.}, {-2.4378084983824806`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{-2.4378084986509805`, 6.}, {-1.4378084983471808`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378084971291685`, 6.}, {-2.4378084983824806`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378084971291685`, 6.}, {-1.4378084983471808`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378084971291685`, 6.}, {-0.43780849643746933`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378084971291685`, 6.}, {1.5621915033882203`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.4378084971055216, 6.}, {-2.4378084983824806`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.4378084971055216, 6.}, {-0.43780849643746933`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.4378084971055216, 6.}, {0.5621915027629427, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{5.562191501266341, 4.}, {6.562191500775015, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{5.562191501266341, 4.}, {5.562191500989883, 3.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.5621915010655414`, 5.}, {2.562191500254869, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.5621915010655414`, 5.}, {0.5621915014885417, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.5621915010655414`, 5.}, {4.562191499681376, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.5621915010655414`, 5.}, {3.5621915009091367`, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.5621915010655414`, 5.}, {5.562191501266341, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915030773152, 6.}, {-1.4378084983471808`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915030773152, 6.}, {-0.43780849643746933`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915030773152, 6.}, {1.5621915033882203`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915030773152, 6.}, {0.5621915027629427, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915030773152, 6.}, {2.5621915010655414`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378084972329077`, 7.}, {-2.4378084986509805`, 6.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.4378084972329077`, 7.}, {-1.4378084971291685`, 6.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.4378084968526821, 7.}, {-2.4378084986509805`, 6.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.4378084968526821, 7.}, {-1.4378084971291685`, 6.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.4378084968526821, 7.}, {-0.4378084971055216, 6.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.4378084968526821, 7.}, {0.5621915030773152, 6.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191500592689, 5.}, {4.562191499681376, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{4.562191500592689, 5.}, {5.562191501266341, 4.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.173833995832581, 6.}, {1.5621915033882203`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.173833995832581, 6.}, {2.5621915010655414`, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{2.173833995832581, 6.}, {4.562191500592689, 5.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915029754234, 7.}, {-1.4378084971291685`, 6.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915029754234, 7.}, {0.5621915030773152, 6.}}, 
         0.06561181434599156], 
        ArrowBox[{{0.5621915029754234, 7.}, {2.173833995832581, 6.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.437808497447719, 8.}, {-1.4378084972329077`, 7.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.437808497447719, 8.}, {-0.4378084968526821, 7.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.437808497324113, 8.}, {-1.4378084972329077`, 7.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.437808497324113, 8.}, {-0.4378084968526821, 7.}}, 
         0.06561181434599156], 
        ArrowBox[{{-0.437808497324113, 8.}, {0.5621915029754234, 7.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.0452958745896694`, 9.}, {-1.437808497447719, 8.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.0452958745896694`, 9.}, {-0.437808497324113, 8.}}, 
         0.06561181434599156], 
        ArrowBox[{{-1.0452958745051149`, 10.}, {-1.0452958745896694`, 9.}}, 
         0.06561181434599156]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"10\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06561181434599156, 1.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.5621914993049018, 0.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"11\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.6278033136508934, 0.06561181434599156}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5621915001044044, 1.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"9\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.627803314450396, 1.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.5621914997165334, 1.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"8\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.627803314062525, 1.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.562191499685468, 1.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"7\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.62780331403146, 1.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5621914992540837, 1.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.6278033136000754, 1.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.4378085006895276, 2.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"9\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.372196686343536, 2.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5621914991452002, 2.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"8\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["2",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.6278033134911918, 2.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.43780850130201543, 2.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"7\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["2",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.37219668695602387, 2.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5621915000045874, 2.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["2",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.627803314350579, 2.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.4378085002835803, 2.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.3721966859375887, 2.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.5621915007389475, 2.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"7\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.627803315084939, 2.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.562191500590359, 2.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["2",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.6278033149363504, 2.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.562191500855221, 2.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["2",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.627803315201212, 2.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.437808498458139, 3.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"8\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.3721966841121476, 3.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.437808497343667, 3.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"7\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "3"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.3721966829976755, 3.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.4378085016385285, 3.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "3"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.3721966872925369, 3.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.43780850203702926, 3.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "3"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.3721966876910377, 3.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.562191499186895, 2.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.6278033135328864, 2.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.562191500855391, 2.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.627803315201382, 2.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.562191500812162, 3.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "3"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.627803315158153, 3.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5621914991227186, 3.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "6"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.6278033134687102, 3.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.5621914999873354, 3.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "3"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.627803314333327, 3.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.4378084979829, 4.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"7\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.372196683636908, 4.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.4378084977253422, 4.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["4",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.3721966833793506, 4.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.437808498070524, 4.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["4",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.3721966837245323, 4.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.43780849778650577, 4.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["2",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.3721966834405142, 4.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5621914995156487, 3.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "3"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.6278033138616403, 3.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.562191500775015, 3.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.627803315121006, 3.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.562191500989883, 3.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "3"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.627803315335874, 3.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.562191500254869, 4.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["6",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.6278033146008606, 4.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5621915014885417, 4.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["13",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.6278033158345333, 4.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.4378084983824806, 5.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["5", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.372196684036489, 5.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.4378084983471808, 5.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "5"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.3721966840011892, 5.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.43780849643746933, 5.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "6"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.37219668209147777, 5.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5621915001131583, 3.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.62780331445915, 3.0656118143459916}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.562191501056816, 4.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["2",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.6278033154028075, 4.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.562191499681376, 4.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["4",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.627803314027367, 4.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5621915009091367, 4.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["6",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], Offset[{2, 2}, 
          {3.6278033152551283, 4.065611814345991}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5621915033882203, 5.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "11"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.627803317734212, 5.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5621915027629427, 5.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "11"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.6278033171089343, 5.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.4378084986509805, 6.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["6", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.372196684304989, 6.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.4378084971291685, 6.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["5", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["7",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.3721966827831769, 6.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.4378084971055216, 6.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["5", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["4",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.37219668275953005, 6.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.562191501266341, 4.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.627803315612332, 4.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.5621915010655414, 5.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "12"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.627803315411533, 5.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5621915030773152, 6.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["21",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.6278033174233069, 6.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.4378084972329077, 7.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["7", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.372196682886916, 7.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.4378084968526821, 7.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["6", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "11"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.3721966825066905, 7.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.562191500592689, 5.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"2\"", 
                  StyleBox["5", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.627803314938681, 5.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.173833995832581, 6.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"2\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["7",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.2394458101785726, 6.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5621915029754234, 7.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"2\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["5", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "12"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.627803317321415, 7.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.437808497447719, 8.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["8", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.3721966831017274, 8.065611814345992}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.437808497324113, 8.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["7", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["7",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.3721966829781214, 8.065611814345992}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.0452958745896694, 9.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["9", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9796840602436778, 9.065611814345992}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.0452958745051149, 10.}, 0.06561181434599156], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"1\"", 
                  StyleBox["11", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9796840601591232, 10.065611814345992}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{822., Automatic}]], "Output",
 CellChangeTimes->{3.780064452164675*^9, 3.7800645593513775`*^9},
 CellLabel->"Out[760]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
53+k1w30C5B4q1atxo4diyaKvW9M6csxzIAcQsqdsQnezqffTjZkHrw71QIp
80/lPTObp6ZjY9Bs1B8XMmoSYyQqj41SR12r1ajz+Zd/VjtBsWsJIqxqyMyu
k6vwVHy//9gnMwr33td++qPd57Tsl0+OxFqAJPClcePGbBYMUKNGjWj1UV9A
ZdzCnc68YIzMOW9DmSOUfLLXgiezF8ChUML0Aqg5KFOekDNwleTR8/5TNw6Y
ttGUrRzFU73BhesOthu8/OFOeT1Gr0EfAJWm5oGQ2pXMlOHtsVqAvsOyTUfw
le81bNjwnBykdHfhnOXueuaX3jwpPanivjwYygpV4lim2svPjfMkf9IuSq8O
2M1btBTNjIp9Fc8RhSeVTxG13brvg45DVrZ8ZcmaHWLYvqlHgtplI2TvMGRl
56GFLwwoGD63rNUrSxyvmlRSUpKZmQmjhm/gOSRI/mu1ff3oaSpy7WB/nubV
0YlLdk/M3+3VY+ldqxEnukXczdimprNXvyG4InUqJts4f8PhjkMLgzMPCgsL
GzRogELAntLS0qlTp5qjkHLUJGlC/i6I1e+/UTe871poV77Be6jNkfI95WhV
TAZKbccz6wwU7pmoR4No5StRnuA9kY56Hn7nFGqBtgCmuIBKsVfutyzeNJT7
HZsW2GVbVVoxf+1BPNxv8npPbrGvP9C8eXMwjhwEDHDtj+lMv1/Hhwnp95MD
59M4KiTAHTjhB4cIJMLAXnf9DTfceHOTx1tYxns8vl/OEWX6rXbUMxYU6PfB
WRTGiKJ9+/YoFTpl7p7GPU+077bYTDX2dvIkiEjIGvgJ3v9O7jcX+kjeM/NJ
Mj0eXPQLOcfi9gulxUkGdAARlMvG3nZ3k+UrVqja4J6KlmwxYMSDUXY25Cxw
tUvOen13/kdzFjcxCE+JwBClChMDhQ+IERMNNGX60ERkBkcBAk1ckUA4Dcnb
0mN08b2/e/6pdn1Ql4eavTBk/DzlGdIN3HC1hy0n140Gub7Li6DXxi+4/Y47
1cBrTg5kbo5Uc1chN+JjfrSWQL8xS6bOXYmv4AlimMoGWoL3KpRLxkMfyHtm
LgnR4eaScIdUd0xJoiUNBhHVpYBgdxpcdxNNEa7h2myzexxf5AgF5z1uCfIv
gWMEjBD8PcqUALQkiK0EU2D0gBX+7OtJenByhQ8nCRacJCucyC5j4BK7QeMX
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
zS/0L4CoOg5ZOWXpHthSvWuWJ8+ikcMvlU9mWwl/rYMJvYuG3z9mjVjdaWhh
1+Gri3cc1ys3Y6xk24HLUHQjQ0b+PL7hc7Yt23TEv5amtiEjzt1/9tVfuo0q
8uqUaQ1rOTIanLd16rI9MdbQtH623SOC16HKE5tCS+Q9M/OA7XQzD6SdquyV
0Ui5S5gYbF93aGL+bpjEYXNKWZzq+7t5CncabQ9bJCVHFCsBGTB8kwvKV5Ye
8xq+soMfojb0ebJFwWcX4Pm7DClJ65scuLJI5g741yDUMmosUZ6qfVbArjlm
1MoTOGg/gn2ZGava8oaqB0pPnufEtcS++X3y253fl3WpFCg9NBG/4NbHX5wL
GDPR+9irWTvJ2VStg34RcswvYDR+3MKdfSeV0Lh6o5fqlnjEHOW/05CpLdfM
WU10pU+mNYOspLk+KCBeMc92r2l4hoQ48UpDQ8Z1LTIO3lXgJSljuXbYNydP
jLtz8hk+K+qXsd552DZK75nTv8vR0TlFb7w6bVPsfMyl+xai/wTa8IBcOOx6
vYBVPV45m7pr62k4+bP1fHKuYcjZHPe07cN9U5B39Mg53mjojYacbfsSZQTK
WZ5hHZor3/HPvOszI/XMe/plytq23octc2fupUdO/jl23wjQExp/zSXlTb+r
dRoelBP1VSwSTzMkfrchcdv4ZJqS+NU+iVc3JF7NkLhtFOoGQ+LmmHa8vWiu
NyRe38Lr4H1j5JnoodmOpsTMxP/W0UTV80i+TGnbxkLpy9yZ/Nst3lefnIav
4vLKS0qeGTm+GfqY2X3bmFJlAwWy1WIdEAK+/cc+8Qpe9nWE5K/xSb6aIXlz
/UQli+SvMyRfzZB8vDGnaw3J23b2qxIo+dZS8nnynjkXL3kQMxefcJmyt2Vn
sCfnzo7dYpF9kmERal1S9pV9sk9yeKpm9G1jShlBFt/V936TN3QfVfzRJ99k
KKlf55N6hiF1cwbCNvJwjSH1DEPqVeJIvYEh9WstHK8cKPXnpdTl6k7fvLrc
011EZ4ihl285EkfMtnGsukb7G1qkrHdR4P7ZajfYeFLO8ElZ0hA7C651jmjx
S7iGIWHpX9IC429t9p29BG/wSbuqIe0qRmttexFdbUjbnFuqFkfa9Q1p23aA
Dd4nrqWUtlyp6ZsTvztWo2eu3Ndx6MpmPedPXVoeo9HVLCVyVZU7m3SDRdaV
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
XWlVyWY9vF02Uz5SW1NQDp4GZECCOopm6HXGOopSWAQK0R2H38A3mI8ALNrs
SIJFLuQGnlcrFnRGcFBE8WT2AkSq4xbtslmQO2L17bOv/oKKQoEgZTgMSpkF
uZaAnBZr6Gg/XtBeRiqEGmlyvTg9gLYAKDzivKEkRovTsl9+q1eWbN33gfLN
XjPysEfjXHx1HlqICF56NvmGN9PtWh8N1h6WB4F/1ojVqp4MSKNOTBjWEQ/L
SAMznnl5ETqwHKPQakghVoprT2yZ43rnO5akT+sij+QotXzCq316tb/Feth2
BIo4muetdlT2tQl8vdsQ4wwJHY+GufJhLKC1PQCbdXy1Js9nrHgdkQ4wpXgO
HqmoU+/0HzNKCbKqh518GXYj/r4uDCoEWnUOfAyGskYUPZk9H0hSPPflzFaO
Yyuicps7i0TUWcIee0FuoIKc/FAr7wzLlYbYBKqAjsvuN/9gQ5zNatgiwf+i
3xH58e8XKRWQuMeiTW0HLmMMqyTHjdG01ocZPYuogbbiecdj84bq8bkenbZC
x9zO+ivPHDaxCCzNLToQY110zZgbBmbEvAE5I+IQdtd/umx9H42w4z27jyoS
c2eJRqTsjQA8kde4tW0HLRe9e8NnK4ufFNda2FYZ1Y21n3jRXL0Y9umdHElK
1dhE8NxjdDEiKLjupZvkjjqJgTWMOH5c6R93r9J+Do/rU7VUzBVxYkzljypZ
EFjdV0cd9w+auQVsVjx243Gvn3fliLqo6DnhMmyDbTVx3VgLjFrqfVhiSgPL
WucuFaNDnEVDJDF+8a4Or60cOGOzYQuUd7Tbg6o+e6BXdqgoqYbD/Zg6tHl1
2YotR7X/taDKZhFo//3yoOn6b3odSY4kc5wu6d0W/UGp7QatQAykUOKONnAX
DdpmxgQcpZA7f4lR8UUlbwqrkmD4aOM9tIlnjqFIPRbWdcTqA2+f+VXuvJnk
q5mc30/W9gSV47yFXq0QYxnq+t7nM3ga12MX7sT7CY7PUnWkp3ajmwSPjdP9
3arR5s2jBw8asrSZBus+YfVi7SVe4+nUWlr4lxCdOhUELl70Kp/aK944l4BD
akSue46bUUk9Lqraq1f26P6gti8xvekBUzc68Ug4euFCtGnT6OnTaiTOj8/K
PnuhOY/GFe04jhBO929VpCnfydA5VvhAf8sPn/rHxV/i2AjbjhM8/UvbXdXX
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
vQdpZpfNDCVL8PkmH8Hk85GTfxA0DvbPqNm832GVeJrByixq4JSufm7W0VNf
llQciPLC3TlJxGqwL8bZhAbJy8sL8l4En1PJ52J9owiEqc8Ikums2X/qzDfW
uUHm6OePXRN50oG206wCjp3+St9mJta3OidXTW0oM4maA6TGesJU00pJVDfk
No3ycJZR4aIVrbf0mnx0/nnv5KKat9mrDnz42R8dZ/9YzUdonoPHPw/OD5qs
BI+/UdmInHHoDS/7j3nn27ZtY4zDpO8LVMVxOCeEeoOiTLH7Fsc5+46/LMHj
BHdmKeRDYcDnNA3eLDh8iW8p0CPFeuYd3inY+wvB3hssK9xz/Noe49buP/YZ
vmTfRnZJyOZ2H7f2hcKlExe9fu7789K657jsrGdVR8/Z1qaorNuY1W8cO8to
aWAZJPuynDIxu7lhy9lx5KruxWvjz/y5Vz1Zhl3jpsy/94FHBLkkt0zUNi7u
leGylb/rMW9N/Pk/z1YWzdj04qBlcMHBMXn3IEfDTJIwP7qOXj2qdBvp86s6
rCVPeYYtXq8JVbD4uw5/CvLwVCfI0mt85StDVwwv2RquvxowJqp+K33O0aNH
8zAO5kpGMm+2GMI1D8jE3ceCggIVd5BrTDsukyNY4c41l3j7hWADq6HeIdB/
i0C/jqdFxnvD9LVtlraZ7lN74Y9ZOQK5QnJ6xyjb9jdrxek/7qsHu5BkCvzb
wYfHKUS4qyNy1zpxtIiQynV+P63e1iiWyWis4Uyt3oX1zpDaJ3C5Ikt8Jl25
rowJOHPtI/d3zsefAfJ4s3T9gbhMte//ch7rmpH7ZqHB+138ylm17d3qPSfX
7nrPzjszoNL9i6sGhT+wu05Lap31cfCN59Gg7W/c03LoJhUm+oXFL1ZNaf9e
+15HC6Mwmiu45PZlJEJvcXLpdsGlWwWXrrQsibWek5XobR8w8jyclZNq3bgS
MOqqkK0JMyrqZB13O/DTm3vdfp6dvZeYRTLvVHvPWX/7+0+VO98rnLph3IKd
m/edqoel8SpV/s9PV+2+SkW+7bxz5yotzq+TJ+uiIp22VXPemVdnNRieslSr
4iSfS9nGFk1ashumued4Vc8Qq0j5XRGjsWMvUavNEI+i6q9oJKTyzOSf/vu8
h49bLC4x9465ClgFGWjZKM0TjHLf9yERequTUb8U479NMOrShIxy3hBt12qM
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
CTVxGxWv7h2k95KZK35w2f1eenU1pWzfgKRdeH/nC6desmCflYOnbGvxe7Ku
khWPyc/xivn7UG0jxuvfRGg4XtFQV5N4wtDw+6m5wnoPz9BQ16Xqp2iYV6tZ
x1cZ7V0ftdauaV/nRw696rIGXyEun2amekyzaPVLUZVc0FUusp6tspNPv9eO
67xs2vM3/Ovev32z8/QTNn89Q9t4vnle1QSXOa49n/HacXndPico2vZVtH3S
0Pa01Fxh1UdmaKt7GvRVtB2YQ1sdjVGTlk+ldHWmpp41L+4tfi91sNpfe1Td
jXXe5aAM5Wvc7pu1svwR/4zt4z7beZzvS6Sr1ma4IK9zl8tu7qu4IK6pov0W
sMrzFBfoihjrDReMSc0VMDAswwW6AoqODhicwwWMk8MYa7a+Ht9t9V2Znikv
YiZe8etARfna/H35zqXbxLNo7HVbp/T2xVvXPP1GPD6F5++hG4fC6lr60TJL
FW1pqZzd1Vtef+KZNzP+58GVRDRA5qZMr6lnDo0nKxr3VjTeYGj8g9RcgcZH
Z2isMzZ7Kxrvn0PjfTOSPeHaJXM6tpDAuh5VdJa8jh3xWB0d2WEl+8e3rcZO
nZRsXy+acjv5hkcnXPPwlXPX+Ptue9ZlWmKggz45GR6po6xee8e6c1o7MA5o
+3dbiSdkvIUxqkQVRGh5oaKlzlTeaGj5w9RcgZbHZGip8wt7KVoelENLsx/0
quIvWZLMYlbVKbQVl9enMqe358vpmhS9/PryFDf3ovqoXq7E6/qWFZW0H8Xo
sd5ZrVzJXIu7nHkdRxHXS3kZiBcruuss202G7mNTcwW6D8/QvV7RQUfNDM2h
ezkjw0m6a9+tjqDRsw7MoX48qlFXlNcVsEoJGc/xqFS7iY743wK1Biv689Yi
rz58LKcn1JoLo1aJaYvwwKWKB3R+qXGTFX6UmitgZ0SGB8qKGvWKB0z0R7/o
vXMeAxQ05+k6anrOxhwOiPvMdNcTbYubNffL44AqN8WRuJhApUGK9gNyaB/v
y+X6pmiOimu4vD7ELYr2ZUX7zYb2p6fmCnj5Qob22t9eVrQ39n35rfc/ueOR
Z8+cvnjUxPaJMx5ZsPI5klmf9MqKynr0A3OoHL8/1x2wdJxSPyfnoOCcxVvP
vHLRqInzJ1//6P2dL3b/Znc2dkV3mBig6LlPDj3jXZXc6UtzSZVI7Ag9r1D0
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
sx4jtowgJCDTCPMfy7BbXxF9RxJVdaJZPbgEb7CiAtmFs4LPbEVBwZ+53yyY
SJASU9RZPUvWbdZSRyEmXwROOyiKyXhNa5ZkDzW7GaMFlgcmMTQWQpT6qkEp
jNYpjFJmsS7WfQs15ezupHGpq/j0SqxVquB0FkKdbSpVqBFbZ9dYyHIv4L1I
xg6qxSqgErgi4BbDEEqWRt1lvZ2MyL3UcYCt1sPaO/VOE9p6Vb5vuMXvwVH8
xms/g1NZFsvVtJYaU1YXurrSQzJ41ZmcjNAb89IY4pUJ3QU/XqqWtO6xqLBb
HPnMyNk7Z4ONgCW/Y1leJ07pa+KuwS5grGzD5GRfaTpRITtg1HCrrTIsmcyU
CtZMYS070SMlhdEhUYzG6yOzrgRLAJtay1KMTUjEMoC+/vLQDFZrolhl0TN8
ZFOFgq+eD0BDtSiNW13fkbCRZ8FMAJLjcJCK6ZkjFhHPdeFGg+c2KUFt6rOA
bZPz4z9rCQmGJyQwTG4VLvf9aQAp65fps4yBtU5h11b2p8Q2rG2wVXV9PWFS
tiLexaH+TGc8G3VJnFacR8vKLmtLsfSLWC++/hWPeRhYY1L3leT3rDvgd0Cp
GczagDR06HmyHi38wweTCVvDimXCf3WJmX1lbxtbfjkl3JTkM0si1zY30/Iq
6JPQIWn+fPTJn92+eKvFHWhg87I9xWlFYq3ShMudBpnH4XF3xe2P73ZdtGW1
dgxCghWyAHMm6+VQhS1qVPAPc9Ht3RyEjQcyoI2FKMVWoj4InjGTCysWHrZl
kSoDqTXBTZxF4Rr5WQbqWJ0O/4G+bNKAZRcVlg51WLp72bbTpi60UjzI0cHv
0JTDYHu5WqCHOYkdfcHdCx57AehhnV4axXwYb1ENAhAd/Rytj1tm90M2UeRe
DwbFMLQ4oeL8qdnkDpV5EOJs2ImgGzCbzfQ33QZYjU+qqMGwYnUPVkWK4kMq
0s5+oCspevs5vkl0b/HrL+GxzS+9E25UeY5kkRv8w1Q6jvlwtW7m+LHSDKti
QLgBH8/i3jOHAVhIm3WL2T1BNKBeKavS0WbHeqF6tP5WVVyVqpF5nYXEOucg
hd2zDE/WeZ2cuks2nNPTV2qhaBMMv/gj1NppZbN8G95k3ZNQOdPuV5Qa2GPW
72f2LttlpmL3M5Ptw2qpddxzWJpCdBI1r/YJak9xPIqCPk/sFABM2TgSp3Du
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
b7vU1igVDYFQH/c4U7PoOfOZWvO5/wJrVt1O\
\>"],ExpressionUUID->"31e09569-edcb-4425-b7e9-e8a8eca36ecf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexList", "[", 
  RowBox[{"ReverseGraph", "[", 
   RowBox[{"PartitionTypeLattice", "[", 
    RowBox[{"IntegerPartitions", "[", "11", "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7800718497804475`*^9, 3.7800718542043056`*^9}},
 CellLabel->
  "In[763]:=",ExpressionUUID->"4cb32cbc-2b88-40ca-9c3e-d09bf56638bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "1"}], "}"}], ",", 
   RowBox[{"{", "11", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7800718552427835`*^9},
 CellLabel->
  "Out[763]=",ExpressionUUID->"7a24a3bc-8092-4c78-8b75-e6e902e77053"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ggg", "=", 
     RowBox[{"VertexDelete", "[", 
      RowBox[{
       RowBox[{"ReverseGraph", "[", 
        RowBox[{"PartitionTypeLattice", "[", 
         RowBox[{"IntegerPartitions", "[", "11", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"EdgeList", "[", "ggg", "]"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", 
      RowBox[{"ToLabels2", "[", 
       RowBox[{"MobiusMatrix", "[", "ggg", "]"}], "]"}]}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.78007095263099*^9, 3.7800709603863554`*^9}, {
  3.780071818900917*^9, 3.780071865137161*^9}},
 CellLabel->
  "In[764]:=",ExpressionUUID->"683c7536-b0f1-43ba-8a4a-02bfb0a25d9d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{10, 1}, {9, 1, 1}, {8, 2, 1}, {7, 3, 1}, {6, 4, 1}, {5, 5, 1}, {
       11}, {9, 2}, {8, 3}, {7, 4}, {6, 5}, {7, 2, 2}, {6, 3, 2}, {5, 4, 2}, {
       5, 3, 3}, {4, 4, 3}, {8, 1, 1, 1}, {7, 2, 1, 1}, {6, 3, 1, 1}, {5, 4, 
       1, 1}, {6, 2, 2, 1}, {5, 3, 2, 1}, {4, 4, 2, 1}, {4, 3, 3, 1}, {5, 2, 
       2, 2}, {4, 3, 2, 2}, {3, 3, 3, 2}, {7, 1, 1, 1, 1}, {6, 2, 1, 1, 1}, {
       5, 3, 1, 1, 1}, {4, 4, 1, 1, 1}, {5, 2, 2, 1, 1}, {4, 3, 2, 1, 1}, {3, 
       3, 3, 1, 1}, {4, 2, 2, 2, 1}, {3, 3, 2, 2, 1}, {6, 1, 1, 1, 1, 1}, {5, 
       2, 1, 1, 1, 1}, {4, 3, 1, 1, 1, 1}, {4, 2, 2, 1, 1, 1}, {3, 3, 2, 1, 1,
        1}, {3, 2, 2, 2, 2}, {3, 2, 2, 2, 1, 1}, {5, 1, 1, 1, 1, 1, 1}, {4, 2,
        1, 1, 1, 1, 1}, {3, 3, 1, 1, 1, 1, 1}, {3, 2, 2, 1, 1, 1, 1}, {2, 2, 
       2, 2, 2, 1}, {2, 2, 2, 2, 1, 1, 1}, {4, 1, 1, 1, 1, 1, 1, 1}, {3, 2, 1,
        1, 1, 1, 1, 1}, {2, 2, 2, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1, 1, 1, 
       1}, {2, 2, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1, 1, 1, 
       1}}, {CompressedData["
1:eJwVxdd1gzAAAEDTuygSAgQCid4xxXiPjOAFMle2TPJx7/jn++sjPh6Pnz//
C6IgCbKgCKomaLpmaKZm6aIu6bbu6MCQDNlwDNfwTNlUTNsEpmcplmo5FrBc
0RcDEYpI8qVACiUsRXIgQxnLsQIVpIRKpMQqUrEd2KGd2MSBTuhghzgpQACD
CCSA+JlP/dwvgiygAQs4pDCHHJYoRwViiLvYjd3Ui7zYIyENWViFNc4xwxzX
URHxqMqarM062tCW9nTI27zLh6Ir+pjHZVwnLKmSkXBSkZqMrGU9m3jHez7w
qZmbpVnbuV3arVu6tdvSMq3LoeqrqXrWQz31S7/1+7AO23zM53Is53Kt5ziN
z2mb9u3cruN13OfrvJ/7fl33632/fwFC1CUM
       "], Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {{6, 3, 2} -> Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 2, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {7, 3, 1} -> Rotate[
           Column[{
             Row[{"7"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {2, 2, 2, 2, 2, 1} -> 
         Rotate[
           Column[{
             Row[{"2"^Style[5, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 3, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 2, 2, 2, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 3, 2, 1} -> Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {7, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"7"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 3, 3, 1} -> Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {7, 4} -> Rotate[
           Column[{
             Row[{"7"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 1, 1, 1, 1, 1, 1, 
          1} -> Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[7, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 4, 3} -> Rotate[
           Column[{
             Row[{"4"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {11} -> Rotate[
           Column[{
             Row[{"11"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 5} -> Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 2, 2, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 3, 2, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 1, 1, 1, 1, 1, 1, 
          1, 1} -> Rotate[
           Column[{
             Row[{"3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[8, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 1, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[5, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 2, 1, 1, 1, 1, 1, 
          1} -> Rotate[
           Column[{
             Row[{"3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[6, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 1, 1, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[6, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 2, 2, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 2, 2, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 2, 2, 2} -> Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 3, 2, 2, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {2, 1, 1, 1, 1, 1, 1, 
          1, 1, 1} -> Rotate[
           Column[{
             Row[{"2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[9, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 3, 1, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[5, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 3, 3} -> Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 3, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {7, 2, 2} -> Rotate[
           Column[{
             Row[{"7"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {2, 2, 1, 1, 1, 1, 1, 
          1, 1} -> Rotate[
           Column[{
             Row[{"2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[7, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 3, 2, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {7, 2, 1, 1} -> Rotate[
           Column[{
             Row[{"7"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {9, 1, 1} -> Rotate[
           Column[{
             Row[{"9"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 4, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {2, 2, 2, 1, 1, 1, 1, 
          1} -> Rotate[
           Column[{
             Row[{"2"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[5, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 3, 3, 2} -> Rotate[
           Column[{
             Row[{"3"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 4, 2, 1} -> Rotate[
           Column[{
             Row[{"4"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {9, 2} -> Rotate[
           Column[{
             Row[{"9"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 4, 1} -> Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 3, 2, 2} -> Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {4, 2, 1, 1, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[5, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 4, 2} -> Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 2, 2, 2, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 2, 2, 1} -> Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 3, 1, 1} -> Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {8, 3} -> Rotate[
           Column[{
             Row[{"8"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 2, 2, 2, 2} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {3, 3, 3, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"3"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {8, 2, 1} -> Rotate[
           Column[{
             Row[{"8"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 4, 1, 1} -> Rotate[
           Column[{
             Row[{"5"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "4"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {10, 1} -> Rotate[
           Column[{
             Row[{"10"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {5, 5, 1} -> Rotate[
           Column[{
             Row[{"5"^Style[2, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {8, 1, 1, 1} -> Rotate[
           Column[{
             Row[{"8"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {2, 2, 2, 2, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"2"^Style[4, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[0, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi], {6, 2, 1, 1, 1} -> 
         Rotate[
           Column[{
             Row[{"6"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "2"^Style[1, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold], " ", "1"^Style[3, 10, 
                 RGBColor[0, 
                  Rational[2, 3], 0], Bold]}], 
             Style[-1, Bold, 
              RGBColor[1, 0, 0]]}], Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.01640295358492875], 
        ArrowBox[{{0., 8.}, {-2.000000000694655, 7.}}, 0.06561181435343992], 
        ArrowBox[{{0., 8.}, {-1.0000000007422614`, 7.}}, 0.06561181435343992],
         ArrowBox[{{0., 8.}, {0.99999999886154, 7.}}, 0.06561181435343992], 
        ArrowBox[{{0., 8.}, {4.000000000083844, 7.}}, 0.06561181435343992], 
        ArrowBox[{{0., 8.}, {-7.065352747304132*^-10, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{-2.000000000694655, 7.}, {-2.000000001786276, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{-2.000000000694655, 7.}, {-1.0000000008414247`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{-2.000000000694655, 7.}, {-3.482512056507403*^-10, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{-2.000000000694655, 7.}, {1.9999999995378062`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000007422614`, 7.}, {-2.000000001786276, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000007422614`, 7.}, {-1.0000000008414247`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000007422614`, 7.}, {3.9999999997859845`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000007422614`, 7.}, {0.9999999993306972, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000007422614`, 7.}, {5.999999999335273, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.99999999886154, 7.}, {-1.0000000008414247`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.99999999886154, 7.}, {-3.482512056507403*^-10, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.99999999886154, 7.}, {0.9999999993306972, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.99999999886154, 7.}, {4.999999999660076, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.000000000083844, 7.}, {-3.482512056507403*^-10, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.000000000083844, 7.}, {1.9999999995378062`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.000000000083844, 7.}, {3.9999999997859845`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.000000000083844, 7.}, {5.999999999335273, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.000000000083844, 7.}, {4.999999999660076, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{-7.065352747304132*^-10, 7.}, {1.9999999995378062`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{-7.065352747304132*^-10, 7.}, {0.9999999993306972, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000844977`, 9.}, {0., 8.}}, 0.06561181435343992], 
        ArrowBox[{{2.0000000000844977`, 9.}, {0.9999999999771205, 8.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000844977`, 9.}, {2.0000000000199236`, 8.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000844977`, 9.}, {4.600803576208648, 8.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000844977`, 9.}, {3.000000000023448, 8.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999999771205, 8.}, {-2.000000000694655, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999999771205, 8.}, {-1.0000000007422614`, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999999771205, 8.}, {5.000000000047294, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999999771205, 8.}, {2.0000000000178773`, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999999771205, 8.}, {6.000000000441702, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000199236`, 8.}, {-1.0000000007422614`, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000199236`, 8.}, {0.99999999886154, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000199236`, 8.}, {2.0000000000178773`, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000199236`, 8.}, {2.9999999997909867`, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000199236`, 8.}, {7.0000000007812275`, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.600803576208648, 8.}, {0.99999999886154, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.600803576208648, 8.}, {4.000000000083844, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.600803576208648, 8.}, {5.000000000047294, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.600803576208648, 8.}, {6.000000000441702, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.600803576208648, 8.}, {7.0000000007812275`, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.000000000023448, 8.}, {4.000000000083844, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.000000000023448, 8.}, {-7.065352747304132*^-10, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.000000000023448, 8.}, {2.0000000000178773`, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.000000000023448, 8.}, {6.000000000441702, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.000000000023448, 8.}, {2.9999999997909867`, 7.}}, 
         0.06561181435343992], 
        ArrowBox[{{5.000000000047294, 7.}, {-1.0000000008414247`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{5.000000000047294, 7.}, {3.9999999997859845`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{5.000000000047294, 7.}, {8.000000000274241, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{5.000000000047294, 7.}, {7.000000000565024, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000178773`, 7.}, {-3.482512056507403*^-10, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000178773`, 7.}, {3.9999999997859845`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000178773`, 7.}, {0.9999999993306972, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000178773`, 7.}, {7.000000000565024, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.0000000000178773`, 7.}, {3.0000000002915783`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{6.000000000441702, 7.}, {1.9999999995378062`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{6.000000000441702, 7.}, {0.9999999993306972, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{6.000000000441702, 7.}, {5.999999999335273, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{6.000000000441702, 7.}, {8.000000000274241, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{6.000000000441702, 7.}, {7.000000000565024, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.9999999997909867`, 7.}, {0.9999999993306972, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.9999999997909867`, 7.}, {4.999999999660076, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.9999999997909867`, 7.}, {3.0000000002915783`, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{7.0000000007812275`, 7.}, {5.999999999335273, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{7.0000000007812275`, 7.}, {4.999999999660076, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{7.0000000007812275`, 7.}, {7.000000000565024, 6.}}, 
         0.06561181435343992], 
        ArrowBox[{{-2.000000001786276, 6.}, {-2.0000000018175967`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{-2.000000001786276, 6.}, {-1.0000000014312889`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{-2.000000001786276, 6.}, {-1.6128751667565666`*^-9, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{-2.000000001786276, 6.}, {0.9999999983542693, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000008414247`, 6.}, {-2.0000000018175967`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000008414247`, 6.}, {-1.0000000014312889`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000008414247`, 6.}, {1.9999999994812185`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000008414247`, 6.}, {3.999999999771404, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{-3.482512056507403*^-10, 6.}, {-1.0000000014312889`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{-3.482512056507403*^-10, 6.}, {-1.6128751667565666`*^-9, 
         5.}}, 0.06561181435343992], 
        ArrowBox[{{-3.482512056507403*^-10, 6.}, {3.999999999771404, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{-3.482512056507403*^-10, 6.}, {3.000000000250992, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.9999999995378062`, 6.}, {-1.6128751667565666`*^-9, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.9999999995378062`, 6.}, {0.9999999983542693, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.9999999995378062`, 6.}, {1.9999999994812185`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.9999999995378062`, 6.}, {3.999999999771404, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.9999999997859845`, 6.}, {-1.0000000014312889`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.9999999997859845`, 6.}, {1.9999999994812185`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.9999999997859845`, 6.}, {5.999999999999119, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.9999999997859845`, 6.}, {4.999999999789225, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999993306972, 6.}, {-1.6128751667565666`*^-9, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999993306972, 6.}, {1.9999999994812185`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999993306972, 6.}, {3.999999999771404, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999993306972, 6.}, {4.999999999789225, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{5.999999999335273, 6.}, {0.9999999983542693, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{5.999999999335273, 6.}, {3.999999999771404, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{5.999999999335273, 6.}, {5.999999999999119, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.999999999660076, 6.}, {3.999999999771404, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.999999999660076, 6.}, {3.000000000250992, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.999999999660076, 6.}, {4.999999999789225, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{8.000000000274241, 6.}, {1.9999999994812185`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{8.000000000274241, 6.}, {5.999999999999119, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{8.000000000274241, 6.}, {6.9999999995220605`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{7.000000000565024, 6.}, {3.999999999771404, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{7.000000000565024, 6.}, {5.999999999999119, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{7.000000000565024, 6.}, {4.999999999789225, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{7.000000000565024, 6.}, {6.9999999995220605`, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.0000000002915783`, 6.}, {3.000000000250992, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.0000000002915783`, 6.}, {4.999999999789225, 5.}}, 
         0.06561181435343992], 
        ArrowBox[{{-2.0000000018175967`, 5.}, {-1.0000000010193446`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{-2.0000000018175967`, 5.}, {-1.3959891020931536`*^-9, 4.}},
          0.06561181435343992], 
        ArrowBox[{{-2.0000000018175967`, 5.}, {0.9999999994140865, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000014312889`, 5.}, {-1.0000000010193446`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000014312889`, 5.}, {-1.3959891020931536`*^-9, 4.}},
          0.06561181435343992], 
        ArrowBox[{{-1.0000000014312889`, 5.}, {2.99999999949992, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000014312889`, 5.}, {1.9999999995817461`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.6128751667565666`*^-9, 5.}, {-1.3959891020931536`*^-9, 
         4.}}, 0.06561181435343992], 
        ArrowBox[{{-1.6128751667565666`*^-9, 5.}, {0.9999999994140865, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.6128751667565666`*^-9, 5.}, {1.9999999995817461`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999983542693, 5.}, {0.9999999994140865, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999983542693, 5.}, {2.99999999949992, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.9999999994812185`, 5.}, {-1.3959891020931536`*^-9, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.9999999994812185`, 5.}, {2.99999999949992, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.9999999994812185`, 5.}, {4.0000000001205365`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.999999999771404, 5.}, {0.9999999994140865, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.999999999771404, 5.}, {2.99999999949992, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.999999999771404, 5.}, {1.9999999995817461`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.999999999771404, 5.}, {4.0000000001205365`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.000000000250992, 5.}, {1.9999999995817461`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{5.999999999999119, 5.}, {2.99999999949992, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{5.999999999999119, 5.}, {4.0000000001205365`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{5.999999999999119, 5.}, {5.999999999220023, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.999999999789225, 5.}, {1.9999999995817461`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.999999999789225, 5.}, {4.0000000001205365`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000010193446`, 4.}, {-1.0000000016178774`, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000010193446`, 4.}, {0.9999999991136406, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000010193446`, 4.}, {-5.694289484381443*^-10, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.3959891020931536`*^-9, 4.}, {-1.0000000016178774`, 3.}},
          0.06561181435343992], 
        ArrowBox[{{-1.3959891020931536`*^-9, 4.}, {0.9999999991136406, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.3959891020931536`*^-9, 4.}, {1.999999999469651, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999994140865, 4.}, {0.9999999991136406, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999994140865, 4.}, {-5.694289484381443*^-10, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999994140865, 4.}, {1.999999999469651, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.99999999949992, 4.}, {0.9999999991136406, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.99999999949992, 4.}, {1.999999999469651, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{2.99999999949992, 4.}, {3.609954118810805, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.9999999995817461`, 4.}, {-5.694289484381443*^-10, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.9999999995817461`, 4.}, {1.999999999469651, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{6.9999999995220605`, 5.}, {4.0000000001205365`, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{6.9999999995220605`, 5.}, {5.999999999220023, 4.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.0000000001205365`, 4.}, {1.999999999469651, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{4.0000000001205365`, 4.}, {3.609954118810805, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000016178774`, 3.}, {-4.693845312431222*^-10, 2.}}, 
         0.06561181435343992], 
        ArrowBox[{{-1.0000000016178774`, 3.}, {0.9999999995074234, 2.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999991136406, 3.}, {-4.693845312431222*^-10, 2.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999991136406, 3.}, {0.9999999995074234, 2.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999991136406, 3.}, {1.9999999995568487`, 2.}}, 
         0.06561181435343992], 
        ArrowBox[{{-5.694289484381443*^-10, 3.}, {0.9999999995074234, 2.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.999999999469651, 3.}, {0.9999999995074234, 2.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.999999999469651, 3.}, {1.9999999995568487`, 2.}}, 
         0.06561181435343992], 
        ArrowBox[{{5.999999999220023, 4.}, {3.609954118810805, 3.}}, 
         0.06561181435343992], 
        ArrowBox[{{3.609954118810805, 3.}, {1.9999999995568487`, 2.}}, 
         0.06561181435343992], 
        ArrowBox[{{-4.693845312431222*^-10, 2.}, {-4.6051695790083613`*^-10, 
         1.}}, 0.06561181435343992], 
        ArrowBox[{{-4.693845312431222*^-10, 2.}, {0.9999999995107203, 1.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999995074234, 2.}, {-4.6051695790083613`*^-10, 1.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999995074234, 2.}, {0.9999999995107203, 1.}}, 
         0.06561181435343992], 
        ArrowBox[{{1.9999999995568487`, 2.}, {0.9999999995107203, 1.}}, 
         0.06561181435343992], 
        ArrowBox[{{-4.6051695790083613`*^-10, 1.}, {0.4058329278352062, 0.}}, 
         0.06561181435343992], 
        ArrowBox[{{0.9999999995107203, 1.}, {0.4058329278352062, 0.}}, 
         0.06561181435343992]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 8.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"10\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06561181435343992, 8.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.000000000694655, 7.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"9\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.9343881863412151, 7.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.0000000007422614, 7.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"8\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9343881863888215, 7.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.99999999886154, 7.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"7\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0656118132149799, 7.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.000000000083844, 7.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.065611814437284, 7.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.065352747304132*^-10, 7.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06561181364690465, 7.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0000000000844977, 9.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"11\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0656118144379376, 9.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999999771205, 8.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"9\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0656118143305604, 8.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0000000000199236, 8.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"8\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0656118143733635, 8.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.600803576208648, 8.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"7\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.666415390562088, 8.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.000000000023448, 8.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.065611814376888, 8.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.000000000047294, 7.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"7\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.065611814400734, 7.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0000000000178773, 7.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.065611814371317, 7.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.000000000441702, 7.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.065611814795142, 7.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.9999999997909867, 7.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.0656118141444266, 7.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.0000000007812275, 7.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.065611815134668, 7.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.000000001786276, 6.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"8\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.9343881874328361, 6.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.0000000008414247, 6.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"7\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9343881864879848, 6.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.482512056507403*^-10, 6.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06561181400518871, 6.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9999999995378062, 6.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.065611813891246, 6.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.9999999997859845, 6.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.065611814139425, 6.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999993306972, 6.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.065611813684137, 6.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.999999999335273, 6.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.065611813688713, 6.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.999999999660076, 6.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.065611814013517, 6.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.000000000274241, 6.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {8.065611814627681, 6.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.000000000565024, 6.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.065611814918464, 6.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0000000002915783, 6.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.065611814645018, 6.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.0000000018175967, 5.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"7\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], Offset[{2, 2}, 
          {-1.9343881874641569, 5.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.0000000014312889, 5.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.934388187077849, 5.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.6128751667565666*^-9, 5.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06561181274056475, 5.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999983542693, 5.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0656118127077092, 5.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9999999994812185, 5.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0656118138346584, 5.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.999999999771404, 5.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.0656118141248445, 5.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.000000000250992, 5.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.065611814604432, 5.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.999999999999119, 5.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.065611814352559, 5.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.999999999789225, 5.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.065611814142665, 5.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.0000000010193446, 4.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"6\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["5", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9343881866659047, 4.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.3959891020931536*^-9, 4.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06561181295745082, 4.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999994140865, 4.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0656118137675263, 4.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.99999999949992, 4.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.06561181385336, 4.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9999999995817461, 4.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.065611813935186, 4.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.9999999995220605, 5.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.065611813875501, 5.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.0000000001205365, 4.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.065611814473977, 4.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.0000000016178774, 3.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"5\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["6", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9343881872644375, 3.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999991136406, 3.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["5", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0656118134670804, 3.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-5.694289484381443*^-10, 3.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["5", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06561181378401097, 3.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.999999999469651, 3.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.065611813823091, 3.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.999999999220023, 4.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"2\"", 
                  StyleBox["5", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.065611813573463, 4.06561181435344}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.609954118810805, 3.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"2\"", 
                  StyleBox["4", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.6755659331642447, 3.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.693845312431222*^-10, 2.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"4\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["7", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06561181388405539, 2.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999995074234, 2.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["6", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0656118138608632, 2.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9999999995568487, 2.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"2\"", 
                  StyleBox["3", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["5", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["0",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0656118139102886, 2.06561181435344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.6051695790083613*^-10, 1.}, 0.06561181435343992], 
         InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"3\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["8", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06561181389292296, 1.0656118143534399}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999995107203, 1.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"2\"", 
                  StyleBox["2", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["7", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox[
                RowBox[{"-", "1"}],
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0656118138641602, 1.0656118143534399}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.4058329278352062, 0.}, 0.06561181435343992], InsetBox[
          RotationBox[
           TagBox[GridBox[{
              {
               TemplateBox[{SuperscriptBox["\"2\"", 
                  StyleBox["1", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]],"\" \"",
                 SuperscriptBox["\"1\"", 
                  StyleBox["9", 10, 
                   RGBColor[0, 
                    Rational[2, 3], 0], Bold, StripOnInput -> False]]},
                "RowDefault"]},
              {
               StyleBox["1",
                StripOnInput->False,
                LineColor->RGBColor[1, 0, 0],
                FrontFaceColor->RGBColor[1, 0, 0],
                BackFaceColor->RGBColor[1, 0, 0],
                GraphicsColor->RGBColor[1, 0, 0],
                FontWeight->Bold,
                FontColor->RGBColor[1, 0, 0]]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.4714447421886461, 0.06561181435343992}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{916., Automatic}]], "Output",
 CellChangeTimes->{3.7800709884430943`*^9, 3.7800718402563195`*^9, 
  3.780071884058651*^9},
 CellLabel->"Out[764]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXl8ldW1N35uknOSMEacoqikjnGOM47gjCOxiAZRCMgQFRFFJQISRRRB
JgENyBCUeTKgCCpqqEOxKqJUjFhf01Z7U1tvqa3XvPX23vP77r323s/zrL2e
c5K29/P+8/ND0+ecs5+117TXXnvvtde6ZtC9VUPvHHTvbbcOKrn8nkGjqm67
dXTJZXfdg69y/y2RyJ2L/51bnMBzOpGg/4X/q8X/ol/9/9/43/xa/U19//33
69atmzjpsZGjRtfOm79jxw7baoNu1aT+FuLrG28aWHXPw+OnLHhs7qq7H5zR
f/Adj095Am87yM/r9l+qv7m7du26of+QeaveSCSXbvogkTv2sXl3jLz7b3/7
m2u9Xrf+P7o1vu93c+VTy15N5OvWo8Y+vuTZpeon23pdqPWWLVuG3jlWNaTW
C9e9deU15XGtZz05+76HZ6uGBbp1ed/+X331Vbj12lDr8RMeqplWF7QGEZ99
9llc62XLl4+4/7Gg9WVXXguGxLUGIIAL8AYfwXMfb+LgMwsX3fPgNNWQOFi3
YXvfmwYBdcZB3ToPHBw3vmboiGqwPFe3f+TJZWj//vvvM/loqee/+NKWa6/r
e+W1fYBRj4suvW/M2A2vvONa1gct8+atfvPH//r7n/70J6CfozF75e1Pn934
bhjv9YGm5L7+7mf3T9cA8vTnr36/t+rhFXhBwjv3y6/+eOejq6csejWR0p/v
nrKWtQ7JMu+Hlh/HPbkRDRaue1u3z0NLfKRXBJ4r7On351/bqd9I/fyj/0Pf
4B/RZt9brd/7Qv1Nbtr2S9fqzQ9+ZbD79s/f01eJHPUnd/ayBnrfYbtSw/iV
br2n6feR1ru/+HdqlEjq3yfN25wF2goN7XPd+ru//gC+6ob6D3CJQFvz8g4D
LZdBI9zTLS3p0tJ0Q4ODvjAEffqS10JvFzD88xhE6jE9alS6oCDd3Mwg7tG/
Og4afCA4gy/hA1CQfPA7iAMS0C0A1l3s3ataNzaqPiZPdn0s0n3oIZm7s/Gr
CIYAYPrI1zAcVSMmrX7lnU+p52S6oiK9c2e6vDxdUgKuSJCT0GIQgH/LXnzv
1geXGgk5JSP4KbTC9+DLt3v/CmlCRElS/Jkz00VFyujW11voiwPNSEJ9t3/c
RLqLPhKFGhpGCpgEHccn6NzyTe8ZPjc3K1C9ejlM6wLJpdAp3iLBACLUu52F
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
Bv1BfLQlZDxbyAtSA9REyv5u8CH+kuKAq2bXz+3Hmh07iNjM+hafu0L4uNYg
iN4n4iPvGw/kFCsvYoHBN/DLSMMdPfinRl/S6pLZiySo+AAoYW/zrmB0JmnF
QzACymh4BpK/d9p6sw5yklu5+f1B454zkiAxBJiBjQ4zsJ+g5rtdXfzDu4AQ
9hLvDrDydpuD/WEaH0629057fs7ybeA6aYw7GkqUWYmC7YvWvWPg0HDRKOo/
TkNp/9zg6UY//uFd2ljXIzUndPZ0ZwjfYH+Y+iF32eEb2AYgTjgBZa3lCuLJ
tg1977oHF7z95Ryr+WE68slekEkDhBiMR4QwhlWJYExuXwARhoNWwmm9O8Qw
pvHgNoQTR4e4rdrlWK4Y342owC+R8RuMd+oT0iH/Hf8FVNg+jYThTjQ3h8fY
kLSby9T6kVsI0wNJloYX/Rdgm++oAa+2b/eoybXjyow+ooafUTjUA2tl2udY
6g1Fpr+ysnSvXnGU8NOAgFftGHZmJ7ylJV1cnC4v97DvmI7acm772zPsDLyZ
MxU3Qvt1QwPsCsgsQd8efvqlx555mdQVut1R0oNkeuVKhd7kyer0o6nJ7GUx
DAvd/AHVvPvxtaSg0HqFE7VwOCp0oATw3vbuVVSH9gKHhXgICZn5z+3eQQGA
ZqKTpsJhoF7s2TNdXa0QHDWK49fJ9g4RkyUCZviLZ7ghajVK8AL8GhoILTpS
iuKmvRTgo08VglGvqAHD8VpLS7BbaDCgUwLqVT3uo9Uw6K97d/XuzJm2p+GR
nvTbSYK2Z/tHqmldndfHfqwPjV+S+vjvYcPVeVvofCnaw34hWF+88qYHe38G
m3S4sbHRfHb2YcGy1/7riy9cL1WRXkhTsaCoqampr6834yjo5XD2+QDWqz6Z
ymuCBiYSVVVVzc3N+Uz3Zeo0tsmWlpbKykr4odXV1WoHmPdewj4fKPWeApTu
3bvTCc7kyZPxMRWDQ1RbtIblFhQURDgW9HYY+1wscTzZq1cvkI9OqetEHP1D
fb7nNUCp0zCS9WVlZYWst0PY54NEeQdnNe1i+h0S6Zc4VlurduXr6uqKiooI
f24BDxY/B73T+SkkV68nLEBQp2AdYnC41cchDyTTj8XFxdzGFbPPXYXec4C+
tj/QOQje2GS/78FC33i1Qv9XXl7eSdRwLgdGeQEkDcZh0ODvTG0kqnZUbf92
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
quC53OKmKm6eJ92fiNKl3jDlYYxKVBGceV4VP5nOpS++F0PnrRa/SL4ldx3c
eBR7bAW8Kp0UCy+6cxPTjuKjiE6CbtePk0KybVUlvrWvqAnS2Fu0GhHOUxXk
YaLzQVYbsLOrDWhWXs3NKnNLr16U64FT70df5dsZDsKbv+ZNoEMcyVZTsKPV
ddMq6cn5UFHOKdsf/p9o5fmmqL8fW1MZUVFPfnyrqK+0HI5oTOAbOD80MlcH
fjTZbZUYpLJSZUuoryctwBvoBxSgqc3pNjGkBdNDdQ7VHEZaAOwy1Dl0kWZz
lm+7d9rznpdJWYKcVFwlRspionLIlJamS0pUVbVEIt3YKNs5PyIqfGrZ+sqN
dKKedvUf/VF/kKgN7bJQSVZhD6tHybIx/dNcuIXpBVncoKKgkhfZI1fB0GRP
Uj107x70sHOnuyFAKaTgi9mYCr2lRucdir+RbHRBZg/KDUNzWFxFSb3bEdSf
o8YQiY5L6fSjzSQWrnapYFOBvaYmNUqAa0ODbCH9iCbtc/2DFTI7GZzzPY3Y
X9SI9jG00QnSJlbpk1mpf5r2m1gvJPUg8wZR64ZtQK3JJWi0YuZM1dvOnZTK
CXaC8qzA4/P8uwdDWrGbVegM+g2vrNSOAb8nGlelU0ciRW4skKSUldKxVR0h
EfKh0zYE+dPdTZRFR/VMVSObm818x/nlRynx+JC21iLtHKakwFGC/8K6s4+o
O34Oq4Ba0h9edzVYAST/BdygCEt8u1tnsrn1wWV8dHMsiHp8Ds99+aaaKPVJ
+dKamkxmIEAnbxJLdutNjgvpEK+LGowQd2eilXVReQYc0i2XDoL0J9/5xMSx
lx544n/y8wFb59koKkrrXAHmzhXnlx+NxGOe2lr7dT9Gg7+26ChqDo/l57S6
rFORfl2JXjOj/zO80LqjMrFue/9zcuzxs4mscV4v1jxidtKUKnmqpx9XiFbP
yGqFAv+Ugp2sf1od0hZelzYYD9nq0nLt0LcfUv+16aW/te/w6+XrlHsEPEym
C49aP2KIx+Blq5u7L8Mn5Um6UJQ0zz9G9orX+2V7Uq2mSx/wpdzqBwoEc7LH
ZAtNul2mmrkvbnzj42CnUJLlli1Kh/WkRbVgMRsAAGYP/FWrTfWKPqmhc5YC
57eCA3c/vpZYBxV19XOdVeTVe7ksaYUGVfrvAQNBtkow1tBg8ltxiv04HR7j
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
NmuvadM/9x+E52qfGvJDYmTFok28rszTkmw/Xfc5RI1yONqZ14RYOp3FH/FO
FELrP0oLCgfJmtepZ/Q6dMYxW91x7UsNwrPsSMeAz1mQfMXTWdOK+KH7lVcY
V+R5KMeOlj3tOZ6YoicVF3g8T7LyOHLI1DwOeQbI18qLkfydHRk8/6NO2bKe
5x7H6q9tWzE3jEZ97kVr5vI0u2o/xCiMqODup+cj8O/6XPEz49fZlSOcqz3j
5v0nORm9QvhhISMEhFGriijp2+/+MmvV/h4FJbAoDOZQYnsTteJm3N9fc+P/
jhgpGp0yRUimrs4aNXXT4af8k8TYCmUQL1+d/7M1Vu7bZ+kX/yTtqT5032i3
uaSqtsfIlapNzIqmFe+lgIRQpGZOCDwGTqnEnOnTpq333NFx7Cs1Hz89iCJx
6gUz/IGTKx8dXjxm7hbizHyiudyrma7kjg52HP5gXs/nyQkc3Fb7r0aNRQRu
jmPIPskPINgDU8+MW/vq8bP8tgOSItRi1YGZcedkWiy7R/BPJkhqs3jz2L3K
InrsvrnRhmhB3teGNLR166bQ5nPbiBPPUA/O2oBaSbGytAqL39xw2/927Sqe
mTWLmAq57d6pCUlkvpCfHU49COeBaRg0xG2ddMBrVthox0+5DEeLiy2qzDfc
SfvIVFQOloMbgXbM/K18BYXm3//aveef6Rmfv3pMeAnI9fx5OsWJDZ9vnPrc
PbjeS/23veN0t97/3rJVUDVlSshvRt+ScZPhT2fB7M1mOoXFYuQ/e/aS6LzG
5RHckUaPkSXdnluRO2YNBnlVh2DJXu1/dedRrdrR72+57f/07vfu9EXg+HDn
3HwthxvVhvy3P6wz1piYb0ny7BqjdMWXpVXQ0G92HRSYl5ybvYW0P6ei48g7
v2YBgHa+uRmFjiSoH8vSyWNCy/o5nalGO29htBlHCmku/MXmjvavONGCmVYg
8tMOD/3r0GGL1hEu66UVHzHnSJALzjQTERlW7hGdPF7UjjDOnrV2WTLppagV
IYgxb0I5CRNNU32NO+oVQw2ESAFFXp7PPYUtTbRmKlpjrIpalF+8KNxYKCTG
B0QaqvbIVA+hzdppPw9I/XdWFtr4377PoD3f6gR+FnUmo18sr4Qy8mV5VzzV
LUI+QAIcCqR0ybTLijHfHSKq8tOqJCKV0TxSjT/BlV31LD9ECTDQKodlGvfR
1VMvlHbIWwDvMnHxzg1733XXpnksxlzTIecnPhUXYaVZ6ENp1nwfFs37tTVY
Qx6Cn3RM6yUM024BWbfviNwP9GNLwXB6c8ToEzi6JTrChA7p/mQ7/ztosGLR
zKGsK0hVMUQQnaIZhWK3P6jafdLawSZvLxUCpkNWiJsUT44DPhBxDhxBQQH3
A8rSgTAaAfLlmbb4DK6FVVJ7ji8AhCC8/HwKQc33Gra2abT2oHIapXwbBCAd
sa4i3zAXNt+BIm0/ze21dIvnN1BkBVAqligjPmOwlnc0WLmZyiZxtBjx0cpn
v/sDIvxFlbXa+qjEfjOd34B12wPHP1ZZxqi+nnddgD3zsTjHjmbcLUS9U3ba
C2ic2auGgtEoogCJrDSWp2CGGoQ+oVPTnXk+9/GIHa++tPCzzck+7ZtR5Ajp
5ETF6i2NCxcuWPfBOBTQaS353vtrkxwkt2kj3p01y3yHpH17QaZp/Bjy0nrM
1fImrMMMcsn6I8J6zHdJyhtqk147eW749A3jFm5XCOL3NtUP6m3otOrn5255
bubGWL3lxGEFakcVEIwJqYb5LJ9R3biDG0F6z1GrHhm6/PGClas2v/H1txco
JgqqMGY3a9oV0AjzR83eDHrBXpZ3bBpXtH3Y9A0QItco3a2LlueVHhwxcyNk
TFi91o0W3p955NDuOXZ085wHgQ3sUQx/FTEqIFRUpGGP36lLkR21KQIxIBZj
j/nmwjZR1y2KmcoDjpy9ae6aA89OrJhRss8Q55nvMZS52mS3NtduP7Fg3SHx
N343VgPffueXHSzZ+Lo5vjT3G88e5UwXEj3VKU+MXu3sGdaRmGPTB1qhcsRV
g8VZGquHz9igz74ot+CDR36De44tLTolY+n6o45Wsm3PA+lBhnp1Cr/FOFk5
0CVVtTNX7rdWnq5144jfsuNzfxnDkUtnwz3YbOhqE9jUUNmItdbAbm1V5aF/
ffSRzz2K9i0eGT4jsoxlM93rVEHzEfP4fbuPrnkGk9/51TAGbfFEGmaK4qnf
zvJDsHvfGL9h0a/uw1zPnaVGZUQWwcViQbvDmjIkSNvzzAfMFQHGFQHDrCGT
cXql7SUNldruOONqA3LV2G1ehzXh10LDMI81EO1lZWV1dXWSbNbHlex7Y9Z6
mv1+UVERmgjxW2zMOdaboq57ryxETpizpt0DPcfNWK4qd5xe46lvMt9LdbMP
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
UqU3RGQIm7NrmdhZFIKOZB97o+qRs389S8Zm14BwLxFoa5k+1EWM6ORZkIh3
vGMWx/2HzU+idxyE6Tz1QukDzy7sMbJkzupXj7zza9vOrEhyTtWuK8t+krox
Y/iel8jCzNrkks8x8nCtZmHqfNmYWUU3AvlKLc10oQdaQwypyrSezzx39y9+
2a5dO1Unp5/IrVFt5g2BHUYzsTKdGadlJfjo1z63S8/kNDDxEXAemplefqp8
F49l8TP4/4tz7Qy83cD69qxaGOzoetZ7WkyryQ7wV357K1gNua/V8FHNQ302
G5G+/vZCwAhGdPrOx8yaM9+dyHm6UrMi6XHN5/u7T4DDX/nt63yGQhT84Y/f
hUKhrbsOWnvYMJ7sO7+PW4+ZWs6TtPmcYGup++Y7w9qruh1NP7E14MxQMxXN
mWYf8dgEb/PSznPVsXgL66251Y904roR0Komt8FAK/DLQ0rU5TDERO3ciV9G
IjuIXkPNeTy5waRA/Ju1xM+gbWjE/xUa/iXGko34DyWIK3qTpxXvecV1va9H
z5WVVUrPLXeL2qHrytst27tLnSqvUcTpll4vy4jxkk2vzy87iK8jZ20mFUVd
6w76GSoBZ1ab++a3FfzKg2zepuu08Fr9tHBw3Ov5VW483c5ap1qJVZvfGFe0
3Q1hecq8GMfpnlUjaBv4YJaq+UnLL87f9vKKvYNfqpq8ZJcbofz0W6KjfMfb
ExfvdENTIjnbiMzSbW+CY4CQQdFHrvys8sZGLF6mYdFYodBvwronRq8eOKVy
xMyNYIgirB9kpTGkdVXF7T+p6fCTAz+l4lGOOfOKnvQxnijkxflboT3006Ng
VZ+xZbNW7hO22kTDWTOGCX6/gLm/ZkwDD3twxtt036YwbqH3xgc3AroMXQ6K
fsraZiuMQ6dVzy87hNfamvzivNKDw6dvqN77jvCLjXwwRqfyu8f9ZyeVPzJ0
Wf+J5VsOnPrhX363EZyzK1sHTKpAgGxngzLIry1Ye7jfhPLBU9c/N3PjsOnV
I2dvcntAs4/jN0qYd5I11nB1p40rkDh4SmWPAlE5AFy9wivUrBMQIHWIZeBr
I9sdFqdpWCdUcmyZb7243cbWoROfDHmp+sGBizsOWAxV4QlPhNtAwxa/u8LM
rdnWHNk/5MEWb1MiOsZ9PToCovIk+Xasp/pepCl/Jvq9KeYozKOn+kEeLkmP
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
IxrKmxlRfo1RaxzlzTRkcblwfcVzaqt5vmyfwu+XB9CjfE5LqhflDw5YbPbz
txr757r5uQflxr60NpJ9aOd71dKZ1Fr7oKm+CeWv6PWF3lhc5SQMlCQFop7P
i3k2pZEPnbLVLL+oJapl8kznjqiaH02q7Zi0pGc116vg66vHzy5Yd4iwbz75
np+PZD4voIWGNz7v51qM58zWlkYO7dNubvDRmn4KjpEW516JmGkV8/yB66W9
xwZ4n+YTI/zqPcyn67DaGAO2Yu+SNNWKqHMQ/DKKMfLnDp28OsfvjJ7g0zWS
jUj0o9xc49OeSay+PR6AgFGzN+eOXo2/sfHAXJ/Y0qhJbgH6XfW84pPrMJ4z
Us0zloYW5zf76EyvtYpFS3AexhkNrjPSwzVzl8cSeN/mvcZ+e4v52MtXHJr7
ICz2OifPFtmZust9KAnOpfPYjFcn1POhMzhrbs6dmE5wU2uJmmTvZhKjmad2
EnaMWMkcGfHdr+Yd99doeDTvOHZobBKHbZjPxLTXudv6aDHpkmnJiNM2zLdZ
cV2189gG7zvJ2IbfiWR8ty8/fa6pD+YyYtoGXxe191g386EkHGgb/MQPnmXK
9qEzHGgb5tvf+MkDNuXmNexfMIlla7YRT/2LeS8b9wjmPfP6XWq8Sptr9fI4
bMMcG9rri3f4aFFfA4tFS7x3X7U00sN19TOPbfC+I8Y2/E655HuAeU27X3Qe
e8c8Xymy68b13XiuCmlf2+An//K1OL8ToYLrFM3e2lQvr1ZGNMl2YBLL1Gwj
ngocs5Xy/QoRo23crOGRZ9a4VlvHYRvm6lj7Ftqf+mhRPzUjFi1N47SN5kZ6
uK5+6rEN4zq/uS7VwAtfKUwyWbUBcykxbYOfdmjnUaXMs42VOn6GoeUWjSeU
ZetURv2PErP8kLHCwUC1ec3lPiYt/Xz0eGp6zCe68KpV8w29t2lY5Od0cY1e
G4dd+J81KWRxlw+W9Ar3WLRcEaddNDHSw3X1E49d8L5ppwxrI2o6Y+InJo/E
IwO/bE6gTVzLKLYrYaS8s3RK/AyCj2g80ywjlSydQj9juMaIQNP9Byqnp2nj
ASalVM0W4qnsMc9yeE1W2GgLP9Hwx/d8ck3eGIctmGsD7Mzb3T62oN/uEYuW
q+O0BfOYxXUlV3ooskn79ttvt2zZ0j9/NP7hw5///OeoqyqS6olYezpDIb4T
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
8dvusbTpygnXFjWD8JVaWOyijtsN5BF3xxjr6Kto3YnECUcjz83DzskcmpNx
RZxkR+jNdVdEaV0Lk8nQEdQb/nS2U9bRkZf8HI5HA9iRdDdUVW+qvA8accYU
wCg/GeG0yp2CzNPnLsCXe2HA/NyCRZMW7gnmJjA0hXvh7tGzqchKqin8dJjd
aMZaBEPxm8Ky8h2fejGr7vgQx6zSecTSN8ZXsCgMiwuOtJvYU/WT6kR6GM07
P/XOv0N0wNvzdaPTuT9g1WGNknJQB5znqe6d1lAdcGorj10O0HhtFXSglqUD
9qyxeMMRjDpmlhC6G1vo49VvOK3Sw3JE3X1y+nzFzmM+vnStWaUNfP1dVXpS
kmoDt2FyNKtpk7r/6FfuCDd3rVKJl2oVOz9duO6DKG+Lx6xlOdF3C3vqqqR6
Idutm5T6RFhVmxaRuOX0NbaQl0z+Qe3gT7tjXaJjqfnOcjbr0b6Jck0VtOPK
ctpw787NRzO3rY6gXe5che5JpToRmMk0xxkBY9GmV+gL1x+hU62uI5cH9ITv
vdu7tdFr+DpOar27UKkh80nft7CmK9vy3mdKb9KdOLyd8djU0pOuI5eBJzS1
aP0RP9JJ3zZ4fcxKLLp+PbAUFB889lvRxm2RGOUUNLNQlky2QU1w35rnUmIn
xUwT+MkGz4pl32tsXAVNMPehkmtC1fi43tIE7udx2m+O1IRsJ7a4R8XPM920
yTEJja3ec+SsppnHAtj316PPC3KcVAfqS9eieJYz8uKoPZkcPv67FVs/8lHY
knEotbqhpgjE2xPH3iNCpnoe2HPkywMfn3PMdy0SUUh1rnLsOLsICQf1gT/t
vlEafXuBrzW532vfpG9UBX2oekScrvqVlA87v4QzgwKPLArVBzey0pk+ODPN
ufc1Ij2odIt6PlfYN86j41drOukPZIPgu4Ji7sBHkxft7VCwqOfYlY4qBnew
37kz/May8d3O98+Mmb31pfwFWM/kDlk8ft4O7WKFZb4gym+IxC/XkpstBCaT
e1BLqpbHoXqklvA8iPxkz875Ur8KWvIv5A1LyoddnZRHT3Pam0VqiXtlm8a0
hJ9DuWmrn1RLaljU85OpmhYeo+NYqzvpD1QXt+jmCHTmQ3WsV1qw1uy8n9Kj
isrRUif6tkQYl82viJ/bLLQmw0hQo5w5RixpR9/+4bsZPCrUvttfpwoaFXH2
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
9D4mly1kgN+jC4E+fkLBZd2QyZpusLt9rxSXrEEtfoq3oALdhGXwvZ5ZU+rX
9610rQTlW9FeDwYTjPu+lSBZjkpsqlPWDdjoeln94paVJXnrTLVmXGvAv7o3
QubRpwPcB7kmkraQ2gbVwybShDHX10iKgkyGgkauOZXn9xW7Su99fO7tBbs7
j1j6woD5L+Uv6DuhwhQ2ockhbVqP+D4TSdv3mRp4Vl/7TPU9eYJbGkUhD0Gc
nP9j7zrlXd8xq+nzopDVuLXeDchb7vhWN+UNQ7pi2yfLt37E5MszKjSPoqW6
Kd95FYfKdxyzZcp9+aykcuXeVEMm1/qMRomDWmEafOTkH3YdPuOMh3XImPYk
fH+pAdNw3bfyl0jC2l8C156/JK1YrNgpYe631E8YEe4OCaezMbT3/6k6g9Za
+Emvj1nZq2jla8PLipftJ9Xmq8zrQqhID1ro3m+uwuTbbdSyvm9VwNXRdz34
Lm6kTHnmbh6PzHdmU6tglXVVubDdOod8qY6R712RPH3vSldC094VZS52eVfy
2dhMp4TrsrH1cheF7cDyrD41LAnfmdwuR+byYrsLDtrM3dOQc/6wDF81TO8i
CgdXMxzUZzigCqCa1mgAqD0Vtw8XtvdKt/58/4yQ5/tndQ1ECDeH5O/yzySG
Y7Od8q/Dxtg7JyOKTflvee+zqUv2CZnbu6ktImVO92GYzLFOghv1k8pLxiiI
ZZZt/BBTX8jORQ1TujNWHOg3YTXlmudSbM6kyFdHtT3tRfuD3lkH/mzh0R23
CJ/MIbt7mTXWeQKUv0Wy8/0t+b3T35K9x+Y6ZVebjZyXsUnlWr/4A1gaOGlt
4AwuKLfrIuWmK2hAVljxDHxnra+rvDpGTUsnsZYqmrOdpEa5FUx96zZ6+bN9
5r6cv6Bn0crSte+DlhuZrOoyWVV3WVq4RN1HLwc0SVaUh0bvSuW/s+43hWUd
hy7BelBFWMizd8M34iemuo6y9o10dRKqEGn4RnI1EStxyiaHjY8XjaAriWkr
RDrG4/3sE64mkbKSyM7W9shpYHlFi6xoO+rN83XC7KROUJhwhQZez+TJsxfT
aUeE4dSZC2VLgVuP6/ee2HzgFPeV7k8EfSK+w6zjMJRPRJIF/8vM6oSCOLnX
HCt1SpbvzXknxvwcOyyqypZsg0jJ8jWieXOcz6DXMtpSIyXs7R3TLmDUbMhv
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
0/79brEg5y8B1lAV\
\>"],ExpressionUUID->"de343f93-4efa-4d68-bfb0-cf44515afea2"]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 585, 17, 28, "Input",ExpressionUUID->"f2899bf3-a652-4e09-9f77-f6a7114b2553"],
Cell[1146, 39, 727, 19, 28, "Input",ExpressionUUID->"92e5e66c-07c4-45cd-af18-c45be0f72784"],
Cell[1876, 60, 304, 8, 28, "Input",ExpressionUUID->"be54d64c-1540-4a68-b082-cc8bac9d97a6"],
Cell[2183, 70, 3439, 79, 276, "Input",ExpressionUUID->"a929cd4a-62a2-445b-8416-47de20466955"],
Cell[CellGroupData[{
Cell[5647, 153, 291, 5, 28, "Input",ExpressionUUID->"8d073a1a-3d39-496d-b23e-5086a38d09a6"],
Cell[5941, 160, 2234, 58, 32, "Output",ExpressionUUID->"fa0d095e-0855-4030-9725-80d02072437e"]
}, Open  ]],
Cell[8190, 221, 845, 23, 28, "Input",ExpressionUUID->"9e69f2d8-1c4d-4b45-8fa4-09607b2f611f"],
Cell[CellGroupData[{
Cell[9060, 248, 420, 10, 28, "Input",ExpressionUUID->"7df3f068-3978-4409-8a49-db519266bff1"],
Cell[9483, 260, 24871, 495, 1125, 10276, 256, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"4bdab7d3-a803-40d6-a243-8a7a2d28499c"]
}, Open  ]],
Cell[34369, 758, 15300, 318, 123, "Input",ExpressionUUID->"043cec9d-1c4a-4671-bc97-7dcc6df86e68"],
Cell[CellGroupData[{
Cell[49694, 1080, 347, 7, 28, "Input",ExpressionUUID->"439f15a3-ea36-43e0-a271-d09b9c62abfe"],
Cell[50044, 1089, 18895, 381, 449, 9227, 222, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"ae0a99f8-65fc-4421-8d5c-89dbec8356eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68976, 1475, 216, 4, 28, "Input",ExpressionUUID->"740d3899-0d1c-4b3d-a8a9-3a67d4178bef"],
Cell[69195, 1481, 1495, 48, 32, "Output",ExpressionUUID->"44b16d10-022b-462e-9c20-de3e5349ef57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70727, 1534, 939, 22, 67, "Input",ExpressionUUID->"ccd703e8-a603-45e2-809a-b5f221454e90"],
Cell[71669, 1558, 18491, 390, 449, 10274, 255, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"2fb95491-b396-45cf-b018-99443b28f06c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90197, 1953, 265, 5, 28, "Input",ExpressionUUID->"b1ce9d18-22e0-48cb-bdb2-62772189bee3"],
Cell[90465, 1960, 464, 14, 32, "Output",ExpressionUUID->"e2a86605-1624-4b95-a949-8c63607decbb"]
}, Open  ]],
Cell[90944, 1977, 912, 24, 28, "Input",ExpressionUUID->"4eee1ebd-6fff-442b-bd67-8f7fd32d2dac"],
Cell[CellGroupData[{
Cell[91881, 2005, 279, 6, 28, "Input",ExpressionUUID->"1f750651-9a3c-43be-8858-c7343ba01479"],
Cell[92163, 2013, 306, 8, 34, "Output",ExpressionUUID->"8a967400-83d0-485e-b0b5-77ca6689f5b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92506, 2026, 969, 21, 67, "Input",ExpressionUUID->"4143bd24-84d8-4184-8f12-03a311500705"],
Cell[93478, 2049, 246674, 4899, 834, 123764, 2884, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"31e09569-edcb-4425-b7e9-e8a8eca36ecf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340189, 6953, 353, 8, 28, "Input",ExpressionUUID->"4cb32cbc-2b88-40ca-9c3e-d09bf56638bb"],
Cell[340545, 6963, 5231, 142, 109, "Output",ExpressionUUID->"7a24a3bc-8092-4c78-8b75-e6e902e77053"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345813, 7110, 1078, 26, 67, "Input",ExpressionUUID->"683c7536-b0f1-43ba-8a4a-02bfb0a25d9d"],
Cell[346894, 7138, 240693, 4762, 877, 121253, 2803, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"de343f93-4efa-4d68-bfb0-cf44515afea2"]
}, Open  ]]
}
]
*)

