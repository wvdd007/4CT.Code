(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    304089,       5897]
NotebookOptionsPosition[    300840,       5817]
NotebookOutlinePosition[    301184,       5832]
CellTagsIndexPosition[    301141,       5829]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"FormulaGraph", "[", " ", 
  RowBox[{"Fold", "[", 
   RowBox[{"Plus", ",", 
    RowBox[{"FindFullFormula", "[", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
         RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
         RowBox[{"3", "\[UndirectedEdge]", "4"}]}], "}"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", "i", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "4"}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7031554331248837`*^9, 
  3.703155516780669*^9}},ExpressionUUID->"f68d2800-28e5-47e6-8e75-\
6541172584b4"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`v13x24, $CellContext`v13x2x4, $CellContext`v14x2x3, \
$CellContext`v1x24x3, $CellContext`v1x2x3x4}, {{{2, 1}, {4, 1}, {5, 2}, {5, 
       3}, {5, 4}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", ImageSize -> {200, 200}, 
       VertexLabels -> {$CellContext`v14x2x3 -> Row[{"14", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "2", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "3"}], $CellContext`v1x24x3 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "24", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "3"}], $CellContext`v13x2x4 -> Row[{"13", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "2", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "4"}], $CellContext`v1x2x3x4 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "2", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "3", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "4"}], $CellContext`v13x24 -> Row[{"13", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "24"}]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.02261146496815286], 
        ArrowBox[{{2., 1.}, {0., 0.}}, 0.02261146496815286], 
        ArrowBox[{{1., 2.}, {0., 1.}}, 0.02261146496815286], 
        ArrowBox[{{1., 2.}, {1., 1.}}, 0.02261146496815286], 
        ArrowBox[{{1., 2.}, {2., 1.}}, 0.02261146496815286]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.02261146496815286], InsetBox[
          TemplateBox[{"\"13\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"24\""},
           "RowDefault"], 
          Offset[{2, 2}, {0.02261146496815286, 0.02261146496815286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{"\"13\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"2\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"4\""},
           "RowDefault"], 
          Offset[{2, 2}, {0.02261146496815286, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{"\"14\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"2\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"3\""},
           "RowDefault"], 
          Offset[{2, 2}, {1.0226114649681528, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"24\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"3\""},
           "RowDefault"], 
          Offset[{2, 2}, {2.022611464968153, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"2\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"3\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"4\""},
           "RowDefault"], 
          Offset[{2, 2}, {1.0226114649681528, 2.022611464968153}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{200, 200}]], "Output",
 CellChangeTimes->{{3.7031554666113844`*^9, 
  3.7031555176394305`*^9}},ExpressionUUID->"4da47acd-bd66-4db9-981d-\
27ac1f2786aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaGraph", "[", " ", 
  RowBox[{"Fold", "[", 
   RowBox[{"Plus", ",", 
    RowBox[{"FindFullFormula", "[", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
         RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
         RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
         RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "}"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", "i", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "5"}], "}"}]}], "]"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7031555434509015`*^9, 
  3.7031555632029915`*^9}},ExpressionUUID->"05f92fd3-e09a-4765-8fc7-\
b377789357f5"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`v1x2345, $CellContext`v1x23x45, \
$CellContext`v1x23x4x5, $CellContext`v1x24x35, $CellContext`v1x24x3x5, \
$CellContext`v1x25x34, $CellContext`v1x25x3x4, $CellContext`v1x2x34x5, \
$CellContext`v1x2x35x4, $CellContext`v1x2x3x45, $CellContext`v1x2x3x4x5, \
$CellContext`v1x2x534, $CellContext`v1x3x524, $CellContext`v1x423x5, \
$CellContext`v1x4x523}, {{{2, 1}, {4, 1}, {6, 1}, {12, 1}, {13, 1}, {14, 1}, {
       15, 1}, {3, 2}, {10, 2}, {11, 3}, {5, 4}, {9, 4}, {11, 5}, {7, 6}, {8, 
       6}, {11, 7}, {11, 8}, {11, 9}, {11, 10}, {8, 12}, {9, 12}, {10, 12}, {
       5, 13}, {7, 13}, {10, 13}, {3, 14}, {5, 14}, {8, 14}, {3, 15}, {7, 
       15}, {9, 15}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", ImageSize -> {200, 200}, 
       VertexLabels -> {$CellContext`v1x2345 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "2345"}], $CellContext`v1x423x5 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "423", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "5"}], $CellContext`v1x4x523 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "4", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "523"}], $CellContext`v1x24x3x5 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "24", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "3", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "5"}], $CellContext`v1x2x3x45 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "2", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "3", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "45"}], $CellContext`v1x2x34x5 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "2", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "34", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "5"}], $CellContext`v1x3x524 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "3", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "524"}], $CellContext`v1x2x534 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "2", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "534"}], $CellContext`v1x24x35 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "24", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "35"}], $CellContext`v1x25x3x4 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "25", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "3", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "4"}], $CellContext`v1x23x4x5 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "23", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "4", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "5"}], $CellContext`v1x25x34 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "25", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "34"}], $CellContext`v1x2x3x4x5 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "2", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "3", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "4", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "5"}], $CellContext`v1x2x35x4 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "2", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "35", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "4"}], $CellContext`v1x23x45 -> Row[{"1", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "23", 
            Style["|", Bold, 
             RGBColor[1, 0, 0]], "45"}]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{-3., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {-3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {-2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{3., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{3., 2.}, {3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{3., 2.}, {-2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{3., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 2.}, {-3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 2.}, {-2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 3.}, {1., 2.}}, 0.04847715736040609], 
        ArrowBox[{{1., 3.}, {-1., 2.}}, 0.04847715736040609], 
        ArrowBox[{{1., 3.}, {3., 2.}}, 0.04847715736040609], 
        ArrowBox[{{1., 3.}, {2., 2.}}, 0.04847715736040609], 
        ArrowBox[{{1., 3.}, {0., 2.}}, 0.04847715736040609], 
        ArrowBox[{{1., 3.}, {-2., 2.}}, 0.04847715736040609], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{1., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{2., 1.}, {0., 0.}}, 0.04847715736040609]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"2345\""},
           "RowDefault"], 
          Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 1.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"23\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"45\""},
           "RowDefault"], 
          Offset[{2, 2}, {-2.951522842639594, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"23\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"5\""},
           "RowDefault"], 
          Offset[{2, 2}, {1.0484771573604061, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"24\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"35\""},
           "RowDefault"], 
          Offset[{2, 2}, {-0.9515228426395939, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"24\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"3\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"5\""},
           "RowDefault"], 
          Offset[{2, 2}, {-0.9515228426395939, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"25\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"34\""},
           "RowDefault"], 
          Offset[{2, 2}, {3.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"25\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"3\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"4\""},
           "RowDefault"], 
          Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"2\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"34\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"5\""},
           "RowDefault"], 
          Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"2\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"35\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"4\""},
           "RowDefault"], 
          Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"2\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"3\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"45\""},
           "RowDefault"], 
          Offset[{2, 2}, {-1.9515228426395939, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 3.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"2\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"3\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"5\""},
           "RowDefault"], 
          Offset[{2, 2}, {1.0484771573604061, 3.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"2\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"534\""},
           "RowDefault"], 
          Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 1.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"3\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"524\""},
           "RowDefault"], 
          Offset[{2, 2}, {-1.9515228426395939, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"423\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"5\""},
           "RowDefault"], 
          Offset[{2, 2}, {1.0484771573604061, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.04847715736040609], 
         InsetBox[
          TemplateBox[{"\"1\"",StyleBox["\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
            "\"|\"", Bold, 
             RGBColor[1, 0, 0], StripOnInput -> False],"\"523\""},
           "RowDefault"], 
          Offset[{2, 2}, {2.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{692., 692.}]], "Output",
 CellChangeTimes->{{3.7031555458643217`*^9, 
  3.7031555639507666`*^9}},ExpressionUUID->"3822d5c3-9d76-4509-b892-\
21ffba146dab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Looking at the claw", "Section",
 CellChangeTimes->{{3.703155663893401*^9, 
  3.7031556687853055`*^9}},ExpressionUUID->"8dc1f6ac-e471-4e17-a8d7-\
f824bde9c02b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Mingle", "[", 
   RowBox[{"c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{"RGBColor", "[", 
   RowBox[{
    RowBox[{"Mean", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Mean", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Mean", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7031559817547655`*^9, 3.7031560243666143`*^9}, {
  3.7031561031568346`*^9, 3.7031561423665514`*^9}, {3.703156283360086*^9, 
  3.7031563289910107`*^9}},ExpressionUUID->"29e0c46c-c537-4f55-9755-\
05dbde47dfe5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Mingle2", "[", 
   RowBox[{"c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{"RGBColor", "[", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Total", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Total", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7031564515251155`*^9, 
  3.703156462031423*^9}},ExpressionUUID->"6cb809a4-7df7-4562-a280-\
54d6b547bda2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Traverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "4", "}"}], ",", 
       RowBox[{"{", "5", "}"}]}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.699107632911731*^9, 3.699107638709539*^9}, {
  3.703155626304517*^9, 
  3.70315563133796*^9}},ExpressionUUID->"c5b44a42-d7db-4241-b97a-\
efcea35beadc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Traverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "4", "}"}], ",", 
       RowBox[{"{", "5", "}"}]}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6991076150688367`*^9, 3.6991076183053474`*^9}, {
  3.7031556335761023`*^9, 
  3.7031556374033136`*^9}},ExpressionUUID->"510cb63e-792d-4dac-91fb-\
8216b257bf4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Traverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "5", "}"}]}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.699107685010203*^9, 3.6991076906841745`*^9}, 
   3.6991078210247145`*^9, {3.699112596557989*^9, 3.69911260351163*^9}, {
   3.6991283707197733`*^9, 3.699128395358556*^9}, {3.703155639603798*^9, 
   3.7031556451032295`*^9}},ExpressionUUID->"8266cecc-ff1c-448e-8236-\
4dc200e743c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g4", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Traverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "4", "}"}]}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.70315565355802*^9, 
  3.7031556596030846`*^9}},ExpressionUUID->"5fa127d7-3a3d-403b-8635-\
2a7cfbf5516c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"g1", ",", "g2", ",", "g3", ",", "g4"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", " ", "\[Rule]", 
        RowBox[{"Rotate", "[", 
         RowBox[{
          RowBox[{"SymbolToLabel", "[", " ", 
           RowBox[{"SetsToSymbol", "[", "#", "]"}], "]"}], ",", 
          RowBox[{"Pi", "/", "4"}]}], "]"}]}], "&"}], ",", 
      RowBox[{"VertexList", "[", 
       RowBox[{"Graph", "[", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"g1", ",", "g2", ",", "g3", ",", "g4"}], "]"}], "]"}], 
        "]"}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"EdgeStyle", "\[Rule]", 
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", "Cyan"}], "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{"g1", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"g2", ",", "g3", ",", "g4"}], "]"}], ",", "#"}], 
             "]"}]}], "&"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", "Red"}], "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{"g2", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"g1", ",", "g3", ",", "g4"}], "]"}], ",", "#"}], 
             "]"}]}], "&"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", "Yellow"}], "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{"g3", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"g2", ",", "g1", ",", "g4"}], "]"}], ",", "#"}], 
             "]"}]}], "&"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", "Green"}], "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{"g4", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"g1", ",", "g2", ",", "g3"}], "]"}], ",", "#"}], 
             "]"}]}], "&"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"Mingle", "[", 
           RowBox[{"Cyan", ",", "Red"}], "]"}]}], "&"}], ",", 
        RowBox[{"Intersection", "[", 
         RowBox[{"g1", ",", "g2"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"Mingle", "[", 
           RowBox[{"Cyan", ",", "Yellow"}], "]"}]}], "&"}], ",", 
        RowBox[{"Intersection", "[", 
         RowBox[{"g1", ",", "g3"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"Mingle", "[", 
           RowBox[{"Cyan", ",", "Purple"}], "]"}]}], "&"}], ",", 
        RowBox[{"Intersection", "[", 
         RowBox[{"g1", ",", "g4"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"Mingle", "[", 
           RowBox[{"Red", ",", "Yellow"}], "]"}]}], "&"}], ",", 
        RowBox[{"Intersection", "[", 
         RowBox[{"g2", ",", "g3"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"Mingle", "[", 
           RowBox[{"Red", ",", "Purple"}], "]"}]}], "&"}], ",", 
        RowBox[{"Intersection", "[", 
         RowBox[{"g2", ",", "g4"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"Mingle", "[", 
           RowBox[{"Yellow", ",", "Purple"}], "]"}]}], "&"}], ",", 
        RowBox[{"Intersection", "[", 
         RowBox[{"g3", ",", "g4"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.703155700085391*^9, 3.7031557089053335`*^9}, {
   3.703155779417599*^9, 3.7031559402826977`*^9}, {3.7031561529802837`*^9, 
   3.7031562118940105`*^9}, {3.7031563810173893`*^9, 3.70315641562883*^9}, {
   3.703156505862758*^9, 3.703156507493411*^9}, 3.703158367033031*^9, 
   3.703158430567705*^9, {3.703158897011432*^9, 
   3.7031589054832845`*^9}},ExpressionUUID->"4b69470b-a043-4ef0-aead-\
d90c0cff63e2"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{3}, {4}, {5}, {1, 2}}, {{5}, {1, 2}, {3, 4}}, {{3, 4}, {1, 2, 
        5}}, {{1, 2, 3, 4, 
       5}}, {{1, 2}, {3, 4, 5}}, {{5}, {1, 2, 3, 4}}, {{4}, {1, 2}, {3, 
        5}}, {{3, 5}, {1, 2, 4}}, {{4}, {1, 2, 3, 5}}, {{4}, {5}, {1, 2, 
        3}}, {{4, 5}, {1, 2, 3}}, {{3}, {1, 2}, {4, 5}}, {{3}, {1, 2, 4, 
        5}}, {{3}, {5}, {1, 2, 4}}, {{3}, {4}, {1, 2, 5}}, {{2}, {4}, {5}, {1,
         3}}, {{5}, {1, 3}, {2, 4}}, {{2, 4}, {1, 3, 5}}, {{1, 3}, {2, 4, 
        5}}, {{4}, {1, 3}, {2, 5}}, {{2, 5}, {1, 3, 4}}, {{2}, {1, 3}, {4, 
        5}}, {{2}, {1, 3, 4, 5}}, {{2}, {5}, {1, 3, 4}}, {{2}, {4}, {1, 3, 
        5}}, {{2}, {3}, {5}, {1, 4}}, {{5}, {1, 4}, {2, 3}}, {{2, 3}, {1, 4, 
        5}}, {{1, 4}, {2, 3, 5}}, {{3}, {1, 4}, {2, 5}}, {{2}, {1, 4}, {3, 
        5}}, {{2}, {3}, {1, 4, 5}}, {{2}, {3}, {4}, {1, 5}}, {{4}, {1, 5}, {2,
         3}}, {{1, 5}, {2, 3, 4}}, {{3}, {1, 5}, {2, 4}}, {{2}, {1, 5}, {3, 
        4}}}, {{{1, 2}, {2, 3}, {3, 4}, {2, 5}, {5, 4}, {2, 6}, {6, 4}, {1, 
       7}, {7, 8}, {8, 4}, {7, 5}, {7, 9}, {9, 4}, {1, 10}, {10, 11}, {11, 
       4}, {10, 6}, {10, 9}, {1, 12}, {12, 11}, {12, 5}, {12, 13}, {13, 4}, {
       1, 14}, {14, 8}, {14, 6}, {14, 13}, {1, 15}, {15, 3}, {15, 9}, {15, 
       13}, {16, 17}, {17, 18}, {18, 4}, {17, 19}, {19, 4}, {17, 6}, {16, 
       20}, {20, 21}, {21, 4}, {20, 19}, {20, 9}, {16, 10}, {16, 22}, {22, 
       11}, {22, 19}, {22, 23}, {23, 4}, {16, 24}, {24, 21}, {24, 6}, {24, 
       23}, {16, 25}, {25, 18}, {25, 9}, {25, 23}, {26, 27}, {27, 28}, {28, 
       4}, {27, 29}, {29, 4}, {27, 6}, {26, 30}, {30, 21}, {30, 29}, {30, 
       13}, {26, 14}, {26, 31}, {31, 8}, {31, 29}, {31, 23}, {26, 24}, {26, 
       32}, {32, 28}, {32, 13}, {32, 23}, {33, 34}, {34, 28}, {34, 35}, {35, 
       4}, {34, 9}, {33, 36}, {36, 18}, {36, 35}, {36, 13}, {33, 15}, {33, 
       37}, {37, 3}, {37, 35}, {37, 23}, {33, 25}, {33, 32}}, Null}, {
      EdgeStyle -> {
        DirectedEdge[{{3}, {1, 2}, {4, 5}}, {{1, 2}, {3, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {4}, {1, 3, 5}}, {{4}, {1, 2, 3, 5}}] -> 
         RGBColor[0.75, 0, 0.25], 
         DirectedEdge[{{4}, {5}, {1, 2, 3}}, {{5}, {1, 2, 3, 4}}] -> RGBColor[
           Rational[1, 2], 
           Rational[1, 2], 
           Rational[1, 2]], 
         DirectedEdge[{{3}, {4}, {1, 2, 5}}, {{3, 4}, {1, 2, 5}}] -> 
         RGBColor[0.25, 
           Rational[1, 2], 0.75], 
         DirectedEdge[{{4}, {1, 5}, {2, 3}}, {{4}, {1, 2, 3, 5}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{5}, {1, 2}, {3, 4}}, {{1, 2}, {3, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{2}, {4}, {1, 3, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{1, 3}, {2, 4, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {3}, {1, 4, 5}}, {{2}, {1, 3, 4, 5}}] -> 
         RGBColor[0.75, 
           Rational[1, 2], 0.25], 
         DirectedEdge[{{2}, {3}, {4}, {1, 5}}, {{2}, {1, 5}, {3, 4}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{2}, {1, 5}, {3, 4}}, {{2}, {1, 3, 4, 5}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{5}, {1, 4}, {2, 3}}, {{1, 4}, {2, 3, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{3}, {1, 5}, {2, 4}}, {{1, 5}, {2, 3, 4}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{4}, {1, 2}, {3, 5}}, {{4}, {1, 2, 3, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{3}, {4}, {1, 2, 5}}, {{3}, {1, 2, 4, 5}}] -> 
         RGBColor[0.25, 
           Rational[1, 2], 0.75], 
         DirectedEdge[{{2}, {3}, {4}, {1, 5}}, {{2}, {4}, {1, 3, 5}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{4}, {1, 2}, {3, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{4}, {1, 5}, {2, 3}}, {{1, 5}, {2, 3, 4}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{5}, {1, 2}, {3, 4}}, {{3, 4}, {1, 2, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{2}, {5}, {1, 3, 4}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{5}, {1, 2}, {3, 4}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {5}, {1, 3, 4}}, {{5}, {1, 2, 3, 4}}] -> 
         RGBColor[1, 
           Rational[1, 2], 0], 
         DirectedEdge[{{5}, {1, 4}, {2, 3}}, {{5}, {1, 2, 3, 4}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{3}, {1, 5}, {2, 4}}, {{2, 4}, {1, 3, 5}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{3}, {1, 2, 4, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[0.75, 
           Rational[1, 2], 0.25], 
         DirectedEdge[{{5}, {1, 4}, {2, 3}}, {{2, 3}, {1, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{3}, {5}, {1, 2, 4}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {4}, {1, 3, 5}}, {{2}, {1, 3, 4, 5}}] -> 
         RGBColor[0.75, 0, 0.25], 
         DirectedEdge[{{3, 4}, {1, 2, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[0.25, 
           Rational[1, 2], 0.75], 
         DirectedEdge[{{5}, {1, 3}, {2, 4}}, {{1, 3}, {2, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{4}, {5}, {1, 2, 3}}, {{4}, {1, 2, 3, 5}}] -> RGBColor[
           Rational[1, 2], 
           Rational[1, 2], 
           Rational[1, 2]], 
         DirectedEdge[{{2}, {1, 3, 4, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[0.75, 
           Rational[1, 2], 0.25], 
         DirectedEdge[{{2}, {5}, {1, 3, 4}}, {{2, 5}, {1, 3, 4}}] -> 
         RGBColor[1, 
           Rational[1, 2], 0], 
         DirectedEdge[{{3}, {5}, {1, 2, 4}}, {{3}, {1, 2, 4, 5}}] -> RGBColor[
           Rational[1, 2], 1, 
           Rational[1, 2]], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{5}, {1, 3}, {2, 4}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {1, 5}, {3, 4}}, {{1, 5}, {2, 3, 4}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{2}, {5}, {1, 3, 4}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {1, 3}, {4, 5}}, {{1, 3}, {2, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {1, 4}, {3, 5}}, {{2}, {1, 3, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {1, 4}, {3, 5}}, {{1, 4}, {2, 3, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{4}, {1, 3}, {2, 5}}, {{1, 3}, {2, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{3}, {1, 4}, {2, 5}}, {{1, 4}, {2, 3, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{2}, {3}, {1, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{1, 4}, {2, 3, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {3}, {1, 4, 5}}, {{2, 3}, {1, 4, 5}}] -> 
         RGBColor[0.75, 
           Rational[1, 2], 0.25], 
         DirectedEdge[{{3}, {1, 2}, {4, 5}}, {{3}, {1, 2, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{4, 5}, {1, 2, 3}}, {{1, 2, 3, 4, 5}}] -> RGBColor[
           Rational[1, 2], 
           Rational[1, 2], 
           Rational[1, 2]], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{3}, {1, 4}, {2, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{5}, {1, 2}, {3, 4}}, {{5}, {1, 2, 3, 4}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {4}, {1, 3, 5}}, {{2, 4}, {1, 3, 5}}] -> 
         RGBColor[0.75, 0, 0.25], 
         DirectedEdge[{{1, 5}, {2, 3, 4}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{3, 5}, {1, 2, 4}}, {{1, 2, 3, 4, 5}}] -> RGBColor[
           Rational[1, 2], 1, 
           Rational[1, 2]], 
         DirectedEdge[{{4}, {5}, {1, 2, 3}}, {{4, 5}, {1, 2, 3}}] -> RGBColor[
           Rational[1, 2], 
           Rational[1, 2], 
           Rational[1, 2]], 
         DirectedEdge[{{3}, {4}, {1, 2, 5}}, {{4}, {1, 2, 3, 5}}] -> 
         RGBColor[0.25, 
           Rational[1, 2], 0.75], 
         DirectedEdge[{{2}, {1, 5}, {3, 4}}, {{3, 4}, {1, 2, 5}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{4}, {1, 2, 3, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[0.75, 0, 0.25], 
         DirectedEdge[{{2}, {3}, {4}, {1, 5}}, {{2}, {3}, {1, 4, 5}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{2}, {3}, {1, 4, 5}}, {{3}, {1, 2, 4, 5}}] -> 
         RGBColor[0.75, 
           Rational[1, 2], 0.25], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{4}, {5}, {1, 2, 3}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {1, 4}, {3, 5}}, {{3, 5}, {1, 2, 4}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {1, 3}, {4, 5}}, {{4, 5}, {1, 2, 3}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{5}, {1, 3}, {2, 4}}, {{2, 4}, {1, 3, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{3}, {5}, {1, 2, 4}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{1, 2}, {3, 4, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{4}, {1, 2}, {3, 5}}, {{3, 5}, {1, 2, 4}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{2}, {1, 4}, {3, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{2}, {1, 3}, {4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{5}, {1, 2, 3, 4}}, {{1, 2, 3, 4, 5}}] -> RGBColor[1, 
           Rational[1, 2], 0], 
         DirectedEdge[{{3}, {5}, {1, 2, 4}}, {{5}, {1, 2, 3, 4}}] -> RGBColor[
           Rational[1, 2], 1, 
           Rational[1, 2]], 
         DirectedEdge[{{2, 5}, {1, 3, 4}}, {{1, 2, 3, 4, 5}}] -> RGBColor[1, 
           Rational[1, 2], 0], 
         DirectedEdge[{{4}, {1, 2}, {3, 5}}, {{1, 2}, {3, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {3}, {4}, {1, 5}}, {{4}, {1, 5}, {2, 3}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{4}, {5}, {1, 2, 3}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {3}, {4}, {1, 5}}, {{3}, {4}, {1, 2, 5}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{4}, {1, 3}, {2, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{3}, {1, 2}, {4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{4}, {1, 5}, {2, 3}}, {{2, 3}, {1, 4, 5}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{2}, {5}, {1, 3, 4}}, {{2}, {1, 3, 4, 5}}] -> 
         RGBColor[1, 
           Rational[1, 2], 0], 
         DirectedEdge[{{3}, {1, 4}, {2, 5}}, {{2, 5}, {1, 3, 4}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{3}, {1, 5}, {2, 4}}, {{3}, {1, 2, 4, 5}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{5}, {1, 4}, {2, 3}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{3}, {1, 4}, {2, 5}}, {{3}, {1, 2, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2, 4}, {1, 3, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[0.75, 0, 0.25], 
         DirectedEdge[{{2}, {3}, {4}, {1, 5}}, {{3}, {1, 5}, {2, 4}}] -> 
         RGBColor[0, 1, 0], 
         DirectedEdge[{{4}, {1, 3}, {2, 5}}, {{2, 5}, {1, 3, 4}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{3}, {4}, {1, 2, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2, 3}, {1, 4, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[0.75, 
           Rational[1, 2], 0.25], 
         DirectedEdge[{{2}, {1, 3}, {4, 5}}, {{2}, {1, 3, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{5}, {1, 3}, {2, 4}}, {{5}, {1, 2, 3, 4}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{3}, {5}, {1, 2, 4}}, {{3, 5}, {1, 2, 4}}] -> RGBColor[
           Rational[1, 2], 1, 
           Rational[1, 2]], 
         DirectedEdge[{{3}, {1, 2}, {4, 5}}, {{4, 5}, {1, 2, 3}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{4}, {1, 3}, {2, 5}}, {{4}, {1, 2, 3, 5}}] -> 
         RGBColor[1, 0, 0]}, GraphLayout -> "LayeredDigraphEmbedding", 
       ImageSize -> 1200, VertexLabels -> {{{2}, {1, 5}, {3, 4}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "15", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "34"}], Rational[1, 4] Pi], {{2}, {1, 3, 4, 
           5}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "1345"}], Rational[1, 4] Pi], {{3}, {1, 
           2}, {4, 5}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "12", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "45"}], Rational[1, 4] Pi], {{4, 5}, {1, 2, 
           3}} -> Rotate[
           Row[{"45", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "123"}], Rational[1, 4] Pi], {{2, 4}, {1, 3,
            5}} -> Rotate[
           Row[{"24", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "135"}], Rational[1, 4] Pi], {{2}, {3}, {
           4}, {1, 5}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "15"}], Rational[1, 4] Pi], {{4}, {5}, {1, 
           2, 3}} -> Rotate[
           Row[{"4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "123"}], Rational[1, 4] Pi], {{1, 3}, {2, 4,
            5}} -> Rotate[
           Row[{"13", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "245"}], Rational[1, 4] Pi], {{4}, {1, 3}, {
           2, 5}} -> Rotate[
           Row[{"4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "13", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "25"}], Rational[1, 4] Pi], {{2, 5}, {1, 3, 
           4}} -> Rotate[
           Row[{"25", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "134"}], Rational[1, 4] Pi], {{2}, {4}, {1, 
           3, 5}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "135"}], Rational[1, 4] Pi], {{3}, {1, 4}, {
           2, 5}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "14", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "25"}], Rational[1, 4] Pi], {{1, 5}, {2, 3, 
           4}} -> Rotate[
           Row[{"15", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "234"}], Rational[1, 4] Pi], {{5}, {1, 3}, {
           2, 4}} -> Rotate[
           Row[{"5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "13", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "24"}], Rational[1, 4] Pi], {{4}, {1, 5}, {
           2, 3}} -> Rotate[
           Row[{"4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "15", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "23"}], Rational[1, 4] Pi], {{2}, {5}, {1, 
           3, 4}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "134"}], Rational[1, 4] Pi], {{3}, {4}, {1, 
           2, 5}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "125"}], Rational[1, 4] Pi], {{3, 5}, {1, 2,
            4}} -> Rotate[
           Row[{"35", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "124"}], Rational[1, 4] Pi], {{3}, {1, 2, 4,
            5}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "1245"}], Rational[1, 4] Pi], {{3}, {4}, {
           5}, {1, 2}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "12"}], Rational[1, 4] Pi], {{3}, {5}, {1, 
           2, 4}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "124"}], Rational[1, 4] Pi], {{2}, {1, 4}, {
           3, 5}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "14", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "35"}], Rational[1, 4] Pi], {{3, 4}, {1, 2, 
           5}} -> Rotate[
           Row[{"34", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "125"}], Rational[1, 4] Pi], {{2}, {4}, {
           5}, {1, 3}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "13"}], Rational[1, 4] Pi], {{5}, {1, 4}, {
           2, 3}} -> Rotate[
           Row[{"5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "14", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "23"}], Rational[1, 4] Pi], {{2}, {3}, {1, 
           4, 5}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "145"}], Rational[1, 4] Pi], {{3}, {1, 5}, {
           2, 4}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "15", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "24"}], Rational[1, 4] Pi], {{4}, {1, 2, 3, 
           5}} -> Rotate[
           Row[{"4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "1235"}], Rational[1, 4] Pi], {{5}, {1, 2, 
           3, 4}} -> Rotate[
           Row[{"5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "1234"}], Rational[1, 4] Pi], {{1, 2, 3, 4, 
          5}} -> Rotate[
           Row[{"12345"}], Rational[1, 4] Pi], {{2, 3}, {1, 4, 5}} -> Rotate[
           Row[{"23", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "145"}], Rational[1, 4] Pi], {{2}, {3}, {
           5}, {1, 4}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "14"}], Rational[1, 4] Pi], {{1, 4}, {2, 3, 
           5}} -> Rotate[
           Row[{"14", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "235"}], Rational[1, 4] Pi], {{5}, {1, 2}, {
           3, 4}} -> Rotate[
           Row[{"5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "12", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "34"}], Rational[1, 4] Pi], {{2}, {1, 3}, {
           4, 5}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "13", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "45"}], Rational[1, 4] Pi], {{4}, {1, 2}, {
           3, 5}} -> Rotate[
           Row[{"4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "12", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "35"}], Rational[1, 4] Pi], {{1, 2}, {3, 4, 
           5}} -> Rotate[
           Row[{"12", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "345"}], Rational[1, 4] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.012478444145793818`], 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {-2.602442419745202, 2.}}, 0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {-1.6024424198607363`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {0.3975575800678399, 2.}}, 0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {-0.6024424197639746, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {1.397557580172844, 2.}}, 0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {5.397557579776702, 2.}}, 0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-2.602442419745202, 2.}, {4.397557580286943, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-2.602442419745202, 2.}, {-1.2130133567373491`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-2.602442419745202, 2.}, {2.3975575799677102`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.25, 
          Rational[1, 2], 0.75], 
         ArrowBox[{{4.397557580286943, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-1.2130133567373491`, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 
          Rational[1, 2], 0], 
         ArrowBox[{{2.3975575799677102`, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-1.6024424198607363`, 2.}, {-1.2130133567373491`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-1.6024424198607363`, 2.}, {1.3975575801549809`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-1.6024424198607363`, 2.}, {5.3975575800117355`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[
          Rational[1, 2], 1, 
          Rational[1, 2]], 
         ArrowBox[{{1.3975575801549809`, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.75, 0, 0.25], 
         ArrowBox[{{5.3975575800117355`, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 2]], 
         ArrowBox[{{0.3975575800678399, 2.}, {2.3975575799677102`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 2]], 
         ArrowBox[{{0.3975575800678399, 2.}, {5.3975575800117355`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 2]], 
         ArrowBox[{{0.3975575800678399, 2.}, {0.3975575801548388, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 2]], 
         ArrowBox[{{0.3975575801548388, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-0.6024424197639746, 2.}, {-1.2130133567373491`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-0.6024424197639746, 2.}, {0.3975575801548388, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-0.6024424197639746, 2.}, {7.397557580645255, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.75, 
          Rational[1, 2], 0.25], 
         ArrowBox[{{7.397557580645255, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[
          Rational[1, 2], 1, 
          Rational[1, 2]], 
         ArrowBox[{{1.397557580172844, 2.}, {2.3975575799677102`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[
          Rational[1, 2], 1, 
          Rational[1, 2]], 
         ArrowBox[{{1.397557580172844, 2.}, {1.3975575801549809`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[
          Rational[1, 2], 1, 
          Rational[1, 2]], 
         ArrowBox[{{1.397557580172844, 2.}, {7.397557580645255, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.25, 
          Rational[1, 2], 0.75], 
         ArrowBox[{{5.397557579776702, 2.}, {4.397557580286943, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.25, 
          Rational[1, 2], 0.75], 
         ArrowBox[{{5.397557579776702, 2.}, {5.3975575800117355`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.25, 
          Rational[1, 2], 0.75], 
         ArrowBox[{{5.397557579776702, 2.}, {7.397557580645255, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.9935388234439415`, 3.}, {0.3975575800678399, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.9935388234439415`, 3.}, {3.3975575800724727`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.9935388234439415`, 3.}, {4.3975575802329985`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.9935388234439415`, 3.}, {2.3975575799057935`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.9935388234439415`, 3.}, {6.3975575802867155`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.9935388234439415`, 3.}, {7.3975575814089325`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.3975575800724727`, 2.}, {2.3975575799677102`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.3975575800724727`, 2.}, {9.397557580782177, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.3975575800724727`, 2.}, {3.3975575799967572`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.75, 0, 0.25], 
         ArrowBox[{{9.397557580782177, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.3975575799967572`, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.3975575802329985`, 2.}, {5.3975575800117355`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.3975575802329985`, 2.}, {3.3975575799967572`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.3975575802329985`, 2.}, {6.397557580480907, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 
          Rational[1, 2], 0], 
         ArrowBox[{{6.397557580480907, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{2.3975575799057935`, 2.}, {0.3975575801548388, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{2.3975575799057935`, 2.}, {3.3975575799967572`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{2.3975575799057935`, 2.}, {8.397557580668803, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.75, 
          Rational[1, 2], 0.25], 
         ArrowBox[{{8.397557580668803, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 
          Rational[1, 2], 0], 
         ArrowBox[{{6.3975575802867155`, 2.}, {2.3975575799677102`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 
          Rational[1, 2], 0], 
         ArrowBox[{{6.3975575802867155`, 2.}, {6.397557580480907, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 
          Rational[1, 2], 0], 
         ArrowBox[{{6.3975575802867155`, 2.}, {8.397557580668803, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.75, 0, 0.25], 
         ArrowBox[{{7.3975575814089325`, 2.}, {5.3975575800117355`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.75, 0, 0.25], 
         ArrowBox[{{7.3975575814089325`, 2.}, {9.397557580782177, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.75, 0, 0.25], 
         ArrowBox[{{7.3975575814089325`, 2.}, {8.397557580668803, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.794227221774548, 3.}, {1.397557580172844, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.794227221774548, 3.}, {6.3975575802867155`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.794227221774548, 3.}, {10.397557581025993`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.794227221774548, 3.}, {9.397557580417669, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.794227221774548, 3.}, {8.397557580809803, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.794227221774548, 3.}, {11.397557581187769`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{10.397557581025993`, 2.}, {2.3975575799677102`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{10.397557581025993`, 2.}, {11.397557580859498`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{10.397557581025993`, 2.}, {10.397557580800637`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.75, 
          Rational[1, 2], 0.25], 
         ArrowBox[{{11.397557580859498`, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{10.397557580800637`, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{9.397557580417669, 2.}, {7.397557580645255, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{9.397557580417669, 2.}, {6.397557580480907, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{9.397557580417669, 2.}, {10.397557580800637`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.397557580809803, 2.}, {1.3975575801549809`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.397557580809803, 2.}, {8.397557580668803, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.397557580809803, 2.}, {10.397557580800637`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.75, 
          Rational[1, 2], 0.25], 
         ArrowBox[{{11.397557581187769`, 2.}, {7.397557580645255, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.75, 
          Rational[1, 2], 0.25], 
         ArrowBox[{{11.397557581187769`, 2.}, {8.397557580668803, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0.75, 
          Rational[1, 2], 0.25], 
         ArrowBox[{{11.397557581187769`, 2.}, {11.397557580859498`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{11.775600076575344`, 3.}, {5.397557579776702, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{11.775600076575344`, 3.}, {7.3975575814089325`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{11.775600076575344`, 3.}, {11.397557581187769`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{11.775600076575344`, 3.}, {14.397557581663406`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{11.775600076575344`, 3.}, {13.397557581629442`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{11.775600076575344`, 3.}, {12.397557581022696`, 2.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{14.397557581663406`, 2.}, {5.3975575800117355`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{14.397557581663406`, 2.}, {11.397557580859498`, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{14.397557581663406`, 2.}, {12.91063610158271, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{12.91063610158271, 1.}, {5.919382544257118, 0.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{13.397557581629442`, 2.}, {7.397557580645255, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{13.397557581629442`, 2.}, {9.397557580782177, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{13.397557581629442`, 2.}, {12.91063610158271, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{12.397557581022696`, 2.}, {4.397557580286943, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{12.397557581022696`, 2.}, {8.397557580668803, 1.}}, 
          0.08485342019842886]}, 
        {RGBColor[0, 1, 0], 
         ArrowBox[{{12.397557581022696`, 2.}, {12.91063610158271, 1.}}, 
          0.08485342019842886]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 3.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"12\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {0.08485342019842886, 3.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.602442419745202, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"5\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"12\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"34\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {-2.5175889995467733, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.397557580286943, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"34\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"125\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {4.482411000485372, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.919382544257118, 0.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"12345\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {6.004235964455547, 0.08485342019842886}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.2130133567373491, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"12\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"345\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {-1.1281599365389203, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.3975575799677102, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"5\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"1234\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {2.482411000166139, 1.0848534201984288}], ImageScaled
          [{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.6024424198607363, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"4\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"12\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"35\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {-1.5175889996623075, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.3975575801549809, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"35\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"124\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {1.4824110003534097, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.3975575800117355, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"4\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"1235\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {5.482411000210164, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.3975575800678399, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"4\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"123\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {0.48241100026626876, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.3975575801548388, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"45\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"123\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {0.4824110003532676, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.6024424197639746, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"12\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"45\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {-0.5175889995655457, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.397557580645255, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"1245\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {7.482411000843684, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.397557580172844, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"124\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {1.4824110003712727, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.397557579776702, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"125\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {5.482410999975131, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.9935388234439415, 3.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"13\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {4.07839224364237, 3.084853420198429}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3975575800724727, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"5\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"13\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"24\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {3.4824110002709014, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.397557580782177, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"24\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"135\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {9.482411000980607, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3975575799967572, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"245\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {3.482411000195186, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.3975575802329985, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"4\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"13\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"25\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {4.482411000431427, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.397557580480907, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"25\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"134\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {6.482411000679336, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.3975575799057935, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"13\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"45\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {2.4824110001042223, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.397557580668803, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"1345\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {8.482411000867232, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.3975575802867155, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"134\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {6.482411000485144, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.3975575814089325, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"135\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {7.482411001607361, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.794227221774548, 3.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"3\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"14\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {8.879080641972978, 3.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.397557581025993, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"5\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"14\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"23\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {10.482411001224422, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.397557580859498, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"23\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"145\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {11.482411001057928, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.397557580800637, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"14\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"235\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {10.482411000999067, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.397557580417669, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"14\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"25\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {9.482411000616098, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.397557580809803, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"14\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"35\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {8.482411001008233, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.397557581187769, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"3\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"145\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {11.482411001386199, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.775600076575344, 3.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"3\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"15\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {11.860453496773774, 3.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{14.397557581663406, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"4\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"15\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"23\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], Offset[{2, 2}, 
          {14.482411001861836, 2.084853420198429}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{12.91063610158271, 1.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"15\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"234\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {12.99548952178114, 1.0848534201984288}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{13.397557581629442, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"15\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"24\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {13.482411001827872, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{12.397557581022696, 2.}, 0.08485342019842886], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"15\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"34\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {12.482411001221125, 2.084853420198429}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->1200]], "Output",
 CellChangeTimes->{
  3.703155727453031*^9, {3.703155795637068*^9, 3.7031558620493584`*^9}, {
   3.703155903078521*^9, 3.7031559412175536`*^9}, 3.703156213029291*^9, 
   3.7031563360216312`*^9, {3.7031563915632925`*^9, 3.7031564166430645`*^9}, 
   3.703156508159727*^9, 3.703158431317709*^9, 
   3.7031589081588144`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXlcVVUXN35fZsSxcijN1DJtMNG0tDL1MQs11EfLNEstMecxTMEBU3Gi
FFMhRQWnKzzigCIkoSgOKEYoiCAoqBCCJKQiBGH7d757OPfcw7mTvL//3j7d
K/fcc/fZZ++1vt+11l57Hc+vvCdNmP6V9+TxX7X5aM5XsyZNHv9tmw9nzpEO
2f8fnc7hkE73f5q00eFvotOJNyL9r36LxhtO+H9f/b+v/v/56hN6wMkjNjZ2
fuD6n3bPmPXt96sDfhwcFRXlVFVVZTjxc/Uvh9EDrk1KS0vxq/sTpvuSud//
RFZsDCfz/YMeTZy1OG7s19+0zc3NVfxqlLqZ/9ID9m7l5eUnxnw1AT/XOZJd
0b/p7Mn6sJhLo8d90yo/P1/xi5Emmlj3/VL/qsVrttEfO/Em1m47fGTCpGm4
F8UvPlM3MZQ1gc5eHz5yLP2xC2vi3vip8/rFx8fTMwy/GKFuoi894NyklJAV
PoTMDJRuVk9Iv3hCOqUR0qxY+taFXQajTcdLcRkye9HaGcE/b6ZnsPOcpN8U
S79N65VIEqW29GPDSJjUfqnhoh7avXBqW1pRmuG/b1fRrIN7cybF/5o9KT4+
7evkZLuUsenpOtfDk/PzQ3yLilb9WFSETkoXoJ1E5722h4aSGT5rdK60Y/XI
svW7t86d54uGO2SRLHRocBSJ8tpVtX2938NvQ74tn3xkVMVQ+5QPH/S0y+5X
0llnH/njtYlOj2uqVWP2kXZv7Z1qSM3x7Tm7KhfoA3SOf+Pd/pGPPrB8vv4n
vHR29N2h9Lt9m3/zPxO5bm3UzuJxk7515VMt9fZX700fX5vyZ+d7/cta/vXB
vRYP+v/V1LH8owdP6ZwefVTe6O8BlW54VY561FD/8MFYJ0KqzIxiH3rAoVU+
IW9dqS4/d+n4xH/W/G++y+MV2xfonGvWbfi2OnSN15/HgkYllH0/ZEKxfsuV
4Z99SUIPJfHpdCwY/fXUNTGbAs7e2Dj6QVJq6+oVhQ11Lo89HrjoHGo+fOhS
Mb2k8aZfDizGiJrpSE96oEHbXDY/mCtJCKiABU2W1HlwTU3EtKKifQuysg6F
nDhSsfmn6Y9Dlk54vN1vvM7u30MTh+rc/j09pNe/5wa982/6O50e33iz/d8F
77Qtqnyn9RnywbszSWBg19z8e9/+HLrnr2lzl+mcae9dq3xX/PzzsiWLX370
Z/7anNhNv6UETijN3N6zOju9Rc2Wgob/fvaXi87uscdDZ+ntgbOuPm7s8YcP
nB9++1ubI9/eHrV7xoOv4gb989GOMWSM1FmfKZvIJkhw1xSSYnzLfdW33JUe
eEo6i0hn01v2CmG3vHU8IYc9CVk/Q7p937KyRdvz89dtS08PikhI2KuPijqy
J2LPrgPxB3YcTDl46feFY6tzer1i/2+2e3u7f3Pc2+vq1+R2f6nyj3fbllT2
bJVKerv/Uj5k2Pqzm8J3rDyY6bs78SauvGHh4iUYCkymAx2N+uVzFv0AEGlZ
VlK0NTNqzaK8kzvWZ8dsOHYpbG5Osv+o+9d2da8quPTcvwduN/r3m1JX+38/
euike+pfj3LH+3uLWpwvzfUIL8mcuu/m6W/jzh2aHhJzfsnG3dcW/7C5cEmQ
T/mMtd/+O0e6K0/LY/WOeqxeoweehWj0SGJjBdzBWEmt0bEK8CZkiR8h4/ZU
V08PLyqa/cvVqwviz58PiIuLO6zX69fHxMSsj0mMWfdL+i8bjxYejdhXvm+r
pN5zz5Azs7NKjy4syQgqT/u0p46Nodtj6f2f3LekcezVrvRRz5a3qrq/lFn0
bu9rFwZ+Ebd646+HffVpK0LibzhV1zzW2dH+PTNzV/DWK0OGj8yXlIJMmeuP
f68N9Bw2b0vwBobMhLT6+/7dvRn7lh5O0/ueTA2blZYcND71YuCEP5IXD32Q
E96luiTt2ceJuU3+XVLsZkcHuEX+tFPdppcl7Jxafe/nJYT47ZW4IaK6YvTP
j0rmBN7L+T7o1tmVkVci/DBnqy6d3vjdyZyts/aXbJ66o+JnaUj8pKHxtm7g
31QP/Iv0QCenKqaXwE8M/tw1bPD3jmSDj799/Q1E4HG+rGzglVu3RqWnp6+Q
OGXHwYMH9+7btw9/Tz+fen5W0o2khadKTgXEEWlyiH5FPIkfm0pSB+RXpH1S
ceOIL0n0jyQRw5eQBL8v/8qK+v2HX3bXpPZ985+8Hi/9/Ufvdg8evP3cvUed
W9291aVbUWbX3pcOTFgSvWhnCiZl/YaYbLfK6ho+Ka5dH6RkexWGRIPAu6ak
pIyShAH/4vMKEu/jRGqq+LmvdX1QmI2RxOTEXdrpnXdu3cg/zgZ8kn/O79M/
Lywc+CD3wBvV9zKa12RlP/1PYFGjyyPze6LtoGuT123NHL9mSsGmQ4Mfppz4
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
8DgbjJbmHPQTk0hWThyZnJ1JPDOzGX0n3yGe826T3QGlxB/C5F9O/CcVkUPW
0LSwwgEti34puxCzKCo52kd/2YnxMzawYxGZntSEw4jkgskQzTj4qfP3cgbk
Zx7sX5Sm/6A07NduJ6ZU9AesKwPo3z9av2r/3YUTr+ZNHnDzytxB568v+jzk
zoaF0x5EhnV9fOl3yC0bgUbAR2scdEHJ0Nh9ZPUnx0joh5yD7aGFg2rSY2kp
DTs2mXIJIYPPai8qgyrQi7rZ2DIW9+uh6cgwsqM83DDSu3gMdpGhMKx//uGg
SfeP7PEqjQzZnrj9q8RNe3vlTY5pc2XMb69Frzk5aFVswrwB+WkxABdWBMF+
aeUi/xMZfacqxQvPc6SlzRVKBo9QiIwcY+LxW0s82kjDTnIyxG/7ExKH+RMx
XdCtekBEIj39xNa1HfEZsWD8Sk5b5ZqEXQdyG/IeXIWzzMwAp9lrCU0LFZMo
iNBDJrJiKIjibuVjNBpvJ8NSvhgdQdNQKFAyNYZZhrFuEh+JKkYwQCMRGIeL
SpO/FXctPGTqYIsFwckKbh0lWwny9iDumNOtLOpRxNoxtszRBwK5GMgWdpki
nm+/j3zyCX1QC85g4V0XNdni+sIOACLbaXjafAMDyrkOFjkMooiONRzLBKdh
/7OkfOLN/Jjzx4/7ppw9Oy3z8uXPsjMyhhQVFHQtuHmz568FD8YkpROvlLNE
4lgicSxZjQA8rxqjREa8wE3AAFEFh9zPBzNCQ8GaztYRKCOkRu7kr9QfSeic
ZLKsewoJ6JpJdnY8QZL6avnKh0j4kGnk4gbZV2bT0hCdiS0fPvzkfU8JOz09
z2WPGbMjKCnJEinysg7e+uSCk9P0aee99GkpY/VpRyckFwTOqa4x55SK2J2V
HMeDydguJvIPuDw26pb758X1aSEzkqOkAZA4Bv7gUZ9LA7WWyWPHpa710hcb
dspxjkMpK5nj7Nn70csD58sPD3veYGkgtYZJqSEEhPwahTPwgvBf+0oz8d1q
og8NKPbNnpDX8+hA4pPxKhmZ25Z43mpNxkt/+yDIH/4Z0W+YRvTTfyJpw/aT
tNeuEKM16BNV5KMzFeSDlAekT2AS0YO8jv6PhEb8RlbH3iTfnPuLDAi4T5YO
Lifx8k4eyYPcs3z/VcpZPLyMlWSZ35lz8SyyhQVz4RVLqj1O19zrffPOybdz
rgQO1Zf6TjEX30UroAZTHiUtvcLmqr4lCtsWdvPrC7En3jqZFtM7uip8EAsf
2SOUNL1khx6rsoK1sK+TbrA2GH32MCJhQNJPTPmaCe/xRNqWGZciIj4pHp3y
SurE5K5wA4/WDPWMKJ03Mfam/8RzGT+MD8iPDBx8PyWB+VGk1JxbyQsgwImN
uDJiiWJZhEY5aJltnMGTsyBtkEBIJNxBF+uYi19lDiE/ytaFPXuPIGTEdEJ+
gqIL5jLaPGEvZJbo5Y0c3Q1Ohwgvit/CgVDjNQYP80mzhxmYOio9QrxYwiBD
OsytFpt9YCBAqCPNB+G+FtQUx6i/q1izxjmMIhmbYewxH/S8eYzNJvI5yFXk
kLOcTme6+4QYXvgs8Ihf2kGwm2CzEQYTH8TI+IS9g3Dk5vjAoqAb/CiAkqB4
KIRwPQRAgMwQVaSExnIUnEyRmaCEfEOtQvzNxQCLufDV6KNMmtjAY9x5QSgY
RazCgLHMB2wYuzt6984j5eHgrHPHiS84LPMy+eyXQjLOXBaZo4G9gQwKq5+6
yrBtKTo4CPupKI0+ls1gUFpkuIaGMQXwAoT4mDbF37LLRwxpY8PIP/sv/b3u
rVMPzg46lEF8kq+TkfAKrsSTGdn7iE/a6ZTJd/4I6Jp11/u99BLJMXnw6cDA
Rz4+dG543Sizj7D6oqI6a3jElbTPGdWdmqpPi567L2Pw2awSR5sY7VnD+AFR
lTeH8RSJSvTmeCLY5+FVB1KGnF19YMwf863NLUbaLwo2ClYDVmGRCinBvOyT
PbImsLCBeeN9eAZ/Y1CsXReNjjsfeOF2xPBhR2qqxDZCZRSXLezW3zyLzNo1
lUw9N4AMuPYOeefqh+TD7CFkyG8TybDsINI9dzt51fsU2frBOXLO4Pw5wVgB
PgHcIZAQRggirxADhxvUFv79vgxBdVMOJRfIGvsUpx+F47WeRM3IIukdCsnF
Z/PJ762ySWb7i+Rmt6PV1wZ7P0rZBKnjidmW2I0ZEQ2bl9YUTU/L++lEZHLf
S5t+65ztk9G+cPjtZ/PH5La69u2F18+t2vrf88F+I0/un+YVnfLfeZgQGBhc
k5bwggP0E2vS5DLltkdzp527tnxsSlrA2Lm/ZKxVLFPSx1OieInwyVAzARUJ
eFzGEq+5GHgNCVGhV8etFrxm5PW3NDgjcnqwGC8LpCbiuhJRgbG3E/LVfkKG
8W3Cewj5XOVJ28uelwJ+AUp0lxM+8f3kWMKUPTzOkzCA1b/F3nDsB6cP02hg
YGjhnWFwHM1TWh9+E9L94P7E9nDOarh1HKI76ARf4LFkqh12UGF4tvSMeUY+
GnBfwA7Py3WRHRv+AlQp69ryKDwUUBAbXlBcXt7WXrnwqVydlDd9OwifKTER
DAHM4hPrCqBSOjIQO5i+iJXKDNfAPMMZtgwzD5KqjrDuSRFCMqA4bm1YR28s
HOsq6A1dRwYrCkzgFmJ3Re46H3IpJH5H9Q6seEpA1BjXoM9xkH5pa77WdJLw
E8sftIdC0oKnBoPaIq1xU0EsUCr83paTiyMjtSKTp72TknLTPT0vXRw/XumE
dfvTQHuJJKgXnL9ssq99AUlsWUQuNM8lh9seJZcGTiV/b6y1UMp24Jl9YqOF
CKU9aE9EPiV9o57GtoBDGSPOp+da4D/uUYkVRKX3T1eT1cZWyo1StI/YGz/W
xFKC9M4ppV9lTDj0/qUlGwamrA4YsjT6aGDv3++dnXtt0x6ZA5l93kRw4Nyq
wMDeV4uLV9wICYErfOmW5BKfnzx5y4LiYnOrgIpt823hrsBxESXZ8ZwIa1YI
3a+T64Ivv9STncF6MmmHD4MdU9HScXoS6pVGQtankRn7ysknghm5GjoKasS4
IW8YzxfgM0WLccrj3KA2RZrL7hlBciIiyOMRPHsVTiRsMKgOAJd2gal1J4vO
IWHFx1BwECsJWFmAqYiUILpr4O+NH/926Zv/ntk/ZdzFtSuHpS0I/ijba987
hR+c7Xh1aPJbWrFPcAtCe+idSPGyaSFQ4QChr7Rkj7N5grW3jmD5opsgWKwl
wkijq6HcSEM4Qp4YVnrtaYtrhYSFC8CooEXEe0CHmBGMgoSh/c4T8vZRQgby
HST2cAFViuYAaBD0izXFLsIINywdInmabmEnii3somREYUo0mBWDwsNn1J1D
VxWWjUlaZU8gRRGaKsGheNGfG9y2EHEcfws/V9IGmV75ZgNYxuzp59IZrBC4
bgo7fekiQo4ONA5ZIlFDviG+CCNIBy8oPSd4RETFg6jEzynNip8P4QipWHXk
LG5vxOKcbsUOG+Tvcu5zwH4iQbXwB3iP1IzrYp5wmaHmAJAB6OCF2KSTDfz6
HL+wil95f7oWFhde3HJ6S876P9Yf21Wzy5EyrP1g5aYxNuuNTDFtLklvC84C
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
3h4vSWVFqM1B+qhRuVYacDpXxniV64lPF0+f8XDxsNexkgqpY20dvmuYTrAB
VEDh9aAiqlTFE1wPwQqZuJJ8dPojRbH7pBtu/O9r/vKuSout1rq7vrnnw0sv
+ePvDwz4NJ4jKV33ur6GInKOYas0iIZHpJznrv/IqQPXhld34NWPLVl6yQcH
du6klPKF4qqrPO0FiUUo4+D/m9jSTNSNsgXFltuuv+FG17dW9K1nydKTlg0M
bDirKLaW5RDzY87pLn3m4mtuKG743M3FzddfW1x75+JicTnGT5SUdkKzC7at
Qzd+ePLSj65cO7D2E18vvo5nMv4Ux9/zut7PBnavWL+8p+c3J8xbUGmTJ3T+
6jMX/8WHurWgdU4GAG3UlNn6Va0IScZmSc9Xv9oz98xz7PnN/Z9ZtOzvu//k
T75RzJnDhQcfJes15f/GrtuGBbu+vqdn+S/nzjvDXlvt+8zFK57o7j6Fm/sh
aTq2XsbQB88sztx6VnHW/WcXZz9xSnEKrq25urgazPCHunu6fzI3zFj11+de
fPkTp3SfgjXC8/5Z5/h72hnwh79ZPHjm6vrov5dds+6xMzbfUY83/a3eiv2w
fvvy5f+55JKV9rJG3Lpx0/IVGtiNdqrN7BgJx7h5+/YLfrPk0lX+Ycs2bVaP
YtV6tZUVPesuKy77zkeLjz4/o5jx6pHbj8Rh5u+/7PbN6lK/Oxn24ru7uopl
q/7SDbuxWLPhvvsu/YvPS4vfDd3ua1daOxnjdJOfjcH40t1dn8NNbZn224P0
O3Ddmq41aFbJtUu7+8GdO3e+sXDp5Uk3Bm9F93x3h20n3f3DETZ+fITt0r4e
8sYbb7w896xziq5Hd7H53vmLLv7DF0zZ87sRtvN9Hbbx4yNsZ339e21+7tYH
H/qPS65c4zCqceDzN22+6Ys33yItfj/CdtLXGSNs/MQI272ofVWeqvHLV197
nTTH0KravO+z19yKIwcHrfbhTQfS+I9G2Lh7hO1+oB1WvX4rxvfyn8+dh/kv
LrryRvz/o1M/PnfZV792V/PAwIB0ofEA2h4/srY7RtZMZZbK95X7ATMMIvnU
li1b8D++6yQ1D9dg5hANnhnit5e1A/KM0j/f+v/86ad2DCVV54Whz/xgRzEz
5Ms3nbLKD/UnJBwKibblJlNLoH1MhY9rLuFXqGkgL2iQNMiNvtKekb29pYo3
4E1IcYQ3uaWpspARC8H4wSAhEa7L+3QwVWa2Y7YoHW1FA88kU3Osc4d/zf4Q
qkUVWvMrjkvTklVZyQU/ImGjRjI28bJ/JUf3kvwnOXNxGdlxmCEYT5FkTrE0
9+9jR1ibDh9JrOxKWPF6WHH1wGzyeZnxKZe+8vfplm9hGUI2Z24nV90hrX25
04+rlakn0WOQAjM9cqEbQhcbpFJSpI/wwNxLHNpKpj1fllCK1uXKCivqNoea
mKVR5YpRP+sHI0VIkI+OGbQa0xEo8jYxwz6+sbBHttK1XxlfH4EZ3LI3qQ6o
yaf15Nxm238vGQFuQ39YuKIhHYGrnYyH44Px1l0BV4qI5QeAHaaN8+3RTyEZ
7X8V1ItbsNL4O3MLPoJEz7rdqWW9G7mbFEQiEoQHJDmnHUgn5eiZOZE1pCqa
mKq13HEsDNqwLo8pkl8JHXJlTpHlj3UEFSuklTRIysOzdhuLNeEm3flxZtMp
p1jF7Pr41l2/HWuMyzcVoCuqFAmFC/Eo3KmVZjKPMrxhAVG0w89Dk7Tuy1CP
lgkj8TcrDdhMhzZYCSaDxYskjf0zSZ9ZugELxjIz9bFB63cyeTXu1WznKb0r
+9PC0qCsXINbQiru3CsUSUIKW0wLclSiW/hf839n7tPVqvxYl4kptUmndSfU
WDqSaaxEWjMSUjTnnXWRXEHfHJw0+/KtuB/7DvfnbnnSD0IOS4BPXRJy9N+I
yQnnfmktlLeTYx6Tgh5hCXOP1GmsMt8jM7bnmu5wnW2Ik5zAAA+EUJtPqb6a
5EhOt3ojCBld1Da4ZlkYsahhdzbUvgzjY701mXGTBTDbge+yI5n3MTm2Daan
Fky4dngzT6fIjr2pDFRojo6CXDDJChNxFWoQkCndkdAYN+yo7QJrV3HWSgOs
/JuOkwXvPP8QCga77esfjbfG7VsqJuTIP7kJ/fA3sVSDo6Ck//iAAlhLnfyk
bRHrv5SyDZvQ1iYU2shtl//R+5huN5QeLpTBk6kvbQUlpaQOh0BKobUYJF19
vOXJiI98KPZZiXNUtUPlNaUsFp/gwmlW8Cpz/OITeqPlT4GRrE+Fv/EKJrhV
mi1hUStzkeIOViRA55gG03W+hdVOOLNka+KTH/f9b2RhBulwUz3U0W0aOO5q
Ost2xCZMeWyyI5Ia4K2Eud9NaJq9ERoeDgPZpRwGvj/TpdhE90djqLSaPsC2
mch2kpw6R4yxsNzv4/jCr/KcatynUcTAvzPq3dEUex1+6A79sl9Za0++qbtT
5fV6PdS3hBrIJRBzPYz5vcOKxpdK+uYnyx1JSMKkYqWzJpJ/8vKG+LYSdTXx
ZK3tiStuE8kY3VGeppmVNfDNd+jbvj9VMgbsi+tKZm6Ubyft4O/GSJ6x+m3c
oVWWwuSu2xmHBVYmmSn37kAB23xvG8nOO06gyqJ9vF5EUgmKAWuKHrIsF1DO
dVR01OkuVLk+9ERhRMQbtGOv7dFkElgf5dGafocHNcYpIBcfxvT7SMkh97g5
U4VKDOXdgsbpZq00oyELfpDzx4zoQSOcQGn3OyEMZ2GQdr+hA/mlAq5fZ19Z
Cu/A852IF8hZjiJ7NGaeugePR5IyHu9FY9SJkWP16fggzGA8lDQ7OwtRJX0U
GV/nONaexjfdm62sn4BvFCpZSgu/SVuNR2/CJHD2An8vnWrQarmsVsNKizI1
j/oZExnB12NStUDsUFgqNiCnIm1E6dMg525jWGN8TLjBelAcIPOEdsLmbUs6
woGjQzHZPn5rjlsbHaHmSn4zDRfZCvm2M+6YkJ7dUO7f9ScMOKXVlohWBKVE
HxiJogj6QLyALAfxXPmG9J/hVZKVN/0vCNww0Q==\
\>"],ExpressionUUID->"169cd92a-bfdf-4830-8dc6-6f96f10a8f42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"StirlingS2", "[", 
    RowBox[{"5", ",", "k"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7031603452749515`*^9, 
  3.7031603969705143`*^9}},ExpressionUUID->"35874dcb-0a1f-431f-bc6f-\
d1b0b45a4b29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "15", ",", "25", ",", "10", ",", "1", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.7031603573025303`*^9, 
  3.703160397528922*^9}},ExpressionUUID->"19c8a55e-4bee-4fa9-af4f-\
b39f57f6fbee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Looking at the claw", "Section",
 CellChangeTimes->{{3.703155663893401*^9, 
  3.7031556687853055`*^9}},ExpressionUUID->"4cd83847-63f2-4d49-bfa8-\
a1bc481528a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Mingle", "[", 
   RowBox[{"c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{"RGBColor", "[", 
   RowBox[{
    RowBox[{"Mean", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Mean", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Mean", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7031559817547655`*^9, 3.7031560243666143`*^9}, {
  3.7031561031568346`*^9, 3.7031561423665514`*^9}, {3.703156283360086*^9, 
  3.7031563289910107`*^9}},ExpressionUUID->"4ba20206-f80c-4b9d-a77e-\
2c861e0ce94f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Mingle2", "[", 
   RowBox[{"c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{"RGBColor", "[", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Total", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Total", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"c2", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7031564515251155`*^9, 
  3.703156462031423*^9}},ExpressionUUID->"104f17fb-11e3-4792-b073-\
16038b6f7cfc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Traverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "4", "}"}], ",", 
       RowBox[{"{", "5", "}"}]}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.699107632911731*^9, 3.699107638709539*^9}, {
  3.703155626304517*^9, 3.70315563133796*^9}, {3.703160925177738*^9, 
  3.703160927944463*^9}, {3.703161326822959*^9, 
  3.7031613270149636`*^9}},ExpressionUUID->"f204d444-b22d-4fc9-9a83-\
a1e406ef1583"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Traverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "4", "}"}], ",", 
       RowBox[{"{", "5", "}"}]}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6991076150688367`*^9, 3.6991076183053474`*^9}, {
   3.7031556335761023`*^9, 3.7031556374033136`*^9}, 3.7031609334537134`*^9, {
   3.703161330261032*^9, 
   3.703161330448386*^9}},ExpressionUUID->"b04474c4-8da2-4ddc-8ddd-\
39741eb2fd18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Traverse", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "5", "}"}]}], "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.699107685010203*^9, 3.6991076906841745`*^9}, 
   3.6991078210247145`*^9, {3.699112596557989*^9, 3.69911260351163*^9}, {
   3.6991283707197733`*^9, 3.699128395358556*^9}, {3.703155639603798*^9, 
   3.7031556451032295`*^9}, {3.703160799521591*^9, 3.703160803038233*^9}, 
   3.703160865313142*^9, 3.703160934560842*^9, {3.7031611507190876`*^9, 
   3.7031611624504013`*^9}, {3.7031613338417006`*^9, 
   3.703161334061582*^9}},ExpressionUUID->"c67432af-f6e7-492d-96dd-\
abafa5e1c267"],

Cell[BoxData[
 RowBox[{"Clear", "[", "g4", "]"}]], "Input",
 CellChangeTimes->{{3.70315565355802*^9, 3.7031556596030846`*^9}, {
  3.7031607801682787`*^9, 
  3.7031607932109194`*^9}},ExpressionUUID->"004a3587-0c2b-47e3-bcc0-\
9698bd9e99d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"g1", ",", "g2", ",", "g3"}], "]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", " ", "\[Rule]", 
        RowBox[{"Rotate", "[", 
         RowBox[{
          RowBox[{"SymbolToLabel", "[", " ", 
           RowBox[{"SetsToSymbol", "[", "#", "]"}], "]"}], ",", 
          RowBox[{"Pi", "/", "4"}]}], "]"}]}], "&"}], ",", 
      RowBox[{"VertexList", "[", 
       RowBox[{"Graph", "[", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"g1", ",", "g2", ",", "g3"}], "]"}], "]"}], "]"}], "]"}]}], 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"EdgeStyle", "\[Rule]", 
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", "Cyan"}], "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{"g1", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"g2", ",", "g3"}], "]"}], ",", "#"}], "]"}]}], "&"}]}],
          "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", "Red"}], "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{"g2", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"g1", ",", "g3"}], "]"}], ",", "#"}], "]"}]}], "&"}]}],
          "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", "Yellow"}], "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{"g3", ",", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"g2", ",", "g1"}], "]"}], ",", "#"}], "]"}]}], "&"}]}],
          "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"Mingle", "[", 
           RowBox[{"Cyan", ",", "Red"}], "]"}]}], "&"}], ",", 
        RowBox[{"Intersection", "[", 
         RowBox[{"g1", ",", "g2"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"Mingle", "[", 
           RowBox[{"Cyan", ",", "Yellow"}], "]"}]}], "&"}], ",", 
        RowBox[{"Intersection", "[", 
         RowBox[{"g1", ",", "g3"}], "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"Mingle", "[", 
           RowBox[{"Red", ",", "Yellow"}], "]"}]}], "&"}], ",", 
        RowBox[{"Intersection", "[", 
         RowBox[{"g2", ",", "g3"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "1200"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.703155700085391*^9, 3.7031557089053335`*^9}, {
   3.703155779417599*^9, 3.7031559402826977`*^9}, {3.7031561529802837`*^9, 
   3.7031562118940105`*^9}, {3.7031563810173893`*^9, 3.70315641562883*^9}, {
   3.703156505862758*^9, 3.703156507493411*^9}, 3.703158367033031*^9, 
   3.703158430567705*^9, {3.703158897011432*^9, 3.7031589054832845`*^9}, {
   3.7031608104747143`*^9, 
   3.7031608296664405`*^9}},ExpressionUUID->"bb2cc9ef-cb10-4ab8-967a-\
c46b4fed7636"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{3}, {4}, {5}, {1, 2}}, {{5}, {1, 2}, {3, 4}}, {{3, 4}, {1, 2, 
        5}}, {{1, 2, 3, 4, 
       5}}, {{1, 2}, {3, 4, 5}}, {{5}, {1, 2, 3, 4}}, {{4}, {1, 2}, {3, 
        5}}, {{3, 5}, {1, 2, 4}}, {{4}, {1, 2, 3, 5}}, {{4}, {5}, {1, 2, 
        3}}, {{4, 5}, {1, 2, 3}}, {{3}, {1, 2}, {4, 5}}, {{3}, {1, 2, 4, 
        5}}, {{3}, {5}, {1, 2, 4}}, {{3}, {4}, {1, 2, 5}}, {{2}, {4}, {5}, {1,
         3}}, {{5}, {1, 3}, {2, 4}}, {{2, 4}, {1, 3, 5}}, {{1, 3}, {2, 4, 
        5}}, {{4}, {1, 3}, {2, 5}}, {{2, 5}, {1, 3, 4}}, {{2}, {1, 3}, {4, 
        5}}, {{2}, {1, 3, 4, 5}}, {{2}, {5}, {1, 3, 4}}, {{2}, {4}, {1, 3, 
        5}}, {{2}, {3}, {5}, {1, 4}}, {{5}, {1, 4}, {2, 3}}, {{2, 3}, {1, 4, 
        5}}, {{1, 4}, {2, 3, 5}}, {{3}, {1, 4}, {2, 5}}, {{2}, {1, 4}, {3, 
        5}}, {{2}, {3}, {1, 4, 5}}}, {{{1, 2}, {2, 3}, {3, 4}, {2, 5}, {5, 
       4}, {2, 6}, {6, 4}, {1, 7}, {7, 8}, {8, 4}, {7, 5}, {7, 9}, {9, 4}, {1,
        10}, {10, 11}, {11, 4}, {10, 6}, {10, 9}, {1, 12}, {12, 11}, {12, 
       5}, {12, 13}, {13, 4}, {1, 14}, {14, 8}, {14, 6}, {14, 13}, {1, 15}, {
       15, 3}, {15, 9}, {15, 13}, {16, 17}, {17, 18}, {18, 4}, {17, 19}, {19, 
       4}, {17, 6}, {16, 20}, {20, 21}, {21, 4}, {20, 19}, {20, 9}, {16, 
       10}, {16, 22}, {22, 11}, {22, 19}, {22, 23}, {23, 4}, {16, 24}, {24, 
       21}, {24, 6}, {24, 23}, {16, 25}, {25, 18}, {25, 9}, {25, 23}, {26, 
       27}, {27, 28}, {28, 4}, {27, 29}, {29, 4}, {27, 6}, {26, 30}, {30, 
       21}, {30, 29}, {30, 13}, {26, 14}, {26, 31}, {31, 8}, {31, 29}, {31, 
       23}, {26, 24}, {26, 32}, {32, 28}, {32, 13}, {32, 23}}, Null}, {
      EdgeStyle -> {
        DirectedEdge[{{3}, {1, 2}, {4, 5}}, {{1, 2}, {3, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{4}, {1, 3}, {2, 5}}, {{4}, {1, 2, 3, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{3}, {5}, {1, 2, 4}}, {{3}, {1, 2, 4, 5}}] -> RGBColor[
           Rational[1, 2], 1, 
           Rational[1, 2]], 
         DirectedEdge[{{2, 4}, {1, 3, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{4}, {1, 2}, {3, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{5}, {1, 4}, {2, 3}}, {{5}, {1, 2, 3, 4}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{3}, {1, 2}, {4, 5}}, {{3}, {1, 2, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {1, 3}, {4, 5}}, {{1, 3}, {2, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{5}, {1, 3}, {2, 4}}, {{2, 4}, {1, 3, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{3}, {4}, {1, 2, 5}}, {{3}, {1, 2, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{2}, {3}, {1, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{2}, {1, 4}, {3, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2, 5}, {1, 3, 4}}, {{1, 2, 3, 4, 5}}] -> RGBColor[1, 
           Rational[1, 2], 0], 
         DirectedEdge[{{5}, {1, 3}, {2, 4}}, {{5}, {1, 2, 3, 4}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {5}, {1, 3, 4}}, {{2}, {1, 3, 4, 5}}] -> 
         RGBColor[1, 
           Rational[1, 2], 0], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{3}, {1, 2}, {4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{1, 3}, {2, 4, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{2}, {4}, {1, 3, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{3}, {5}, {1, 2, 4}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{5}, {1, 2, 3, 4}}, {{1, 2, 3, 4, 5}}] -> RGBColor[1, 
           Rational[1, 2], 0], 
         DirectedEdge[{{2}, {5}, {1, 3, 4}}, {{2, 5}, {1, 3, 4}}] -> 
         RGBColor[1, 
           Rational[1, 2], 0], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{2}, {1, 3}, {4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{3}, {1, 4}, {2, 5}}, {{3}, {1, 2, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{3}, {4}, {1, 2, 5}}, {{4}, {1, 2, 3, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {3}, {1, 4, 5}}, {{3}, {1, 2, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{4}, {5}, {1, 2, 3}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {5}, {1, 3, 4}}, {{5}, {1, 2, 3, 4}}] -> 
         RGBColor[1, 
           Rational[1, 2], 0], 
         DirectedEdge[{{2}, {4}, {1, 3, 5}}, {{2}, {1, 3, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{5}, {1, 4}, {2, 3}}, {{1, 4}, {2, 3, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {4}, {1, 3, 5}}, {{4}, {1, 2, 3, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{4, 5}, {1, 2, 3}}, {{1, 2, 3, 4, 5}}] -> RGBColor[
           Rational[1, 2], 
           Rational[1, 2], 
           Rational[1, 2]], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{2}, {5}, {1, 3, 4}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {4}, {1, 3, 5}}, {{2, 4}, {1, 3, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{5}, {1, 2}, {3, 4}}, {{3, 4}, {1, 2, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{4}, {1, 2, 3, 5}}, {{1, 2, 3, 4, 5}}] -> RGBColor[
           Rational[1, 2], 
           Rational[1, 2], 
           Rational[1, 2]], 
         DirectedEdge[{{5}, {1, 3}, {2, 4}}, {{1, 3}, {2, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {1, 3}, {4, 5}}, {{4, 5}, {1, 2, 3}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{4}, {1, 3}, {2, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{3}, {1, 2}, {4, 5}}, {{4, 5}, {1, 2, 3}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{3, 5}, {1, 2, 4}}, {{1, 2, 3, 4, 5}}] -> RGBColor[
           Rational[1, 2], 1, 
           Rational[1, 2]], 
         DirectedEdge[{{3, 4}, {1, 2, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{3}, {5}, {1, 2, 4}}, {{3, 5}, {1, 2, 4}}] -> RGBColor[
           Rational[1, 2], 1, 
           Rational[1, 2]], 
         DirectedEdge[{{5}, {1, 4}, {2, 3}}, {{2, 3}, {1, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{4}, {1, 2}, {3, 5}}, {{4}, {1, 2, 3, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{4}, {5}, {1, 2, 3}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{1, 2}, {3, 4, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {3}, {1, 4, 5}}, {{2}, {1, 3, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{5}, {1, 2}, {3, 4}}, {{1, 2}, {3, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{3}, {4}, {1, 2, 5}}, {{3, 4}, {1, 2, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{3}, {1, 4}, {2, 5}}, {{2, 5}, {1, 3, 4}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{4}, {1, 2}, {3, 5}}, {{1, 2}, {3, 4, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{3}, {5}, {1, 2, 4}}, {{5}, {1, 2, 3, 4}}] -> RGBColor[
           Rational[1, 2], 1, 
           Rational[1, 2]], 
         DirectedEdge[{{5}, {1, 2}, {3, 4}}, {{5}, {1, 2, 3, 4}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{4}, {5}, {1, 2, 3}}, {{4, 5}, {1, 2, 3}}] -> RGBColor[
           Rational[1, 2], 
           Rational[1, 2], 
           Rational[1, 2]], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{5}, {1, 4}, {2, 3}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {1, 4}, {3, 5}}, {{3, 5}, {1, 2, 4}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2, 3}, {1, 4, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {4}, {5}, {1, 3}}, {{5}, {1, 3}, {2, 4}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{3}, {4}, {1, 2, 5}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{2}, {1, 3}, {4, 5}}, {{2}, {1, 3, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{4}, {1, 3}, {2, 5}}, {{2, 5}, {1, 3, 4}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{3}, {1, 4}, {2, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{3}, {5}, {1, 2, 4}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {1, 4}, {3, 5}}, {{2}, {1, 3, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{3}, {4}, {5}, {1, 2}}, {{5}, {1, 2}, {3, 4}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{1, 4}, {2, 3, 5}}, {{1, 2, 3, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{2}, {3}, {1, 4, 5}}, {{2, 3}, {1, 4, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{4}, {5}, {1, 2, 3}}, {{4}, {1, 2, 3, 5}}] -> RGBColor[
           Rational[1, 2], 
           Rational[1, 2], 
           Rational[1, 2]], 
         DirectedEdge[{{4}, {1, 2}, {3, 5}}, {{3, 5}, {1, 2, 4}}] -> 
         RGBColor[0, 1, 1], 
         DirectedEdge[{{4}, {1, 3}, {2, 5}}, {{1, 3}, {2, 4, 5}}] -> 
         RGBColor[1, 0, 0], 
         DirectedEdge[{{2}, {3}, {5}, {1, 4}}, {{2}, {5}, {1, 3, 4}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{3}, {1, 2, 4, 5}}, {{1, 2, 3, 4, 5}}] -> RGBColor[
           Rational[1, 2], 1, 
           Rational[1, 2]], 
         DirectedEdge[{{3}, {1, 4}, {2, 5}}, {{1, 4}, {2, 3, 5}}] -> 
         RGBColor[1, 1, 0], 
         DirectedEdge[{{4}, {5}, {1, 2, 3}}, {{5}, {1, 2, 3, 4}}] -> RGBColor[
           Rational[1, 2], 
           Rational[1, 2], 
           Rational[1, 2]], 
         DirectedEdge[{{2}, {1, 3, 4, 5}}, {{1, 2, 3, 4, 5}}] -> RGBColor[1, 
           Rational[1, 2], 0], 
         DirectedEdge[{{2}, {1, 4}, {3, 5}}, {{1, 4}, {2, 3, 5}}] -> 
         RGBColor[1, 1, 0]}, GraphLayout -> "LayeredDigraphEmbedding", 
       ImageSize -> 1200, VertexLabels -> {{{5}, {1, 3}, {2, 4}} -> Rotate[
           Row[{"5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "13", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "24"}], Rational[1, 4] Pi], {{1, 4}, {2, 3, 
           5}} -> Rotate[
           Row[{"14", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "235"}], Rational[1, 4] Pi], {{2}, {1, 3}, {
           4, 5}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "13", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "45"}], Rational[1, 4] Pi], {{4, 5}, {1, 2, 
           3}} -> Rotate[
           Row[{"45", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "123"}], Rational[1, 4] Pi], {{3}, {5}, {1, 
           2, 4}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "124"}], Rational[1, 4] Pi], {{3}, {4}, {
           5}, {1, 2}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "12"}], Rational[1, 4] Pi], {{3}, {1, 2, 4, 
           5}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "1245"}], Rational[1, 4] Pi], {{2}, {3}, {
           5}, {1, 4}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "14"}], Rational[1, 4] Pi], {{3, 4}, {1, 2, 
           5}} -> Rotate[
           Row[{"34", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "125"}], Rational[1, 4] Pi], {{4}, {1, 2, 3,
            5}} -> Rotate[
           Row[{"4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "1235"}], Rational[1, 4] Pi], {{2}, {4}, {1,
            3, 5}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "135"}], Rational[1, 4] Pi], {{5}, {1, 4}, {
           2, 3}} -> Rotate[
           Row[{"5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "14", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "23"}], Rational[1, 4] Pi], {{4}, {5}, {1, 
           2, 3}} -> Rotate[
           Row[{"4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "123"}], Rational[1, 4] Pi], {{3, 5}, {1, 2,
            4}} -> Rotate[
           Row[{"35", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "124"}], Rational[1, 4] Pi], {{1, 3}, {2, 4,
            5}} -> Rotate[
           Row[{"13", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "245"}], Rational[1, 4] Pi], {{5}, {1, 2}, {
           3, 4}} -> Rotate[
           Row[{"5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "12", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "34"}], Rational[1, 4] Pi], {{2}, {5}, {1, 
           3, 4}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "134"}], Rational[1, 4] Pi], {{2}, {4}, {
           5}, {1, 3}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "13"}], Rational[1, 4] Pi], {{3}, {1, 4}, {
           2, 5}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "14", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "25"}], Rational[1, 4] Pi], {{2}, {3}, {1, 
           4, 5}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "145"}], Rational[1, 4] Pi], {{1, 2, 3, 4, 
          5}} -> Rotate[
           Row[{"12345"}], Rational[1, 4] Pi], {{2}, {1, 3, 4, 5}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "1345"}], Rational[1, 4] Pi], {{5}, {1, 2, 
           3, 4}} -> Rotate[
           Row[{"5", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "1234"}], Rational[1, 4] Pi], {{2, 5}, {1, 
           3, 4}} -> Rotate[
           Row[{"25", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "134"}], Rational[1, 4] Pi], {{1, 2}, {3, 4,
            5}} -> Rotate[
           Row[{"12", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "345"}], Rational[1, 4] Pi], {{3}, {1, 2}, {
           4, 5}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "12", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "45"}], Rational[1, 4] Pi], {{4}, {1, 2}, {
           3, 5}} -> Rotate[
           Row[{"4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "12", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "35"}], Rational[1, 4] Pi], {{2, 3}, {1, 4, 
           5}} -> Rotate[
           Row[{"23", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "145"}], Rational[1, 4] Pi], {{4}, {1, 3}, {
           2, 5}} -> Rotate[
           Row[{"4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "13", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "25"}], Rational[1, 4] Pi], {{2, 4}, {1, 3, 
           5}} -> Rotate[
           Row[{"24", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "135"}], Rational[1, 4] Pi], {{3}, {4}, {1, 
           2, 5}} -> Rotate[
           Row[{"3", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "4", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "125"}], Rational[1, 4] Pi], {{2}, {1, 4}, {
           3, 5}} -> Rotate[
           Row[{"2", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "14", 
             Style["|", Bold, 
              RGBColor[1, 0, 0]], "35"}], Rational[1, 4] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.013892470336576885`], 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {-2.655357812478769, 2.}}, 0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {-1.6553578079675617`, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {1.3446421987800363`, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {0.34464219635469817`, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {2.3446421990928457`, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0., 3.}, {-0.6553578060471636, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-2.655357812478769, 2.}, {-2.6553578090767473`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-2.655357812478769, 2.}, {-1.6553578084765945`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-2.655357812478769, 2.}, {3.344642200779674, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-2.6553578090767473`, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-1.6553578084765945`, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 
          Rational[1, 2], 0], 
         ArrowBox[{{3.344642200779674, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-1.6553578079675617`, 2.}, {-1.6553578084765945`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-1.6553578079675617`, 2.}, {1.3446421978629246`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-1.6553578079675617`, 2.}, {-0.6553578049065436, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[
          Rational[1, 2], 1, 
          Rational[1, 2]], 
         ArrowBox[{{1.3446421978629246`, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 2]], 
         ArrowBox[{{-0.6553578049065436, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 2]], 
         ArrowBox[{{1.3446421987800363`, 2.}, {3.344642200779674, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 2]], 
         ArrowBox[{{1.3446421987800363`, 2.}, {-0.6553578049065436, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 2]], 
         ArrowBox[{{1.3446421987800363`, 2.}, {0.34464219934591256`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[
          Rational[1, 2], 
          Rational[1, 2], 
          Rational[1, 2]], 
         ArrowBox[{{0.34464219934591256`, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0.34464219635469817`, 2.}, {-1.6553578084765945`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0.34464219635469817`, 2.}, {0.34464219934591256`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{0.34464219635469817`, 2.}, {2.3446421991677653`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[
          Rational[1, 2], 1, 
          Rational[1, 2]], 
         ArrowBox[{{2.3446421991677653`, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[
          Rational[1, 2], 1, 
          Rational[1, 2]], 
         ArrowBox[{{2.3446421990928457`, 2.}, {3.344642200779674, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[
          Rational[1, 2], 1, 
          Rational[1, 2]], 
         ArrowBox[{{2.3446421990928457`, 2.}, {1.3446421978629246`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[
          Rational[1, 2], 1, 
          Rational[1, 2]], 
         ArrowBox[{{2.3446421990928457`, 2.}, {2.3446421991677653`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-0.6553578060471636, 2.}, {-2.6553578090767473`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-0.6553578060471636, 2.}, {-0.6553578049065436, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[0, 1, 1], 
         ArrowBox[{{-0.6553578060471636, 2.}, {2.3446421991677653`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.786556431557642, 3.}, {1.3446421987800363`, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.786556431557642, 3.}, {3.344642199351142, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.786556431557642, 3.}, {5.344642198411577, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.786556431557642, 3.}, {6.344642201457134, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.786556431557642, 3.}, {7.344642203462286, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.786556431557642, 3.}, {4.344642202091052, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.344642199351142, 2.}, {3.344642200779674, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.344642199351142, 2.}, {4.344642199724774, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{3.344642199351142, 2.}, {5.344642197675853, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.344642199724774, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{5.344642197675853, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{5.344642198411577, 2.}, {-0.6553578049065436, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{5.344642198411577, 2.}, {5.344642197675853, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{5.344642198411577, 2.}, {6.344642197828591, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 
          Rational[1, 2], 0], 
         ArrowBox[{{6.344642197828591, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{6.344642201457134, 2.}, {0.34464219934591256`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{6.344642201457134, 2.}, {5.344642197675853, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{6.344642201457134, 2.}, {7.344642199171517, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 
          Rational[1, 2], 0], 
         ArrowBox[{{7.344642199171517, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 
          Rational[1, 2], 0], 
         ArrowBox[{{7.344642203462286, 2.}, {3.344642200779674, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 
          Rational[1, 2], 0], 
         ArrowBox[{{7.344642203462286, 2.}, {6.344642197828591, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 
          Rational[1, 2], 0], 
         ArrowBox[{{7.344642203462286, 2.}, {7.344642199171517, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.344642202091052, 2.}, {-0.6553578049065436, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.344642202091052, 2.}, {4.344642199724774, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.344642202091052, 2.}, {7.344642199171517, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.664785725728905, 3.}, {2.3446421990928457`, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.664785725728905, 3.}, {7.344642203462286, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.664785725728905, 3.}, {11.344642204531567`, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.664785725728905, 3.}, {8.344642202195075, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.664785725728905, 3.}, {9.344642201435704, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.664785725728905, 3.}, {10.344642203528053`, 2.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{11.344642204531567`, 2.}, {3.344642200779674, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{11.344642204531567`, 2.}, {10.344642203409762`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{11.344642204531567`, 2.}, {8.889970905798464, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{10.344642203409762`, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.889970905798464, 1.}, {3.3446421972577696`, 0.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.344642202195075, 2.}, {2.3446421991677653`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.344642202195075, 2.}, {6.344642197828591, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{8.344642202195075, 2.}, {8.889970905798464, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{9.344642201435704, 2.}, {1.3446421978629246`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{9.344642201435704, 2.}, {7.344642199171517, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{9.344642201435704, 2.}, {8.889970905798464, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{10.344642203528053`, 2.}, {2.3446421991677653`, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{10.344642203528053`, 2.}, {7.344642199171517, 1.}}, 
          0.07779783397935679]}, 
        {RGBColor[1, 1, 0], 
         ArrowBox[{{10.344642203528053`, 2.}, {10.344642203409762`, 1.}}, 
          0.07779783397935679]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 3.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"12\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {0.07779783397935679, 3.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.655357812478769, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"5\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"12\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"34\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {-2.5775599784994125, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.6553578090767473, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"34\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"125\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {-2.5775599750973908, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3446421972577696, 0.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"12345\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {3.422440031237126, 0.07779783397935679}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.6553578084765945, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"12\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"345\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {-1.5775599744972377, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.344642200779674, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"5\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"1234\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {3.4224400347590307, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.6553578079675617, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"4\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"12\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"35\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {-1.577559973988205, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.3446421978629246, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"35\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"124\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {1.4224400318422814, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.6553578049065436, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"4\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"1235\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {-0.5775599709271868, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.3446421987800363, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"4\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"123\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {1.4224400327593931, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.34464219934591256, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"45\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"123\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {0.42244003332526936, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.34464219635469817, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"12\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"45\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {0.422440030334055, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.3446421991677653, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"1245\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {2.422440033147122, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.3446421990928457, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"124\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {2.4224400330722022, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.6553578060471636, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"125\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {-0.5775599720678068, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.786556431557642, 3.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"13\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], Offset[{2, 2}, 
          {4.864354265536999, 3.0777978339793566}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.344642199351142, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"5\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"13\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"24\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {3.4224400333304987, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.344642199724774, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"24\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"135\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {4.422440033704131, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.344642197675853, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"245\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {5.42244003165521, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.344642198411577, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"4\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"13\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"25\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {5.422440032390934, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.344642197828591, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"25\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"134\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {6.422440031807948, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.344642201457134, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"13\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"45\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {6.422440035436491, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.344642199171517, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"1345\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {7.422440033150874, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.344642203462286, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"134\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {7.422440037441643, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.344642202091052, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"4\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"135\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {4.422440036070409, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.664785725728905, 3.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"3\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"5\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"14\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {8.742583559708262, 3.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.344642204531567, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"5\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"14\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"23\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {11.422440038510924, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.344642203409762, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"23\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"145\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {10.42244003738912, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.889970905798464, 1.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"14\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"235\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {8.96776873977782, 1.0777978339793568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.344642202195075, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"3\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"14\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"25\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {8.422440036174432, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.344642201435704, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"14\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"35\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {9.422440035415061, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.344642203528053, 2.}, 0.07779783397935679], InsetBox[
          RotationBox[
           TemplateBox[{"\"2\"",StyleBox["\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"3\"",StyleBox[
             "\"|\"", Bold, 
              RGBColor[1, 0, 0], StripOnInput -> False],"\"145\""},
            "RowDefault"],
           BoxRotation->0.7853981633974483], 
          Offset[{2, 2}, {10.42244003750741, 2.0777978339793566}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->1200]], "Output",
 CellChangeTimes->{
  3.703155727453031*^9, {3.703155795637068*^9, 3.7031558620493584`*^9}, {
   3.703155903078521*^9, 3.7031559412175536`*^9}, 3.703156213029291*^9, 
   3.7031563360216312`*^9, {3.7031563915632925`*^9, 3.7031564166430645`*^9}, 
   3.703156508159727*^9, 3.703158431317709*^9, 3.7031589081588144`*^9, {
   3.7031608062501554`*^9, 3.7031608306620436`*^9}, 3.7031608689159913`*^9, 
   3.7031609379640465`*^9, 3.7031611666084957`*^9, 
   3.703161339244022*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfXucjdX+//7Onvu43++3xKRiUm6JUVJTjkuUJpQR1ZBQUegyUggVjlwy
aggzHOQSplA0LqM6c6ZISEwaxcRpcpqaRurz2++11ufZa+9Zz55nz/jz16s9
9uW5rGe9P+vz/tzWWn2GT0h+5InhE0aNGN7szqeGj08eNeLpZneMe8rzlfv/
XK7QTS7X/93SzIX35HLxH/L87/9nK/7ggP//0///qQI/ucUXodcfOnQoITMz
E/+Gl5SUeA/Y4H+GKwoHjF267O3j8bf1Op340GMXH3liCv491vOOu2e8OmtO
TFFRkXbCOu0Kf4v37joFBQU7hj38aNFTL7zmCqOVW//tcpdMmbEk+/7Bw5qf
OnVKO/tfpc9enzz6CZq9ZIM4L1yeTQtX7cDZfvdeq539lzy777bt2y88Ou45
cV6kuvezL7/5whvz5osjvGevKX321uEjH6M33t6in01pm7IPJ/Tuh36xOfsC
/oR0y8Ilrj9E1PyU6swYeVmcikvgUq5oedlvByaqzvAcESn+RrQmOnY90aG+
RJsfIEqfSDR7BtHkRkT52q2X+N/a5X5kKdHxVkQ57T2fQsTfqANdiFYNIUod
SfT6U0QPvkv0QDpR+xwitLJOAY6V5zfKz88/0f++IaJtsoURBUnJT3fLysqq
TvQzWtWZKButmkA0xxWSSjTSFXqAqEuOvGT7L4jaub8hutrl/oroWjyMX48v
Lt3wHsd+/PFU38OHf7nl8GFXpPz7c/uTJwuuO3fu9E3y9W2Xc+dSFp0795+7
+/SnZev3qh483f/e+7bkn+hzkv5s4Qq/QH/VDP+F/qzqchfSn9WW0plHGtHF
wN0WVv3333//aN7mzcXD09P/SPK8hq9e7QoteSQtzRV9KTk19dLjb71lvca8
9davk//5zy/mv/POhP3796c/Me4pmvHmmiglqJ6GfXl37z6LaOuo47Su1c90
vHoJ/S885BL9HuYuod/DPYJIxeF/UHEEXq4Q8dd9kQqrzKF9E/y6Sm/sT7Kx
kKrO2UTTU0+ezHvpnXf+fHbOHFfkX8/g72XP++Ln58w5O2veG5+/9e5bC7Z/
vX1KFmX1yTqUhcErGxmJkTFp25w5U2l6ykpaOPQIzW9zjlLr/k7/ifqT/hsa
8RcVhbiiL9Nv7j/ovxHH6XyrHfRXrzlEE6YSpQD9BKJMSAOkwtvcf2rNPSNF
n5sLkZsynWj+WKIP7/AM2kGewXM/0aZ+nqsMPny45Kk333SFiceo9Nezc2Zf
njzn1ZIX58z89ZU3Zl6Y9fasb/+545873r347rLNtLl5IRXi6i+/Nm/ub6Mn
TIsQj1WJnp+VumbsmHH4qSft2rWeBg78hO7v/gONbXCBnq/5K71WqZj2RF6m
n9x/0a8hoeIxq/9Fv4X8SN/UX0TFo1YQPbSVqPc7RMMXEyXPJxr7FtGj+H4L
UR+7LtAgm6P1gRzWnUx9sKUP0dJHPIMhmWjBGKIVD8nvlo0gmjr90qUX3snP
T9mSk7No8/btv06ePx998tekOa/+PXnOzL+fmzP97xfmvHw5Zc7Lf0x7/eXC
V5e++sNr/3rt86VfL92STunzt9P26r/T7zGX6NLIHMoZcLjkMHT5qUFDRtLL
81fRkjUfo8sgrJDd/CEPP77g+Renji+aOzeBMjPR6vaUk5NBiYnbqP/dX9GI
a8/TU7WKaFJMCc0I/5O2hF6m7z2d+EuIyy16MeYnOlp7Bu2a/AAdTu9IBZ+i
ZwYSrR9HNA+9ht5bRDTqDaInXSFTPPLrin6W6FUotrJ619u5r2idK9VKpF3n
4t/pnvuEvDDNc1ijRaOIMhJl/+KwpNWXLg3Zk5//+IGcnPnbt2/PWLdu3RSP
mhvw9bGvn917Ye9vT362+O8XZk9DP/9l9fVrL1+cuWRmwZxVc44v2L0gc+Xv
K9HfU3fTbvR132N0LGMdrUP/S40a2/rYsWPLJj47Jbv/wEHfxN96O5TXqrHj
n26fk5ODIxpRfj7kdA5NmNCajh1rTqdOraCHPN3Rpw9kN5+eaPRferrGbzQp
+g96JeJP2ugR2xMhf9OF//ubfv2/H+hUgz50cAu6Hd2/hdL7MAzX07lD8h6U
z1ob3buMaMR6ooHo+hAPK6S6KnkG41r8PJpoYXCIvKAhIu7mahkIEXx+bImH
NDzEMdYzumZM9oUF53TMvXTp1m/y80fm+ELT19OXzQsLC8MvX77c7fTp0xP3
7du3NW3dv357YnvqXy/Mn/7n1Dkvl0yb8/L/Zrw546fZK2efeW3dawdST6aG
ACOXe9xBOtjpDJ1ZtNVjIanvrj9H51xs80gzyY2u8/uu4UhKTQUkeE2k2bNb
0fHjy2jECHzmEXKOxtf9mSZUL6YpkX/QSxGXaG3Yn3Qk9Cc6VXs1fTB4JOWk
NqdCoRMAjS1kUnTqhhOVsBnAuPAowvgBJh6Gz4kn2oN/g8FP01fPaAD+W7y/
piwA8f1d24kGbJDvTSAK06Lw0qXO+fZA4m46mPgd/+Jz3fOXLy9949jX52Yv
eq1o+j+nn5+9Yva5OenWuGMEnzxABzD+xCf1HSjPH1X0/DLaPEKawtLQiqGi
Ih5seEHfDabVq9+kxx/3XMvzjasyD8ICerLOL/RM1T9oSsTXNO+au+mPbXWo
qKAvHds8n7aPxbUthCWCEQFRlm2o5z84gS6QA4pAE+gDNUgDbKlgkfYCPU4D
+oB438gJ0Pj9ps+9x9mBHVPkeV0KDLjqFzvM8b3CK6znyZMnN2ZszzjrwZwH
MuO7bTWtnpdJmfKT/Lt+La0F52n4uoEN+l1YgGH83ebNjLfCOHoJPfbYW/To
o/y9PqJ/pAn102n1A+3pxxzZtHA72N0OUA8Xx0QDHaAE7QsUoY6hlhlBSAQk
Q3ZY5fIArw3xZA35PeJ9E6fI4zh4CE7Qx5XLkgC3AwkIYwmgk7D2dr676913
N+zboI/6/cto2Qfv0rviU6j87oHDdNga9UoCGAPAxRIQTiUl82nsWIF9qPgb
lUkJCTuoVy+WAIz6HbSo1/v09D+m0PTpoGV1vi38oQ7gj5BGcR2iAsYTqtxu
0McQFakBUVEZGK7JwA7xvk4wMoAznMqBFNrIskQh1IEoqOHCogAKr1NERa3P
nz/f+jydB/CfvEPvnJhP83etoBVhUhJWbKSN4ZfpsiYJoeF0uWQ9rR0ISKZQ
1nR5ZXdnys621IEUhujP6aabcikubhvdfTcoIYYuFbWm88dwLASHBSI8sDyE
OZCHKLM6yCBKBLZ4D0y7EWU197gTYVdEFAZrorDV3kuzFQWJb7RTcXA7E4cw
B+Igh0+ovzio+FbcWTp7fAEtOP0GvfHhSloZLqWhcz7CJj56IRTaHGDglUHr
EuWFo4EsSwNeW4t79y5IqFNnT258/EHq1CmfGjXaTnfdpa7iLxARgQUi3IFA
REs8ONjC4R/4oYwuPCp4VpaCCL8iUjFQk4r3yiEV7uCkItSZVIQ7kIpIs1Qw
4R+n4/vfpre3raJVLiUSM3bRLkskFN0AJRYJvIQhp4Y4wPWXieMprVpJ+8EN
5thJt99ehwoK1OVKyUZkYNmIcCAblWQPA+eeRLuGES03KQv8hmMir4hY/EMT
izXlEIvQ4MQizJlYRDgQiyizWIhTQwQ9uBFIgrMgZEOZERxc0mUD0TxdNgbS
1+uZm+qdPXt2T3J8vC4XEIt1dO+9D1B6+rCM5cshGJFmuYgKLBeRDuSicmmd
oUddoDugQ/C9BXDUFRGOXppwvFsO4QgLTjjCnQlHpAPhiDYLhxxiwpS0HAxl
ciKQ5icXbqDGMgFnwvNXmJx+x0V9E3v11T8m1K/PsoGIzyIaNap37tatSP9N
TUlJ4Sb5C0h0YAGJciAgVWU3w4KAJQFAGWgoD7yHMmHFEXNFZKO7JhvLyiEb
4cHJRoQz2YhyIBsxZtkQwyxEeBkCVkT5IBqwNoXnKZvg7kknd/kLBSxPWKCa
UEQXVqtWLSMlMZGJBTEmRCRW7R4yZPGk5OTMhIQECEaMWS5iAstFtAO5qCZh
gRFhCtdCceiBJngtioQqKhydNOFYVA7hiAhOOCKdCUe0A+GoZBaOKpZwqFRa
wgk6AelATFhZKG74HZZkuOVfDtJq1mlMYkZGBrxUjjAiSIxfEnZnZn6Z1LZt
bPHRo5CO5MWLF3OD/MWjUmDxiHEgHjW8asMufAyHhSGuckUkI06TjHnlkIzI
4CQjyplkxDiQjMpmyahqSYaKRML0mLNDOeFKMuCD+EuGTxxaasMooLw8c9gw
pPHxTezRo0dXJg0dOoMmT4ZUVENUtYpZIioHlohKDiSipgTEaWRaKIyqV0Qs
rtHEYnY5xCIqOLGIdiYWlRyIRRWzWFSzxELZEkgg+cHtRtTBEotQg32h9GBG
UmJi5+zsbBaJtKSkJFAJxKJd4RdfJKWlpeF3G8moElgyKjuQjNoSk0CpJv9o
tqKfikpGC00yXimHZEQHJxkxziSjsgPJqGqWjOqWZFRV1qink/2lAAYF4lKa
FMT037hxo7AkPZ8gAYIePO8hCes3DhwIo2JxcnKyOKaqWRSqBhaFKg5EoY6v
knAS5lZUU1FRaKiJwovlEIWY4EShkjNRqOJAFKqZRaGGJQrygCju8BW08aGJ
tH/2Glp3P6wKjmx2pvxsdnzHz50792hsbCwgjywuLpaGSRjrBaC9u0ePHviJ
7+8vDdUCS0NVB9JQT+LgNOItFEPNKyINtTRpmFQOaagUnDRUdiYNVR1IQ3Wz
NNT0k4ZIKICptDulG50W+U7gxDlO/BaCOIXiKFgGoAZ8Ah1ADBbmjR79bexV
V6kOLwV/9cDwV3MAfwPZiSZFYApw174iyFfWkH+qHMhXDg75Ks6Qr+YA+Rpm
5GtZyMsOcutIK1UeCVRZ/c8dP348xv65enXrbsro1w9o1jKDXCMwyNUdgCz1
bnBB6zpXBOlwDekx5UC6SnBIV3WGdHUHSNc0I13bQrqOLdJRIPqZkyYJpQbt
Dn8R7xsU/vDDubi6dbvlZWUpi6wU3DUDw13DAdyNZaeVFYfmMV2vokj/rYH8
aDlArhocyNWcgVzDAci1zCDXsUCuawBZRWUwhPOaNWuW3blzZ8HRhOZnZ8Pd
A8i3H925E0GAuNzcXJfN2K4VGOyaDsBuEnhsG4PL9SuKeLGGeFI5EK8WHOLV
nSFe0wHitc2I17UQr2dAXJ4UBoMNjv2t2R9/jKjw2+MffthV14xs7cDI1nKA
bDPZSU6jwg0rCuovGqiDywFq9eBAreEM1FoOQK1jBrWeBWp9W1DDoZ+RIsJQ
TU0eORLxOwBYz4xrncC41naAa3PZt4GiuvqIFUGaRhUFt0AD917ZgEb5ckaA
I3BrBAduTWfg1nYAbl0zuPUtcBvYgRsCTF0RbHPBop5dPHFido/OnaG4xfc2
w7duYJjrOID5KvPwtYvONqkowt9rCPctjfDE2URzJkiEUWs9NcUPYQlZdPWf
vefgGNS9mxCu5QzhOg4QrmdGuIGFcEPb4RtdHBkZyQDjBTeqZvGFC28UPvkk
gEScBeaYzXCuFxjnug5wbin7OqiYa9OKgn1CAzvBOdiY+9T6mOdoZY/4gx0C
tF2hfDh+wiG1nWFd1wHW9c1YN7SwbmSPNXBknPHa2L9//0kzZ87kiMnEtNmz
8bmBGev6gbGu5wDrVqqrA0RR9TEtgiXNKor1VxrWt5UD69pBYV3HGdb1HGDd
wIx1Iwvrxgas1YXhLGPsAmNY0F1yDxyAVd3x7KefKjYsBXCDwADXdwBwa/vB
bBsbbVFRgHM0gG8pB8B1ggK4rjOA6zsAuKEZ4MYWwE0MAMv7R0FRI8OOfwFw
RmJiIiIiKMfh8KfyZEsB3TAw0A0cAC3zVcGFPa+qKNAHNKA7lgPoukEBXc8Z
0A0cAN3IDHQTC+imtiPZDXbGSJaf5F89xq082FIgNwoMckMHIF8reaOsLAcH
Qq6uKL67NXzjyoFvvaDwre8M34YO8G1sxrephW8zA771vfhysMuIb1Mzvo0D
49vIAb7XlR7EZcY1W1UU5A80kNuUA+T6QYHcwBnIjRyA3MQMcjML5OYGkJVz
VU3NBrMFuZkZ5CaBQW7sAOS2chA7jWbGVhTfzRq+LcuBb4Og8G3oDN/GDvBt
asa3uYVvCwO+zQ1YNjdj2TQwlk0cYNlO9megRESpYOU1FQVUX7yiSTkAbRgU
oI2cAdrEAaDNzIC2sAC9ygBoCwOgLcyANgsMaFMHgN7gHZxOYpTXVhTLlRqW
9cqBZaOgsGzsDMumDrBsbsbyKgvLlgYsrzJgeZUZy+aBsWzmAMv2sj+dxiUF
KNdVFNBlGqA1ygFo46AAbeIM0GYOAG1hBrSlBejVBkBbGgBtaQa0RWBAmzsA
9CY5OAMlEPRoRduKYrlQw7JSObBsEhSWTZ1h2dwBlleZsbzawrKVAcurDVhe
bcbyqsBYtnCAZQffwekoytiuooC+oQEaXg5AmwYFaDNngLZwAGhLM6CtLEBb
GwBtZQC0lRnQloEBvcoBoLLCPtppKPGGsrGEgmZrmOMWQg4EfjM1LIOEsVlQ
MDZ3BuNVDmC82gxjawvGWAOMrQ0wtjbDeHVgGFs6gLGz7E+76L8xYCiJtjL0
MlvBHJrA8WVjOVViWVIOLJsHhWULZ1i2dIBlKzOWsRaW1xiwjDVgGVsay+vp
0KFWgbG82gGWN8v+DComeGNFsZS14q5fy4Fli6CwvMoZllc7wLK1GctrLCzb
GLC8xoDlNV4s8R1ewLJ1YCxbOcBSxtEdr+PRoaIwyjJG13/LAeNVQcHY0hmM
rRzAGGuGsY0F47UGGNsYYJTfhQI6HcbYwDC2dgBjt8BD0hjh61hRLB+XWJ4t
B5Ytg8LyamdYtnaA5TVmLK+1sLzOgOW1BiyvNWN5TWAsYx1gGS+HpNNAXueK
wjhSwni6HDBeHRSMrZzBGOsAxjZmGK+zYLzeAON1BhivM8PYJjCM1ziAsYfs
T6fFxMKb6FJRLB+UWJ4oB5atgsKytTMsr3GA5bVmLK+3sGxrwPJ6A5bXm7G8
NjCWbRxgeZt5SNqF77pWFMZBEsYj5YCxdVAwxjqDsY0DGK8zw9jWgrGdAca2
BhjbmmG8LjCM1zqAsafsz6Aid7dUFMt+EsvccmAZGxSW1zjD8loHWF5vxrKd
hWWcAct2BizbmbG8PjCW1znAUi7Z4ajqF3h0ryiMsnrM9Wk5YLwmKBjbOIPx
OgcwtjXDGGfBeIMBxjgDjHFmGNsGhvF6BzDeYR6SAeN18RXF8laJ5d5yYNkm
KCyvdYbl9Q6wbGfG8gYLy/YGLG8wYHmDGct2gbFs6wBLOUQch+purSiMMg7h
+qgcMF4bFIzXOYOxrQMY48wwtrdgvNEAY3sDjO3NMMYFhrGdAxjvkv1pF6rT
h6QVqrutoljKx3ZllgPL64LC8npnWLZzgOUNZixvtLC8yYDljQYsbzRjeUNg
LOMcYNlb9ac2JMsM1fWsKJYSENfmcmB5fVBYtnWGZZwDLNubsbzJwrKDAcub
DFjeZMayfWAsb3CAZR+pXp2G6npVFEbp3LvWlQPGtkHB2M4ZjDc4gPFGM4wd
LBg7GmDsYICxgxnGGwPD2N4BjGrOSVnRc59Q3R0VxVKmjF2ry4Flu6CwjHOG
ZXsHWN5kxrKjhWUnA5YdDVh2NGN5U2Asb3SAZX/fITmsjFBdQkVhlIXNrrRy
wBgXFIw3OIPxRgcwdjDD2MmCsbMBxk4GGDuZYewQGMabHMB4j+zPoOb931VR
LOXcXtdb5cDyhqCwbO8My5scYNnRjGVnC8suBiw7G7DsbMayY2AsOzjAUi7/
GzB6PkwL1fWuKIxykRrXgnLA2D4oGG90BmMHBzB2MsPYxYLxZgOMXQwwdjHD
2CkwjB0dwHiv75B0FKr7R0WxlCsLuV4vB5Y3BoXlTc6w7OgAy85mLG+2sOxq
wPJmA5Y3m7HsHBjLTg6wlNFsxxP0+1YARrnynGtmORC8KSgEOzhDsJMDBLuY
EexqIXiLAcGuBgS7mhHsEhjBzg4QvF/2p13g3Bil61cBGGWVh+ulcsDYISgY
OzqDsbMDGG82w3iLBWM3A4y3GGC8xQzjzYFh7OIAxgfkQHQaoLunAgjKHQld
z5UDwY5BIdjJGYJdHCDY1YxgNwvB7gYEuxkQ7GZGsGtgBG92gKBab8RJbM4a
iAMqAOMPEsaJ5YCxU1AwdnYG480OYLzFDGN3C8Z4A4zdDTB2N8N4S2AYuzqA
cajqT8NAtA3LDawAjHL/Rte4csDYOSgYuziDsasDGLuZYYy3YOxhgDHeAGO8
GcZugWG8xQGMD0l96jQid18FEDwqERxVDgS7BIXgzc4QvMUBgt3NCPawELzV
gGAPA4I9zAh2D4xgNwcIDpP9GdQ+VoMqAOMXEsYR5YDx5qBg7OoMxm4OYIw3
w3irBeNtBhhvNcB4qxnG+MAwdncA43DzQLSLwyVWAEFZAOB6sBwIdg0KwVuc
IdjdAYI9zAjeZiHY04DgbQYEbzMj2CMwgvEOEHxY9mdQIbgHKgCj3FeTHZug
YLwlKBi7OYMx3gGMt5ph7GnBeLsBxp4GGHuaYbw1MIw9HMAoa0kd1a7imCEV
QHCnRPCeciDYLSgEuztDsIcDBG8zI3i7hWAvA4K3GxC83YzgbYERvNUBgo+Y
B2LAwNvQCsAoN+6zEtXBwNg9KBjjncF4qwMYe5ph7GXBeIcBxl4GGHuZYewZ
GMbbHMD4mByITmNuD1UAwQ0SQTXD+PpDhw5h8U/8G15SUlKepSGamC8V3Bzm
q80XcbisU1vz2U7Wvu5oPtVmp67u5qNDLVm6Ux4Qf+jTPR9kptzJB5jEKdR8
LRs/NsZ8dBn5tBrms5zU+tUznyrD9o6qcq2YRgvzpSpSP3+t+ZLPSumWq5VE
4ZuxS5e9fTz+tl6nEx967OIjT0zBv8d63nH3jFdnzYkpKipSiyeUZ76hs+sH
t45Z6yCu7HAB4XZBXNLJjkMdg7heuHkYSUqPdnQJX7L1uW1+4oOP/PHI6KdL
nSMJt5I+3Jzcy2bohQfxwGXkRCsFcSkn1X/Vg7he/9IkMzVAPDmYMVSReu1g
xpKMbPIaXXUKCgp2DHv40aKnXnjNFUYrt/7b5S6ZMmNJ9v2DhzU/5dGwtcsx
tFs5vHa1oIb1tQ6v6nBzl/YOL+dkw9LODq/lDsSIptND+fSxH5z6QDeXy7qT
MpcxeucVjBu3d9gDD+JY06E20UK3wzuVkS6NdHgZJ4VklRxeS6XSg8oZ1Ayq
Y8s3TJ2OuQk+Q3R98ugnaPaSDeLAcHk4LVy1A4eLEV2lHEP0OofXjg5qiMY5
vKrDLT87Oryc28EQ7Wp7rQj9Wv5Dk6Ozdm34pu/gQaINvRy2Vfm2G5MfGx3w
OCv24Dsq8S3fw9Py0ueVkTQNc9hMJ4VHkQ6v9YCSzzKSsD65n8oOr313BYZj
DYf3eFoOR7Vqad9t27dfeHTcc+LASDV6n335zRfemDdfdlo5huMNDq8dGtRw
vMnhVUOcDccutpeL4ss5yG+Zzg+99MzLC/796LzRPqF2By3v6fC42xwe5xew
X7ctMfHnR5+YEmU4VAZFo+wGGn7l27lM5zupQnE7bPaDpQmvrNQc73lc5rX7
V2CERTu8x1M+I2zr8JGP0Rtvb9EOr0ppm7IPJ/TuBxMXR5UjMW+6bjhft+65
khLH2V7TlaJwpa88V+rmYXC7EcRDwK4lP8bfdsfajIwMfdj0sD3FjVOO3tG7
j+iU2wIfZ3VeT4fHBXm9T4YPGhzwOJukV/bwwQNxXpThFJUQshsiHw0f9qDd
qTICWSWoFXs8Z/DTmi55fwUGgtthZ6qBoDaXwlf4CYe4ouVJP/ROHLb0kVOn
7IT9FttTwy/GJw7bMODUKXPCxnRKaH6/+4bMWbt2rW/I33So+/v+9w1tdeLE
CU2PGo/7dmCitHKFJy3+hqGPOJWJaJiA4waH11BRPQR1GRcoufbBNYGDcezW
C9icNsHp46rjGpb8fOZowl29bY+zXLJzhx4s+c+7BQk9uuBY06HJPEZKV2S8
U1Iy/LuE3j3tTlWsUZZAzyopeSYvoffttq190kdoG3ksiBP97xsiDlSHnx+W
/PSQVVlZeieYjitISn66W5Y6rofD40Q9eogwjkO7UZYHvfR0vIbR8uXtHV4j
UtlV9PPPYra+59WXNm8OwXVcblxVHIBXnMNLyiEfjp5lDcS9Cy0Uiu51ufFV
OS8dxRkrpDQ4azWL6JlMooQ9RPEHwFchOZgP4fZoikXWfdSa7QmZcqumcfNg
A0IjhGAPH5cbSsE6ODy452VpwjDmHAwC2+p5IVBBP69TibnSkvWEPC4uPz/3
ZP/7HrA9TuaA3Xj02/Pzd+b3v+9eV4zhuCd9zJz/3N2nPy1bv1eZD+JwNAfN
0o3WMo+71fa4aBx3e/7OnaKunbKzx9L8+c/QrFmv0rPPptLIken0wAMHqEsX
j5S090jJF9Su3Td09dV4uULEXzcOsxC7wfZWoSf7D3iAb5VAmZlq7EyllBSY
0nNowgRXxBbqI4Rg7NhwkoYcT/U2XDLsu/73DXo8P/9NMDcrNVe0FCTk9URN
ROBrRHzb/77BE/PzZz9H9MpKoqEYHBgSR7DuhOcRyfOIPxLVP0dUFy9XqPjr
ziWKq8O7o6m10DEuYBeCe13h8u/6gXIQ4TUyVRJr383WUMq9q/Rjnep/X+Kj
+flv8bIPeBRXjHwssJiD3i6foFRcoHyPG+vwuEcdHuc7PlaNHf80zXhzjY+x
5DkdlxFH9HR43G22x4Xxcb1ox45d1LPnGWrY0FXpHNX1SACGBAhBlzDDNUL5
GhB8SHtlKeQcrdGRhEykj5GXYGng0yFsw4iW69KAz/7XgBBuetj+GlC2hzDr
v5IUZB+GUWvA99wlhViIcIz4GwoWwHZv/Ijapb+6++67n6PsV9ZQ7v05lN/e
FfMNnfeMm7106hbsYg2bPkAPlQ81p8dpdXebxnrMa2+3iONy7+7TD4pZlQKX
fb3HHB7n67MieYpUi344XN4H07dvx9aI/Dh2x41aun17eIlXWA3HReC4QZu3
bGmutty4lT7+eBvdfXc+NWrkipJCW0B16gyhVavEVW60vVY4rgW3nCUD6b1x
NG9etBTeeTRunL/QwLuAAMNscLmh5zwCutyr/Vwh4m8k9gRk4cILGhOuBjcj
yvvUVgtkBMoN45uj9CALz9+oD4nu8IhrT/atIM9s41uFcWpvOGw/iCYK3Rsq
mwi59mtiBJS23sSXn4fils1TwhPp30OwtuAy7iPqmk/UKFIMr0gPtnXeI7oH
TZuqYixcswdlrvY/WjlUG3ER8i+2yEQHsrlVp6ioKP7TTz/VWhHBrcCm8MMo
d/l6WjvwY9p661eUcy0wP+Npwk90tvYO+qUXmgBOQRN4FSjhWQUWPeshtfrH
hEOZmVozfI8rS5S3bV+qKaxQMD0b1QNp/Xq3NAxG08KFHNn24IK/Eetp4EAI
IL+gTrse2rdPa0qoGAXbtr93F9F26MoQISZh8FjQAfwSas+NrnCFwv5GZzAm
SYHH2PBt29/l+gvO5IqQ2QiHHalUg8rfIMr12+gJ01SYR5Lf87NSoWEgsHDH
MUbYLed9NLm033B+JJ+PMQkxws6sEHSMTXxnf2o0n4ojhuXm5q73uPczdu3a
hffJP23YsO1y376nqUmTSKFQIsCKm6lvXwA0klJT4RaJWhqy0uum27j126iw
tbsOFRTgGoBZ2YIRa+j++/FuEY0aBbghHPC3WtOxY6osyg3twUNW0VU4Bo5Q
mGp4chsiDLdXSQ9giBGMcjCP+QaxqQbRYJcFERsOFHENpx7VMWkemR4XSsZv
eEdt7U20J57o85uI/n0j0bp7JVYgWW6ty9RcFeTH5dEkWKzHiVqFC4VTzXN2
861EvTcQDXiHaPgCojHw+jy250iuIOK0ikkhqS3uIWUwAyBxUIqstd8Zbj1B
NL57cENRUbdT+fkPHD58GGKCkObU3bt3IzQZqM+lRhfhvom0bzbidpm0PuFz
2nvTafq2SbhQXdXepyP/4OAPu7FsFnMMgke2SbW1ciiA3blLi4ogvBAyLA8e
soxGjJByGRCRXmWPRAgSBAbCAiGD4oBgqfUeEYxgreaSJBueQYmJPWnXLrMI
R+ktwBU3EfXbSXQ7vJe9RLdALlxR0lAE4O15v8hhtq0N06+J1iES4ZKueYR/
P4OM/Qpey+7op3XVV4ULUk4NGjKSXp6/ipas+RgnCS/AY1zlD3n48QXPvziV
i5QwoDGUQqVJivgmgvvwpyCvMrdZFcqx08Hgrox8AcTZpS7N7hrCpvhNrfB+
3eGSkufecHhZZbQknDhxYkt6ejperhDxN2z7J7NmfVXQo8e5ksaNL/xVu3bB
3zDOhEatcoxat55Is2fDsd5Jt9++ju699x0aPnwlDR0KTQuxMGlbtTGl0z7t
dfToUU7y4HTI/Ap66CFXmJC+yoKF0TOUn9+ecnLwGc2Co26rkBWlARBL3UWK
v26AJbIt4gjnbV327IvPxZ0uOs3pZMR+McShy5Rouvvy5mtCp0gpqIjW5vQy
5I0zRx7o8DdMV9tH2hDlNcNv5+p6/lb76lqibXdLSRJWvZBZ55Kowox4vDSi
JMQYYEq6hWavh2AEWscKUVeGrAih6Z8hmpVMtBj/DlPzDZxofglKZTvNz6FA
tkH4AUV40C0758N7ior2Jubnvz/58OGVaZINPCBB5quMO3jwoOiQy3S526mS
U047RbJzeGs6f2wO7ZgApsDrE8rsfoRy27gFU7h/ovzaa+nsIOFrSrGuWhHm
ULZFTPOSU6deWjprtqMRL7VEmD+NCBYJFcOqKmJbwjYKQjRuLfr4YxEPu10p
OM/5nUoOHizr3CXPP/9cx6JTn7I2F6EDOWRCud4dWhyGj1qdH821eChSOnsY
5VagQyq1mPYlOTkTli5cHIQijIas4eafEHWHWEOq8e9RoliQ1h6PXbqN6G41
qNEya1APC0656foXQwaDX1w12htmBuoikSQnv1Vyeu2ORUWf4pqKytQuqa2P
HTu2bOKzU7L7DxyE+krEAQTv5+TksIEJm9RSizI+GAr1MnqhHHGw/GRNRgw0
KIx+9v0CXl6ZzzgWhr52+TAYlBi4ej5P+f0xeA/6nDLdwT3UI6D+Ax6BGNJu
8bfm3h3Tpp35rmvXXy82aPDbH9Wq/e9SjRqFf9aqdfpy8+YcxmUnDw4eWATs
sYn69QPJIZgwy6O2FtCYMa4Q0JsrzOhOyAkMMQHb6TkCmXFk168/d+4cMxzu
j6izNOikXKMdloDJ54sJiu1qGYx72e9uH/cj3Fm7p+6m3aM/o8+q/06/y6yV
Kwx6GYIKvQ3RhSCrutiKMZx83jC0ses+yWgWm4UJNgvL9+iFT7rL54JcCacz
1IG4yzrMCNwPfIQ807dEV/F4x/eqT+oF4jLOlN9J9MEAog2cJnsun5an59Hk
94/ShG+OUp+8f9PAb9bR5L27KGVFJqXP3UvrB3xDh26+QMfkbSIQOln7VH5+
zrDDh79J3rXrzNh1646+lJ7+8VKPAIcLMa4MD0aKD51esZE2Ni+kwjKHhYQp
qjPlZ6NagcnpQ3rvjlzK9rD3qUZn6Uy9HLrQ3hUiZj65x9HBeT3p5C7BVDFX
gKmkGMZgiGDIgGHKbHenAEylqX0rC+N2JsIYFrgGckkqXlQdQxiGJVNIWdeY
QlnT4RJWp99/xvPh2VWwL4xnanFprvA9tP30cB/pPMln8HGhFHXBm8Oz8vB3
oPaERYYWgJ6+Iro2TKaC8oiaIVH0GVGHV4iekwGgSLDKzceO7TddtWtOzj6V
MsW4xUXFo0VKYsLDWmmlwc46naldEKaKLanIiAh0sorjii7dOI+S6mrgeu04
tb4l6AJGO44AfYQZLqmeBJoBLKNfEuwFQtMuKbQNLoVgDV7wrJi94BtYGlM1
FRocJqQYoNKMjADbnD7Zo8f/fmnU6I/iqlWLf6tR443PV60SJYRKi5vYBkEl
aPPn6JVXJtHMmfhexhYDME4LwzOrIn0wDFqE+q3qv//+u7LdQQ4YgUwalcvB
K1J/hsLABlhLHvNIn0cCwwyOlJoiAV21JZ3SM9bRuoFf09eqLBuaHoEGMAGE
sm75iGN8NmXnPkiHfmzpIY5wSQ7s6qBNMCAEdJEMG52zuquql8hwnx1EvRCB
9/DJfPWgjSHwUNjTD1P6ihyad2A3TT79BfU5vYNG4D2U+vSPaBeOafiTrGFk
MnDi4Ew4lrflwoytr//4VHr6oRnp6R+mWVo/HMZMz5MnT7Y+T+fn7KAd6EVU
mbK061m6GLYlLpcMpK/XZ9C6RNgS6R51s4c+jsctpVIuKoCCh6I36fyqV0Dn
q6ImCCvEF6KEpspJktBwXbzt5wMQDIJSRGTdXyn4PKeScPYFMDIgvypIBjGG
2OIniK2UtXCoa2Qf8ELvVKfLP0OQtHy8yLPhYDVZEUklDDk0cCv17i0jD+EY
H5a/4XlhJCI+FiLiwm79J7bx4Rz6PVIYJITNJnY5XEpxnyeqBZPEY6UN84jz
OblchhsIWtpX6SWE1rj8j61gCDNvnqkixW4MHpEFwBEPeY/z71UMKl7AAR0y
3kdhI8hvaUE1nBCDssLbyr7E587ZPto1HNoU5+uJNVyLo+sFylfXLo2f4QJo
cWk3TD2rwkcpbjSBKxvwQmiMO4PjAfp1kYJctnnzZhntkuobivu7Ez17fv97
q1b9aeNGKcKV7HQ1pO5ReustID+c3nkHgoLvAqlrleYTSTzfbg9HizgKhzEP
aw+UwSpLJeeFcPF20sHobDXHhHU2OhGBE3QUWFCUC7u92Fn+gZxXFDYyh3Kg
evBatJW2tv+RflQTcKtBSqD6lmyjzVmLKH3PhzT9vaM0+ft9lPjHh9Tnt1Qa
WzSfJl98ilLPP0HpucmUvWcMHdp2HxXBtVRV1taUFWGVKZnwCDv0izDJ5bip
E0z8x4n5znpLDtUaXISuK/C3LtDkrCP/e+zsmR9u/PH77zt+c+RIv+OHDw/M
2b9/zOd7947fs337rI+3bn0dtkCPvHN5E/fRvhB0lacz19Ja4TB5sRbOHgAS
n6qwdXipCLX3Ql2HiL9CkfvJiVtX3kaLXQJWo0La23MF1qIhUidD1/o2JQR2
q1qWFIoSZrVMickzMF6sMyJZf5Uy2cMh0XreFIMGg0VNBIKQ4zT+GRY0LiFH
ZzhyyuzUoDO60ZksaMlIbxxF7vpMXDYYzlodDYYlhBEaT3v2yACYGzfAw2vq
OwyeOZvueIlnU+pFnzChnjMMI4KNFTbJVWFWxGmiJoh8Qm/zCiuwgUQzH1RD
wQOKcCs0nQ7jZDRvRa7sWpxj1RuosBTqDSYRzRTXG+Y91yo2s/qdfuY24oVr
4ztZFKUWhxAKGPpAKNBor7WJuI0MEEmd8d49Mn4jjuA9woqkfpFHyL9Q1P4i
jcEschvkvQefp98DhqXw8bV7wND0i4C7mVd0luQYk/gUpYaSx+lmK1lZ76Hb
Vq1aBdULBxFmirRfKwciARAA6q9up507IUtMBAEN99pezkOjRaxaBZIxeYKZ
AK8VGzduRFirhb3W//CPPn22540adTAzJWX3W+nps97PyuqZb2n9ML2kBb0l
/BrVBCgnmOVCXSmlhUiPpYrV/sNAHdoavYveRKoeNCyHSPWOnxJ915TofAc6
daEHHTo1jjb/ZzalH32XpiP4se97B0EfJRCYwIiJjOKTmsAdVNRf2u0xwWh/
de9q7X/88cftGRkroNI/ycycDhWfm52dDJV/5Jtv+x0uvNztTD51+uYIeSiA
PBRAY179gf7pm6RwAyEIiNB2yglqRBfzETyArsJ7FsOyNLryiuw0egYVJR6n
Y61O044m39C6q7+ipdd+SnM79qf/bbQ0umoWBAZlUuKTtWZ4QQFyd0L9KSWI
pltxiShmqKIifC9McSWrkGu94AUSD2Wp7QbAh3BUU4ReWANEMyFeLllBGx/S
yQ+FeSlUPFUGVqRuQ7rX0mNN7NU5Hkkl8NFavYV4ejQrxGtXsTvsCvEygMVS
Sn8soq2jMO1H65AoDv6wBtXzBrA9UPWll9GbNP4DXoWPS+BfVu4wPPAdDmUC
5e9Ed6jKIVRvDVOFlyj7EdI8lDuWSqDkhf2kMNPDOnjhd3z3hI/ih/HOkRV2
LNlQ1BX66sFyDAqCUJVaMDAtglDHQe1YsKtOhV9uaT91D0R6LMUvFXpoZoKs
PgEpeHf3cnN+QOcIqAh/fgFnsKrg22Cu6JwdO3Zout8NhwCutqZ2qpSl+GFf
t6Ljx3nGhRMvoKq3l9As0eQwVsa//+6XvnCjaqXRxYsXxRHNlS7wM+Mnpufn
9zlj7wp8Ojc9fc/zWVlPfOghBZ4IfIyOsUnv0qzVYbmUixyo8oJtFb8EMQxv
Z3kMmjMNJQF8fKsFXE1YDjoiTgI7i4rpyS8+pUdWnKBphpx3cERQr2wiSC0q
Grvp8OEpH+3dOxVKX3V7jY1rDqxZu+5PwYtb19C7e7aThxBo+s7/0MQRf9E7
pqDOFsrpk0Nz2j9Jp99gQqjGiubcIctM5IUgnGn+mroaxetDGnrHHhoTf4Ce
77KA9o+xs+1zaEX73fRWDx/b3tqDp6AAunAtDRrEWh8ya5m+SjVDXXMkhaUU
g8KKZLu9cyKEo4kjVOGuHv3h44RlxANU9QOel414FbByv0PfDd9Gf92tabpQ
VAytJRoE2wHKs2FgBlCxcWYANuxDvB3AESTuAB9u0hwuNAnMrbSHmLnEC13q
Nv5ZonoodUOHs7q10/xybeFQ1vx44TS1WhJi5SxZuIJyLDAgdKNd1D8pJ4WL
j/EdbqKtuOnGJXC8qCq1UKQSnk+KXmeCteqwRvsQAlvkQpFbK5l4Q/BcfwLi
wPjjmmVBDNcoq0gL2btUuNiKwWvEwOQhSrXlvaIx5vW6ZxwDKx9qkCMZ3g2S
3Xoon28Fbel3q1DmORwHouAY6uXLlxE514uiMCsaPgMKRSyukBVFVZ3wBCx3
Tmg5dhSifKkSfMcGAvwUq3BLcRjaCG4TR8hwU7hdzIcXevA0q+vvOTnvr05P
f+WXMsJINbh76DLCQII1QiV3ICeJ3KQ4onFg7lBjA2/RGrTqlec8WsujudYO
8vgUEi9AbDmVUh/VB4U8kUdbPvuEnt79b3raaVK541dU5Jg2rpLaCemdeVlZ
61MPHkx95pdfFs8tLJwKP+DcmTPtf/zm++4/fvHL3bn7/n78wEc0BfTglh3R
OV9FWfEKYfmQUaV1NONeMMRiyk52WvekSjjKposaBrUbarBp3V6Hog/lbQGN
oE3P0a+vOA4RSVMvjGkEuhcOg5BZt/eeYpVD8tpdiO1zzJ7lGA6DVdMT6q19
sALp7bw+FQf2VRWg27o+XqoqDlPz/egkehcd6HmQijrpRi8wgSWC52RKqROY
UqQajgBPsCOBbzgDIBIAYQaiU8qGiQ45CPg8bIx6NDWA1636aUQvgOs4FCQo
JTwwpciVdcOAlW7gC7zkqSIypfeB+E2lBvGeWQ2XVQYel53jbmiNEMn7lQpS
txLBqnC2GCjb8lFUUAqj1EpcJOu8Esp8gBcUsFT3YXjLxUJ4iYxiiGJ0P3pR
CXY9v8B5CCgffxRwKb4s9KoUm1C9Sh8kp2jVxDGc0tfTDnxHA5+FohV8RxCO
uiOIhBU4qnDV4/lzjFTj1ZxSDAtkMC6JujOelblX8KuXDBGF0rIlboS6E3i5
hHqBiYY5VZvuwMUOQeUw1PiGfrUclzCpc5Ea5YIYbo4d+SgTSycfMeNVtE8w
E0cU8ZPAUwGGuBjfGfExpUgTjtGpkQfp0Guf0OZNayj98/dkzOvIl5T41Unq
k3mcxqb+RJOf/J8h5nWVkmkP18DTwwvvZf9UgeOXuXL9yiNv5r55/O3CmZ9s
+/tVhJy+yqGHEII6d4ban/6Weuz5nobqOtrNQ7qggFUrgHf7slEwSWqLjeo6
ZKNKBq0dbrCz1RgB0txUMIlGUnZ5jP27d9+cVlycZEtSV3l7QScp1TnswkDB
4xAFMicyOHwXzqwio0T+YTIMR8GsKiqhJyz4eTHerOdVy90hJcwshdee3Jnx
u/Lm98T7vbTjluNU0OpjKrlV1JGzLjIwlkqV2VJWDJ9aYuWSOJ3BqRofElVw
8KQXvOC7qoqN/h41gHdoCbpcslWE5W+QzLn5sFZEYNbqY2YtWVYlT8Xd9N+4
XkQruecFEpkj9TJ89ojwnVxbMZQlnflR0SOzML8+27ixg2JkMUcFjRTJdjnL
VlnYYRzG13W8stwj0WMZiYmJVs+VeFnKG0YpxWmqsgdmqX/tJjSzlQBXTq5+
HH5XWUUoL3zEDRWyZkLTVgiw0ikRBgpVt9MTCriGAiKyuLi4c7Ya28p/Zi8F
Va8sXP4MJyeZRjtlODUaAvhS4XifciY19bOXN2/eM+bQoW33FRWhM9i99jQG
jdozc+bMzGXLlilSQzao9fnz58VBNQOTWv1yEJjspnCmkQ8XnV10ou+kvifv
Gn8X3iv/ATW2MZfokt4KOy5TtST+XCaoTEt9ofHCs5E6rin8N8T69iyh9AP/
pPTXltIxJ3MpeuzevRvCPDEtbXYwFVo+jFffzHiquYmHiw//+Nr3r32x+JfF
KILy9Ejl9zfR0vjf6VO7RM50OjwFXgyCYuh8YdPIzq4OmVycnJy8NjFx0H25
uf8qF+fx6qplcR4bTCrBr+fDrYS/NowgpcwpiEVJJVstNy4u7qOEhNtuKi7+
vDz5+/pm2lNxH3zEjUUnVVYKTLMT8BIErR5Gz6AwoeEaVqTwGvYFvATOx4Fl
2ElSabAYToHhdXL8XS1+a1Y7molvD22PP0PfNdxMp/qiYIsTmEbiqxSY+Koy
ZgUFVoYnwsDHCgtUy3GzsDqbxCKisFq1amlJSUl8OJdHiSwLqzM/xosMTHh3
cX95CY85RuR/uGGKkzhGxy9RYq+isz4FXEoX6P4a/hVFX/ewyqQi/Vq6V6m7
hpmFhQkeenMdT0lp5fYWyFlTXh7xoT99OQ6r+krSXyhW5ofWmDt+/HhQoIq+
WoVeGgL+FNjM6zZYJQKKAqHj/E4P4wJffgnDXVk/kzx6PhYTCknqMpHVCg/A
h+reOBbf6VFEA/2WMgBEpFGKQVTy4sWLz9arVw89Iawvz79QSngP8hPTQMLN
xNgiOGKUo6USE+Nrn2ze/MWC1NRv1k2efCYrMTHrjHlmpsQkCux3oU2bNj+3
bNkSpLh1xYoVB5999lmuIkYRgoox2bJigCIFW1ZU06+4RnjriuIVuclpyQef
zXy2oF1CO64bRl6q0UW6WCMwI0YGYEQOnKZrhSRSTkullTYk07lz4yn9mxcp
/atXKH3Nm5RlMaEcaaEwdYAmpGv83Llzr8TMzqpmclQtb3ix6OILe77fM387
bVfk6Ea/WGNBzYNgr2k1vT8Y9QCoCzhHn9bdQgV9SlU+hHlNe4zU3T08/3n+
kV9XzFe0dHAZvGnlWgoKIM8yUuH1sSwHJcxr+ek1Y+J45aFkd+7cOSktLS0z
ISEBw0w9RoXq4aqaCVXVJqPFlnulCFWPaXJVmxKbaH0OI14HMzt1yslo356d
dAwMXE9NeRTrmfDUMMWr+GxhLnk1mgucQWDfJ3Vv/NnGpzpcjGtaBdyK71+g
L6eNpd/ms9ozUWpEYEpVZhBGNwK5erhTn0HDMCHfqbu4WPiUmQtSNjUlJUVw
qyIFXnJUJwV/bo0KzK1qpQOeD6PntkQdhS+3unnepc7Bw/RFq1TLIFAYE+KT
9K3CefIC+BmDQWTv0Kmy+XoY1CrtUBLDRsSuvLyerpDvk5Iau8JAtawdcCmh
DR714VkuduAXQqccWK9WWFgI0Zfj30yoysnrvZVoRy/fmjnocSs+pwxFqEir
rjvEMBGHqzo9MPJoY8INRKq47qvPEn14B1nlIQZCF+s7+pWC+C7tqLJIMC2g
ivH4eA/zGd0RY+ZUNUvTKaeKfKeaPj59uq3HGYn3k36bP/+Xjs2aHXr54YcL
r77qqoJ27dodHzhwIHzK6oGJU9ZSVy2LOJeeSp++b2fWix9vPfY61P93CeMT
0l/b/ZrwF6sHZsaoAMxYxcyCdv7gE594OEe5q+BmCxI1ugGB9V2lK0CLbCL6
0aIS/lvzKG/HClqhl7IgHSnKWLzDvQZnxfj1JK16w64uBO/Xp6QMnJ2WNpGV
EigSElb5ClBjjC01RvhQI8lofgpNnfoh3XEHJ9cMLoxVq6EXs/nE9pTdcjQ2
VmTJodU29u/fv/IVoEhLXftSpHRFw/wpT8wBVTvTQOSZzEGFv8ZWqvRR3m23
Cf9SLbGaSBkZWGtEfzKeRyqhldficnDw397sabfszZ1+y/m4FrWaFZ7N45WS
jcQXEpj4VMkUCA6zwLFqHQOBQ/w1EvxHnfhAvyjwj/KaKHgHxQlxYkXlR3XR
ganuVgPVqXSbNZFJozrmHI0Sw0VZoDoOwsCaU/amNbkbd8bpAmi5+VuYXreC
l1i7QSHKpeWgN4/L0RC//5CU1ODNuXMfVxti81QYzjbpOp6DTZpBGwH9Hpeb
mwuOmTlp0iS0EiY3uk8pr1J018RLN/hq0Fov3VhTk/TRk126KT4zdaS3H17v
7NmziRkZGYwgU58yFZrl5eVZp0QFYENtcTBkIbGGn5GN2VSZXrp5PtWOyujC
gMY79A5ceNFUZV+j4/3YuxQ9xprpMfXSqFE/7h84EL5k7tzly/dNysra9mh+
vhZptPzOYWeXLz/5wA03nPhPnz4lN1SufLl2WNjmk0lJGaemTNH9zpjAlKiW
moB+SEmbOnVkSfryM8/0uenMmiFdz2f3vO7X9nWr7/3304lTCtMX+U1NtaXA
6AAUGB0cBWol+264Y/6llFY20pLiEAiwKwyyArGFHIFQBGAmgIJcRiHl4sXX
Uci44vPPFwy4cGG34E2r3JUuzdhFu0RVveJtq1ZHGwPoQ38G8dGzsp3R0ARD
srNXnejcuWVOYmJ7Js78hIRG6zduHMj0EIIHqn4F2DLCli3dc2j9hLfp5Yef
o7mv6CXcVtxRDSAuPdGfzUd5q1gjqxj+XmhrNbiBmXV8zeBoE+U1Kyjzoe30
2l0j6WCqvqUWRpt/paTVfq/uiUSkAfzEPLk97667+tCWLeBXXKMtd1NBAexR
8XjqclZxJl5q20ioL669PzGpb8v9u5+/GWsYvXB22zR0s9qKjhlzLf1v0ArK
emglPTFUZ8eGzES7doH7RaTbJDwKCN4HQ6/2xwIV/kCgsxE84+/zmjVrxpUK
OhCQsWgzhcYEptBu9hQqFln0tZuEB+nnLYZvLS7u/cXcue0wSnUKlfXjYbwI
Im9hIyKoctMntz53gJ1PH+ZW6+RDbUBR4Dqg1As9etTE0SCD+WfPjhUDXRXV
KCigPi2ycNuWxgvXif1a8Bi8cuR3QvAIHIryo1W1oBDTKte7cLGOWK1HeYY+
s7hCvLNL/WZnCaRxex9PUg05PD2C8EJ5VgrAp7JdocynOAZtU7e16gg1QTQZ
H4bAdBiaxNiC3kWPhRg0to3HKQM5MTAwtt5TUoJ85Ocz168/kjZ7dt72UaN2
/mIo4lExWYQXX5o2bdo5z63hSc5LXbDg5sL9++fvfemlw+O6dVuYN3p0wPpR
XsfShmNlNXh1xMbxlPg0482Nb/5Wu1ntC216tHnhnYVzOv2V8/mB158Y+NHc
AXfNLR4/vowpxrbcGxOAe8PLwb3RXmqzuFdRG6Y2+Il6BFQ6m22gXKh1/Cvs
NROYqrI34fz5z1AAuu6LL6ahCDQotzVEjRVFv2wTTMmiLLQUVUs8VnzSZyYK
UBKBsQFBxHiAdsR7aMaNiYn92Zd1Cd6VM/9Nk91qXQFGlt0aeTsd2An2fYr2
v76S/jU0j8Y2+4pGXDuJ1swEW0ewrpNFNTr5lp5T7ArD0EK21kS+1dS64eIl
R3vVNnT+yKu06lmQKrLAQfmsapK5T4LTNEtNaqkotGVYxvLlv8RWrborr2dP
bn/n4uzs9WkDB3bI/ewzVQUUwQyMf4V2VBlIsaiPNBxigCS7gmBbZmDmwiWZ
8x5bNPf5UeK5VTWJ7qC+SU8+/gp9+txq+n2w75SIUKZifMIpqsetlK1m8oH/
OWzMky8wp9kfGShA+BQ+bBwaQAn6UTFb5jZUrNYDgShanBjmLR71p2KIoJ83
G/FrbGylT9LSuh+Ki7ueZQV9LN7Lwl6x6AYmyeH2EHchB3ew1UQF/kFjn5U7
lfEL+QQfY/iszMsbCj7mNsYWFx/dlJHRr0tu7oHHfCjZp5LHbSAblbrBlaGr
wIkI1LClg+/R5+xfiu9tPF8VrvChaF6iPktb2kipHr2ah5vms6QQw+xB2aJn
VUQHsYDFgKZBJVUOwNCqWTpDc7NQoMTr/Flrvhwq3Sxrnri3WaHAFwlWNr1M
vlQVMzOrySI+K+TJOzV+cI19fHj13MGD/1uvRo1tYx56CNP1MG0PVxKd4ZGO
Q/Hx8dDNpgqljcUyEfv5jsmT9y5PTV2wY/PmhDOKreUoqMuaAVg/N33m9K/u
Sr4LnMES/c9x48d9NDxl+KEbO9+IY0xR4z0X+/TJOjxq1BcbU1I2rUlPn3Aw
K6vDRctFNvNwSDl4WE1wg2vpz8PgPH89AjnGCIL84hlFvZgJsnpKto2Z0Gpl
ecWL/qIxB/LogUm/0Xym5QEXaPe2f1EaaFiJvl6Bw7pfX9Oa7Sf0OpuBjAJ6
Xvws2NZavS2IOedSKVV3wsPv0NnhH1HWbQ/Sn+8yD8+l5ePfo6fusU2ralPd
/B/SmpyuQcMPiUEEItYcLjdMcH54VwiOrMt63jfiq5LgFQomR9mbRNbsda8C
iGb9MzJPzpHkmDdEbfX4wYO/TGzbdsziBQvaeLvD4mb1eGg5ukSkMKV5FIbL
wjCGpP5Wr3p0Wl4apypDoaEzU0YmfNGjUztIsAr8Bp6Mbg491/O2wHq4EK90
WlaS0oqwDvwnS2LGi/84Q6th3wIqAAfXzjjOWDX68XXlwHzdwcuZU9VmyLzS
lA9nWit4ewuPFLdG/9asWfTFuLgqbxQWPhmuVrCCB8h6nFlOudK4KyQft8Jo
x2jh7ah9lip0G8wGjVy5mmtZSsqIk+PHt+AgOCT+7fHjH/5PcvIN01NSpnDy
VfG3Xl7EbCRWTfK9RSiHj9Df4AClQPAV+5BM5Xg4Gye7toHBefUgj6K20rAc
F9Pqj3gqPJZw8mdwPDvXHumGHeJKYG9mcSUUZhqvbaBx1Ta4uFb4PsJg+Ki2
CevDt+PcGGoW9CZBrW7m8Fb2RozPogMSCGs9r/cm3XPPjpRevZb8nZyc+/Nt
t71R+OSTWyf17s0e+F1ff/31uaZNmyq3y9+BfjytqAi07Xgip4pmQ1lAx0K5
3JOdl43JLJAHrg5DynJNSkZK2phJY3jyoL9HPXR3fn6Piw6rqyTyVXS6f+Kf
RHd+4HAFLWUhHaSD/uyOAmIrw6oEDILEpR1GEOuaWV0Og+pwlBftp1UJ/6P9
/sy+7yLdXZbDLXo63MAUqik+NO62uDuqHNwt1XaNTvSfg/MpdWwnunRQ5+40
Op/0Mf16K/vQc+jShOlUMOUd+mb4Bto9YB19dC+4+gV6a9qHdPcdqozGsM5h
DBQTBgb6lavrMVgQvMPDQMtYD1XbzMrSSKte0VXBRDg3zFsD7KdfQgE7zCIM
MsTblVTANv2+c+PGVYovXnTFGlhYWxjNCslLFo7A5cBjUE1PZSx9PYFOZKIX
RCxHlQ4u2L1ozAdJA+/k5tjRcEQAGq5toGHVLIwlduS9JTxyrTZBwKGShkXF
sh8dsK7HIwA0U6SJFZsfA1cJzMAd5ZUGEG3gZSSNUWRp6Vbl9SCtEl+ihC/H
j28L9sVlRSkwydgYGg3bHP6+iFBIYRc1Tcz2oGLRcSoP7VNK5fYG0ZnZWURw
TXhroKKxhYXzlYigycf7929Vs7j4ApcXN/ASnlWHZFo1QJV86tYOulfMuDHp
oEpmzq1h4Fw1j8Znw8FQw2oCUioiIZi6wy7UoOc9ONVyF4zxEjPV1jBQbRWD
PRJqqKKKNNxL9YageP7OxjW+ymBZqM63ameFfHppdVNSv355cc2avVj40kvg
ol25PXv+cm2tWns+eeGFdfOzsjIm5IP3Xd7FBwLN4THTqNqmEZ0MnShihSrK
Cq/4k8Fzn545g34BVeJWHHxWAFW3q69ae2HUqDVHU1I+Sk1PPzE8K2v/8GPH
sJOK0eNVtQtYpsziRLUIgs/Swk4RqGbmROVY+wSP1c4hgbzfvfTzLadoS3PU
/H5BC9phav9emnALJscsp9HDuNYcQ4WtDosJQ708yfXy5WLH6l7Fz7lJdd9q
dt7uQro0+gD91uUs/afeRUqr8gstrZpPUxsdp6mt9tPomz+m5Fu96/mKOAI4
AOYinFPbNLrl3/gyolQu1QIx4ja6fLe+qhp6kqcZYQ0e74oAMWgFD3x2k/H5
h2YNGlgdQFImXS0NDNjU2/GQa60sNgIac9+kAV1fpxlPMaPhOuI8zoiZKK2G
gdKU9sB6Zv70hbBBubWHH3dVDcxdcoGgMJhyEGUuJhJJV6UPp2pTMV8men6l
x+7VE3J4BwsIDRQxURP2ypPX96ZF9Fe4jt3Z5pBLpOkRZ6sIWSN8Hg7S7hBO
VNhP9erVtjKwjO7DOnmF6VVFeNkWvWokxp4YBEkkwE20YeM4VjWQmFriXK8g
8m+KQaVbTcEn2KCCzEwR/0DOYlVbBgvnddn4hWXeoHNVJtYKB2sgmMQROswK
lNv4iLLyOUzfWsC/B3xKwlQQC5eGrKEXDl8XF7d+4KRJ/6vStOm+IYsXb9m+
cOHOo2PGoEnGZRiiy8lwMoMUiftC1iDjm/olJWV3Tkr6pWps7OsTin9fPocO
a45LdVO8Fr350UP5+YeG5eRsXZWePu/M7NkLfwvgKMo4RxhPw+HXhytpJXt8
Dxymw04g4UCHGCU2M1qqG9hNeYFQVrtoZE/o2c/o5Q5f0sy2R+ndWOjhM5TV
8EP6446AaVdcxZ/O0J/wTnkaYlB0Fm2gsypMZyUl79H996Cx2fRE52/p5at+
oJcbgMIu0soqP1Fu7Swq6jaPLo2barurWRjiQxAzNBPvRWGjN7psQ2LSSGuI
t/qicOgwnvYDAjtA57uU5dpB1rjsCewD/GCn43t+blv2kpX9IjOGPsZrS2Kf
PnuS4+N/bVapUurZkR6FMGfkQPoMgSsFgZm0qtqSVhgvxebdxWblHRwCFTHw
8moLP/KqFpi81HL2kDg9xghwxULL8meut+UpnfgJp6gqCRgM6GYeKiB5KFmT
qlfeF2qHpirvy1pwoav87Xq1wBu/PiS6g70wURHgq9mi4ahwnh2oo0uANpAD
I+N50YYROplF8VRITESBvtzgcT7j90htj2IaobJVkTPGHK7KIUUTPdcwc1gl
A4dJTKJwF2g3BDcHbPB08Ui5ByZzm9DiikoxhJi/8F5kr+0Di2b+4lVMdP6S
IhrF1I7cJbQv5rTgPL4G2qqsmXDdoGYRhNVSy8xX0hqMwh1xFQT/0II98fJf
fAYOYqKtmm381qPjx4Of4JauHnz27Mqhixd3/PTsWRX2xAPjDo4Xqisne8nZ
NZEQ71PNY2NnTM7NhS+24qHs7NefSkvj+TuyQKWG2EaAYSCJflmJR2wH9uQb
volLqeeDm3YqAz5RvAwq1uxHSWyqx6sbcISOgOswh0TkMGO8g5bz73qxH6fh
/SiOAwo6xUk5rg8FjiJV9B8Wn99AAwbwqmK8Ak4wE2Ym5ebOhHbBkgE7EhJ6
CVutbjmYTlu/2mI6ZnBVJ4NexQTEkGdo1ixXTbxdSqMeyaKEblg1BtHNjbSn
/wo68dAs+ukZEJ9/RdHR/v1jv0hIaLc2JWWQVVFksXZlM9lJ0WqEryCx+Bdd
hq5DF/JOLfi+rDjnzo0bbz8waVIXfL950qS+L27c+JJOhmgFP34LW76LwKjO
b9ao0bzMcePQyrXZgwbNTxs7tnHx99/rRrvlWbGmsV/OwJf4ZM9H8LpxWBMb
71Np88gBdGSDWJFaJH41NcMCalIzfkTHE8ZsiE7OSbMWChWdo55KVM/yagBq
ogpO0xcwgPxCRlUkFOyGYGKgMo2GTPRUUGrJOVkbEfWAWjYBfhxa4CEBD/y0
Z5jy7/AAzADQ/sKQ8nziSdo6A+BYwaI+PlsUVKzuEPlul+uzvI9vearpkWqb
OY4XVS/NccIv0stV+VTO5hdo+2upMBoXUyBFgH9FDs1kStQKQHVRBqpTTcL9
9Gk50MXQ0yHeU/wm1ItKPhg4uhjqZfQcrWUjwJ8C5fKAwn/WF46TtbrezrM6
Ss3O8c/T7b85KWneuJQUFX3mzsAdcDdVQeCUFXlxwmBZ0bAc6sLReXknW8TF
df9E2UaSEqPv3EmXsdjAO1Pox0CJOVVSYCzjqVQOOuSIzTk6Z+1X43mBuPAd
l4/pk0YU0mBC8I3OiAwRS4G0Csw0WdOWJsOBC1rIt4TyhaK1tNDPP1sZM0No
9EiPHm3mHj06/mRCQovDKSnX6ay5Jzk5/tXMzGd9HMc6ZTMmCnHW0Kb776Q/
PxCMqdgRncjLLwo40bvaJgQ8Ob707muReHsnnfognn7f80OzZg0w7XSYVgOk
qnntSnF57RA/umytrFQPRep1xPiZk1noXlHpqnJEeO6V48cP/T42tvF3cXFN
JxQXz2HaRBv4+b9Im9Buadrbj/j4kI0NPCntWJ+ymLS8pKT82EaNEjMzMvwG
Jdcu1QzAklEGlrT8tXOHeMqsEF3aNRnfKWFB4Yy1o5KmpOAG+Sgpq7DJlyx5
3REbslRpTTRYrLLtpW+3FZMgS3dF4FQ9zAhq8qt+CNM1N5w0Ea1vxCOj9Pp2
uI/MCoa3581HLdTlvp08jPW9q9WsYAxh9AFaAQUd4tsI9grFw8j96HgKo86P
HJD2mQZJJA7nkmOrAgUvGx/Qb+dOwY8qRcuHik+q3tRKVui3U7VaCKHCC+X8
OYuXiQPDDRyobsucp91WOLlwm1l2lKmDmAnuyMWyNc0Up2L+gtK47TY0xvM1
FCg8BdbncXk7JUVtopcjguO3yuXkN7XFr93UD/x65wd5eakjZ85k147nKDC3
PbiaLs9fR1m3f0U/etdtMfNbrXLwm1o8lvlMRxHCA7j8LFOuRRP8FW7mrloG
7uK9nRRXiU8q7QLccCfhnoX4EtapuLjmP8TGNliemTnM8QQT1RO305c7UYWC
6tAyXbzKFj2pSQU6JYGR1h9dOFCvI5VIGaeLzC4unmiaLvIYXVzyDm0dvoFS
BiTRgTTeGkZnH6W3q7OGYdY9kDSgS2Fc82oZaW8nOi5OqWVgH8lIUXbVIPgV
g1Z4CGqWkK5ydUoSgykQL4UbeEkJAvNQmYojRCyb4Vukx9axHxnxspA2ZKRi
tGgpztAKXEL9w5YhXokP9X/6ELFShFvPEvNaNLzKHC5vrTLXmUHWNomuZu5Y
phNR75FkTyeKQn1OV+MT/WaFcm3cLG0LIItG6hhopJr9bTh5ID4F8p84dKJz
B5fPleYOcV1rQoeaCMmTbHwmQtrECKV0R/uwB8meMzFHgITuo++//z5KHbUF
fBwzRpVyMoa8TWV/xkhejMKZwAFAn9QOChAxFWL1I+MfYbvJyBmNysEZEbac
4YYhYdlrWvUbVxjj5TZzBtf26pxRx54zYJ9yHRHfCaYMiz9Gpx+VlGuJHbVU
gE/kT8VVg4ogRlj0UpkfSp+0L00VwzSFmugyfYYZtFc8/XfPHEqfgG2MZtGR
ZxxPT7zawDcmXaJsRNx7wNENG44ntGo1Mi01VXXoFdgD25eSytiyKMAgXZ32
wuB9/Xt19VFDJiZiM1Bnojq2TCRiMZYaUiwGFHi9apdN7LBWYAZSa42hVdZ8
ANUKrvrQBNqICbeKhVw5k3brrnUwkE8A9mhXWPjFubi4upipp/ZJNRKQWguH
CVlvkErMRfiTjg/b1DWwjYJPt+AtXSI7KdLEMDqz1DUQi0pD6JfFe+UzwClh
PYJ/xRPUMXOLmuMPzWvHJ1zFwXfjohWQCS5VLTgeqVpOHlHpLXQvdhDCunab
+hGtuZ9o5VD76JnU7JX0rkKffHhnwp0v7irehbyUiUWkXVUlKBIhbxCtaiCA
whGh5toxKH30qNgKAsSB0sJz3tJCk99hbcxQikN8JI3vysOM12qDZGNWQvQV
4BKOC+tcovZTD4pLmElUhSSJqjfJJpMKd85U8bNPk3p3RPk3B3/MC19XbLp7
YwOfqFVU9M4FjwA3zAnHtLM6hQUFUVeAS7SZfBaX1A/MJVK/R+jBFo7Qou9E
TkoO/wgTj1j8Uc/AHco08RGrEK+i5O+hYoT3bBNSqx2YQ1Sf4y3OEJXkSshx
iN9u2D5PykkQFmq1maXPkmY4X3TujQbmqOF7TVwLPYeF760o2EP2rKESfYgs
wOf3YQ2FJS5tmTtKD0M9YdLSgS4yeFLPQB7q0jBAWZ3DHJQFQ3hWteYeM8jG
/kTYnrvuObKmYPvQhrogVA5PL7HK/Rqa+UGiYEWpTjX35QZVrMH1iz4zy0gm
X2asXbtWKLuawfGEvHQVnSewz0N63uTJX3ydmPjjnsTEnxdPnlwwJTV17+zN
m+enHjqU9C/PsUrvy0ERzbNcdT+r7nm6/N4blPVF98WvjkzNy0P/yVo8W6ch
J39Un0VFKRMMiRQ3LmutUhQiHlXoIX9vgCXaR5XXM6hyBROvlcOSLibp1nam
szOoIHEP7Y9Ppj8Xl9LZaglQO/28m77tsYmO9PPRz4rkeRWLjKShiVDEsO5X
05rB2TSjczaN7zyB1s+Bcq5yBRRxbVtFHGWVHCpFzCsb+dBQNWfaGItqHKDd
XbBqVyltXDOw5pW3iEQToAB88mLkjSnVVeNUKd/t9MNdGbQrUZ8U7KN05VNG
YJzishhNuCxkGEIgdIu19YOvoq0TWNGqiTb4yVolWYmlTwgpzGvyienESgTZ
G23FNpw00H3WvLrBoGMVbHgY9BXrWLaBfDIOD5ala62CM9azys6HH1McGSnW
OmMPhA10sb9oiNCsvgte1LLVu5FWUTbJmgJeV4jVuWJl2OovTJNFaroNbwoI
qZFtJe4VU2tB4lCewc2BfyZUP70cYHX+XR45UHkISA5u5lealzpx4sTfK1eu
LPq/bnBqWTquVUz1Wyha++BOos86SNN8XGpR0T++c743nTSfonm2o9SrxcVs
mg/YRJfPtoy7Oq9lbEsIoZwgFLNgb37GoP/m7HRkoqs4uL5qMW43ccmSJVDT
azwo3+f5l5dV0TV1fXtNzdte4BPHexlPtktQBQFhlWJRDZpqDi2c0J4u5ZTH
8FaJ/8fovSXP0PZZzmubQ8T0mUoYhrr1PGvji89giYM94xPjV59dPhj2th66
qXEFFHplg0JXNdo+i5qTXKKOjQiMuX/kvf++pdhVF+Ia82j6OESOymNqRwbW
7WoIYaSjy1ivh3hH1qH+8dd/nPiPW/Fe6V3Y0k/RgtfNu42atHwYBjtzGa8Z
4JIriPrG4+uZNX7dwBpf3ZlLtMQnJco+GWwVAGQVzXeFjtWXaMBvAEe0UjrJ
5qWW2trSQChPfWIKUF2Kh+2dm7uVmWCoPRGoektoe6uLtGWKxJodapVB9p9L
r5BUKoVgzwWVeJ0epmCWTTZ4ucvQGnwnLxXlkyEg8zbWTEEmouB1uzEEgISw
2jXFAkRwSygfNgj8iKKyPVF408y+mWk1YcOn4E0LfL/oUZZnWrVqhcZJr6F2
IPJ49uzy5cm52dmPvVdQgAJq/0D/M7NkQAfbQfukkh1OHAU5oTIVxwj1oCbT
o0929UxIGLWouNgnP+D59ZP4HvHL52TOYSpho8Un/q+uEygEBJWE71FaI9ai
UefAbID19vz8+fOLK1WqNP9f//oXXAAQAS/ph1ElzAtThKeBgWxUgpAXAIDI
QTaU3EM0WItCLNRVfSxiB3NKywz4CEEQoZrypAzkOZXR7owkWcHLsRvWMMAD
Mo1jytxOps4VoCVttzQ/PyMGigQiz1PZWU9DZwNH0NKcvAkThmasXGlMTMse
rxFsRGgInV2VQhumrqbxg3VOUsrcUEIklCrE6qW8jS+CyFXRu09ygGSqpVQi
oZYtO4XyxDjebkPFfiDc+MhbXInwho1Lwpv02hCUKgrkWTM6QfnEg9S+A5w7
YivRT/zZGZdZIZ+lhAC+uMN1BmpSjOK7+JW8BrM/uAlrKIxbvHiea0iZ5OQz
eVZbgQfyxJlmwaKm1QhsNkqrYWAo9R0v5SXqo1ScGbQBFcPBD/Y7VJf7sFOg
PUNrGBhKfYfRauUYVFKJd53QoCxFS5GBaSnMnpbwAFbfqlZzUWo/z/egJvG7
5KbqqGjGxCF4KuCfJU/IhXk3r1i/PjNr+vTd344Y8cHPiYnzfps8+Znv09Pn
rM/OXjvGM4Z1LpJmamXmIvAcVj3BOAfPYYIH3o8uWr58jUc2Nz33+ecD3i8p
0VZMEkku5LDBO1jOz0Q50j2pBMoBpUDLQnnzmqL4F5+f+WXx4vdXP/vs5w8P
GNB33759SlDBLsBDt61cpprbhgZ2UcdxXYKc9iy/Q++KCZUa7qZISzC8soD2
j3mBdkyzeEUKRJlJA5Qbbdo9rR/KjbyL0LnRuVaM2gqhl0EeDcpHHrtoUU/4
HII8ZHfEcBiV44DoPp5VLdbtjW3WbHnmsGGiu2oYiEILViXQmczXadtTyIR/
Qhu6r6Nv7kWQqszUgWa3WX2h+geJkzHZ6xfoEPpQAw//AKsL+NCD+g7aBs+u
pZnCOOQKbcM2sxVe9uOG+oG5QUVY8bOY7YFPSnh98s1KUKFOIaiiNeo76D9L
eGWltHBYIJw+q9tcY88K1oZgXukKx1PyYDsSF9dma1pabwjyYHtikJQcwROA
8ckKvyuZMZIBV9P7kUE1AxmoSCPfAloZdouYAGrS+rxOkknrVzNoffUIaDY7
XugIvMc9hRvU2Kzx3YE1fqRB46sIMO+hIbvfu6IXFm7DHdRxMf6aHrum4XrI
s2AiK77H04s16ZSljt4bv7SoaMuUQ4eweOry49Onr/xjxAj4FxicbN2LQapW
025e+PPPKRsOHdq1aP36JV8uXDjrsmSBVcVDhnyZ1LYteySf9ejQQewr79H6
nGvmfY581L4U88oJ5z/7bMXnCxZsOjxlyvxfJ0/W1f6LxS+9dCCxS5fbC3fu
PBLXpg04VlC9aephI4N+r+MVPrzjYYEhY3mWJt1ev7Ruh+5eQ1/e79hnkEqo
Mi/hDcW2kI6PZt2+/ujRgRg+OO+DpKQ7x23cOI/DLrw8SZnKvIlZmX9Cb3ef
R7+Vmpc41eQJyKxFJEaOnsvDEO91dscO7pNqBv2tJtXYBZNCveq93Jlh6clH
sjLDqMBY4BJ03sqjukG7B1oOrZpBu9f1anI2VXELoQd5ePtp8gaBNbma8+hT
EaQ0OX4Wm0qRpessMeW1CnjahlA6cnVX81ovrQ1aXBXaQIXAROLsA653+9Gj
Ozne9EBZmjtMz+1YRTY86URlaUUfVTFocZutGqvYanE3L9Am7OkQWT2K2+PW
kAI8UBWDUuftz0xKvYqtUhcl6xbThQhVHsaqF6oGQ1IoX6leIlnBr16zefML
K0+e9NfoMbYaPUz3EKxiGNWRk7Cl68iRI4VGqlwOza52ubaboqDWdmdTnm1s
jFiT0lcTJYyVpmoX5nsz161bOX7oUPYKLsTWrMleQdp/Hh6+/vjyKWP+m7ma
I1TXGyhAVYv754xVjAVq5cHcd9/dPKlv3x/j6tffkdar14dn77jjzeLHH1+Q
O2bM+pSBA5/ZOGuWiEFVNjCCNmXLYgQVIcAA5xwfGzQ8UwqwC7OkmoEZxDVF
JMhdmiPKsv9hx8+lNeNhx/em3Vs5/jxx8eLZz6elvYzzMz1u5ZdJSW2/S05u
uvrs2cEL8/JGvzt37oPWRo3BcUNNnwgPyVhIuaNGUsqieCyycuLZUI/sXrr0
o5TbbhNbRVQxEEblwIRR9QoQhpryqof0edtnLgEB1XFXmdZjCbSTIi9PqBOH
qm7RMwVQiiEyUoWWsNGhtEgpHmkYmEcU5D5zG5Rw+0SQ1D4znCrGJy7D510d
8B0v3ShgU7yir76ChxYmTEtbXoli45ddbjw87oV40d6UlFsSdu/OdCWWSS5Q
r6zVrdiQivUDNqZCNNe0borNDhGV7PkFnWHNhVRRCrQCDwQhAVymVVEC7fxQ
yZZfxBx9zoLi1lqkSiQzYJLyft7SmojQnYXVjxQVZcw7eHDtKulPsJ4z8Qto
C/2Fy8L/0W+F75HCwNYNYnOPclAM701tQzExwVFMeACKkV5sDVbS3E+cK61X
fPbsH5EREeteHHTf5hMLn/zXkdHDNhf27csBKf/kSGsD9bBh4kc9akoE7oY8
m0bRFh39M+OJJ/ZMio//Oumaa/T4lE9KhOd36nTUxEBHSnXAQmNRFxuUyc7B
A7M5ai2xw8Kps1ITi5XkczUCKyFck0pbRsLzeJu+fdiOlUadPbsop0eP9g/v
3v32l3FxbdnHxZC/ubBw/9uLFz+8Oi1t8OkePZpgPzhTjiPcISk1YI2ikZKU
K9uFMwMR07JJk0ZcrFatircgRmiNpza+/npOUvv2T8997bVKBhqKCUxDDtbO
NNHQZwkJHeDFYasqAKlA5NWA0Q/9CnM3CcVjWg2FNUyA1VMMtCPS5VYFkNur
WTioCe1j4740Ckw7PAdJr5FSQuyTWVczrHEjXm0fQqwtEc0JFfwrl10Rjgwe
z2cRlBa2hCPSP9aQVJeGch2bkTEfa928OX784/fb840qVWBVy+kOdJR3LpPv
xt6mNUyqm/km2pZvwlmB8WV58oky/PVllK11+EovUWLmnWgD76iQB3raSlEo
O4D9QHY6fJqmipUDp8xLxbfs3Z1QzpCxQyeVeuUhn3zySd51110XFPWUse+t
DPJVcUI9rQoLCvz5RppXdVkWYCpxt0DCIM/4Hgsw/9Qktskj63ev56U57HIi
pfLzzQ0cFGXmIMWzluep+hXIeVPfVUVhLMnF4AOlTfjBr/3z1DcWFTW1pyLc
hhc51KbX8ODmGjURkDHNqWtqUZG1aalpukIDf79pcXZ2MgzH/RkZNzNDwQ96
Ni/vVY6tbUpK6gfDMpjse6hDZqpjYKbq9swElbM+M3MgM9NbR48+mpuUFMfM
NKQ4d9V/Y+vVQJ9EGygoKjAFyUxuKU/ohbNnp6GTsufO7cxUjBV69yUnd8Wy
KggkFsTF1nkjY8GTjI5hLREzx0TbckyEj5Yib6bHVpvYEI6asm5HOPjVqs9q
xs3RVhJRUyFYRvXkE3hfBNC0jVV5s3CV/LZdVaSpLe34zFoStqda2ynEy4O/
NGtWVbhLg+zpp4GXDHgBElYvuBpv9qlTTS0z1UQaqEZZVTAP4dqIGSGqgXAK
rLmOpiWwAi0XEmngF+Wk8HIqfG32ObWVBGy5JMLMJVEGLpGB+Erw2rvuO3v2
ru2FhRmJAJ5oX9e5c89dPXjwR1MOHvQnDF7tyYYvpLttuSoji9LT3/t8+vTj
WSNGYO86pDZ0V0WyTwQMdDwuhByWyIphScOwbZ3IcEitVilYXuDdl3RaiDDT
gnomXryWk2m8VYA8K0ang6mXp0/7/Pux9+y61CfB6KWYUuIqFME7sHDZImNr
Wiq4maXyI80qXza9HmYXHY2Li102d+4IDpVhjurGs2f726VT4on2dCT61Imq
d5oCr2FQ9SrjAw3xZefObf/do8eN8Iug6ldkZz/0ff+7Gh+lb2Lfo7/usY2O
mWaxRQTW83FePZ+cmbl40dy5o0YUFi67WK9eFbhb2fRTZ2wa4GTynI+eD7SW
h7U3oKbn1ajmiA5bjTx7WozqZmad3kSNNU2nQ79uJeoN7ajUuE/sSgkR1Djk
Sqhp9RRc5SQ+yaWIrcU4eFabWIzDmrGo6Wz5FJFcu8SrJmGoIFvNOY/77PW0
FAOxJwHPdcSV9C1AjX4B7/tkXubJR1mrW3BxLXgLJMPrG4rJTyZHoE4ARR1u
UNTqPvpKDrgHP4ogteqBFXUls6KOMChqyVZVTFb9942TklY8lJsLJf1d07i4
Q9d37nygi4y08WpOZShslec0BYucxpt4Dxv/xBr6Ablq1uTR5VPkvBiOrsi5
ns248YmwqbhwT5cxMfbUpFr/nbWdGvtCu5sWalLaHfeGjHOoGp8hIGwg6Nq9
uaXdbVbiU8/DiWMuSORdrYSnIEd3/eCSJbRkCNGqZ4hmIdMZSPOXqfKr2Kr8
Jmgfz0cHDtxufEZHvECvTsOEFbu41Pv0xz8wlW4OFU0oRQlkv1uX3DGvDmCA
ZcGBdJ5sheYPpO/WB4pAYU7dTvrsdhMt1AjAAOEGBtDUBdQEqyfuDaEurjIz
gFq5wjPcpy4heszfqld61icLLgUtgpeI5wHJmlvYx+29RrtpQQwrlKgRgHyI
aN61mYcWPwRuo0+7u7csIgjH4NBnhkBbo2tMHNDAzAGhthwQzjpZp1uInUn9
+0179lH/obbqPxyX1mfe4fLejTltNb/NRiOmClW1UUQw8RwObaBRXMTot7yf
ZifYsoKUO3MKIcLXxC+LHZT1Ab1lVVzwrn0aOaiKl6DZoaqBHWyWT1JzHDnW
wsX3/oKnE4PapCkocqhqSw5ik0trFT9TiKeFxQihZkZQz8AaVQ+mQfbkNWs7
IQOPRI+DXllANGauR3A8MI/cRnS3TgIDqXj9SMpPtVX+0bbKP0wf3+heUQpi
WiRePqmYfjeLnn8GuRWdEBZR4agP6NCdp+mLJifoi5YoXzURglqLAXxjaVUe
varJskvl7dCZz9HSV8qbDQ+0fVaoLQmUUho8z6CVWf/LNEK0z8QFzzd2UR4l
Zj5rXKjKeK674lgTboqbd5LP4b+8hXAE6tnyQLjPOnPaINKCN9YM7IH2XKCY
xocLTBGbxmYCCDEQgLqkDwHwUNO1fqMAWj/EoPXVdX0ArBJY1duskeQ2qHql
aMpRmCSyAZB6uDhQ/2EGdV9GDVOzAOq+Stnq/ofYBg3GZ86d661M9FXttcqn
2tVSyz6qneQ6GC7T0kbalANLNFmYSm8WFZxSj7JX6hDcUnkmXcFdZSl1TvX4
KXXlTvgodfldnUCa/EOiO1YRDdlE1A+f8e9eols2EA3AnojYNXghfT0a+2r4
z78ONyhu02AMMzyP8jh8gjFkb41XqCxK7SQB2bZixWEGrW6K1KjpiRWqeQoP
oOZDDGrepCXamHV7A34MmtdTbaHLizjb6XelkH3SxkoyffS72ttJX/AOlxHr
aVjZmFLRHbePUg8zaPIB9ppcDQaUd1iTRSINmryZr8qWCzqLJTTclgr3U+O8
aIYxyC4t1QiTGrfUt6pfB0dZaZTowKpbefP/r7s3j9OrqNaF+/bcnc4cyAgk
ECAQCBAZoghJGEJDQMIgRBACCBLwQMABMIhwQRlEGZTpMIgiChxAFCFB8BhE
PcEB4USQOCVi0BgHosdwsPV6675P1XqqVu137d1vN7m/3/2+Pzrp9+29a1zr
qbVWraEI3fgWeNw6CLje0sBlpvkvweUpFbgcACKGkL1n4513VjoFaUAePzhA
loOLgFwKxDJTmj4yWqjPXTowIG4pB+IsqZhlb5kagbgegz1r+TQJQdYYZSEv
ZGaUv65t6cxvObf/fzj31hfdP6c/797Y/fvuD3t9372019fds/OudqsujDmw
DaSVAdMgoVBtiB4wEXZP94MfmHmog1zz5sKVtzMWT1BPI2xE1qC/bvlmUNVC
U6KoxavTbQAdmxAqOsx0VgOoUGaWqUIBaMyqtl9YADRTl4litAGgFvpZAHpU
OYBub4ClWIUIlqhZh58dDRyUNHUaB1EADimRm3aoxroAyUOJdQ/e89WvvrjX
6683BGqBWToAald/cdUqM4f/thUoJgpOmXR5zf/+8EX3v/yljy76w8qvgeJD
d0MbAa7lKx+59OEVX/z0Nd984gmPTlMNBNqqMQQ60912Gz57BNrBQJawea14
DmMgqIQK95kjO2yvoFYIa//p/jnjVff3iX90fxv9J/eXUb92G7Z6xv1uv5fc
Azsvcb+/QXkKd6C7m93ZZy93vb1fdCdkYfybJW3B9kmqQtY1z+sTGpegrnHu
ApgQVtR0we+5V/Y+2f3p85495tvMKzJv5mQ9pJp5hfEyZXi+0FYhLt9LOiMN
Rp1qMOWCcqYkzWimFFUd+bmQbZG66FSDKbdPTAm+XXao0jGnVDPlNtUSxs0f
2rRp/bTXXltx3Ve/uviJX/7SM+OUemniS2dt3HjbDatXo8vtKvhwu5wPT/rn
l+59cu3Hz3jk9fe8y5Imtk4CxNF/XLHi4VWXXrrmu5ef+PAfzjujSoDY2mDB
qTkLgoV+4Pbcs1II2KbscE/n+go3Z87H3dKl8xMLznbu6aWu7+NfcX858jX3
0sg/uD+Oed290f2a6xv5U/e3HZa7/9X7Kefej2uRLN5QXEyo4ID9XnI77/xv
7p3vnOhefXXKZuA+uXMFaHzZXXOUP3W3ree+k5y75wX3m91Wu3/sCFUPwkil
/nKwzX0xMtM9h+GEjqq5T7gpi5M+IlAUEzZl8c/xXkhx3/YG9x1Zzn3bGdwn
Zx+PRK85WIn4SCKaHcO77dALDnmiXl+YVM2Rk6o50jwexcXPp8MuqhL02CqR
/b3QRV2hShEIkW89FPD3Xb/pF43Y5YMuObpoJNfWlgG7YloZSXckFSuB3Q3w
vnWcwe/xxiyX4714H2gqBmhBDMeF361u9WKI6Kvdr3b8sXttl1fc37eG+P6S
cztDpP+yc0fhDDODjgN7dBetHCe5e+65wS1Zgn70+KZtBlCQbO/aqBFF8sBK
oyE2z3QbnqM4fb5z1+3r3HcGZeyYbYOFBOtlt4z91DQblo7qGIobNsUOs+0x
wGIHAyzeUQ4W2xpgMU3EeG0fdhWgMckAjdBGp7YFW8aGQmLjIniMHwR4SOyy
thPXgQiTIZWAiGUL3qoCS1i4VRsLBhjgSj/+Aq7QWKaNue1JihgIzIwwUEaK
6GUoY/jt9Ys0Iw2k2bYEafC1gptcxQ+rtoV2n/iie+IE2GJR3/gL7rV33+v+
ceL3ndsLIvPTzs2GSvBN5+bi9/5zpjW1WQbXpubgkaMNs/jJJrTbZsAmywWa
1ybaMBtgulMbSS31f3MkNHirDV+su6Pd5PpJayxwlCknQXXPojmxIH5Dugz4
2tGAryPK4WuKAV875bKOoqu6m7CJBnLJ69ktlggkFWm5+rnNGhiEyTmQXXWV
xLuwMFkJkrF8p0ayCRVINsNAsgF6LnTbSMbbXY1kPYNDMsvlYCcDyYYOAsms
m6gpNpKlHIwWknVwQHWOYOMuds99DP4BZ7q/3UZWrVHagbiBetC5Y+FbcJdz
p0Goou/B3e4vpzzuXjjs2+5zNfXl870fcs98Anf+rHWqr5VajTnsvRnAy7ot
snwFRKbIbnjIQeVxHm8Oxd5io5hsZ3b100+OlK6EQNE+eky9EBZDBDsMFJtm
oNjh5Sg22UCxnQ0UK8lHSDlfo9jOBopVJRfsJ0Ht6EGg2BgDxeifU0CxYdUo
NtRAsbEVKLaHgWIDjAYvcYaio6JGsVGDQzEWVdcotrOBYqMHgWKWw1D0ls9R
rL0SxWJNtToUm0SW39m9/pKOfYPn0Qvuld1+6p7ZYZX79q6fcy8tutptuhD2
ofwe/m/zfuC+uyfyQpnyWkH+2q8xBHvGbdgPLqhVCJahFQMhNVpV5eFrsKBF
JVrtaqOV3PZl9ywsZV+CViyZqIPSghdpaXBZqwFYOxmANb8csLYxAGu6AViM
HCoA1hYGYE03AItuBBZg9ZO6dMQgAGuCAVh0MTdDw0oBi9m/NGCNqQCsPQ3A
Gl4NWHdsOvdcpKhDqrrZv3/xRQbRaGQa1z8yXfvPD1/4tZc+d8Epm5Y/RGSy
ZKnx/aPQTe5977vfHX88yjx4FNraRpzOSsQJ055SrJH8gLv9uPvc0oXL3HGH
3u7OOgNaGzLZlUXdAlW+4u4/8iz3l1uOdu7hKp/Oz7r1p37ZPX4UqjlnCBQq
roxgOYFGBKfl7tVeeBBp2NnaQJgqD5ktNwPC7GgjjFg2MDtAgu+O9x/VSRcy
RTDkNcjioNCLt3PFm3sFLzsb8HJYObzwwkPDyy4GvDBevQAvNNNreNnFgJfO
CnjpJ0/mYDKiTTbghfGJBXihQ1MJvGxhwMvICnjZx4AXSZkLoebaFY89dsez
d9yBhMaVEUsFTxa1Vz0T//7ahjueXXXHWZse+nwj0s92BsbI5d0R7tFHb3WL
F8NG3K+kQ2fRAsZ0V2JMOByyGEhgyiXuXy+/2C3/mOWyHaY+AZBzh7vxdCRO
6y/6k/fX57tfXHe/+8rxl7j/dXlZbFFR+JEdsxzztAAEm9g17veNl+m1KqCQ
DSwomrQZoCiqzzkUCTFlN2NTq6FIoCUzqYeUXh0UdvA3BuV81rlT/Qh2MeDn
0HL42cqAn10N+CnJJTncgJ9dDfgJummXhp/zr3PuhC8axV+7B4E3Oxh4I31q
vDl92bp15k3aeANlhlWgzNtKhZgSY1C/ytjnf7CyJttseNG6AG/tX7axcMdK
wSjNW5W4B6R1DbOxqKcSi/rJQFieLaQ1BOQ999ANbumS9Gi/lUCWujUfv8t9
8TSEEDZtjkLmMwysCpa90Zmi5d5krkcr02FVZkTDEWDA2CWFmYvYlTnTBGNP
hwVaxzr3oA8pCVWUYrzIz52beqFzV/t4EQudesvRaZKBTjMMdGIuUzsTYYZO
M0rRKeb+u+l9odjzt9+OXLFZlPfAUGmXUlSK4s4DJ/zjH08t+s1vnrh05coF
P1q7ll4eGoiGVADRfgYQ9dhAZFiFnv7Fx097+L/fc0L57X8OREMGB0RW9eit
DCAaMgggKomLHlYJRN3VQBTG0RmcAp576Cn3kYNQcrQYIdFRD0LXunUfRBXU
x9w/zVR9grVvDoS2N0CIWZY1CHXWC1EDBiIrWrkqsG3aZgCiLXIhaqVzs2rc
de0uucD0Befe/YJzuwF30LXAzuecW7TQufsYsez9/KYbsHNIOexMNGBnNwN2
eOIXYMcKQtjNgJ1AP1uU6V3+EFEC00eucO6wxxuEnpkG9Ai9VrkT1XkPTDLw
qLMCj+YYeFSSai1oJj3UsBq1VlvlBwZplh5p4BIdPDQuheaHNoJLh7plyy53
l1wSa4yNqASifjLUDOORnMdR9ZtxITQ7lJOY6P7+apWYlCFU+2ZAKFJNffaz
HKGGDx6h7nDPnn6E++Oj0oaNRjM2AxqJGoD1uN25M7RoJKpO+znOfRphdkUd
LuT379TmIYBqMV7AMkjPK0enCQY67W6gU0m6zHYDnXY30CmcVKOq0MkShh6b
H0rCf29v524/A2G/AZFmGYDUj+mnxB490YCktgpIOtCApHYbklh3SBt9GtTf
8nxlViHfAcNTvJCqD2QyCqZ4sQnwg+bgH/1ld9RRpWJTtaLWWg1LVjmSRpMQ
Wxf2g6nr2LkZYGq0AVOsPKdhqiJ44j/c2rfe7V4/pV9BqqsCpvbcDDAl2Rm1
Q1JRkxMxqEtrdGXmJ8mnmJu2xbHBDKWw3AAOLgex8QaI7WGA2GgbxHjpq0Es
vD46AzEXutQABjHquAcG5p1tms2D3bI7QzQXhleeor0OzSYYaMZ1ttBsnoFm
JRf4LLJZn/Z2gIniczSbPDg0azPQbEIpmtUpdC0J5AamGyqQ6y7W4ygDOKte
Xrl7QEcGcK7gStk1CHDr3gzg1m2AGws/a3ALezCq6H45WI2xpQLn3jY4nFvs
3K1Q5zwOtZA8cmyTW7fMws7Q6RKIO8ZAOJEjZqr64jFcxfI2P6gc4Wg/0Qg3
00A4KXBXRLgM2sJ7QwFtx9QW/6zaajx4LIoCB+i698QKCKuqzbRX6BvvlmqF
I2zckpRlxC0Tq8K9Q6vGKu/obQSEW1gVJO+hjWKVEVPSUBgoQQqBWh6ZLFQa
Z6PSYCxWCpA60E5p7LZV3jmKXraNfLF74taPu48vxZiHDQJ4gvRqRrY3DDwu
hYKPNfBGTn7jWm7kQHHneOfuh+4FR9IIMuLIUAQZBOMDRMpABmx+tXMXftG5
E/COyDNZfEpbNaAsMAClI4lMi4ohLVas24HlgMLQKQ0obzEARaVD/eypzj09
O4BBsEBFA/aZt4Xw79+Orw21NtwnDnHuqosK2ME8hhZ27CGLIbixbpJ1b18H
G8qV8VNX/v73K9/x+99HuAheo60zf7vht0/f/Yu7P/uV730FGDHOgIbRthjz
uX++59SXfrdw7i1vfPh8DQ3Ty0WWr7nDD/+5mzrVElmsivZjbSCo8Fx8zs2c
iZjsOiAI8Bi1rJ+6HXa43Z1xRqH0esb+YVU7Nfs/4j674Afu8j3f7777KQoh
IxtnfQjv6sqpUub4D/eHt37LPb+/Zn28j+c97402+J3bp/ldPNbK+P06585H
2Mta5yYj4Rz4ErDpvtSMx+XOAz2Dl9RZXypagKtfdG76T53boUbg7yLXg3Xx
vL+cEl/uLKajo5rljzBYXg7cYhiIX6DtDJY/oJzltzRYfs9Slo/qEP43o9cC
4vRYdpuvzwt2G1x6Qa64/BIU/AyqVFX6S1rlDfFheW2VJtgwIKEcRanhkNVr
1uCx+dKoUmiAChQiLEQIS9VDIWD6nzf9phGhISDDUPz6Bffudw8olnWoAQ8l
PjphGXrQ87nuxhsblRXCWdZhqSkIMfeQoC7XIkyIBHOQ+4+n7nJXnAZoMI0x
o+txAhzF8xbnJc/aAk6M5BFfxAtmCwansA18BvfU4QVrt2m8GGvgRdjwth7n
/orz/hHnFsAW6x2Hm9F6M7oKv0WYoKOpjoeQdDg7O/cSQGWZc4fW+GUpBoeX
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
NP2P/wMZtP/F\
\>"],ExpressionUUID->"401ae9fc-69cc-4098-b40f-668268e9ca9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"StirlingS2", "[", 
    RowBox[{"5", ",", 
     RowBox[{"5", "-", "k"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7031603452749515`*^9, 3.7031603969705143`*^9}, {
  3.7031613958418922`*^9, 
  3.703161404372097*^9}},ExpressionUUID->"33f61784-e6af-4b02-9284-\
aa6ab0d7f7e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "10", ",", "25", ",", "15", ",", "1", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7031603573025303`*^9, 3.703160397528922*^9}, 
   3.703160806295189*^9, 3.7031608689560986`*^9, 3.703160938044267*^9, 
   3.7031611666933184`*^9, 3.7031613392871356`*^9, {3.7031613966473083`*^9, 
   3.7031614047551537`*^9}},ExpressionUUID->"dfe29e59-c987-4abb-8312-\
49b1d5bd2887"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 722, 20, 30, "Input", "ExpressionUUID" -> \
"f68d2800-28e5-47e6-8e75-6541172584b4"],
Cell[1305, 44, 4383, 91, 215, "Output", "ExpressionUUID" -> \
"4da47acd-bd66-4db9-981d-27ac1f2786aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5725, 140, 780, 21, 30, "Input", "ExpressionUUID" -> \
"05f92fd3-e09a-4765-8fc7-b377789357f5"],
Cell[6508, 163, 13962, 282, 707, "Output", "ExpressionUUID" -> \
"3822d5c3-9d76-4509-b892-21ffba146dab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20507, 450, 166, 3, 70, "Section", "ExpressionUUID" -> \
"8dc1f6ac-e471-4e17-a8d7-f824bde9c02b"],
Cell[20676, 455, 1047, 30, 30, "Input", "ExpressionUUID" -> \
"29e0c46c-c537-4f55-9755-05dbde47dfe5"],
Cell[21726, 487, 948, 29, 30, "Input", "ExpressionUUID" -> \
"6cb809a4-7df7-4562-a280-54d6b547bda2"],
Cell[22677, 518, 537, 15, 30, "Input", "ExpressionUUID" -> \
"c5b44a42-d7db-4241-b97a-efcea35beadc"],
Cell[23217, 535, 546, 15, 30, "Input", "ExpressionUUID" -> \
"510cb63e-792d-4dac-91fb-8216b257bf4e"],
Cell[23766, 552, 665, 16, 30, "Input", "ExpressionUUID" -> \
"8266cecc-ff1c-448e-8236-4dc200e743c0"],
Cell[24434, 570, 490, 14, 30, "Input", "ExpressionUUID" -> \
"5fa127d7-3a3d-403b-8635-2a7cfbf5516c"],
Cell[CellGroupData[{
Cell[24949, 588, 5350, 141, 316, "Input", "ExpressionUUID" -> \
"4b69470b-a043-4ef0-aead-d90c0cff63e2"],
Cell[30302, 731, 142330, 2613, 288, 52187, 1135, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "169cd92a-bfdf-4830-8dc6-6f96f10a8f42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172669, 3349, 333, 9, 30, "Input", "ExpressionUUID" -> \
"35874dcb-0a1f-431f-bc6f-d1b0b45a4b29"],
Cell[173005, 3360, 281, 7, 30, "Output", "ExpressionUUID" -> \
"19c8a55e-4bee-4fa9-af4f-b39f57f6fbee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173335, 3373, 166, 3, 70, "Section", "ExpressionUUID" -> \
"4cd83847-63f2-4d49-bfa8-a1bc481528a4"],
Cell[173504, 3378, 1047, 30, 30, "Input", "ExpressionUUID" -> \
"4ba20206-f80c-4b9d-a77e-2c861e0ce94f"],
Cell[174554, 3410, 948, 29, 30, "Input", "ExpressionUUID" -> \
"104f17fb-11e3-4792-b073-16038b6f7cfc"],
Cell[175505, 3441, 634, 16, 30, "Input", "ExpressionUUID" -> \
"f204d444-b22d-4fc9-9a83-a1e406ef1583"],
Cell[176142, 3459, 622, 16, 30, "Input", "ExpressionUUID" -> \
"b04474c4-8da2-4ddc-8ddd-39741eb2fd18"],
Cell[176767, 3477, 865, 19, 30, "Input", "ExpressionUUID" -> \
"c67432af-f6e7-492d-96dd-abafa5e1c267"],
Cell[177635, 3498, 239, 5, 30, "Input", "ExpressionUUID" -> \
"004a3587-0c2b-47e3-bcc0-9698bd9e99d0"],
Cell[CellGroupData[{
Cell[177899, 3507, 3906, 102, 240, "Input", "ExpressionUUID" -> \
"bb2cc9ef-cb10-4ab8-967a-c46b4fed7636"],
Cell[181808, 3611, 118132, 2176, 331, 43908, 959, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "401ae9fc-69cc-4098-b40f-668268e9ca9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299977, 5792, 410, 11, 30, "Input", "ExpressionUUID" -> \
"33f61784-e6af-4b02-9284-aa6ab0d7f7e2"],
Cell[300390, 5805, 422, 8, 63, "Output", "ExpressionUUID" -> \
"dfe29e59-c987-4abb-8312-49b1d5bd2887"]
}, Open  ]]
}, Open  ]]
}
]
*)

