(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    564055,      10746]
NotebookOptionsPosition[    563190,      10724]
NotebookOutlinePosition[    563603,      10740]
CellTagsIndexPosition[    563560,      10737]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Traverse", "[", "n_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "]"}]}], ",", " ", 
      RowBox[{"v", "=", 
       RowBox[{"{", "}"}]}], ",", " ", "head", ",", " ", "tail", ",", " ", 
      "todo", ",", " ", "done", ",", " ", "children", ",", " ", "current", 
      ",", " ", 
      RowBox[{"vertices", "=", 
       RowBox[{"{", "}"}]}], ",", "from", ",", "to", ",", 
      RowBox[{"edgeColors", "=", 
       RowBox[{"{", "}"}]}], ",", "edge", ",", 
      RowBox[{"vertexColors", "=", 
       RowBox[{"{", "}"}]}], ",", " ", 
      RowBox[{"vertexShapes", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"delete", "=", 
       RowBox[{"{", "}"}]}], ",", "fromg", ",", "tog", ",", " ", "styles", 
      ",", " ", "style"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"todo", "=", 
      RowBox[{"{", "n", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"done", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"todo", "!=", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"current", "=", 
         RowBox[{"First", "[", "todo", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"from", "=", 
         RowBox[{"ToString", "[", 
          RowBox[{"allGraphs5", "[", 
           RowBox[{"current", ",", "\"\<comp\>\""}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vertexColors", ",", 
          RowBox[{"current", "->", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"from", "==", "\"\<Greater\>\""}], ",", 
             RowBox[{"Darker", "[", "Green", "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"from", "==", "\"\<GreaterEqual\>\""}], ",", "Orange", 
               ",", "Red"}], "]"}]}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", "=", 
         RowBox[{"VertexAdd", "[", 
          RowBox[{"g", ",", "current"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"fromg", "=", 
         RowBox[{"allGraphs5", "[", 
          RowBox[{"current", ",", "\"\<graph\>\""}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vertexShapes", ",", 
          RowBox[{"current", "->", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"VertexCount", "[", "fromg", "]"}], "==", "5"}], ",", 
             "\"\<Pentagon\>\"", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"VertexCount", "[", "fromg", "]"}], "==", "4"}], ",", 
               "\"\<Square\>\"", ",", "\"\<Triangle\>\""}], "]"}]}], 
            "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vertices", ",", 
          RowBox[{"current", "->", 
           RowBox[{"ShowGraph5Least", "[", "current", "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"todo", "=", " ", 
         RowBox[{"Rest", "[", "todo", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"done", ",", "current"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"done", ",", "current"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"children", "=", 
            RowBox[{"allGraphs5", "[", 
             RowBox[{"current", ",", "\"\<children\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"styles", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Directive", "[", 
               RowBox[{"Thickness", "[", 
                RowBox[{"00", "+", 
                 RowBox[{"0.003", "*", "k"}]}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "7"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"style", "=", 
               RowBox[{"First", "[", "styles", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"styles", "=", 
               RowBox[{"Rest", "[", "styles", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"to", "=", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"allGraphs5", "[", 
                    RowBox[{"child", ",", "\"\<comp\>\""}], "]"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"tog", "=", 
                  RowBox[{"allGraphs5", "[", 
                   RowBox[{"child", ",", "\"\<graph\>\""}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"edge", "=", 
                  RowBox[{"DirectedEdge", "[", 
                   RowBox[{"current", ",", "child"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"VertexCount", "[", "fromg", "]"}], "==", "5"}], "&&", 
                    RowBox[{
                    RowBox[{"EdgeCount", "[", "fromg", "]"}], "==", "6"}], "&&", 
                    RowBox[{
                    RowBox[{"VertexCount", "[", "tog", "]"}], "==", "4"}], "&&", 
                    RowBox[{
                    RowBox[{"EdgeCount", "[", "tog", "]"}], "==", "5"}]}], 
                   ",", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"delete", ",", "edge"}], "]"}]}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"g", "=", 
                  RowBox[{"EdgeAdd", "[", 
                   RowBox[{"g", ",", "edge"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"edgeColors", ",", 
                   RowBox[{"edge", "->", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"style", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"from", "==", "\"\<Greater\>\""}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"to", "==", "\"\<Greater\>\""}], ",", 
                    RowBox[{"Darker", "[", "Green", "]"}], ",", "Orange"}], 
                    "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"to", "==", "\"\<GreaterOrEqual\>\""}], ",", 
                    "Orange", ",", "Red"}], "]"}]}], "]"}]}], "]"}]}]}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"child", ",", "childPair"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"childPair", ",", "children"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"todo", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"todo", ",", 
              RowBox[{"Flatten", "[", " ", "children", "]"}]}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"VertexList", "[", "g", "]"}], "]"}], ",", 
       RowBox[{"Reverse", "[", 
        RowBox[{"EdgeList", "[", "g", "]"}], "]"}], ",", " ", 
       RowBox[{"VertexLabels", "->", "vertices"}], ",", " ", 
       RowBox[{"ImageSize", "->", "800"}], ",", " ", 
       RowBox[{"DirectedEdges", "->", "True"}], ",", " ", 
       RowBox[{"EdgeStyle", "->", "edgeColors"}], ",", " ", 
       RowBox[{"VertexStyle", "->", "vertexColors"}], ",", " ", 
       RowBox[{"VertexShapeFunction", "->", "vertexShapes"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8917493535975337`*^9, 3.8917494408340855`*^9}, {
   3.8917494970906734`*^9, 3.8917495384010687`*^9}, {3.891749688666656*^9, 
   3.8917498175770836`*^9}, 3.891749853527005*^9, {3.8917500758247347`*^9, 
   3.8917501046039376`*^9}},ExpressionUUID->"90f8894c-fd45-4b15-b19d-\
8f57a9badb4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"toDelete", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"27226", "\[DirectedEdge]", "29602"}], ",", 
    RowBox[{"27226", "\[DirectedEdge]", "27364"}], ",", 
    RowBox[{"22852", "\[DirectedEdge]", "22990"}], ",", 
    RowBox[{"22852", "\[DirectedEdge]", "29446"}], ",", 
    RowBox[{"20746", "\[DirectedEdge]", "36058"}], ",", 
    RowBox[{"20746", "\[DirectedEdge]", "27340"}], ",", 
    RowBox[{"20692", "\[DirectedEdge]", "36004"}], ",", 
    RowBox[{"20692", "\[DirectedEdge]", "31708"}], ",", 
    RowBox[{"20668", "\[DirectedEdge]", "31684"}], ",", 
    RowBox[{"20668", "\[DirectedEdge]", "23044"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8913508178974943`*^9, 3.891350823656845*^9}},
 CellLabel->
  "In[622]:=",ExpressionUUID->"f309a6f6-fa15-4ab6-9314-81d44f206490"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"27226", "\[DirectedEdge]", "29602"}], ",", 
   RowBox[{"27226", "\[DirectedEdge]", "27364"}], ",", 
   RowBox[{"22852", "\[DirectedEdge]", "22990"}], ",", 
   RowBox[{"22852", "\[DirectedEdge]", "29446"}], ",", 
   RowBox[{"20746", "\[DirectedEdge]", "36058"}], ",", 
   RowBox[{"20746", "\[DirectedEdge]", "27340"}], ",", 
   RowBox[{"20692", "\[DirectedEdge]", "36004"}], ",", 
   RowBox[{"20692", "\[DirectedEdge]", "31708"}], ",", 
   RowBox[{"20668", "\[DirectedEdge]", "31684"}], ",", 
   RowBox[{"20668", "\[DirectedEdge]", "23044"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8913508254414783`*^9, 3.891708398324789*^9},
 CellLabel->
  "Out[622]=",ExpressionUUID->"0da5a3ba-3347-4f87-bb63-fdd9bb2195c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"h", "=", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"EdgeDelete", "[", 
        RowBox[{
         RowBox[{"VertexDelete", "[", 
          RowBox[{
           RowBox[{"Traverse", "[", "lambdaKey", "]"}], ",", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"VertexList", "[", 
              RowBox[{"Traverse", "[", "lambdaKey", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"g", "=", 
                  RowBox[{"allGraphs5", "[", 
                   RowBox[{"#", ",", "\"\<graph\>\""}], "]"}]}], "}"}], ",", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"VertexCount", "[", "g", "]"}], "==", "5"}], "&&", 
                  RowBox[{
                   RowBox[{"EdgeCount", "[", "g", "]"}], ">=", "7"}]}], 
                 ")"}]}], "]"}], "&"}]}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "toDelete"}], "]"}], ",", " ", 
       RowBox[{"GraphLayout", "->", "\"\<TutteEmbedding\>\""}], ",", " ", 
       RowBox[{"ImageSize", "->", "1200"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"VertexDelete", "[", 
      RowBox[{
       RowBox[{"Traverse", "[", "lambdaKey", "]"}], ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", 
          RowBox[{"Traverse", "[", "lambdaKey", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"g", "=", 
              RowBox[{"allGraphs5", "[", 
               RowBox[{"#", ",", "\"\<graph\>\""}], "]"}]}], "}"}], ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"VertexCount", "[", "g", "]"}], "==", "5"}], "&&", 
              RowBox[{
               RowBox[{"EdgeCount", "[", "g", "]"}], ">=", "7"}]}], ")"}]}], 
           "]"}], "&"}]}], "]"}]}], "]"}], ",", " ", 
     RowBox[{"VertexCoordinates", "->", 
      RowBox[{"GraphEmbedding", "[", "h", "]"}]}], ",", " ", 
     RowBox[{"ImageSize", "->", "1200"}], ",", 
     RowBox[{"EdgeStyle", "->", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "->", 
          RowBox[{"Directive", "[", 
           RowBox[{"Orange", ",", "Dashed", ",", "Thick"}], "]"}]}], "&"}], 
        ",", "toDelete"}], "]"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8913473420781345`*^9, 3.8913473567242994`*^9}, {
   3.8913507531414804`*^9, 3.8913507940133724`*^9}, 3.891350830804619*^9, {
   3.8913509363006063`*^9, 3.891351044410304*^9}, {3.891351084694453*^9, 
   3.8913511235763626`*^9}, {3.8913511789394817`*^9, 
   3.8913511941684265`*^9}, {3.8913512379301367`*^9, 
   3.8913512709414806`*^9}, {3.8913527388225746`*^9, 3.891352840538639*^9}, {
   3.891361493071375*^9, 3.8913614946510825`*^9}},
 CellLabel->
  "In[639]:=",ExpressionUUID->"75f0e6ac-f271-4e3b-94d7-287a5169269e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{31711, 29527, 36085, 29605, 29551, 29608, 23044, 27340, 31714, 
      31684, 31738, 31708, 29446, 22990, 36112, 36004, 36166, 36058, 27364, 
      29602, 27259, 20668, 20803, 20692, 23041, 20746, 31681, 22852, 35977, 
      27226, 20665}, {{{7, 17}, {7, 4}, {8, 9}, {8, 2}, {10, 11}, {10, 1}, {
       12, 9}, {12, 1}, {13, 6}, {13, 2}, {14, 15}, {14, 5}, {16, 17}, {16, 
       3}, {18, 15}, {18, 3}, {19, 11}, {19, 5}, {20, 6}, {20, 4}, {21, 6}, {
       21, 8}, {21, 9}, {21, 13}, {22, 23}, {22, 7}, {22, 10}, {22, 29}, {23, 
       11}, {23, 14}, {23, 15}, {23, 19}, {24, 21}, {24, 25}, {24, 12}, {24, 
       16}, {25, 6}, {25, 7}, {25, 17}, {25, 20}, {26, 8}, {26, 23}, {26, 
       27}, {26, 18}, {27, 9}, {27, 10}, {27, 11}, {27, 12}, {28, 13}, {28, 
       14}, {28, 25}, {28, 29}, {29, 15}, {29, 16}, {29, 17}, {29, 18}, {30, 
       21}, {30, 19}, {30, 20}, {30, 27}, {31, 21}, {31, 22}, {31, 23}, {31, 
       24}, {31, 25}, {31, 26}, {31, 27}, {31, 28}, {31, 29}, {31, 30}}, 
       Null}, {EdgeStyle -> {DirectedEdge[20692, 27259] -> Directive[
           Directive[
            PatternFilling["Weave", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.012]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[27340, 31714] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[35977, 36058] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[22990, 29551] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[36004, 36166] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[31681, 31738] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[20803, 31738] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[20692, 31708] -> Directive[
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], DirectedEdge[20803, 27364] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[27226, 31681] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[20665, 20668] -> Directive[
           Directive[
            PatternFilling["Grain", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.015]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[23044, 29605] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[20746, 27340] -> Directive[
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], DirectedEdge[20665, 27259] -> Directive[
           Directive[
            PatternFilling["Grain", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.015]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[20746, 20803] -> Directive[
           Directive[
            PatternFilling["Diamond", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.009000000000000001]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[36058, 36085] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[31684, 31711] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[20665, 20803] -> Directive[
           Directive[
            PatternFilling["Weave", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.012]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[23041, 36166] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[23041, 29602] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[20692, 36004] -> Directive[
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], DirectedEdge[20803, 22990] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[22990, 36112] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[27259, 31714] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[20668, 20803] -> Directive[
           Directive[
            PatternFilling["Weave", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.012]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[20665, 31681] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[22852, 35977] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[20668, 31684] -> Directive[
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], DirectedEdge[31708, 31714] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[20665, 20746] -> Directive[
           Directive[
            PatternFilling["Diamond", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.009000000000000001]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[27226, 29602] -> Directive[
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], DirectedEdge[27364, 29551] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[20746, 31681] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[27259, 29446] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[20665, 27226] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[27364, 31738] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[31681, 31714] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[23041, 23044] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[20668, 35977] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[36058, 36112] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[31681, 31708] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[20692, 23041] -> Directive[
           Directive[
            PatternFilling["Diamond", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.009000000000000001]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[35977, 36004] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[35977, 36166] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[31681, 31684] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[22852, 29446] -> Directive[
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], DirectedEdge[29602, 29605] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[29602, 29608] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[31684, 31738] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[27226, 27259] -> Directive[
           Directive[
            PatternFilling["Weave", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.012]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[27340, 29527] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[36004, 36085] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[29446, 29527] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[20665, 20692] -> Directive[
           Directive[
            PatternFilling["Weave", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.012]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[20668, 23044] -> Directive[
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], DirectedEdge[23044, 36166] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[22852, 23041] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[22852, 22990] -> Directive[
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], DirectedEdge[27259, 29608] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[31708, 31711] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[29446, 29608] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0, 0]], DirectedEdge[20665, 22852] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[27259, 27340] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[20665, 35977] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[23041, 29608] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[35977, 36112] -> Directive[
           Directive[
            PatternFilling["Hexagon", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.006]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[20803, 36112] -> Directive[
           Directive[
            PatternFilling["Chevron", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.003]], 
           RGBColor[1, 0.5, 0]], DirectedEdge[20665, 23041] -> Directive[
           Directive[
            PatternFilling["Diamond", 
             ImageScaled[0.2], {0, 0}], 
            Thickness[0.009000000000000001]], 
           RGBColor[0, 
            Rational[2, 3], 0]], DirectedEdge[20746, 36058] -> Directive[
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]], DirectedEdge[27226, 27364] -> Directive[
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}], 
           Thickness[Large]]}, GraphLayout -> {"Dimension" -> 2}, ImageSize -> 
       1200, VertexCoordinates -> CompressedData["
1:eJxTTMoPSmViYGCQB2IQzdU1z8eyctUeBjD4YM8Q6iLMl/9uv/dLffP3xy7b
x0WVsiiff2S//Mv02eWPX+6PhfD3r4Ty/4eA1dsHQtVD+ftDIPz9flAaZu4K
qL4YqLnxUPOWQcTtA6DmQNXD7Yfqsw+CmgezF+ru/ewxIsZqyzbC/QHhL7SB
qfOF6gtAcydE3UQbmDkwe2D+hPHj0cIhASo/9/Gd0H/VD/dvu1/1KH3nMftO
+6YuwTuX7EXsojcfadqx/8LEto/vqh/a+/POj00FyjOKzjrpcufSfm2er/yn
gPKGCktOLZ1zdX/hFem9r/fd3e9c6R142P+4PaP4fi0N7gv2qp5+1/ffObVP
Ny70Q1DSI/uzPTmyL1dc2/faqyRm8pXL+4P2/GHvmXPVfp/Cv+i3QP3PZc48
lQk4vr/OYqGIGlD/rJu/X/+7e2mfsXFXZ/iO03YAfVL7VQ==
        "], VertexLabels -> {22990 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[22990, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 29605 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[29605, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 27259 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {2, 3}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[27259, 
              RGBColor[0, 
               Rational[2, 3], 0], 10], Alignment -> {Bottom, Right}], 
            "Comp is 'greater'."], 
           Style[1, 
            RGBColor[0, 0, 1]], Top], 27226 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[27226, 
              RGBColor[0, 
               Rational[2, 3], 0], 10], Alignment -> {Bottom, Right}], 
            "Propagate from relation {29413, 31681} with values {1, 1}"], 
           Style[2, 
            RGBColor[0, 0, 1]], Top], 31711 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[31711, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 20803 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {2, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[20803, 
              RGBColor[0, 
               Rational[2, 3], 0], 10], Alignment -> {Bottom, Right}], 
            "Comp is 'greater'."], 
           Style[1, 
            RGBColor[0, 0, 1]], Top], 29551 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[29551, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 29602 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[29602, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 35977 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {1, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[35977, 
              RGBColor[0, 
               Rational[2, 3], 0], 10], Alignment -> {Bottom, Right}], 
            "Comp is 'greater'."], 
           Style[1, 
            RGBColor[0, 0, 1]], Top], 27340 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[27340, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 31708 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[31708, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 36166 -> Labeled[
           Tooltip[
            Labeled[
             Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {3 -> "5", 2 -> "2,4", 1 -> "1,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[36166, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 31738 -> Labeled[
           Tooltip[
            Labeled[
             Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 2 -> "2,5", 1 -> "1,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[31738, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 29527 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[29527, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 27364 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[27364, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 23041 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 4}, {2, 3}, {2, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[23041, 
              RGBColor[0, 
               Rational[2, 3], 0], 10], Alignment -> {Bottom, Right}], 
            "Comp is 'greater'."], 
           Style[1, 
            RGBColor[0, 0, 1]], Top], 29608 -> Labeled[
           Tooltip[
            Labeled[
             Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,5", 2 -> "2,4", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[29608, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 20692 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 5}, {2, 3}, {2, 5}, {3, 4}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[20692, 
              RGBColor[0, 
               Rational[2, 3], 0], 10], Alignment -> {Bottom, Right}], 
            "Propagate from relation {20773, 23041} with values {1, 1}"], 
           Style[2, 
            RGBColor[0, 0, 1]], Top], 22852 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[22852, 
              RGBColor[0, 
               Rational[2, 3], 0], 10], Alignment -> {Bottom, Right}], 
            "Propagate from relation {29413, 35977} with values {1, 1}"], 
           Style[2, 
            RGBColor[0, 0, 1]], Top], 31714 -> Labeled[
           Tooltip[
            Labeled[
             Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,5", 2 -> "2", 1 -> "1,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[31714, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 20668 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 5}, {2, 3}, {3, 4}, {3, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[20668, 
              RGBColor[0, 
               Rational[2, 3], 0], 10], Alignment -> {Bottom, Right}], 
            "Propagate from relation {27229, 35977} with values {1, 1}"], 
           Style[2, 
            RGBColor[0, 0, 1]], Top], 36085 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[36085, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 36004 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[36004, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 31684 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[31684, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 36058 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[36058, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 23044 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[23044, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 29446 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[29446, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 20746 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 5}, {2, 3}, {2, 4}, {3, 4}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[20746, 
              RGBColor[0, 
               Rational[2, 3], 0], 10], Alignment -> {Bottom, Right}], 
            "Propagate from relation {22933, 31681} with values {1, 1}"], 
           Style[2, 
            RGBColor[0, 0, 1]], Top], 31681 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[31681, 
              RGBColor[0, 
               Rational[2, 3], 0], 10], Alignment -> {Bottom, Right}], 
            "Comp is 'greater'."], 
           Style[1, 
            RGBColor[0, 0, 1]], Top], 36112 -> Labeled[
           Tooltip[
            Labeled[
             Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,5", 1 -> "1,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[36112, 
              RGBColor[1, 0.5, 0], 10], Alignment -> {Bottom, Right}], 
            "All graphs are at least zero"], 
           Style[0, 
            RGBColor[0, 0, 1]], Top], 20665 -> Labeled[
           Tooltip[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[20665, 
              RGBColor[0, 
               Rational[2, 3], 0], 10], Alignment -> {Bottom, Right}], 
            "Propagate from relation {27226, 35977} with values {2, 1}"], 
           Style[3, 
            RGBColor[0, 0, 1]], Top]}, 
       VertexShapeFunction -> {
        36166 -> "Triangle", 27364 -> "Square", 27226 -> "Pentagon", 22990 -> 
         "Square", 20746 -> "Pentagon", 29608 -> "Triangle", 29527 -> 
         "Square", 20803 -> "Square", 35977 -> "Square", 36112 -> "Triangle", 
         27259 -> "Square", 22852 -> "Pentagon", 20692 -> "Pentagon", 23044 -> 
         "Square", 29551 -> "Square", 31681 -> "Square", 31684 -> "Square", 
         31708 -> "Square", 27340 -> "Square", 29602 -> "Square", 20668 -> 
         "Pentagon", 31738 -> "Triangle", 31714 -> "Triangle", 29446 -> 
         "Square", 36085 -> "Square", 23041 -> "Square", 29605 -> "Square", 
         36058 -> "Square", 31711 -> "Square", 20665 -> "Pentagon", 36004 -> 
         "Square"}, 
       VertexStyle -> {
        29551 -> RGBColor[1, 0.5, 0], 31714 -> RGBColor[1, 0.5, 0], 29446 -> 
         RGBColor[1, 0.5, 0], 20668 -> RGBColor[0, 
           Rational[2, 3], 0], 36058 -> RGBColor[1, 0.5, 0], 29608 -> 
         RGBColor[1, 0.5, 0], 36085 -> RGBColor[1, 0.5, 0], 27259 -> 
         RGBColor[0, 
           Rational[2, 3], 0], 22990 -> RGBColor[1, 0.5, 0], 27364 -> 
         RGBColor[1, 0.5, 0], 36004 -> RGBColor[1, 0.5, 0], 20803 -> 
         RGBColor[0, 
           Rational[2, 3], 0], 31684 -> RGBColor[1, 0.5, 0], 31681 -> 
         RGBColor[0, 
           Rational[2, 3], 0], 35977 -> RGBColor[0, 
           Rational[2, 3], 0], 20692 -> RGBColor[0, 
           Rational[2, 3], 0], 20746 -> RGBColor[0, 
           Rational[2, 3], 0], 20665 -> RGBColor[0, 
           Rational[2, 3], 0], 23044 -> RGBColor[1, 0.5, 0], 27340 -> 
         RGBColor[1, 0.5, 0], 29527 -> RGBColor[1, 0.5, 0], 31711 -> 
         RGBColor[1, 0.5, 0], 36112 -> RGBColor[1, 0.5, 0], 23041 -> 
         RGBColor[0, 
           Rational[2, 3], 0], 27226 -> RGBColor[0, 
           Rational[2, 3], 0], 31708 -> RGBColor[1, 0.5, 0], 29605 -> 
         RGBColor[1, 0.5, 0], 31738 -> RGBColor[1, 0.5, 0], 29602 -> 
         RGBColor[1, 0.5, 0], 22852 -> RGBColor[0, 
           Rational[2, 3], 0], 36166 -> RGBColor[1, 0.5, 0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.028264331210191077`], 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.30901699437494734`, -0.9510565162951536}, \
{-0.587785252292473, -0.8090169943749476}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.30901699437494734`, -0.9510565162951536}, {
          6.123233995736766*^-17, -1.}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.8090169943749475, 
          0.5877852522924729}, {-0.9510565162951536, 0.3090169943749472}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.8090169943749475, 
          0.5877852522924729}, {-0.5877852522924732, 0.8090169943749472}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.30901699437494745`, 
          0.9510565162951536}, {-1.8369701987210297`*^-16, 1.}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.30901699437494745`, 0.9510565162951536}, {
          0.5877852522924731, 0.8090169943749475}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.30901699437494756`, 
          0.9510565162951535}, {-1.8369701987210297`*^-16, 1.}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.30901699437494756`, 
          0.9510565162951535}, {-0.5877852522924732, 0.8090169943749472}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-1., -2.4492935982947064`*^-16}, {-0.9510565162951536, 
          0.3090169943749472}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-1., -2.4492935982947064`*^-16}, {-0.9510565162951535, \
-0.3090169943749477}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{1., 1.2246467991473532`*^-16}, {0.9510565162951535, 
          0.3090169943749475}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{1., 1.2246467991473532`*^-16}, {
          0.9510565162951535, -0.3090169943749473}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.30901699437494745`, -0.9510565162951535}, {
          0.5877852522924731, -0.8090169943749473}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.30901699437494745`, -0.9510565162951535}, {
          6.123233995736766*^-17, -1.}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.8090169943749475, -0.587785252292473}, {
          0.5877852522924731, -0.8090169943749473}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.8090169943749475, -0.587785252292473}, {
          0.9510565162951535, -0.3090169943749473}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.8090169943749475, 0.5877852522924732}, {
          0.9510565162951535, 0.3090169943749475}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.8090169943749475, 0.5877852522924732}, {
          0.5877852522924731, 0.8090169943749475}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.8090169943749473, -0.5877852522924734}, \
{-0.587785252292473, -0.8090169943749476}}, 0.02261146496815286]}, 
        {RGBColor[1, 0, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.8090169943749473, -0.5877852522924734}, \
{-0.9510565162951535, -0.3090169943749477}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.006], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-0.5463859250077011, 
          0.17753313597290593`}, {-0.9510565162951535, -0.3090169943749477}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.006], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-0.5463859250077011, 
          0.17753313597290593`}, {-0.8090169943749475, 0.5877852522924729}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.5463859250077011, 
          0.17753313597290593`}, {-0.5877852522924732, 0.8090169943749472}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.5463859250077011, 
          0.17753313597290593`}, {-1., -2.4492935982947064`*^-16}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[Large], Dashing[{Small, Small}], 
         ArrowBox[{{
          0.29468191648720016`, -0.09574536684817075}, \
{-0.30901699437494734`, -0.9510565162951536}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[Large], Dashing[{Small, Small}], 
         ArrowBox[{{0.29468191648720016`, -0.09574536684817075}, {
          0.30901699437494745`, 0.9510565162951536}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.012], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Weave", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              LineBox[{{0, 0.25}, {0.5, 0.25}}], 
              LineBox[{{0.75, 0.}, {0.75, 0.5}}], 
              LineBox[{{0.5, 0.75}, {1, 0.75}}], 
              LineBox[{{0.25, 0.5}, {0.25, 1}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{0.29468191648720016`, -0.09574536684817075}, {
          0.5463785855577559, 0.17753283568718323`}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.003], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.29468191648720016`, -0.09574536684817075}, {
          0.3376798704147791, -0.46477827056561327`}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.006], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{0.5463785855577559, 0.17753283568718323`}, {
          0.5877852522924731, 0.8090169943749475}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.006], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{0.5463785855577559, 0.17753283568718323`}, {1., 
          1.2246467991473532`*^-16}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.5463785855577559, 0.17753283568718323`}, {
          0.9510565162951535, -0.3090169943749473}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.5463785855577559, 0.17753283568718323`}, {
          0.8090169943749475, 0.5877852522924732}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[Large], Dashing[{Small, Small}], 
         ArrowBox[{{-0.2946941345947636, -0.09574568643169871}, \
{-0.30901699437494756`, 0.9510565162951535}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[Large], Dashing[{Small, Small}], 
         ArrowBox[{{-0.2946941345947636, -0.09574568643169871}, {
          0.30901699437494745`, -0.9510565162951535}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.012], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Weave", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              LineBox[{{0, 0.25}, {0.5, 0.25}}], 
              LineBox[{{0.75, 0.}, {0.75, 0.5}}], 
              LineBox[{{0.5, 0.75}, {1, 0.75}}], 
              LineBox[{{0.25, 0.5}, {0.25, 1}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-0.2946941345947636, -0.09574568643169871}, \
{-0.5463859250077011, 0.17753313597290593`}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[
         0.009000000000000001], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Diamond", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              LineBox[{{-0.5, -0.5}, {1.5, 1.5}}], 
              LineBox[{{-0.5, 1.5}, {1.5, -0.5}}], 
              
              LineBox[{{0.5, -0.5}, {1.5, 0.5}, {0.5, 1.5}, {-0.5, 0.5}, {
               0.5, -0.5}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.2946941345947636, -0.09574568643169871}, \
{-0.3376860121647978, -0.46477788417479987`}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.006], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-0.3376860121647978, -0.46477788417479987`}, \
{-0.9510565162951535, -0.3090169943749477}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.006], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-0.3376860121647978, -0.46477788417479987`}, \
{-0.30901699437494734`, -0.9510565162951536}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.3376860121647978, -0.46477788417479987`}, {
          6.123233995736766*^-17, -1.}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.3376860121647978, -0.46477788417479987`}, \
{-0.8090169943749473, -0.5877852522924734}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[Large], Dashing[{Small, Small}], 
         ArrowBox[{{0.1821216723391875, 
          0.25068096327264305`}, {-0.8090169943749475, 0.5877852522924729}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[Large], Dashing[{Small, Small}], 
         ArrowBox[{{0.1821216723391875, 0.25068096327264305`}, {
          0.8090169943749475, -0.587785252292473}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[
         0.009000000000000001], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Diamond", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              LineBox[{{-0.5, -0.5}, {1.5, 1.5}}], 
              LineBox[{{-0.5, 1.5}, {1.5, -0.5}}], 
              
              LineBox[{{0.5, -0.5}, {1.5, 0.5}, {0.5, 1.5}, {-0.5, 0.5}, {
               0.5, -0.5}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.1821216723391875, 0.25068096327264305`}, {
          0.5463785855577559, 0.17753283568718323`}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.006], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{0.1821216723391875, 
          0.25068096327264305`}, {-3.2022359683438395`*^-6, 
          0.5745024389279415}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.006], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-3.2022359683438395`*^-6, 
          0.5745024389279415}, {-0.5877852522924732, 0.8090169943749472}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.006], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-3.2022359683438395`*^-6, 0.5745024389279415}, {
          0.30901699437494745`, 0.9510565162951536}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-3.2022359683438395`*^-6, 0.5745024389279415}, {
          0.5877852522924731, 0.8090169943749475}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-3.2022359683438395`*^-6, 
          0.5745024389279415}, {-0.30901699437494756`, 0.9510565162951535}}, 
          0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[Large], Dashing[{Small, Small}], 
         ArrowBox[{{-5.40251899997235*^-6, -0.309849586760875}, {-1., \
-2.4492935982947064`*^-16}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[Large], Dashing[{Small, Small}], 
         ArrowBox[{{-5.40251899997235*^-6, -0.309849586760875}, {1., 
          1.2246467991473532`*^-16}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.006], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-5.40251899997235*^-6, -0.309849586760875}, \
{-0.3376860121647978, -0.46477788417479987`}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.003], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-5.40251899997235*^-6, -0.309849586760875}, {
          0.3376798704147791, -0.46477827056561327`}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.006], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{0.3376798704147791, -0.46477827056561327`}, {
          0.9510565162951535, -0.3090169943749473}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.006], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{0.3376798704147791, -0.46477827056561327`}, {
          0.30901699437494745`, -0.9510565162951535}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.3376798704147791, -0.46477827056561327`}, {
          6.123233995736766*^-17, -1.}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[0.003], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{0.3376798704147791, -0.46477827056561327`}, {
          0.8090169943749475, -0.587785252292473}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[Large], Dashing[{Small, Small}], 
         ArrowBox[{{-0.18213235111782142`, 0.25068046583772474`}, {
          0.8090169943749475, 0.5877852522924732}}, 0.02261146496815286]}, 
        {RGBColor[1, 0.5, 0], Thickness[Large], Dashing[{Small, Small}], 
         ArrowBox[{{-0.18213235111782142`, 
          0.25068046583772474`}, {-0.8090169943749473, -0.5877852522924734}}, 
          0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.012], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Weave", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              LineBox[{{0, 0.25}, {0.5, 0.25}}], 
              LineBox[{{0.75, 0.}, {0.75, 0.5}}], 
              LineBox[{{0.5, 0.75}, {1, 0.75}}], 
              LineBox[{{0.25, 0.5}, {0.25, 1}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-0.18213235111782142`, 
          0.25068046583772474`}, {-0.5463859250077011, 0.17753313597290593`}},
           0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.003], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-0.18213235111782142`, 
          0.25068046583772474`}, {-3.2022359683438395`*^-6, 
          0.5745024389279415}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.015], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Grain", 
          Texture[
           FormBox[
            GraphicsBox[{
              PointSize[0.15], {}, 
              
              PointBox[{{0.862, 0.835}, {0.112, 0.44}, {0.524, 0.925}, {0.206,
                0.12}, {0.854, 0.18}, {0.768, 0.525}, {0.52, 0.26}, {0.424, 
               0.56}, {0.182, 0.79}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-4.498284112966489*^-6, 
          3.3044917240931947`*^-6}, {-0.5463859250077011, 
          0.17753313597290593`}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.015], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Grain", 
          Texture[
           FormBox[
            GraphicsBox[{
              PointSize[0.15], {}, 
              
              PointBox[{{0.862, 0.835}, {0.112, 0.44}, {0.524, 0.925}, {0.206,
                0.12}, {0.854, 0.18}, {0.768, 0.525}, {0.52, 0.26}, {0.424, 
               0.56}, {0.182, 0.79}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-4.498284112966489*^-6, 3.3044917240931947`*^-6}, {
          0.29468191648720016`, -0.09574536684817075}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.012], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Weave", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              LineBox[{{0, 0.25}, {0.5, 0.25}}], 
              LineBox[{{0.75, 0.}, {0.75, 0.5}}], 
              LineBox[{{0.5, 0.75}, {1, 0.75}}], 
              LineBox[{{0.25, 0.5}, {0.25, 1}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-4.498284112966489*^-6, 3.3044917240931947`*^-6}, {
          0.5463785855577559, 0.17753283568718323`}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.012], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Weave", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              LineBox[{{0, 0.25}, {0.5, 0.25}}], 
              LineBox[{{0.75, 0.}, {0.75, 0.5}}], 
              LineBox[{{0.5, 0.75}, {1, 0.75}}], 
              LineBox[{{0.25, 0.5}, {0.25, 1}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-4.498284112966489*^-6, 
          3.3044917240931947`*^-6}, {-0.2946941345947636, \
-0.09574568643169871}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[
         0.009000000000000001], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Diamond", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              LineBox[{{-0.5, -0.5}, {1.5, 1.5}}], 
              LineBox[{{-0.5, 1.5}, {1.5, -0.5}}], 
              
              LineBox[{{0.5, -0.5}, {1.5, 0.5}, {0.5, 1.5}, {-0.5, 0.5}, {
               0.5, -0.5}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-4.498284112966489*^-6, 
          3.3044917240931947`*^-6}, {-0.3376860121647978, \
-0.46477788417479987`}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[
         0.009000000000000001], SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Diamond", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              LineBox[{{-0.5, -0.5}, {1.5, 1.5}}], 
              LineBox[{{-0.5, 1.5}, {1.5, -0.5}}], 
              
              LineBox[{{0.5, -0.5}, {1.5, 0.5}, {0.5, 1.5}, {-0.5, 0.5}, {
               0.5, -0.5}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-4.498284112966489*^-6, 3.3044917240931947`*^-6}, {
          0.1821216723391875, 0.25068096327264305`}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.006], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-4.498284112966489*^-6, 
          3.3044917240931947`*^-6}, {-3.2022359683438395`*^-6, 
          0.5745024389279415}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.006], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Hexagon", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{0.667, 0}, {0.834, 0.25}, {0.667, 0.5}, {0.333, 
                0.5}, {0.166, 0.25}, {0.333, 0}, {0.667, 0}}], 
              
              LineBox[{{0.667, 0.5}, {0.834, 0.7505}, {0.667, 1}, {
                0.333, 1}, {0.166, 0.7505}, {0.333, 0.5}}], 
              LineBox[{{0.166, 0.25}, {0, 0.25}}], 
              LineBox[{{0.834, 0.25}, {1, 0.25}}], 
              LineBox[{{0.166, 0.7505}, {0, 0.7505}}], 
              LineBox[{{0.834, 0.7505}, {1, 0.7505}}]}, ImageSize -> 64, 
             PlotRange -> {{0, 1}, {0, 1}}, PlotRangePadding -> None, 
             Background -> None], TraditionalForm]]], 
         ArrowBox[{{-4.498284112966489*^-6, 
          3.3044917240931947`*^-6}, {-5.40251899997235*^-6, \
-0.309849586760875}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.003], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-4.498284112966489*^-6, 3.3044917240931947`*^-6}, {
          0.3376798704147791, -0.46477827056561327`}}, 0.02261146496815286]}, 
        {RGBColor[0, 
          NCache[
           Rational[2, 3], 0.6666666666666666], 0], Thickness[0.003], 
         SurfaceAppearance[
         "PatternFilling", "Density" -> {1.3, 1.3}, "Offset" -> {0, 0}, 
          "ScaledSize" -> 1, "Arguments" -> {
            ImageScaled[0.2], {0, 0}}, "Name" -> "Chevron", 
          Texture[
           FormBox[
            GraphicsBox[{
              Thickness[0.075], {}, 
              
              LineBox[{{-0.5, 0.75}, {0, 0.25}, {0.5, 0.75}, {1, 0.25}, {1.5, 
                0.75}}]}, ImageSize -> 64, PlotRange -> {{0, 1}, {0, 1}}, 
             PlotRangePadding -> None, Background -> None], 
            TraditionalForm]]], 
         ArrowBox[{{-4.498284112966489*^-6, 
          3.3044917240931947`*^-6}, {-0.18213235111782142`, 
          0.25068046583772474`}}, 0.02261146496815286]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{-0.01995129394904477, 0.9800487060509554}, \
{0.0199512939490444, 1.0199512939490445}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 0.30901699437494745`}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["31711", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022611464968152677, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{-0.9710078102441982, 0.28906570042590257}, \
{-0.931105222346109, 0.3289682883239918}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["29527", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.9284450513270008, 0.33162845934310003}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{0.5678339583434285, -0.8289682883239919}, \
{0.6077365462415177, -0.7890657004259027}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 0.30901699437494745`}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, {{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["36085", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.6103967172606259, -0.7864055294067944}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{-0.6077365462415176, -0.8289682883239922}, \
{-0.5678339583434284, -0.789065700425903}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 0.30901699437494745`}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["29605", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.5651737873243201, -0.7864055294067946}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{0.9311052223461089, 0.2890657004259029}, \
{0.9710078102441981, 0.3289682883239921}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["29551", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.9736679812633064, 0.33162845934310037}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          PolygonBox[{{-0.9510565162951535, -0.28362658036220884`}, \
{-0.9763282201168095, -0.32739832908832345`}, {-0.9257848124734975, \
-0.32739832908832345`}, {-0.9510565162951535, -0.28362658036220884`}}]}, 
         InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3,5", 2 -> "2,4", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["29608", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.9284450513270006, -0.2864055294067948}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{-0.32896828832399194, -0.9710078102441982}, \
{-0.28906570042590274, -0.931105222346109}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["23044", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.2864055294067945, -0.9284450513270008}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{-0.828968288323992, 0.5678339583434283}, \
{-0.7890657004259028, 0.6077365462415175}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["27340", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.7864055294067946, 0.6103967172606257}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          PolygonBox[{{-0.5877852522924732, 
           0.8344074083876861}, {-0.6130569561141292, 
           0.7906356596615715}, {-0.5625135484708172, 
           0.7906356596615715}, {-0.5877852522924732, 0.8344074083876861}}]}, 
         InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3,5", 2 -> "2", 1 -> "1,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["31714", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.5651737873243203, 0.8316284593431}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{0.28906570042590285, 0.931105222346109}, \
{0.32896828832399205, 0.9710078102441982}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 0.30901699437494745`}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["31684", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.3316284593431003, 0.9736679812633064}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          PolygonBox[{{0.5877852522924731, 0.8344074083876863}, {
           0.5625135484708171, 0.7906356596615717}, {0.6130569561141291, 
           0.7906356596615717}, {0.5877852522924731, 0.8344074083876863}}]}, 
         InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3", 2 -> "2,5", 1 -> "1,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["31738", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.6103967172606259, 0.8316284593431003}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{-0.32896828832399216, 0.9311052223461089}, \
{-0.28906570042590296, 0.9710078102441981}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 0.30901699437494745`}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4\"", TraditionalForm], 
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["31708", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.2864055294067947, 0.9736679812633064}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{-1.0199512939490445, -0.01995129394904483}, \
{-0.9800487060509554, 0.019951293949044338}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["29446", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.9773885350318472, 0.022611464968152615}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{0.9800487060509554, -0.019951293949044463}, \
{1.0199512939490445, 0.019951293949044706}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["22990", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {1.0226114649681528, 0.022611464968152983}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          PolygonBox[{{0.9510565162951535, -0.28362658036220845`}, {
           0.9257848124734975, -0.32739832908832306`}, {
           0.9763282201168095, -0.32739832908832306`}, {
           0.9510565162951535, -0.28362658036220845`}}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,5", 1 -> "1,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["36112", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.9736679812633064, -0.2864055294067944}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{0.28906570042590285, -0.9710078102441981}, \
{0.32896828832399205, -0.9311052223461089}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 0.30901699437494745`}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["36004", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.3316284593431003, -0.9284450513270006}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          PolygonBox[{{
           6.123233995736766*^-17, -0.9746095859872611}, \
{-0.025271703821655982`, -1.0183813347133759`}, {
           0.025271703821656107`, -1.0183813347133759`}, {
           6.123233995736766*^-17, -0.9746095859872611}}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {3 -> "5", 2 -> "2,4", 1 -> "1,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["36166", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022611464968152924, -0.9773885350318472}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{0.7890657004259028, -0.6077365462415176}, \
{0.828968288323992, -0.5678339583434284}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 0.30901699437494745`}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, {{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["36058", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.8316284593431003, -0.5651737873243201}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{0.7890657004259028, 0.5678339583434286}, \
{0.828968288323992, 0.6077365462415178}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["27364", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.8316284593431003, 0.6103967172606262}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          RectangleBox[{-0.8289682883239919, -0.607736546241518}, \
{-0.7890657004259027, -0.5678339583434288}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 0.30901699437494745`}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["29602", 
                 RGBColor[1, 0.5, 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"All graphs are at least zero\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "All graphs are at least zero", "Tooltip"]& ], 
            StyleBox["0", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.7864055294067944, -0.5651737873243206}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          RectangleBox[{-0.5663372189567457, 0.15758184202386136}, \
{-0.5264346310586565, 0.1974844299219505}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {2, 3}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["27259", 
                 RGBColor[0, 
                  Rational[2, 3], 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"Comp is 'greater'.\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "Comp is 'greater'.", "Tooltip"]& ], 
            StyleBox["1", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.5237744600395482, 0.2001446009410588}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PolygonBox[{{0.29468191648720016`, -0.07313390188001789}, {
           0.2720704515190473, -0.09040752404483156}, {
           0.2807072626014541, -0.11835683181632362`}, {
           0.3086565703729462, -0.11835683181632362`}, {
           0.317293381455353, -0.09040752404483157}, {
           0.29468191648720016`, -0.07313390188001789}}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 5}, {2, 3}, {3, 4}, {3, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 
                    0.30901699437494745`}}, {{-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["20668", 
                 RGBColor[0, 
                  Rational[2, 3], 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], 
              "\"Propagate from relation {27229, 35977} with values {1, 1}\"",
               TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "Propagate from relation {27229, 35977} with values {1, 1}", 
              "Tooltip"]& ], 
            StyleBox["2", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.317293381455353, -0.07313390188001789}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          RectangleBox[{0.5264272916087113, 0.15758154173813865}, \
{0.5663298795068005, 0.1974841296362278}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["20803", 
                 RGBColor[0, 
                  Rational[2, 3], 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"Comp is 'greater'.\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "Comp is 'greater'.", "Tooltip"]& ], 
            StyleBox["1", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.5689900505259087, 0.2001443006553361}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PolygonBox[{{-0.2946941345947636, -0.07313422146354585}, \
{-0.3173055995629165, -0.09040784362835952}, {-0.30866878848050966`, \
-0.11835715139985158`}, {-0.2807194807090176, -0.11835715139985158`}, \
{-0.27208266962661076`, -0.09040784362835953}, {-0.2946941345947636, \
-0.07313422146354585}}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 5}, {2, 3}, {2, 5}, {3, 4}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, {{-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["20692", 
                 RGBColor[0, 
                  Rational[2, 3], 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], 
              "\"Propagate from relation {20773, 23041} with values {1, 1}\"",
               TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "Propagate from relation {20773, 23041} with values {1, 1}", 
              "Tooltip"]& ], 
            StyleBox["2", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.27208266962661076, -0.07313422146354585}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          RectangleBox[{-0.3576373061138424, -0.4847291781238445}, \
{-0.3177347182157532, -0.44482659022575527}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 4}, {2, 3}, {2, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["23041", 
                 RGBColor[0, 
                  Rational[2, 3], 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"Comp is 'greater'.\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "Comp is 'greater'.", "Tooltip"]& ], 
            StyleBox["1", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.31507454719664496, -0.442166419206647}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PolygonBox[{{0.1821216723391875, 0.2732924282407959}, {
           0.15951020737103463`, 0.25601880607598226`}, {0.16814701845344146`,
            0.2280694983044902}, {0.1960963262249335, 0.2280694983044902}, {
           0.20473313730734036`, 0.25601880607598226`}, {0.1821216723391875, 
           0.2732924282407959}}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 5}, {2, 3}, {2, 4}, {3, 4}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, {{-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["20746", 
                 RGBColor[0, 
                  Rational[2, 3], 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], 
              "\"Propagate from relation {22933, 31681} with values {1, 1}\"",
               TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "Propagate from relation {22933, 31681} with values {1, 1}", 
              "Tooltip"]& ], 
            StyleBox["2", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.20473313730734036, 0.2732924282407959}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          RectangleBox[{-0.019954496185012927, 0.5545511449788969}, \
{0.01994809171307624, 0.5944537328769861}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 0.30901699437494745`}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["31681", 
                 RGBColor[0, 
                  Rational[2, 3], 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"Comp is 'greater'.\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "Comp is 'greater'.", "Tooltip"]& ], 
            StyleBox["1", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.02260826273218452, 0.5971139038960944}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PolygonBox[{{-5.40251899997235*^-6, -0.2872381217927221}, \
{-0.022616867487152834`, -0.3045117439575358}, {-0.013980056404746002`, \
-0.33246105172902785`}, {0.013969251366746045`, -0.33246105172902785`}, {
           0.022606062449152888`, -0.3045117439575358}, \
{-5.40251899997235*^-6, -0.2872381217927221}}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 0.30901699437494745`}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, {{-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["22852", 
                 RGBColor[0, 
                  Rational[2, 3], 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], 
              "\"Propagate from relation {29413, 35977} with values {1, 1}\"",
               TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "Propagate from relation {29413, 35977} with values {1, 1}", 
              "Tooltip"]& ], 
            StyleBox["2", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022606062449152888, -0.2872381217927221}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          RectangleBox[{0.3177285764657345, -0.4847295645146579}, \
{0.3576311643638237, -0.44482697661656867}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["35977", 
                 RGBColor[0, 
                  Rational[2, 3], 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], "\"Comp is 'greater'.\"", TooltipStyle -> 
              "TextStyling"], 
             Annotation[#, "Comp is 'greater'.", "Tooltip"]& ], 
            StyleBox["1", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.36029133538293195, -0.4421668055974604}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PolygonBox[{{-0.18213235111782142`, 
           0.2732919308058776}, {-0.20474381608597428`, 
           0.25601830864106395`}, {-0.19610700500356745`, 
           0.22806900086957188`}, {-0.1681576972320754, 
           0.22806900086957188`}, {-0.15952088614966856`, 
           0.25601830864106395`}, {-0.18213235111782142`, 
           0.2732919308058776}}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, {{0., 
                    1.}, {-0.9510565162951535, 0.30901699437494745`}}, {{
                    0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, {{-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["27226", 
                 RGBColor[0, 
                  Rational[2, 3], 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], 
              "\"Propagate from relation {29413, 31681} with values {1, 1}\"",
               TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "Propagate from relation {29413, 31681} with values {1, 1}", 
              "Tooltip"]& ], 
            StyleBox["2", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.15952088614966856, 0.2732919308058776}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          PolygonBox[{{-4.498284112966489*^-6, 
           0.022614769459876956`}, {-0.02261596325226583, 
           0.005341147295063288}, {-0.013979152169858995`, \
-0.022608160476428767`}, {0.013970155601633052`, -0.022608160476428767`}, {
           0.022606966684039893`, 
           0.0053411472950632794`}, {-4.498284112966489*^-6, 
           0.022614769459876956`}}]}, InsetBox[
          TemplateBox[{
            TagBox[
             TooltipBox[
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], 
                    Arrowheads[0.], {
                    
                    ArrowBox[{{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, {{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, {{0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, {{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, {{-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, DefaultBaseStyle -> 
                  "NetworkGraphics"}], 
                StyleBox["20665", 
                 RGBColor[0, 
                  Rational[2, 3], 0], 10, StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Bottom, Right}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2, ",", 
                    RowBox[{"{", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Bottom", ",", "Right"}], "}"}]}], "}"}]}], 
                  "]"}]& )], 
              "\"Propagate from relation {27226, 35977} with values {2, 1}\"",
               TooltipStyle -> "TextStyling"], 
             Annotation[#, 
              "Propagate from relation {27226, 35977} with values {2, 1}", 
              "Tooltip"]& ], 
            StyleBox["3", 
             RGBColor[0, 0, 1], StripOnInput -> False]},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022606966684039893, 0.022614769459876956}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->1200]], "Output",
 CellChangeTimes->{{3.891350781091791*^9, 3.8913507949568715`*^9}, {
   3.8913508330626264`*^9, 3.8913508421065407`*^9}, 3.891350889470374*^9, {
   3.8913509268918276`*^9, 3.891350937849517*^9}, {3.891351112060571*^9, 
   3.8913511263124146`*^9}, {3.8913511831165457`*^9, 3.891351195664219*^9}, {
   3.8913512449291754`*^9, 3.8913512726946754`*^9}, {3.8913527926022663`*^9, 
   3.891352842416238*^9}, {3.8913581244442787`*^9, 3.8913581479688687`*^9}, 
   3.8913584011482773`*^9, 3.8913585208791094`*^9, {3.8913586047201414`*^9, 
   3.8913586315475955`*^9}, 3.8913587552184677`*^9, 3.8913588167743783`*^9, 
   3.891358883645439*^9, 3.8913591096847043`*^9, 3.89135916374664*^9, 
   3.8913595300205584`*^9, {3.8913595667521076`*^9, 3.8913595945689077`*^9}, 
   3.8913607668935204`*^9, 3.891360820031683*^9, 3.8913608614591484`*^9, 
   3.8913608919843855`*^9, {3.8913609803686585`*^9, 3.8913610439252725`*^9}, {
   3.8913610840886073`*^9, 3.891361107595091*^9}, {3.891361157767903*^9, 
   3.891361180511732*^9}, 3.891361496190364*^9, 3.8913912956572866`*^9, 
   3.89139132622875*^9, 3.8913914264097185`*^9, {3.891749393310787*^9, 
   3.891749445213749*^9}, {3.891749533148316*^9, 3.8917495439644313`*^9}, 
   3.8917498277570314`*^9, 3.8917498586929207`*^9, 3.8917500860281153`*^9},
 CellLabel->"Out[639]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQecXUX5Pn65bdvdlN30tpveeyWhJAQIEEJvoYYSAQFDAFFAICAoIIoo
EAsapDdFQlGaiwUrRUUEKd9QNUjvnfPfeeec5z3v3Pe0XQz7+/zZzyc3c+bM
mXmeZ3pfcuBxhy0/6sDjDj/4wNZFxxx49GGHH3xs69Yrjmm3KmyUy1VWtf+7
tzVXbDd7udwn9XNuLveZF5958ZkXn3nxmRefefGZF5958ZkXn3nxmRefefGZ
F5958f8nL941P9utTfRn2w3kzzv0ukAeLRlN/3Lb0C/Z4S8+lK3ThJInDwsU
jLeK/uW2pF+yM2/XJge1TRphHELZQ0klv0ZogfnNZxYwidV7UeHNz0xtu4Sg
3lcEnN8xVkkqvh/FarPMrBYnBPWBwmqzjrFKEvCDKFabZGa1fUJQHyqssoey
JCGUj5RQ5nZMuyRCH0VpNyczqx0SgvpYYTWnY6ySBPw4itWszKx2TIPHYTWr
Y6ySBPSiWE3vWHipqG0UFei0zFLunIqfoue0jvHbKXV4Gr8pmfntkia8gsJv
Ssf4pdKzEMVvUmZ+u6YJr6jwm9Qxfkl6/oRe1yzzPG+d/6+t/d+a9n+r2v8Z
+1y+vSb1lkZpML5jwJKEuNRqYMAEf7my+c0bjLmii5JA7hwFcpwSUUst9fm+
B6v8f2t8CSiYPIVbMG6Seb2S8P4y89NT4bAmzMG2P2Tkj4vSeIcUHBqycHg1
DYdcYVU4WvomUZofFS1jlGjZOgWlXpZSWypKryW8v9xSWhem1MKUCmFKufyy
ajFnKTE2JirG5qWgN8SCiMD7Zjo+y8J8xmThMzEqukYp0TU9BZ/RNrqWpYqu
1xPeX2HptYXpTclCb6QSXRqzcSmYTcmSEN9IeH+l+ZmXhcpghcqIqJTXQr8l
jU8ub4Ka61WH0DkyTkGxBf0W13lcyZh/GrNe5kdLg8OUmOqbxGyhZbYqFbOk
/HWVZbYuzGy79MwqSpwNi4qzRvotzndYEants6S9t9KREoXGThwAGFSi4qVV
iZdG9rQt8HTnLIksCfXVNoC2MGpflnW+XK3mqYeieWuU5t2t4zVhT5dYT9ek
Qv12OtTzqxMQUJOLpiithyhaN1tPRX5bbP+LgPFeAsxrFHEXMUyU5r0VcTWE
fRjhusC/bax/6TLmOwnvrzU/i9jH1sDXfgrCQVHRbwsTmWi3jhXy/TS4HCEX
KPE90Pxo8T1AUXOQ4ukWWdR8N+H9deZHgzlEUXNAlJp+DSWS5fxYNT9Ig8sh
vomSLFuj1OynqDlUgbmp9XRNKjWTMpMtX0sL2x+Wtv87s/3fxe3/7vF22SVA
L5LscEXkflEiD2P0yFnUjsiVr/CmTjUBrfD/GQATvE4UXpfQ6+IEn0hApnat
eVt40bv/fgg4S0k8o6JipXcUOb+5JvLjHOvz095NN5lwKeyS/b3YBxQmG80m
qbvzA51tN8v2EW/1arCdobAdG8W2V2R7U9Y7M62nD3jHHw+iDfRbdInmY6P1
+QSiF1ii4fRp/vWyRE0yBaZpFpOJDNTiEyx2kVx7RcXoeOtYZLbp1tM7vfHj
QbSn+c0bnvkVBAPxGUvl6YT339TjdJAJbaqMRMqOk6MisUmJxMnMDVmRPB3Y
keT5RAKVr+tUhpmwJivpcZoSTU1R0TTFOl4WpjLJevqWt349oqmlI8weTmB2
mmUWpMcVvudjbHo04SPpjGOiKPxnRMVZDyXOZjBRlDATrKemPAPRkR1Ljw8k
vD9Rj8TJCtUxFpWoKWYrcdojKk79oQpRxoxVqE7oSJz+OYHocTrRmQrRkUri
nRsVp41RbDe2bEVBM1pJwdM6wvZ3CWy/YNm6KXgWElGusMJ/RwGNUihvGkW5
oiTjTZkt8it5ml+I0M4MKM9kGMUARmLb4K4EyocR3KUUWhASh8YCLw3zLpuP
Rih5eL7lIxJ2JSqqN7OORR4mT8s2Gib4/AIRZjMit2kUze8XCfwP5LDCCXx2
DPsGi1v0BVuVXL5FVEqoV1LCFuwpxBhmPRX97jr6LbnaUKqY1ZE8cWOCQPtY
gWLyRFVi7MkRC4EGK1llayW11Eelli2tY1EwtFhPxSAljRukyT4L02SfaxPU
2V2qE0TFrJjk4/dsRXk+UFFnm6jkU6skn20UdQZzmoQ6tkNflbVmdayavCzh
/Q4cWtrMNURRp78lYvIF8sJiJe1owixmYVDCDmT/IIztm3+C+erHCdpsI1NO
RCEXzla5EZbLurA2fWTKocJnR0WbclS+sislZCncnz2Fu+GMd4UXXQ6kylWr
E7TZQmojcpVNpbbCmsDw/I5bXyUjLTQ/NCsYORJaVFKOP+jrhUXwS2mROilI
6h/FlzqZcta3E97bKalMOSvUNwD2ZpYLheiWkKub/UKko2JUOmqAWlpJ3dsG
JKqySfT7CWa5bySINlOKlibLaY3vnlyuoq7fCuxJNC2N5ZU01g2fbcWioZxq
5oAgms9BzYZZBxjOSNBrMoelZ0OnOey3ZkX51E3JkIvIW/PCH7cXKSwfO7FC
n/kNB9HN9WOlLSwW5ZJPMFeenPB+jBUsS66kwqm7ItI2YGtbNGvtcyhFGTNZ
k4ol43QRC9MWCBPyHMIsoN9PMOt9OUGZYYnKVGW9bZgLUlODUl5tC/a23VkM
pyZo1BOu/MUaIks3KsWT1TIip2WU55gEeQZxWKk6njsqHOqUYomWkNISnKZq
bYy5CQ7salNZajcoBRCtQfwE89TnE973Tkw5VXnKNsplOVRWshg1fWqgThGC
kJ3WcqxTCpldGWBEbzV9OlmeIEb37GLsA0IO+yV4MQ4mrTEY+hac7TqsQphz
Lt/h3HFAAmvb503VBZ3g/1vGRJAEChx5yCDUQ6mFCGSyq2xlV5ySz0HG/hMb
mdkrgXU+e1wfSp+U20Ksgyg3jKnUqAdZSsx+SSKyvS+UKA2XM5pOp/KYBY4f
ZCd9lGUQJmuXiBLTCWBql8WWwkzN3xrj3vrxCdaHMevPaYRznilrIgbM44ZW
bEVCUYMKkMg2gCzR3pmjdZ3/z47lZh0ZWQW0Gpezo2nSGDdVvfOUthy1F0LD
jhd7KYYd7zUfVUCUKNu0VBBDQF/mRJR2/PAE641oiG6ccoHs1zoqwkrGmTax
/w0STITp7+RN9sR77P+as7YJQWvYH2F1yDIU8k/zBbXaJsH0sO5N3AjFkYoE
s7Msjv5EdVguCaQb9njU/HSDEmR6nILO3EZb3qXU2N+qkSV3PAUFqOtKPZ8W
Y6oxgdTCRM0o6mfWKW+/QgFnz0/LupR8e0n50mSqf0O0KTDRYqA6E0gZpm6Q
r1Z5e7oNWO83FcLKBUlUpOc9u5SKuzCZVEMgLxrnPSAhmQba8NpDKMFUlHZ5
KWtN8hdkorUE2fP5Ll1KYtvPypTPX4O2U42Jhn76Q5Wy1Cwv7Rqlyo6pqNjZ
xSfZy4MlXUrmrRJlrioPaClvkxF3GmTuByFZoIJiFykzucsrX4SWM6Udb1nU
pRTenAmE12NFlhXU12mGvCT0UCkRF7KOqJye40WlxXDZS4jNu5Swc6ywWUoI
CmkjCDwdplZIU/hEBL6EsGUvHOZ2KYWnpVZYdn1JpV5QuBcaXCnKhbQK+7tS
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
192MhhPt9+6PcHgsg7dGnNExdW5VbRPGb+AZrQKmM/dqoI7d8mLsZkOiiVIi
yu9/gDA0FMvHp871JfrqV7/qnXjiid7SpUvpDKz+/fuHMxLvkaBgyxaK0IkH
NbjK/1rHdLpZtU0Y7YNntHCcjvesA+CiZdn+Nws6TUJ0ajrxYH5Ipzqvra3N
u+WWW7wzzzzT23333emMk7q6OmQ08h3B+vtGI3T6JhPKos5a1TY0cxqrzq8s
a88/+Dwcne1/dF491VW8N4jV+T004Vkw8pc25bX78Prrr3v//e9/vSeffNK7
+uqrvaOPPtqbM2eO17t37xwn2go85MEPHhE6r2Oq/Fy1PSClKg8AXLAD2/No
bwylFN4lwz1vGs6sRGpRosNezVHAzz//vHfbbbeZE+ZynCB5SLc3TGln7xyO
P1Nt90vp2d8AKdhZ63lTwdy/50M0aKhNVifTw3qYXla+2Mraee+//773zjvv
mGRixxcipQjN2sbGm0P6etV2n5RS0JAvzfP5V3gYLUBiohSFWmM010V9yrLU
g4/gfBGOAxU+/vhjeMoqcFOwD0wJU/ZRU1rXqrZLU6rwEFTYRDKm/mMLwHEb
xCFL7naFL0yMc/uFHSN2tWrrX4yYOH31MCDNk8RqEJUE7k+SDlMsJxNb3TFi
V6q2u6ck9i9A4nZSHxDjLhS3k16GaT3cxRP7fjyxqOHiy1XbXVMSo8EHyh1z
QKwfYoJjjGtthxi52w3EeJqAq+OElWNRxC5VbXdWiGlziI+BGDVHShjoLcsY
4wLlVZj+DXe7w5dhCrGERYNRxC5RbbUF2tq0zxOANBMxRmOylMR4dPYe0KE1
sBW0uGqSiSWsDo0i9mPVVltfrxFbB0gzQGyIEmO/A7HXYXoGxPaALzxawv2w
NdHE4qZkLlZtt09J7ClA4vaOP1Mp8thvQedNSYyK+z1jif2kY8R+oNraeySS
J1ieASRuzvjJSdRjGrHn4C6e2GXRWOK2Mn1Ptd0mJbHnAGkKiGkDT0zx1yD2
tqTofMHJsxXfctK+XMGXYqJjtUrWX6Y9P9zCGpVSgP8A5iQIsA1g3g2K78JE
X24Wy+7KlOxGW3fL2oGvC8A73PTbTO2BWG3t3/g8E2c2ngdgbntu21me/h6g
xD1T1CrPFVd59s9wbQ3aw/yjX1lqzwEptPnfmv+DFJpI+gWgH+Nj9utHe0cc
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
jHDt4cvNaDjkvMTKpqIxTZVR8KCMAm3ghVec8kQlf0te0fqzfiG5ExP7GEBL
ITfXqgVJMKZq8OVOTOzTAb0nNLLHvqBEKcqgNH1r4W6G1PcBSMYLQh19+cXG
Ut8H4BUdG9kfrdW0wxGRFWmkvtx8yifoq11oThE9C1hZUC6YS9LOeetUNtys
I3ezpLT3dkJauiKZ2jxnA66/BSPlnAOEKsp2Wo1i0hIsfVGvtj19aROTLqUF
mj7tIb3loDjpNkTpy+2guVLfP0KyOVH6cm3KzXr+lryi0yIHGtNsSytxznK4
AlxTtQB3Di29D7uLDb46wc4Bwh7Sbyc8bsw7hXApKgU0wLSplPZ3UIsLV0da
7nzNltL+Dl59C8Ap9WgH9Y0AAu7vaei5e+LoWxeVkimUudX6Jqba2VLuFA0e
eweV7TwFf2XpzinBFki5746S+yT6wjxuARO/0NS/Gz7TQYKDoH6KhD0SSLmE
1bhxF97RgKv3omTOkVtVmOxsA6hO9nOBv3vKeGiM1Xwrqfmd0G2WonmRuzSK
5ryWiL0in+nIvcFoimgpfqQiGedrTVCmxYkqSsbE1E2FyRCDMLLjpHW1nAKm
KN9Gfrut1PyX0I2bzfSCrgGpwcBZWb6o4Itm6RX5fBEY2dI0OZ0PUtA79VJ8
XtdGUfRWyE4WUnXq3kTGQ6SW7LfW+nTcRcbN9jIebomKh5Og/qaIESftO/FA
p8hRQ4W2KbZgjMBP+wvDwg9U4HLRoPVh2I7dacNXVfnBFz4xP8wF6rwMShuU
y6O9F/nWMTn+7STj4UZoyTtm6cXJiIdNYOIXDfiiWXpFPv8QjDa1GqTLDykG
IWsVO46CivK2Klp2tJCq8wPl+1Ya03B6kAilFk2WOiB0Rq93l/rSyqQmqFWR
MtagnK5J1ven8JnOZhmKsioynXPLpA7JhuHWg0Kt2lrxhUpMv5sATWSziSdU
nGkUexynMe0tdbtG6sbp8lSoNUfqdircTZe6XQOfLwHSzS23FUnpcrCCuSLR
10NQvVG9gw1qaVV6Iwy0CvByyf0KcJ8uudNVKmVwL8sXzL1JekU+X4bQ5hNq
Jc2Q+WIXuu9yadjlZvDsKgn9J8nQedsuveD7Zx3oP4HPNG85HNBTRFsVkyVR
kUDN4BHG76slE8pjlIimSSZ0x0oRGbcoX/BCnibp1SioNQKN6chI+KELXYuE
+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
gARQtF7FjC+6gS8PsluTLreJUbY5QHgGDZLrrLKwxARadoFIuQU1/hH1/DGv
0NSG1+7onshpqYplvuM6vjfIYcOReZhuvjHFvNrq2UY9e6nnCuqpfvtjXv2c
emJEeSEZTaCe7XyHHj0R+GOT9tzY6NlcRaX7Mi6zeqLDNNaXJPk0gVSctRKl
x+mRj40tEt3ulyvUOz/h1UNW80Wkppp3863R3q9hWdhr/mf3zDCyLd53sdV8
VKi5NE7z8fBaRdHj9MhHf2BzRPfTvoZeITejR7eYNp9IzfGalXx/21vLw283
mg+jcQIfi3Za9IWaR2O/vU4PozmmGFuobwt7LNAcy7OWUPNJLAMRLuUhqn8B
xcGbVxSrUm94r34q5nUhss2J+xzK4MprVb9ixjmln3jppZc6PZZwdChqqe9L
zXeh5r2R5rL67peEfi4lCTVvzvDLjebD6Enjfadbzf0uC/ndgczuMzqG9fKV
c8GwniOxlIMtEYkPgKZ85nY1lxl6R7JTrUpbRK+oIQnG4FzB4As9BNXJj59r
TZw8pyDPsCDdyGeTLuRB+mZCcy6E8R0Nwqc5CF2VfPRKSkwpO/LxtXz5YTS+
piy3TbB8D1m6AAYV7HeX3vCMGTOwLEdaQQvpbDVS+cjYiy++GAK1J6Vm0oyq
Z/oo9RmkjpDDTTw16ZwbGabDmNjUCMLRLoacqTiQxH8Lh8Bk+YJMQQRDYGC6
rui+XYLpbmTqYpNUMdf94Q9/ONt5552xqFq60OVyWevqmg9Ho17DJavDYlGE
ZLfAp0lv9WSfcc/Ueytu0vU+n7AosXVslEeZT33IJr987l8m+WRWR3h8/etf
l7CfrRzdg4/umOCJkh4lH7y15qOyoVL6V5K2vEOasfMUZjt6mbL7WMYlZDBM
Fiv7qSMZDBsznHLgKSr5CSoekm3OZzc0ZJvz2W9bvPNDvFKEykoqCZwlaMOZ
dBkyk5n0Z555psxphwU66iHqrZ8AvQNB7+3ENINns7UQaMcEp4yV5bMdMuzk
x8oE9hhbJ0UjQWtc6s3FFPDgUmeVqEvea1+wOCTl95YwTwulK664Ank6GC1T
UrPlCktEMKSMgzo3JK6b6ARP8wpzg8jxOOxqlrqii80pS0Ty0W0hJus+w+hI
Y9UfcdS6HJr7amka/sc5w89b/aBuYRiLDQyx5lzta/YF64YAg60gWLmTF4gy
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
Er5QLfKFqMrtSuT29Ru7RrXIK0bxs4MCr/g/vJ0H3B1F1f+vT7lPT+89N72Q
nhAIhEDoEAIJAUKN0qUJAoJSooCIvigigkIwoNhAqSIKQsCOvIhir7EbsLwW
VFR0/3d+M/s7e2bP3r3hb3w+n9zsvbs7c873zJzpM4ACder5zDXP3Z777twe
t23vgw8+iAzuTh9G+1PahlFrMrKz+CL5zXLUUa8a+jskr5yq7Yz87fuw3SPz
CdMaxr2byqVn14ccHNXTq/xNumeG8reZRsgyyDKPV3IKwwe1xc/VGqG3f0LG
4hsMiysfvNSg1kK6Vjf3AF4FO1/vo1KdBr1Zs7s9Ht15LldffTVM7mro7gyi
ul/3Tc3CToTIrUv1obBjpqVhpkapfJ02NrLZHI+1fvWIu8J47DIaTHpPW3kl
mbrDuJJqWo8RyhLGNocSIFP30MTd2sRVw8TTik3svC4z9lJNF1cDyapxV4ck
gFMyxu5vuA5faaziPI3bb7+d59K6ytiLL76IzsQwCbD+VzXi6jAkEYtH3W6t
hsVvJ8yoHoZ5xnDjAz0zleEwNQV93g+X2z7qdLEyemPbL/Z2Tm0fyRJl9G7t
2kU3rJaqZVKBKntDqb85a5+5ZCUkJe+E8xucg/fHGCUy/bJD7umiQMwkpgvJ
JOy7odJmX4NU447FfuSRR1DVy/TaIdW0MtVENfD/n25bK/283zCIlZLgO/ag
HZFqBuhUYxX0kmqsCoGkGqtnV1LNgUwhH9Ip5Pwi6bEoF2llun/ESitbm08r
QjcMbyehI69d35WrU1Wi2GokCtW5F8ouHC7h6v3st5PkgDE4SQTWSEPh6I01
NtGin4s6yPvT/tfT/mhtwYd/hvZHl1iXrtZ38bcqf2vnb7Kk7kBv4fpvH9Z2
lQ/sNjM5Y8hSknMaMpDfemi+qNskei4YMuywpHJ3Px+96izyhmzDFtluf1h3
vlW6k3ub5GrG0cbaR6uWRX6TBBn9Js9Zsw3Egu+iBed7LQoqX4+5KzQ10a3W
wXzbQc/eQc/eTfvit90YilV1XEZLf8Rbv5GlZxRbOp9lLfcW8evjb9IvF9W6
2/KW3mJYWpUuaZZ1g6uu9ebuoV9RpiN0sDzvYKTRtIWIgkwRQRcCCnCpMPka
qbt6gqb6LH+TaTUy37cQ9/ogvSt1Ui1rpD/QKLfmGnpIAyga4IBuoan8Dh+V
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
pJMMkHs15KMZ25cNWSCkTDj1u+6VdyOF4SUnh16qYB3iaCUH2UAvGCNM7Skt
OX1FpT07eTIJ9fOYS9TnLHuBSZv3eRJBvS7q5ZHjkmAeZIkHDPP43fCRVGRO
Kv8gUKdhHtQsjmds0uf1Kf4Wmed9TULy5mnLQuIMQam1SbqRbbMOUdbIVzhQ
IYGl27PTb8NOhIupahuJt4R3c/OD4Hpw40Rylq7+15D4/SS+NrVyMxNn/RA1
ayI9ev7HmTTAmRTjQRoAksqcltvclVUxmWLR4J8Yvl8B33x1ZPX2qLgzVYSX
k7JVqlhyxOR9nkIS1lQL7jaN+76Xh3uDp1UJ0ysR6BmEfAYjv48CQb7fEPLt
Gcj57pHtt/qAZphbhfaq7YkPvWkjDdz3GrhfybsYSagZuLOJSUV0Avm+nqG8
2iNLE3EP47X4+o2zzSpFfkCmWfXfr9CWVldWNVRxZRHLewyWG3hXku69ZOk3
0cs5QNl2SSZVn25AvMeA2JeB2NyoVgTROoM9y8+qiazO6+H+YfaaTGpCA6tK
wZH7T9akcPc8krpHk2ojHLhJWYshcM5hyPfwrtRwkMI+4JVurvIAGuEwinAs
YunY0mrKeoAGIEkFXiQ61xD9tWNZ2Ep/Yk2jeNhrUslu2CgHFJzH8KSCcDuf
izKbP1DAKD/TiZex7vknbytS8VYqYfUTnU5l5URf2Rjubir7aSq7kc+dSmWt
ZfPSQ3ZrkdofLDakKje/pnTP91/dbujenm3WhtHRMdSzyr406PlxrSdS9Zv4
HIZFUC69keHdwjginT4cHqnE5ZJWorQzdLP7iLxbK7s9egyd2vkbdPoYdfoU
dbqSz4lOGyn6zYwj0smfw1O+8aFWsdS936ZV/EWF8fPvFir7OiqLXImchRkG
Na3sQ17qVNk2JlRRtifTdMm3btCo78uoXeq9s2pblo+SJz5SFx6UkKNV4IxQ
ZsOKd1GxT1KxNxuii4pvYsgS2zX+3fpv/nyr8uRn6KR86/sNnS405BIvcAn1
/CG1u1NrhzT6Rx9lqmcTPdyvp3Z+Sb3hIZ7174QTR/Pe80OGOmikRNPpN1KJ
H1GJj1KJB70gSolr+G4vw5M4XkfR7/KilfrCZ0o0+bChyVlemvpv2CxsLOWv
afk/Qfn/RPlv5LsSnpxl+fFwt0TMfMMFYkZTilE/7THEBOaPUMwHKOaftZhR
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
oycUDvaFhgDWM1ChKrsjifG7mWbaGLzVT4TO774iKHoCY55CODK1oFkUVXCi
aTuozxeOssp435/JY6bxnOzjs7GcETLIT4xQ5hPZS4x3H8NKEPw6j7v+Ncw+
bG7KY5QmNME8dYvgoZpgup/d5ZlZ8n8irRlUUzYcuVwzkgpai8EI7y4gmX8y
jjWMF2K8jTzSrQcrcaZYpGNrzQMo7XqI2lW4OkzzeBMFkfnywmM6rSj74wgP
aVdxp5dEdsraynfnexVVSlnjuamEDTF+leFRUI7mmhCBR2lZcoUWGFfRTJA3
US5JH3/UPCC/7NF0GXmgcdVpUKhqCrKJ9FpN4S2k8GuvUXOFjN3ivKgIpHS/
YOWQ+Fh4TNRtDqfuGAlCYTqVUn+Lul9K3dFcaGMhIzkCocyj7v/gb4czNkR+
NXXf5nUvTd1LiPsteY1VVkKmdxPekiO0xv48waJp2+sp6/+RwhT+9m1SuIQU
3kLdZWbGXOr+d/62nnEULsSFMn0ZHnl3tyuZ+5NK0nPb80ULxrAlkWNZXjRJ
X1a8i8mnUEx099S0ssFi9SuZ7RApW2XIVqEga3Wf84KXFgpfKNHzl1pPrF9D
ZebV1Ficm0xK+h5N+QZq92ZqJ9s0Y+9Uceyw2hmMA1HKSt7feBRlSuSbNr/S
Ssgi2DMIUsp3nEXQwa4YKPF6rQTS46/43Gwq8RLDk+2BEOU5VOK3GSXWFytR
2q0VGeY0Hd8rtU3a2TSGOhdTnatoE9nFSmwitKSn6mx+/V2xpPmBaipWWqRA
sZFasW5DsbDHdNoqjhS7koo9x+fmaMVerUMWxX5frNimIsUsJ/krrQn2P5BW
/UnUJN16LuuxxFgXaZ2Q9p433pjjxUi1k7MFJOP2ZbQrbXYE7cKOCaWOBOlH
0uN6Chh1DJ1KtfG1k3q+jnpeQT3xyFitmLjaqBPoBPfRy8LFkvlLSqe8t/uN
VkIK7YSvjdWi17ToofJXIPrGSiXbWXQMBf5Dk5A/r+TPO7rfavkP9SDTrxcY
8gP9hZT/jVr+cVr+y3V4R1D+sBdD3qk1ENhyFRH/1YxPtqhA0pf000UlLtBK
SPoZTyX+zFCu0ZqsoyZ/9pKWeimtWOnjUExcwSGMHvWbNpbYolg3FTufim00
FIM/+xNDeYtW7HAq9oKXtNRbZxWzLPpbrUmY35oirbJ6JZogm9a0Jpd7ufKa
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
LT7mhmI6RE014ndo8beKiL8oXfwqZkxgWnp9fhp46Co+BBfUohmgm3EUi4kM
aVxVWfKSSqhgeriU8Pb0ck+t+Ki9/cwInBRpsfKiVKW0V1OKaynt/2hpR3Oo
XaS9ukpp+2lpt61C2uTEPfyyR3aXojWASaymorTrKQXiedj3tyjtVZT2Ei3t
+srSeopUm5a3x8qb7DqIyltVtbHcPpHp33DzNYWCK664atFiX02xv8L75LGq
xG7WYttKMdvV/yqTQoqrr54ClCoLe24kBegYBfti3reJFBo0hR02iUIVc/eq
ooByAx1jgSsK0Hry+LbmMZo8avmE2Mcu1ZAp8i2ScbvG1ePxNYoqPP6yTUOx
h5UkLCDN7LPtz64wOfXALijhzxf47B6bi6dG49k5p/iO1roIzQ8Xz++c2EFk
fwn0oLdoUHCqKEPoIcacg+c2A4pk3K4J9VQYjyVlT6kwqpe9lrJjktBASnyT
lhim0ehEKhSe/TAlTlYZUYlznET84QCA7uVQ0JsJ4FoCsCev/u8C8An4iOJR
RRW6iTxg0NiAoB953EIe15GHPfj3Q+eRWY1oHlVUI5vNAyMPLZoHYuhR5IG5
bDKShgUtmAsqx0JUD8VXg2gKSb+R4Joptt0PwuT1TS079rFpo+y3atlhC/Du
9R7ZsbpsyabJ7qr9zI5LjaKKynTXnGQWFqx4KVvzoi8SywzfIrjw0Kto/80p
9i0hTBSs2wjzesKsIczTPG85gICRGnbpmbtZgJPGY/dysF3wlSudvAgxWRbt
8EJDpW2ODUusYn2bKA8kg9Ps4+Uf2fdfAN5AgJgaBdqI/oQYXoqNfydsFrFk
D0WUWN4t4qsC6PZt2RSAB/AKTLCBRBMB3q4B2uiGAPHYCg1wO/OCqqZ5JQBm
VnqPKp5VVHp5ecKC8uw4OD4f8wEci5BsoI11Mpk3kvkdZI6OF5whhmljJ/Ex
vAUueTnG7TYLd2adqnFX0ReZF7ftNPgQcD/88MMGNxb8N+mudnADQSyzkTMT
7iRu9PzgdCpMBztR497T/NrXPFtVN18Mt89har6VOjjztnXRA5ZnX4hqgPYh
UEwwQZE/kQkhAG7RQNHLgmOr0D16ggaKoGdvlIzNB7ooHWgVdf4uOflidCXP
Xjs5+WJTjkHk20O+QIbhDNnI/i4PX2xoJN33eAt2PtzDPJt3MCjG14XEyQjg
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
yjwPlL46Lw7KOg+UnnQovR4o67OgNGrDiUE5XQu2RcydmG/rPVDqGdKkPitG
PEBDaSOUNp2X36dLqVTv/On55pfP8UhJbWfKqRQwtQ4d21/W4kzW4rhSHjrG
2OyT2LbrNREHGnoI35tj1TmmVEkz6kgPvD5p8KxP0c7EwetNgxcrlf08t+MK
0wQ6NEspZp28eoUsL9ISj9csh5LML8ntl/zM7VejAqcJ+gUXpYHaUoOq1T3V
YmUwmz9EqA+oKHs7351D9ou17GM9sqNKlmM9HuBnQys+e3Ga2PMpdl/ah4w3
idg+KX8XoRDzu309HknihXamnAPKV7Rgo7Vgsro8dqpS5NiStGe/kg2lXxqU
3xHKRkWhJ0FBfEqHFvsIvlE6kV6m2F/VWR/hafaMqCj7cM8LRPavpsm+FV/Q
n7I3emSPhat9PN7UemXrHWP20UeTaWfKOchcqgUbqgUbxbfI+U6Agtp4VMVn
L2UayJp0RiFrLRqKzOWJQklK+byi0OunIL5i65wULtOSDNaSYP5NvabwMz47
ruKzl6VR2JqmMSCNwnMeCm0e03AO9EKPJblNBzYkXAfWC3RoRoczeekMf4n5
v1zL2anlnGiFCOtb1LxyEvD3+Zkr+YFaBuZ53+Vp3LYht4HkJpNAo9zWe7j1
pHPr9XBb7+cmttWUze0KLecgLafsGCtnlN/Fz3wxzpSK77sim9sgcqv1cluX
BcI5adT+PlclPUjtTDkHqCu1YAM8oGCmtxPU7fxsq4rPXpkGZYGGgjglNq//
2XTr6EmDErO9Fnt7MqjxMTqMyUvH64vM/9UF92EkKOunhRXHcitB3crPprrn
wwM5iKyvfsvVaci25asQvJc4jJlA1uNhoBzR8/Y/hFOp+/K8Q0YLKjLCzWdr
mVq1TKLtVDK1HjKtngYVfrXZtygoHYRSo7P2XJqUUQoxZ9/ssTNc/dX86sgJ
5RwtTrMWp9F9e2Ok5yeGp4l4ML7RWPF9gqcP8Swknk7iCfuwZSal2A4wvai4
9CS4xNzxtszpaoo/AlfhIuPID549S8vR6OGC9eRovqMo3EYut/EzN1yV5NKY
1reOX/0Ip0fDgQ/CwmjBia6hVo/t2F5qG3v7doCKeZmFNq/KWMBI9sI5VwtR
64GC/s8t7QtUjX4d8Vzn+RZd0C0aVKzzuJRmSggUB2hTkmFKW49Fd/kR2G5K
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
wZrWePCNrgY42koXMa9opCHZPUtz49OVbPYxNVaf+6CmEpTuFR2kQQWLDvdx
WRq+xg2EyuglsqMQ0OIe4TNw23tAK90uJWshAkY1JHky7g3266rSy8DoTDD6
kMtQpkNatWmxSt9nFFT6y8WQyWhqPYZMnnO7NLJu5LoKWnxcIa1VcQcncAut
8XjJyR0EgpjTucrZwyLJLASZCzWZ9xmip6DKGqXILMz9yOphHuAsmxkhILM7
kqf3cxf+qrtDkaG6WbiDs/zTxXEZGYn5OCPmyUYskqEFMTKHGGSmRsjMy/3I
IrMfyFwYIyN1VFlXqr0wKruZ+WmdXRC4BgQeqDGNxxwJUXkYUmDrxypuohEf
gcnT8EUa2MExYFa9lHbO5YTj5WM/2jcGzK0KSP73WVALOgxs2sru3lK6LXF4
akby4wMA6mqXZB4Ud0eo6ug50LC2Tjyo09hDEHgf1vAOMuClFVa+++TDCwZ6
pJdabcyfP79s3D0nzWsaz8rge5HBV1p5mfwvNVmwJ4n0y/kS0drsI9i+mI3c
XIDaX4Mfj9mxkqQ0bTWd0KARS7czaZb7o2OQ00PxrvWBTTdahWydYgm7p2fz
MzLmD1vMZXgyx9w9y2GSAeecCvPgAVyYf9+lobyHexlwj7TAIuKXfApPBy7y
+xrzYWpdREU7XAU7TEWSVjdm36bZGOsskg1ES2gdbS9uhMXxtY9oex3g0lWP
blJZbO2iys+xWRdfaHuppisdHEkKSTBhp9qor1lvzL9mfvL31KwLZq3lfLvY
3J7pyccQ/M4y7RNNmbL24tLSYO8nb6NUmHF9w4zpAuDh0PJGQvSmfXAvt0Dp
N2K2TDZomGw/l5pqEFdIPt+eZqPkzabyLIhJ1XMM4palFyn7WoNfyr7eNLsO
38jJ3zcmnDGhtKaRbvO5edNg7o/EzP2dJCRVGfeg5uT/wLTctzX52u3c7H6m
W2F2nDgMIOaWUrsGktwTv6Np2b4H8bVl5H1jRg4a8S0Nm/tMjTMb1fT2GP7U
9g8lHxObG7viGzu5NvxZSQyOdGe1bXipGOtNDf8tAOP2dDJgJXOlpFYOzY0M
ldE3CTqCLN1XONcbDnGC8Lt0QlXdKWRfp4C5P6rNvbdh7hWNZjNqbleAMdt9
7uuztPVeoJzY3c2eTwxddblKekR4XJuVYi+Fs+ynO4iZ3qJmlGcsd+Rdtili
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
\
\>", "ImageResolution" -> \
192.],ExpressionUUID->"2259544d-aed6-4ed0-9e93-b4456599efb7"]
}, Open  ]]
},
WindowSize->{1440., 742.5},
WindowMargins->{{-4.875, Automatic}, {Automatic, -4.875}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"fb4c49a8-74ed-4fb0-802f-a7532a6fca27"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 8766, 199, 676, "Input",ExpressionUUID->"90f8894c-fd45-4b15-b19d-8f57a9badb4b"],
Cell[CellGroupData[{
Cell[9349, 223, 804, 16, 28, "Input",ExpressionUUID->"f309a6f6-fa15-4ab6-9314-81d44f206490"],
Cell[10156, 241, 762, 15, 32, "Output",ExpressionUUID->"0da5a3ba-3347-4f87-bb63-fdd9bb2195c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10955, 261, 3140, 76, 86, "Input",ExpressionUUID->"75f0e6ac-f271-4e3b-94d7-287a5169269e"],
Cell[14098, 339, 549076, 10382, 1245, 310952, 6481, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"2259544d-aed6-4ed0-9e93-b4456599efb7"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

