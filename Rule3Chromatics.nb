(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1646447,      48188]
NotebookOptionsPosition[   1643488,      48088]
NotebookOutlinePosition[   1643830,      48103]
CellTagsIndexPosition[   1643787,      48100]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Chromatics", "[", 
   RowBox[{"g_", ",", "vertices_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", " ", "\[IndentingNewLine]", "graph1", ",", 
      " ", "graph2", ",", " ", "graph3", ",", " ", "graph4", ",", " ", 
      "graph5", ",", " ", "graph6", ",", " ", "fullgraph", ",", " ", 
      "\[IndentingNewLine]", "div", ",", " ", "div4", ",", " ", "first", ",", 
      " ", "second", ",", " ", "second4", ",", "third", ",", " ", "fourth", 
      ",", " ", "fifth", ",", " ", "sixth", ",", " ", "full", ",", " ", 
      "vert1", ",", " ", "vert2", ",", " ", "vert3", ",", " ", "vert4", ",", 
      " ", "vert5", ",", " ", "vert6", ",", " ", 
      RowBox[{"circle", " ", "=", " ", 
       RowBox[{"Rule3Cycle", "[", "vertices", "]"}]}], ",", " ", "newNode", 
      ",", " ", "toAdd"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"div", "=", 
      RowBox[{"ChromaticPolynomial", "[", 
       RowBox[{"g", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newNode", "=", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "g", "]"}], "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"toAdd", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"newNode", "\[UndirectedEdge]", "vertex"}], ",", 
        RowBox[{"{", 
         RowBox[{"vertex", ",", "vertices"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fullgraph", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "toAdd"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"full", "=", 
      RowBox[{"ChromaticPolynomial", "[", 
       RowBox[{"fullgraph", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "double", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vert1", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph1", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"first", "=", 
      RowBox[{"ChromaticPolynomial", "[", 
       RowBox[{"graph1", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"double", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vert2", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph2", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"second", "=", 
      RowBox[{"ChromaticPolynomial", "[", 
       RowBox[{"graph2", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"div4", "=", 
      RowBox[{"div", "/.", 
       RowBox[{"x", "\[Rule]", "4"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"second4", "=", 
      RowBox[{"second", "/.", 
       RowBox[{"x", "\[Rule]", "4"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"second4", " ", "\[NotEqual]", " ", "div4"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "single", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vert3", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vertices", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "\[UndirectedEdge]", 
           RowBox[{"vertices", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph3", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert3"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"third", "=", 
         RowBox[{"(", 
          RowBox[{"ChromaticPolynomial", "[", 
           RowBox[{"graph3", ",", "x"}], "]"}], ")"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "ELSE", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"double", " ", "2", " ", "other", " ", "direction"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vert2", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"vertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"vertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph2", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"second", "=", 
         RowBox[{"(", 
          RowBox[{"ChromaticPolynomial", "[", 
           RowBox[{"graph2", ",", "x"}], "]"}], ")"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"single", " ", "other", " ", "direction"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vert3", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vertices", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
           RowBox[{"vertices", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph3", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert3"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"third", "=", 
         RowBox[{"(", 
          RowBox[{"ChromaticPolynomial", "[", 
           RowBox[{"graph3", ",", "x"}], "]"}], ")"}]}]}], ","}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"couples", " ", "of", " ", "1"}], ",", " ", 
       RowBox[{"2", " ", "and", " ", "3", " ", "solutions"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"vert4", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert1", ",", " ", "vert2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph4", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert4"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fourth", "=", 
      RowBox[{"(", 
       RowBox[{"ChromaticPolynomial", "[", 
        RowBox[{"graph4", ",", "x"}], "]"}], ")"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"vert5", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert1", ",", " ", "vert3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph5", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert5"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fifth", "=", 
      RowBox[{"(", 
       RowBox[{"ChromaticPolynomial", "[", 
        RowBox[{"graph5", ",", "x"}], "]"}], ")"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"vert6", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert2", ",", " ", "vert3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph6", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert6"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sixth", "=", 
      RowBox[{"(", 
       RowBox[{"ChromaticPolynomial", "[", 
        RowBox[{"graph6", ",", "x"}], "]"}], ")"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Factor", "[", 
           RowBox[{"#", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"x", "-", "1"}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{"x", "-", "2"}], ")"}], "x"}], ")"}]}], "]"}], 
          "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "/", "24"}], "/.", 
            RowBox[{"x", "\[Rule]", "4"}]}], ")"}]}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "first", ",", "second", ",", "third", ",", " ", "fourth", ",", " ", 
          "fifth", ",", " ", "sixth", ",", "div", ",", " ", "full"}], "}"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", "result"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6602423701782055`*^9, 3.6602425015335393`*^9}, {
   3.66024256281542*^9, 3.6602425903989162`*^9}, {3.660242656482029*^9, 
   3.660242661111898*^9}, {3.6602427209657135`*^9, 3.6602427317780533`*^9}, {
   3.660242784419798*^9, 3.6602428469662523`*^9}, {3.66024287817907*^9, 
   3.6602430054705067`*^9}, 3.660243072234296*^9, {3.6602431232853746`*^9, 
   3.66024312651349*^9}, {3.660243279322816*^9, 3.660243318053073*^9}, {
   3.660243348358139*^9, 3.6602433733387365`*^9}, 3.660243405355942*^9, {
   3.6602434899516134`*^9, 3.660243496226218*^9}, {3.6602435351830697`*^9, 
   3.660243618547592*^9}, {3.6602436536927323`*^9, 3.6602436604559603`*^9}, {
   3.6602437609874473`*^9, 3.660243768083421*^9}, {3.660243801104268*^9, 
   3.6602438082505927`*^9}, {3.6602453026302934`*^9, 
   3.6602453608529415`*^9}, {3.6602454270664787`*^9, 3.66024543884254*^9}, {
   3.6602454698838162`*^9, 3.6602454823782434`*^9}, 3.6602455528222055`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"empty", "=", 
          RowBox[{"EdgeDelete", "[", 
           RowBox[{
            RowBox[{"ReadGrof", "[", 
             RowBox[{"deps3", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"deps3", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "3", ",", "3"}], "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"cycle", "=", 
          RowBox[{"deps3", "[", 
           RowBox[{"[", 
            RowBox[{"k", ",", "3", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"TableForm", "[", 
        RowBox[{
         RowBox[{"Chromatics", "[", 
          RowBox[{"empty", ",", " ", 
           RowBox[{"deps3", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", "3", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
         " ", 
         RowBox[{"TableHeadings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\"", ",", 
              "\"\<AB\>\"", ",", "\"\<AC\>\"", ",", "\"\<BC\>\"", ",", " ", 
              "\"\<Empty\>\"", ",", " ", "\"\<Result\>\""}], "}"}], ",", " ", 
            "None"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "2000000", ",", "2000010"}], "}"}]}], "]"}], ",", 
   "k"}], "]"}]], "Input",
 CellChangeTimes->{
  3.66024253659267*^9, {3.660242629560664*^9, 3.6602426657590275`*^9}, {
   3.660243155380493*^9, 3.6602432370488176`*^9}, {3.660245376378705*^9, 
   3.6602453801143456`*^9}, {3.660245629401845*^9, 3.660245640514129*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"A\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"B\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "383"}], "+", 
            RowBox[{"542", " ", "x"}], "-", 
            RowBox[{"315", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"95", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "18"}]},
       {
        TagBox["\<\"C\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "313"}], "+", 
            RowBox[{"447", " ", "x"}], "-", 
            RowBox[{"267", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"84", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"14", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "19"}]},
       {
        TagBox["\<\"AB\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{"159", "-", 
            RowBox[{"166", " ", "x"}], "+", 
            RowBox[{"68", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            SuperscriptBox["x", "4"]}], ")"}]}], "\[Rule]", "7"}]},
       {
        TagBox["\<\"AC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "491"}], "+", 
            RowBox[{"664", " ", "x"}], "-", 
            RowBox[{"371", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"107", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "5"}]},
       {
        TagBox["\<\"BC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "383"}], "+", 
            RowBox[{"542", " ", "x"}], "-", 
            RowBox[{"315", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"95", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "9"}]},
       {
        TagBox["\<\"Empty\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "278"}], "+", 
            RowBox[{"417", " ", "x"}], "-", 
            RowBox[{"258", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"83", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"14", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "28"}]},
       {
        TagBox["\<\"Result\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{"1271", "-", 
            RowBox[{"2152", " ", "x"}], "+", 
            RowBox[{"1551", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"613", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            RowBox[{"141", " ", 
             SuperscriptBox["x", "4"]}], "-", 
            RowBox[{"18", " ", 
             SuperscriptBox["x", "5"]}], "+", 
            SuperscriptBox["x", "6"]}], ")"}]}], "\[Rule]", "7"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"A", "B", "C", "AB", "AC", "BC", "Empty", "Result"}, 
        None}]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"A\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"B\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "383"}], "+", 
            RowBox[{"542", " ", "x"}], "-", 
            RowBox[{"315", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"95", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "18"}]},
       {
        TagBox["\<\"C\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "313"}], "+", 
            RowBox[{"447", " ", "x"}], "-", 
            RowBox[{"267", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"84", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"14", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "19"}]},
       {
        TagBox["\<\"AB\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{"159", "-", 
            RowBox[{"166", " ", "x"}], "+", 
            RowBox[{"68", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            SuperscriptBox["x", "4"]}], ")"}]}], "\[Rule]", "7"}]},
       {
        TagBox["\<\"AC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "491"}], "+", 
            RowBox[{"664", " ", "x"}], "-", 
            RowBox[{"371", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"107", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "5"}]},
       {
        TagBox["\<\"BC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "383"}], "+", 
            RowBox[{"542", " ", "x"}], "-", 
            RowBox[{"315", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"95", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "9"}]},
       {
        TagBox["\<\"Empty\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "278"}], "+", 
            RowBox[{"417", " ", "x"}], "-", 
            RowBox[{"258", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"83", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"14", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "28"}]},
       {
        TagBox["\<\"Result\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{"1271", "-", 
            RowBox[{"2152", " ", "x"}], "+", 
            RowBox[{"1551", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"613", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            RowBox[{"141", " ", 
             SuperscriptBox["x", "4"]}], "-", 
            RowBox[{"18", " ", 
             SuperscriptBox["x", "5"]}], "+", 
            SuperscriptBox["x", "6"]}], ")"}]}], "\[Rule]", "7"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"A", "B", "C", "AB", "AC", "BC", "Empty", "Result"}, 
        None}]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"A\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"B\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "7"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "32"}], "+", 
            RowBox[{"29", " ", "x"}], "-", 
            RowBox[{"9", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            SuperscriptBox["x", "3"]}], ")"}]}], "\[Rule]", "4"}]},
       {
        TagBox["\<\"C\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "7"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "26"}], "+", 
            RowBox[{"24", " ", "x"}], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            SuperscriptBox["x", "3"]}], ")"}]}], "\[Rule]", "6"}]},
       {
        TagBox["\<\"AB\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{"187", "-", 
            RowBox[{"194", " ", "x"}], "+", 
            RowBox[{"77", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"14", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            SuperscriptBox["x", "4"]}], ")"}]}], "\[Rule]", "3"}]},
       {
        TagBox["\<\"AC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{"145", "-", 
            RowBox[{"159", " ", "x"}], "+", 
            RowBox[{"67", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            SuperscriptBox["x", "4"]}], ")"}]}], "\[Rule]", "5"}]},
       {
        TagBox["\<\"BC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "x"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "32"}], "+", 
            RowBox[{"29", " ", "x"}], "-", 
            RowBox[{"9", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            SuperscriptBox["x", "3"]}], ")"}]}], "\[Rule]", "0"}]},
       {
        TagBox["\<\"Empty\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{"10", "-", 
            RowBox[{"6", " ", "x"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "17"}], "+", 
            RowBox[{"18", " ", "x"}], "-", 
            RowBox[{"7", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            SuperscriptBox["x", "3"]}], ")"}]}], "\[Rule]", "14"}]},
       {
        TagBox["\<\"Result\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "398"}], "+", 
            RowBox[{"553", " ", "x"}], "-", 
            RowBox[{"317", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"95", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "6"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"A", "B", "C", "AB", "AC", "BC", "Empty", "Result"}, 
        None}]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"A\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"B\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "9"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}]}], "\[Rule]", "2"}]},
       {
        TagBox["\<\"C\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "35"}], "+", 
            RowBox[{"30", " ", "x"}], "-", 
            RowBox[{"9", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            SuperscriptBox["x", "3"]}], ")"}]}], "\[Rule]", "10"}]},
       {
        TagBox["\<\"AB\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{"121", "-", 
            RowBox[{"142", " ", "x"}], "+", 
            RowBox[{"64", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            SuperscriptBox["x", "4"]}], ")"}]}], "\[Rule]", "1"}]},
       {
        TagBox["\<\"AC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{"145", "-", 
            RowBox[{"159", " ", "x"}], "+", 
            RowBox[{"67", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            SuperscriptBox["x", "4"]}], ")"}]}], "\[Rule]", "5"}]},
       {
        TagBox["\<\"BC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "x"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"10", "-", 
            RowBox[{"6", " ", "x"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}]}], "\[Rule]", "0"}]},
       {
        TagBox["\<\"Empty\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"73", "-", 
            RowBox[{"96", " ", "x"}], "+", 
            RowBox[{"48", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"11", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            SuperscriptBox["x", "4"]}], ")"}]}], "\[Rule]", "18"}]},
       {
        TagBox["\<\"Result\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"A", "B", "C", "AB", "AC", "BC", "Empty", "Result"}, 
        None}]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"A\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"B\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"5", " ", "x"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "49"}], "+", 
            RowBox[{"38", " ", "x"}], "-", 
            RowBox[{"10", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            SuperscriptBox["x", "3"]}], ")"}]}], "\[Rule]", "42"}]},
       {
        TagBox["\<\"C\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "289"}], "+", 
            RowBox[{"430", " ", "x"}], "-", 
            RowBox[{"264", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"84", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"14", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "23"}]},
       {
        TagBox["\<\"AB\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{"151", "-", 
            RowBox[{"163", " ", "x"}], "+", 
            RowBox[{"68", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            SuperscriptBox["x", "4"]}], ")"}]}], "\[Rule]", "11"}]},
       {
        TagBox["\<\"AC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "483"}], "+", 
            RowBox[{"661", " ", "x"}], "-", 
            RowBox[{"371", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"107", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "1"}]},
       {
        TagBox["\<\"BC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"5", " ", "x"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "49"}], "+", 
            RowBox[{"38", " ", "x"}], "-", 
            RowBox[{"10", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            SuperscriptBox["x", "3"]}], ")"}]}], "\[Rule]", "21"}]},
       {
        TagBox["\<\"Empty\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "262"}], "+", 
            RowBox[{"403", " ", "x"}], "-", 
            RowBox[{"255", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"83", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"14", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "44"}]},
       {
        TagBox["\<\"Result\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{"1199", "-", 
            RowBox[{"2077", " ", "x"}], "+", 
            RowBox[{"1525", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"610", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            RowBox[{"141", " ", 
             SuperscriptBox["x", "4"]}], "-", 
            RowBox[{"18", " ", 
             SuperscriptBox["x", "5"]}], "+", 
            SuperscriptBox["x", "6"]}], ")"}]}], "\[Rule]", "11"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"A", "B", "C", "AB", "AC", "BC", "Empty", "Result"}, 
        None}]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"A\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"B\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"5", " ", "x"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "49"}], "+", 
            RowBox[{"38", " ", "x"}], "-", 
            RowBox[{"10", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            SuperscriptBox["x", "3"]}], ")"}]}], "\[Rule]", "42"}]},
       {
        TagBox["\<\"C\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "289"}], "+", 
            RowBox[{"430", " ", "x"}], "-", 
            RowBox[{"264", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"84", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"14", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "23"}]},
       {
        TagBox["\<\"AB\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{"151", "-", 
            RowBox[{"163", " ", "x"}], "+", 
            RowBox[{"68", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            SuperscriptBox["x", "4"]}], ")"}]}], "\[Rule]", "11"}]},
       {
        TagBox["\<\"AC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "483"}], "+", 
            RowBox[{"661", " ", "x"}], "-", 
            RowBox[{"371", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"107", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "1"}]},
       {
        TagBox["\<\"BC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{"7", "-", 
            RowBox[{"5", " ", "x"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "49"}], "+", 
            RowBox[{"38", " ", "x"}], "-", 
            RowBox[{"10", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            SuperscriptBox["x", "3"]}], ")"}]}], "\[Rule]", "21"}]},
       {
        TagBox["\<\"Empty\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "262"}], "+", 
            RowBox[{"403", " ", "x"}], "-", 
            RowBox[{"255", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"83", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"14", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "44"}]},
       {
        TagBox["\<\"Result\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{"1199", "-", 
            RowBox[{"2077", " ", "x"}], "+", 
            RowBox[{"1525", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"610", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            RowBox[{"141", " ", 
             SuperscriptBox["x", "4"]}], "-", 
            RowBox[{"18", " ", 
             SuperscriptBox["x", "5"]}], "+", 
            SuperscriptBox["x", "6"]}], ")"}]}], "\[Rule]", "11"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"A", "B", "C", "AB", "AC", "BC", "Empty", "Result"}, 
        None}]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"A\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"B\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"14561", "-", 
            RowBox[{"32343", " ", "x"}], "+", 
            RowBox[{"31981", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"18457", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            RowBox[{"6824", " ", 
             SuperscriptBox["x", "4"]}], "-", 
            RowBox[{"1660", " ", 
             SuperscriptBox["x", "5"]}], "+", 
            RowBox[{"260", " ", 
             SuperscriptBox["x", "6"]}], "-", 
            RowBox[{"24", " ", 
             SuperscriptBox["x", "7"]}], "+", 
            SuperscriptBox["x", "8"]}], ")"}]}], "\[Rule]", "21"}]},
       {
        TagBox["\<\"C\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{"1091", "-", 
            RowBox[{"1861", " ", "x"}], "+", 
            RowBox[{"1354", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"543", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            RowBox[{"128", " ", 
             SuperscriptBox["x", "4"]}], "-", 
            RowBox[{"17", " ", 
             SuperscriptBox["x", "5"]}], "+", 
            SuperscriptBox["x", "6"]}], ")"}]}], "\[Rule]", "15"}]},
       {
        TagBox["\<\"AB\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{"19633", "-", 
            RowBox[{"43279", " ", "x"}], "+", 
            RowBox[{"42353", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"24034", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            RowBox[{"8653", " ", 
             SuperscriptBox["x", "4"]}], "-", 
            RowBox[{"2025", " ", 
             SuperscriptBox["x", "5"]}], "+", 
            RowBox[{"301", " ", 
             SuperscriptBox["x", "6"]}], "-", 
            RowBox[{"26", " ", 
             SuperscriptBox["x", "7"]}], "+", 
            SuperscriptBox["x", "8"]}], ")"}]}], "\[Rule]", "5"}]},
       {
        TagBox["\<\"AC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "483"}], "+", 
            RowBox[{"661", " ", "x"}], "-", 
            RowBox[{"371", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"107", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "1"}]},
       {
        TagBox["\<\"BC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6534"}], "+", 
            RowBox[{"11879", " ", "x"}], "-", 
            RowBox[{"9489", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"4332", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"1226", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            RowBox[{"216", " ", 
             SuperscriptBox["x", "5"]}], "-", 
            RowBox[{"22", " ", 
             SuperscriptBox["x", "6"]}], "+", 
            SuperscriptBox["x", "7"]}], ")"}]}], "\[Rule]", "6"}]},
       {
        TagBox["\<\"Empty\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{"748", "-", 
            RowBox[{"1350", " ", "x"}], "+", 
            RowBox[{"1045", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"448", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            RowBox[{"113", " ", 
             SuperscriptBox["x", "4"]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["x", "5"]}], "+", 
            SuperscriptBox["x", "6"]}], ")"}]}], "\[Rule]", "36"}]},
       {
        TagBox["\<\"Result\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "46808"}], "+", 
            RowBox[{"118056", " ", "x"}], "-", 
            RowBox[{"134183", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"90419", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"39908", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            RowBox[{"11995", " ", 
             SuperscriptBox["x", "5"]}], "-", 
            RowBox[{"2461", " ", 
             SuperscriptBox["x", "6"]}], "+", 
            RowBox[{"333", " ", 
             SuperscriptBox["x", "7"]}], "-", 
            RowBox[{"27", " ", 
             SuperscriptBox["x", "8"]}], "+", 
            SuperscriptBox["x", "9"]}], ")"}]}], "\[Rule]", "24"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"A", "B", "C", "AB", "AC", "BC", "Empty", "Result"}, 
        None}]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"A\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"B\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "32"}], "+", 
            RowBox[{"29", " ", "x"}], "-", 
            RowBox[{"9", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            SuperscriptBox["x", "3"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "35"}], "+", 
            RowBox[{"30", " ", "x"}], "-", 
            RowBox[{"9", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            SuperscriptBox["x", "3"]}], ")"}]}], "\[Rule]", "20"}]},
       {
        TagBox["\<\"C\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{"956", "-", 
            RowBox[{"1672", " ", "x"}], "+", 
            RowBox[{"1255", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"520", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            RowBox[{"126", " ", 
             SuperscriptBox["x", "4"]}], "-", 
            RowBox[{"17", " ", 
             SuperscriptBox["x", "5"]}], "+", 
            SuperscriptBox["x", "6"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"AB\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{"13", "-", 
            RowBox[{"7", " ", "x"}], "+", 
            SuperscriptBox["x", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"145", "-", 
            RowBox[{"159", " ", "x"}], "+", 
            RowBox[{"67", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"13", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            SuperscriptBox["x", "4"]}], ")"}]}], "\[Rule]", "5"}]},
       {
        TagBox["\<\"AC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "483"}], "+", 
            RowBox[{"661", " ", "x"}], "-", 
            RowBox[{"371", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"107", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "1"}]},
       {
        TagBox["\<\"BC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "535"}], "+", 
            RowBox[{"703", " ", "x"}], "-", 
            RowBox[{"382", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"108", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "5"}]},
       {
        TagBox["\<\"Empty\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{"613", "-", 
            RowBox[{"1161", " ", "x"}], "+", 
            RowBox[{"946", " ", 
             SuperscriptBox["x", "2"]}], "-", 
            RowBox[{"425", " ", 
             SuperscriptBox["x", "3"]}], "+", 
            RowBox[{"111", " ", 
             SuperscriptBox["x", "4"]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["x", "5"]}], "+", 
            SuperscriptBox["x", "6"]}], ")"}]}], "\[Rule]", "33"}]},
       {
        TagBox["\<\"Result\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4298"}], "+", 
            RowBox[{"8408", " ", "x"}], "-", 
            RowBox[{"7188", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"3499", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"1052", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            RowBox[{"196", " ", 
             SuperscriptBox["x", "5"]}], "-", 
            RowBox[{"21", " ", 
             SuperscriptBox["x", "6"]}], "+", 
            SuperscriptBox["x", "7"]}], ")"}]}], "\[Rule]", "22"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"A", "B", "C", "AB", "AC", "BC", "Empty", "Result"}, 
        None}]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"A\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"B\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "24"}]},
       {
        TagBox["\<\"C\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "48"}]},
       {
        TagBox["\<\"AB\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "x"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "0"}]},
       {
        TagBox["\<\"AC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"BC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "24"}]},
       {
        TagBox["\<\"Empty\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "48"}]},
       {
        TagBox["\<\"Result\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"A", "B", "C", "AB", "AC", "BC", "Empty", "Result"}, 
        None}]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"A\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"B\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "24"}]},
       {
        TagBox["\<\"C\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "48"}]},
       {
        TagBox["\<\"AB\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "x"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "0"}]},
       {
        TagBox["\<\"AC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"BC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "24"}]},
       {
        TagBox["\<\"Empty\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "48"}]},
       {
        TagBox["\<\"Result\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"A", "B", "C", "AB", "AC", "BC", "Empty", "Result"}, 
        None}]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"A\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"B\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "24"}]},
       {
        TagBox["\<\"C\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "48"}]},
       {
        TagBox["\<\"AB\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "x"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "0"}]},
       {
        TagBox["\<\"AC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "5"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]},
       {
        TagBox["\<\"BC\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "24"}]},
       {
        TagBox["\<\"Empty\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "48"}]},
       {
        TagBox["\<\"Result\"\>",
         HoldForm], 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "x"}], ")"}], "6"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "332"}], "+", 
            RowBox[{"498", " ", "x"}], "-", 
            RowBox[{"303", " ", 
             SuperscriptBox["x", "2"]}], "+", 
            RowBox[{"94", " ", 
             SuperscriptBox["x", "3"]}], "-", 
            RowBox[{"15", " ", 
             SuperscriptBox["x", "4"]}], "+", 
            SuperscriptBox["x", "5"]}], ")"}]}], "\[Rule]", "12"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"A", "B", "C", "AB", "AC", "BC", "Empty", "Result"}, 
        None}]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.660242540186143*^9, 3.6602425936495714`*^9, {3.6602426381615143`*^9, 
   3.6602426668983974`*^9}, 3.6602427365010605`*^9, {3.66024279450625*^9, 
   3.660242855237208*^9}, 3.660242886260109*^9, {3.6602429398535786`*^9, 
   3.660242952086027*^9}, 3.6602430092283316`*^9, 3.6602430750179806`*^9, 
   3.6602431299667435`*^9, 3.66024316295955*^9, {3.660243199619118*^9, 
   3.6602432383802943`*^9}, {3.660243300541849*^9, 3.660243321391589*^9}, {
   3.660243356569466*^9, 3.660243378875044*^9}, 3.6602434101471553`*^9, 
   3.660243499792056*^9, 3.6602435597275105`*^9, {3.660243590739426*^9, 
   3.660243622035638*^9}, 3.6602437336690845`*^9, 3.6602437726690493`*^9, 
   3.660243813540722*^9, {3.6602453160677576`*^9, 3.6602453820494356`*^9}, 
   3.6602454431134696`*^9, 3.6602454865259256`*^9, 3.660245556983663*^9, 
   3.6602456455469956`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CompleteBaseCoeff", "[", "#", "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"18", " ", "x"}], "-", 
      RowBox[{"39", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"29", " ", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", "5"]}], ",", 
     RowBox[{
      RowBox[{"12", " ", "x"}], "-", 
      RowBox[{"28", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"23", " ", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", "5"]}], ",", 
     RowBox[{
      RowBox[{"8", " ", "x"}], "-", 
      RowBox[{"20", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"18", " ", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"7", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", "5"]}], ",", 
     RowBox[{
      RowBox[{"24", " ", "x"}], "-", 
      RowBox[{"50", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"35", " ", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"10", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", "5"]}], ",", 
     RowBox[{
      RowBox[{"18", " ", "x"}], "-", 
      RowBox[{"39", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"29", " ", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"9", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", "5"]}], ",", 
     RowBox[{
      RowBox[{"12", " ", "x"}], "-", 
      RowBox[{"28", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"23", " ", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", "5"]}], ",", 
     RowBox[{
      RowBox[{"8", " ", "x"}], "-", 
      RowBox[{"20", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"18", " ", 
       SuperscriptBox["x", "3"]}], "-", 
      RowBox[{"7", " ", 
       SuperscriptBox["x", "4"]}], "+", 
      SuperscriptBox["x", "5"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "54"}], " ", "x"}], "+", 
      RowBox[{"135", " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"126", " ", 
       SuperscriptBox["x", "3"]}], "+", 
      RowBox[{"56", " ", 
       SuperscriptBox["x", "4"]}], "-", 
      RowBox[{"12", " ", 
       SuperscriptBox["x", "5"]}], "+", 
      SuperscriptBox["x", "6"]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.660243088464355*^9, 3.6602431039486465`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "2", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "3", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "2", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "3", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "3", ",", "1"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6602431046783113`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompleteBaseCoeff", "[", 
  RowBox[{
   RowBox[{"12", " ", "x"}], "-", 
   RowBox[{"28", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"23", " ", 
    SuperscriptBox["x", "3"]}], "-", 
   RowBox[{"8", " ", 
    SuperscriptBox["x", "4"]}], "+", 
   SuperscriptBox["x", "5"]}], "]"}]], "Input",
 CellChangeTimes->{{3.6602430527411966`*^9, 3.660243057036003*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "2", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.660243058180216*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Colofours", "[", 
   RowBox[{"g_", ",", "vertices_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", " ", "\[IndentingNewLine]", "graph1", ",", 
      " ", "graph2", ",", " ", "graph3", ",", " ", "graph4", ",", " ", 
      "graph5", ",", " ", "graph6", ",", " ", "fullgraph", ",", " ", 
      "\[IndentingNewLine]", "div", ",", "  ", "first", ",", " ", "second", 
      ",", " ", "third", ",", " ", "fourth", ",", " ", "fifth", ",", " ", 
      "sixth", ",", " ", "full", ",", " ", "vert1", ",", " ", "vert2", ",", 
      " ", "vert3", ",", " ", "vert4", ",", " ", "vert5", ",", " ", "vert6", 
      ",", " ", 
      RowBox[{"circle", " ", "=", " ", 
       RowBox[{"Rule3Cycle", "[", "vertices", "]"}]}], ",", " ", "newNode", 
      ",", " ", "toAdd"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"div", "=", 
      RowBox[{
       RowBox[{"ChromaticPolynomial", "[", 
        RowBox[{"g", ",", "4"}], "]"}], "/", "24"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newNode", "=", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "g", "]"}], "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"toAdd", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"newNode", "\[UndirectedEdge]", "vertex"}], ",", 
        RowBox[{"{", 
         RowBox[{"vertex", ",", "vertices"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fullgraph", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "toAdd"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"full", "=", 
      RowBox[{
       RowBox[{"ChromaticPolynomial", "[", 
        RowBox[{"fullgraph", ",", "4"}], "]"}], "/", "24"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "double", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vert1", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph1", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"first", "=", 
      RowBox[{
       RowBox[{"ChromaticPolynomial", "[", 
        RowBox[{"graph1", ",", "4"}], "]"}], "/", "24"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"double", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vert2", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph2", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"second", "=", 
      RowBox[{
       RowBox[{"ChromaticPolynomial", "[", 
        RowBox[{"graph2", ",", "4"}], "]"}], "/", "24"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"second", " ", "\[NotEqual]", " ", "div"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "single", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vert3", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vertices", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "\[UndirectedEdge]", 
           RowBox[{"vertices", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph3", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert3"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"third", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ChromaticPolynomial", "[", 
            RowBox[{"graph3", ",", "4"}], "]"}], "/", "24"}], ")"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "ELSE", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"double", " ", "2", " ", "other", " ", "direction"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vert2", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"vertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"vertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph2", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"second", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ChromaticPolynomial", "[", 
            RowBox[{"graph2", ",", "4"}], "]"}], "/", "24"}], ")"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"single", " ", "other", " ", "direction"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vert3", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vertices", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
           RowBox[{"vertices", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph3", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert3"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"third", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ChromaticPolynomial", "[", 
            RowBox[{"graph3", ",", "4"}], "]"}], "/", "24"}], ")"}]}]}], 
       ","}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"couples", " ", "of", " ", "1"}], ",", " ", 
       RowBox[{"2", " ", "and", " ", "3", " ", "solutions"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"vert4", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert1", ",", " ", "vert2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph4", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert4"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fourth", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ChromaticPolynomial", "[", 
         RowBox[{"graph4", ",", "4"}], "]"}], "/", "24"}], ")"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"vert5", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert1", ",", " ", "vert3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph5", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert5"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fifth", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ChromaticPolynomial", "[", 
         RowBox[{"graph5", ",", "4"}], "]"}], "/", "24"}], ")"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"vert6", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert2", ",", " ", "vert3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph6", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert6"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sixth", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ChromaticPolynomial", "[", 
         RowBox[{"graph6", ",", "4"}], "]"}], "/", "24"}], ")"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "first", ",", "second", ",", "third", ",", " ", "fourth", ",", " ", 
         "fifth", ",", " ", "sixth", ",", "div", ",", " ", "full"}], "}"}], 
       "/", "div"}]}], ";", "\[IndentingNewLine]", "result"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.660249599827639*^9, 3.6602496868226705`*^9}, {
  3.660249746833906*^9, 3.660249747403657*^9}, {3.6602835313839045`*^9, 
  3.6602835367000947`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$HistoryLength", "=", "10"}]], "Input",
 CellChangeTimes->{{3.6602511154358892`*^9, 3.6602511318011713`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{{3.660251128791978*^9, 3.6602511325421495`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"x", "-", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"7", "/", "4"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"3", "/", "4"}]}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"With", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"empty", "=", 
              RowBox[{"EdgeDelete", "[", 
               RowBox[{
                RowBox[{"ReadGrof", "[", 
                 RowBox[{"deps3", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", ",", "1"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"deps3", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", ",", "3", ",", "3"}], "]"}], "]"}]}], "]"}]}], 
             ",", 
             RowBox[{"cycle", "=", 
              RowBox[{"deps3", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", "3", ",", "2"}], "]"}], "]"}]}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"t", "=", 
               RowBox[{"Colofours", "[", 
                RowBox[{"empty", ",", " ", 
                 RowBox[{"deps3", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", ",", "3", ",", "2"}], "]"}], "]"}]}], "]"}]}],
               "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"Take", "[", 
                 RowBox[{"t", ",", "3"}], "]"}], "]"}], ",", 
               RowBox[{"Total", "[", 
                RowBox[{"Take", "[", 
                 RowBox[{"t", ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "6"}], "}"}]}], "]"}], "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", "k"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"7", "/", "4"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"3", "/", "4"}]}], "}"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.660249701061039*^9, 3.6602499102418137`*^9}, {
  3.660250073823044*^9, 3.6602501674499454`*^9}, {3.660250212588587*^9, 
  3.660250218433053*^9}, {3.6602509491913986`*^9, 3.660250952569694*^9}, {
  3.6602510253737884`*^9, 3.660251100396168*^9}, {3.660251140010371*^9, 
  3.660251152370088*^9}, {3.660251727802227*^9, 3.6602517357565155`*^9}, {
  3.660283548237421*^9, 3.660283548722867*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwdx3881HcAx3E/1sJkND92rUfFTg+0SnVa+vVGEiuNK1FrKsSU9fO2JY+1
xFn5UVdk3Cg6ITXH1LLFEuIq5bjT3cz86ro4p68fd4fj7rPb/ng/3q+nY8RR
5kETIyOjQMP+e8ax07OMjEZgSGHdYMjGQ86afG9jgwt2RfTQGCjsPL46ycRg
s46LVTRfWG2OjXl3lsFrbG/m03ZigBb2xNLCYOGqiiu0KPzc4JFBszX4/2DB
xGHUdpWLwYlpp1JpyWirjaFHB43Ai0XRLtCycH2bBftSyQh6MwMKR0aLkJzt
uXZscgRnhSu3bFnAB0Pwy4Ya/1F4JXV1NqTdhd06ybmA66MIqjy5NEf1O+bE
Zsy3HhmFkPNSYGz8EJ9KJydyt4yh+lHTw9b19Viy/JZjWv4YwuID5uxWNmK1
t/z6veExVJivJHe+bsaJLOk+nu84OLxG/Tznp3h8I5T19Oo4XOxrb+wob0F/
zkeSsNfjsG7uqm5ya8UKYVZC2ToVGr12vL31Voif6rksj3QV9locbu9wb8cy
TQg/6ZUK1dLQWquLInBsdq3x9FTDyy+sTyYTw3yg387lghr0grTQAvpLVBG6
R2ePGi36TPFXP0jAah8vfeyugTCglWffIEWM/Ltw1nkN8nJ74tscO0Hv94pI
7daAc970guvpvzGZk/3HX8sm0Bu5RxH9oAs6TuFOJXsCqk0pzEqHbtB8PTet
kUwgyvq1Zd/eHpBuu7NDiyehr11iJAnshcODEv2B7yex7NvPdQ3aXvgxm9ps
XkwivSid93FeH4rduPJk5ylsC2E8N9/ajzbFrwH7EqZwo+Ng5p+afnwQHWZ8
8tkUFrdUmMizXyHFqUob4KSF5eZodaavDNZcrv+ek1osYnhcviuXIWqqSdZW
r4VgLOMJj/0aitzSekvaNMSrgtm0lXL8qLZXn42dhtXQUoWxSI6QK2tjq+um
UUb/pv1Y4husVShWuM6dAUvcEcmkD0Dh2utvHDED8Y66yyaNA3hWllqYVz2D
7BC7TZ7HB9Egf7T9uLkOKc+T8vvnKjAcWb7B/IAOnc17E+bWK9An6Dltdl+H
+ssP1dZHhqAcyLf0nq2HtG0d7ZyVEi6f2fSuD9cjKMupLr5GiYRoG7MTfD00
LU7WsvBh5BzadcaK6OHecWdmvn4Yb/hBq4+EELzYVxjXVfYWgRUSn9nFBNz9
fLbVNgpPY35zPlpCkNUat7V7OwX/hVfNJKUEnI1uNuXBFHwvMl8U3yY4P/9m
XmAohfVxz3f7VRKcknKr0iMofOLScIxdQxAWlNJnEU/BsqD8mqmI4EOvLzfM
LqaQGpqReFhMYMufZyoppWD2flyUqIPAeoFUUHybwjtnXN14UgKzGeZOv0oK
M18U3fPpJpi873+YXUNB6cBtSRwkkC5n5JqKKBxqPcUfVBCIr42GizooDKSE
XglWEgjn8Ok8KQWZ2jbMkSIQDLlW+HRT6BJdelWnIqguWdicOEhhT9qRJhcN
wV37f9KDlRSkPoG3OBMEFWwu05GiIK60OLpfS1Aaadddp6LAjB0MFkwTFLW3
8zgTFISLBAx3HUGBNyd2v5bCdmmxQ46eIK8icLm7jkLLJbaWEIKche+pCaHw
L+cnhgM=
      "]]}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGBIAWIQDQF/7CH0C/tQMPgKpa/ao8tD6A/2DCiAeP2ek1SA
6Kc9mPJ8RKR9uPmkuhddPSE+RNcPKP2AoPtJ1Y8uTx3/kx8/hMwj5F/s/iPe
P9j56OFDangSr5/U9PlyUbferhef7N3EY0suuh4nGJ7EpRdC4YE7finVTyj+
sPuXUPpFlyfV/eTnD2rzyUv/CPeTqp/U9EJc+sUdnqS6HwD0m4ey
       "]]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->NCache[{{1, 
      Rational[7, 4]}, {0, 
      Rational[3, 4]}}, {{1, 1.75}, {0, 0.75}}],
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.66028355529383*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"Sort", "[", 
   RowBox[{"N", "[", 
    RowBox[{"Monitor", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"With", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"empty", "=", 
             RowBox[{"EdgeDelete", "[", 
              RowBox[{
               RowBox[{"ReadGrof", "[", 
                RowBox[{"deps3", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", ",", "1"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"deps3", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ",", "3", ",", "3"}], "]"}], "]"}]}], "]"}]}], 
            ",", 
            RowBox[{"cycle", "=", 
             RowBox[{"deps3", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "3", ",", "2"}], "]"}], "]"}]}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"t", "=", 
              RowBox[{"Colofours", "[", 
               RowBox[{"empty", ",", " ", 
                RowBox[{"deps3", "[", 
                 RowBox[{"[", 
                  RowBox[{"k", ",", "3", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{"Take", "[", 
                RowBox[{"t", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
              RowBox[{"Total", "[", 
               RowBox[{"Take", "[", 
                RowBox[{"t", ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "6"}], "}"}]}], "]"}], "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "1000"}], "}"}]}], "]"}], ",", "k"}], 
     "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6602504401498103`*^9, 3.660250485299866*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Fit", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.`", ",", "0.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.125`", ",", "0.125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.1818181818181819`", ",", "0.18181818181818182`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.2352941176470589`", ",", "0.23529411764705882`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.3333333333333333`", ",", "0.3333333333333333`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.3823529411764706`", ",", "0.38235294117647056`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.4090909090909092`", ",", "0.4090909090909091`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.4210526315789473`", ",", "0.42105263157894735`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.4375`", ",", "0.4375`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.4615384615384615`", ",", "0.46153846153846156`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "0.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.5714285714285714`", ",", "0.5714285714285714`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.6538461538461537`", ",", "0.6538461538461539`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.6666666666666667`", ",", "0.6666666666666666`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.6956521739130435`", ",", "0.6956521739130435`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1.75`", ",", "0.75`"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.660250794789364*^9, 3.6602508581068835`*^9}, {
  3.6602509013853426`*^9, 3.6602509175726833`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.0000000000000022`"}], "+", 
  RowBox[{"1.0000000000000009`", " ", "x"}]}]], "Output",
 CellChangeTimes->{{3.6602508410909457`*^9, 3.6602508590867963`*^9}, {
  3.660250911218631*^9, 3.66025092920137*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BoolToNum", "[", "b_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"b", ",", "1", ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6602840392914577`*^9, 3.660284056049341*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ColofoursSlow", "[", 
   RowBox[{"g_", ",", "vertices_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", " ", "\[IndentingNewLine]", "graph1", ",", 
      " ", "graph2", ",", " ", "graph3", ",", " ", "graph4", ",", " ", 
      "graph5", ",", " ", "graph6", ",", "  ", "\[IndentingNewLine]", "cond1",
       ",", " ", "cond2", ",", " ", "cond3", ",", "cond1Excl", ",", " ", 
      "cond2Excl", ",", " ", "cond3Excl", ",", " ", "cond4", ",", " ", 
      "cond5", ",", " ", "cond6", ",", " ", "\[IndentingNewLine]", "sols", 
      ",", "\[IndentingNewLine]", "div", ",", "  ", "second", ",", "   ", 
      "full", ",", " ", "vert1", ",", " ", "vert2", ",", " ", "vert3", ",", 
      " ", "vert4", ",", " ", "vert5", ",", " ", "vert6", ",", " ", 
      RowBox[{"circle", " ", "=", " ", 
       RowBox[{"Rule3Cycle", "[", "vertices", "]"}]}], ",", " ", "newNode", 
      ",", " ", "toAdd", ",", "\[IndentingNewLine]", "record", ",", " ", 
      "index"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"div", "=", 
      RowBox[{"ChromaticPolynomial", "[", 
       RowBox[{"g", ",", "4"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newNode", "=", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "g", "]"}], "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"toAdd", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"newNode", "\[UndirectedEdge]", "vertex"}], ",", 
        RowBox[{"{", 
         RowBox[{"vertex", ",", "vertices"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "double", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vert1", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph1", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"double", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vert2", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph2", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"second", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ChromaticPolynomial", "[", 
         RowBox[{"graph2", ",", "4"}], "]"}], "/", "24"}], ")"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"second", " ", "\[NotEqual]", " ", "div"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "single", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vert3", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vertices", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "\[UndirectedEdge]", 
           RowBox[{"vertices", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph3", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert3"}], "]"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "ELSE", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"double", " ", "2", " ", "other", " ", "direction"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vert2", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"vertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"vertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph2", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"single", " ", "other", " ", "direction"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vert3", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vertices", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
           RowBox[{"vertices", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph3", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert3"}], "]"}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"couples", " ", "of", " ", "1"}], ",", " ", 
       RowBox[{"2", " ", "and", " ", "3", " ", "solutions"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"vert4", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert1", ",", " ", "vert2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph4", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert4"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"vert5", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert1", ",", " ", "vert3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph5", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert5"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"vert6", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert2", ",", " ", "vert3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph6", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert6"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"cond1", "=", 
      RowBox[{"ToLogical", "[", "graph1", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond2", "=", 
      RowBox[{"ToLogical", "[", "graph2", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond3", "=", 
      RowBox[{"ToLogical", "[", "graph3", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond4", "=", 
      RowBox[{"ToLogical", "[", "graph4", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond5", "=", 
      RowBox[{"ToLogical", "[", "graph5", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond6", "=", 
      RowBox[{"ToLogical", "[", "graph6", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond1Excl", "=", 
      RowBox[{"cond1", " ", "&&", " ", 
       RowBox[{"!", " ", "cond4"}], " ", "&&", " ", 
       RowBox[{"!", " ", "cond5"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond2Excl", "=", 
      RowBox[{"cond2", " ", "&&", " ", 
       RowBox[{"!", " ", "cond4"}], " ", "&&", " ", 
       RowBox[{"!", " ", "cond6"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond3Excl", "=", 
      RowBox[{"cond3", " ", "&&", " ", 
       RowBox[{"!", " ", "cond5"}], " ", "&&", " ", 
       RowBox[{"!", " ", "cond6"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"sols", "=", 
      RowBox[{"GraphSolutions2", "[", 
       RowBox[{"g", ",", "vertices"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"BoolToNum", "[", 
           RowBox[{"cond1Excl", "/.", "s"}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"BoolToNum", "[", 
           RowBox[{"cond2Excl", "/.", "s"}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"BoolToNum", "[", 
           RowBox[{"cond3Excl", "/.", "s"}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"BoolToNum", "[", 
           RowBox[{"cond4", "/.", "s"}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"BoolToNum", "[", 
           RowBox[{"cond5", "/.", "s"}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"BoolToNum", "[", 
           RowBox[{"cond6", "/.", "s"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"BoolToNum", "[", 
           RowBox[{"cond1", "/.", "s"}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"BoolToNum", "[", 
           RowBox[{"cond2", "/.", "s"}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"BoolToNum", "[", 
           RowBox[{"cond3", "/.", "s"}], "]"}]}], "\[IndentingNewLine]", 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "sols"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"record", "=", 
      RowBox[{"result", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "2"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "result", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"record", "=", 
        RowBox[{"record", "+", 
         RowBox[{"result", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"record", "/", "div"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6602836336322317`*^9, 3.6602836370503254`*^9}, {
   3.6602838449424143`*^9, 3.660283916968124*^9}, {3.660284065908499*^9, 
   3.660284136359133*^9}, {3.6602842081773005`*^9, 3.6602842128772287`*^9}, {
   3.660284325953268*^9, 3.660284335884612*^9}, {3.660284368610209*^9, 
   3.660284420129826*^9}, {3.6602845378273067`*^9, 3.6602845421320963`*^9}, {
   3.6602845791444526`*^9, 3.6602846506704545`*^9}, 3.6602864169867086`*^9, {
   3.6602865126009274`*^9, 3.6602865132506495`*^9}, {3.660286917027537*^9, 
   3.6602869503221064`*^9}, {3.660296210795628*^9, 3.6602962110211697`*^9}, {
   3.6603118030415783`*^9, 3.660311883189332*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "deps3", "]"}]], "Input",
 CellChangeTimes->{{3.660305373592675*^9, 3.6603053767977886`*^9}}],

Cell[BoxData["2436995"], "Output",
 CellChangeTimes->{3.6603053838198752`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hale", "=", 
  RowBox[{"Monitor", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"empty", "=", 
           RowBox[{"EdgeDelete", "[", 
            RowBox[{
             RowBox[{"ReadGrof", "[", 
              RowBox[{"deps3", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", "1"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"deps3", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "3", ",", "3"}], "]"}], "]"}]}], "]"}]}], 
          ",", 
          RowBox[{"cycle", "=", 
           RowBox[{"deps3", "[", 
            RowBox[{"[", 
             RowBox[{"k", ",", "3", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t", "=", 
            RowBox[{"ColofoursSlow", "[", 
             RowBox[{"empty", ",", " ", 
              RowBox[{"deps3", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", "3", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
           "}"}], ",", "\[IndentingNewLine]", "t"}], "\[IndentingNewLine]", 
         "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "1000"}], "}"}]}], "]"}], ",", "k"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.660284173325753*^9, 3.6602841772490983`*^9}, 
   3.6602842183767157`*^9, {3.6602864039388695`*^9, 3.6602864042442684`*^9}, 
   3.6602864378134546`*^9, {3.6602865170875273`*^9, 3.660286517373784*^9}, {
   3.6602865500352993`*^9, 3.660286566842149*^9}, {3.6602866340589294`*^9, 
   3.660286634820696*^9}, {3.660287152359681*^9, 3.660287153046924*^9}, {
   3.660291598814827*^9, 3.6602916042266507`*^9}, {3.660295727003725*^9, 
   3.6602957288799314`*^9}, {3.6602957823893147`*^9, 3.6602957828998947`*^9}, 
   3.6602958668424563`*^9, {3.6602960990571456`*^9, 3.660296099572568*^9}, {
   3.6602961934488525`*^9, 3.660296193684307*^9}, {3.6602963114635*^9, 
   3.66029631846279*^9}, {3.6603035907100587`*^9, 3.660303595216716*^9}, {
   3.6603053650499673`*^9, 3.6603053899871016`*^9}, {3.6603118624622984`*^9, 
   3.6603119054272103`*^9}, 3.6603132302998004`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["11", "18"], ",", "0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["17", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["5", "11"], ",", "0", ",", 
     FractionBox["2", "11"], ",", "0", ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["5", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["7", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "14"], ",", "0", ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["13", "14"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["7", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"], ",", "0", ",", 
     FractionBox["2", "11"], ",", "0", ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["3", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["7", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["6", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "14"], ",", "0", ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["13", "14"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["7", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "17"], ",", 
     FractionBox["5", "17"], ",", 
     FractionBox["5", "17"], ",", 
     FractionBox["2", "17"], ",", "0", ",", 
     FractionBox["2", "17"], ",", 
     FractionBox["5", "17"], ",", 
     FractionBox["9", "17"], ",", 
     FractionBox["7", "17"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["5", "11"], ",", "0", ",", 
     FractionBox["2", "11"], ",", "0", ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["5", "9"], ",", "0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["8", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["9", "22"], ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["5", "22"], ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["9", "22"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["7", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "16"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["9", "16"], ",", "0", ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["11", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["4", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["2", "11"], ",", "0", ",", "0", ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["3", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["13", "14"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["11", "18"], ",", "0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["17", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["5", "9"], ",", "0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["8", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", "0", ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["6", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "9"], ",", "0", ",", 
     FractionBox["5", "9"], ",", "0", ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["8", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["7", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "17"], ",", 
     FractionBox["3", "17"], ",", 
     FractionBox["9", "17"], ",", "0", ",", 
     FractionBox["2", "17"], ",", 
     FractionBox["2", "17"], ",", 
     FractionBox["3", "17"], ",", 
     FractionBox["5", "17"], ",", 
     FractionBox["13", "17"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["9", "16"], ",", "0", ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["1", "4"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "12"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["7", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["9", "16"], ",", "0", ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["11", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["3", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"], ",", "0", ",", 
     FractionBox["2", "11"], ",", "0", ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["6", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["1", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["1", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["6", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["9", "26"], ",", "0", ",", 
     FractionBox["6", "13"], ",", 
     FractionBox["5", "26"], ",", 
     FractionBox["6", "13"], ",", 
     FractionBox["5", "26"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "23"], ",", "0", ",", 
     FractionBox["6", "23"], ",", "0", ",", 
     FractionBox["11", "23"], ",", 
     FractionBox["5", "23"], ",", 
     FractionBox["12", "23"], ",", 
     FractionBox["5", "23"], ",", 
     FractionBox["22", "23"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["21", "34"], ",", 
     FractionBox["1", "34"], ",", 
     FractionBox["11", "34"], ",", 
     FractionBox["1", "34"], ",", 
     FractionBox["6", "17"], ",", 
     FractionBox["1", "17"], ",", 
     FractionBox["33", "34"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["2", "15"], ",", 
     FractionBox["2", "15"], ",", 
     FractionBox["7", "15"], ",", 
     FractionBox["1", "15"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "19"], ",", "0", ",", 
     FractionBox["6", "19"], ",", "0", ",", 
     FractionBox["7", "19"], ",", 
     FractionBox["1", "19"], ",", 
     FractionBox["12", "19"], ",", 
     FractionBox["1", "19"], ",", 
     FractionBox["14", "19"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["6", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["1", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["1", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["6", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["13", "14"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["7", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"], ",", "0", ",", 
     FractionBox["2", "11"], ",", "0", ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["7", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"], ",", "0", ",", 
     FractionBox["2", "11"], ",", "0", ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "17"], ",", 
     FractionBox["3", "17"], ",", 
     FractionBox["9", "17"], ",", "0", ",", 
     FractionBox["2", "17"], ",", 
     FractionBox["2", "17"], ",", 
     FractionBox["3", "17"], ",", 
     FractionBox["5", "17"], ",", 
     FractionBox["13", "17"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"], ",", "0", ",", 
     FractionBox["2", "11"], ",", "0", ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["2", "15"], ",", 
     FractionBox["2", "15"], ",", 
     FractionBox["1", "15"], ",", 
     FractionBox["7", "15"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["9", "16"], ",", "0", ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["11", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "9"], ",", "0", ",", 
     FractionBox["5", "9"], ",", "0", ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["8", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["7", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "23"], ",", 
     FractionBox["6", "23"], ",", "0", ",", 
     FractionBox["5", "23"], ",", 
     FractionBox["11", "23"], ",", 
     FractionBox["5", "23"], ",", 
     FractionBox["12", "23"], ",", 
     FractionBox["22", "23"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["11", "18"], ",", "0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["17", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", "0", ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["3", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "17"], ",", 
     FractionBox["1", "17"], ",", 
     FractionBox["9", "17"], ",", "0", ",", 
     FractionBox["2", "17"], ",", 
     FractionBox["2", "17"], ",", 
     FractionBox["5", "17"], ",", 
     FractionBox["3", "17"], ",", 
     FractionBox["13", "17"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["2", "11"], ",", "0", ",", "0", ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["3", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "13"], ",", 
     FractionBox["2", "13"], ",", 
     FractionBox["2", "13"], ",", 
     FractionBox["3", "13"], ",", 
     FractionBox["3", "13"], ",", "0", ",", 
     FractionBox["9", "13"], ",", 
     FractionBox["5", "13"], ",", 
     FractionBox["5", "13"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["9", "16"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "17"], ",", 
     FractionBox["3", "17"], ",", 
     FractionBox["5", "17"], ",", 
     FractionBox["2", "17"], ",", 
     FractionBox["2", "17"], ",", "0", ",", 
     FractionBox["9", "17"], ",", 
     FractionBox["5", "17"], ",", 
     FractionBox["7", "17"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["9", "16"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "15"], ",", "0", ",", 
     FractionBox["4", "15"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["2", "15"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["11", "15"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "14"], ",", 
     FractionBox["3", "14"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["9", "14"], ",", 
     FractionBox["9", "14"], ",", 
     FractionBox["2", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "13"], ",", "0", ",", 
     FractionBox["7", "26"], ",", "0", ",", 
     FractionBox["7", "26"], ",", 
     FractionBox["5", "13"], ",", 
     FractionBox["9", "26"], ",", 
     FractionBox["5", "13"], ",", 
     FractionBox["12", "13"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "19"], ",", "0", ",", 
     FractionBox["10", "19"], ",", 
     FractionBox["1", "19"], ",", 
     FractionBox["7", "19"], ",", "0", ",", 
     FractionBox["9", "19"], ",", 
     FractionBox["1", "19"], ",", 
     FractionBox["17", "19"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "13"], ",", "0", ",", 
     FractionBox["7", "26"], ",", "0", ",", 
     FractionBox["7", "26"], ",", 
     FractionBox["5", "13"], ",", 
     FractionBox["9", "26"], ",", 
     FractionBox["5", "13"], ",", 
     FractionBox["12", "13"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "13"], ",", 
     FractionBox["1", "13"], ",", 
     FractionBox["5", "13"], ",", 
     FractionBox["2", "13"], ",", 
     FractionBox["3", "13"], ",", 
     FractionBox["1", "13"], ",", 
     FractionBox["6", "13"], ",", 
     FractionBox["4", "13"], ",", 
     FractionBox["9", "13"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["7", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", "0", ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["13", "14"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["13", "22"], ",", 
     FractionBox["1", "22"], ",", 
     FractionBox["5", "22"], ",", 
     FractionBox["3", "22"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["21", "22"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["7", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", "0", ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "15"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "15"], ",", 
     FractionBox["4", "15"], ",", 
     FractionBox["1", "15"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["7", "15"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["11", "18"], ",", "0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["17", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["11", "18"], ",", "0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["17", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["2", "11"], ",", "0", ",", "0", ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["3", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["2", "11"], ",", "0", ",", "0", ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["3", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["11", "18"], ",", "0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["17", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["11", "18"], ",", "0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["17", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["13", "14"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["11", "18"], ",", "0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["17", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["11", "18"], ",", "0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["17", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["2", "11"], ",", "0", ",", "0", ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["3", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "15"], ",", 
     FractionBox["4", "15"], ",", "0", ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["14", "15"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["2", "11"], ",", "0", ",", "0", ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["3", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", "0", ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", "0", ",", 
     FractionBox["3", "10"], ",", "0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", "0", ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["3", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["4", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "4"], ",", 
     FractionBox["3", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "4"], ",", 
     FractionBox["3", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["7", "12"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["11", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["4", "9"], ",", "0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["7", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["5", "9"], ",", "0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["8", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["7", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["7", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["4", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["7", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "14"], ",", "0", ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["13", "14"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["5", "19"], ",", 
     FractionBox["6", "19"], ",", "0", ",", 
     FractionBox["1", "19"], ",", 
     FractionBox["7", "19"], ",", 
     FractionBox["1", "19"], ",", 
     FractionBox["12", "19"], ",", 
     FractionBox["14", "19"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["7", "18"], ",", "0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["13", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["7", "18"], ",", "0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["13", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["7", "18"], ",", "0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["13", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["5", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["7", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "13"], ",", 
     FractionBox["2", "13"], ",", 
     FractionBox["4", "13"], ",", "0", ",", 
     FractionBox["3", "13"], ",", 
     FractionBox["3", "13"], ",", 
     FractionBox["4", "13"], ",", 
     FractionBox["5", "13"], ",", 
     FractionBox["10", "13"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["9", "16"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "16"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", "0", ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["6", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "16"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["9", "16"], ",", "0", ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["11", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["7", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "14"], ",", 
     FractionBox["3", "14"], ",", "0", ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["6", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["5", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["7", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["7", "18"], ",", "0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["13", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["7", "18"], ",", "0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["13", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", 
     FractionBox["1", "18"], ",", 
     FractionBox["5", "18"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["5", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["7", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["5", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["7", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "22"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["3", "22"], ",", 
     FractionBox["3", "11"], ",", "0", ",", 
     FractionBox["8", "11"], ",", 
     FractionBox["5", "22"], ",", 
     FractionBox["5", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "14"], ",", "0", ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["13", "14"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["7", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["7", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "14"], ",", "0", ",", 
     FractionBox["5", "14"], ",", "0", ",", 
     FractionBox["3", "14"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["5", "14"], ",", 
     FractionBox["13", "14"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["7", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["7", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "12"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"], ",", 
     FractionBox["7", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["7", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["7", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "12"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["9", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "0", ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "17"], ",", "0", ",", 
     FractionBox["11", "34"], ",", "0", ",", 
     FractionBox["11", "34"], ",", 
     FractionBox["1", "17"], ",", 
     FractionBox["21", "34"], ",", 
     FractionBox["1", "17"], ",", 
     FractionBox["12", "17"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "23"], ",", "0", ",", 
     FractionBox["2", "23"], ",", 
     FractionBox["5", "23"], ",", 
     FractionBox["11", "23"], ",", "0", ",", 
     FractionBox["21", "23"], ",", 
     FractionBox["5", "23"], ",", 
     FractionBox["13", "23"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["21", "34"], ",", "0", ",", 
     FractionBox["1", "34"], ",", 
     FractionBox["6", "17"], ",", 
     FractionBox["1", "34"], ",", 
     FractionBox["6", "17"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["5", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["5", "11"], ",", 
     FractionBox["7", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["2", "3"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", "0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["4", "7"], ",", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["2", "7"], ",", 
     FractionBox["1", "7"], ",", "0", ",", 
     FractionBox["3", "7"], ",", 
     FractionBox["1", "7"], ",", 
     FractionBox["5", "7"], ",", 
     FractionBox["5", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", "1", ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"], ",", "0", ",", "0", ",", "0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["2", "5"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["7", "11"], ",", "0", ",", "0", ",", 
     FractionBox["2", "11"], ",", 
     FractionBox["1", "11"], ",", 
     FractionBox["3", "11"], ",", 
     FractionBox["9", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "10"], ",", "0", ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "13"], ",", 
     FractionBox["4", "13"], ",", 
     FractionBox["1", "13"], ",", "0", ",", 
     FractionBox["5", "13"], ",", 
     FractionBox["1", "13"], ",", 
     FractionBox["9", "13"], ",", 
     FractionBox["9", "13"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "2"], ",", "0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["5", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox["1", "4"], ",", "0", ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "2"], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.660284181659536*^9, 3.660284222636573*^9, {3.660284318231265*^9, 
   3.6602843401891527`*^9}, {3.660284387327202*^9, 3.660284423449152*^9}, 
   3.6602845459846387`*^9, {3.6602863850309925`*^9, 3.660286421333714*^9}, {
   3.6602865095021296`*^9, 3.6602865185757556`*^9}, 3.6602865521733246`*^9, 
   3.6602865891958036`*^9, 3.6602867159037747`*^9, 3.6602869692790394`*^9, 
   3.6602871472162433`*^9, 3.6602877401638217`*^9, 3.660295713097625*^9, 
   3.660295858214554*^9, 3.660295942206704*^9, 3.6602961678878193`*^9, {
   3.6602961996203327`*^9, 3.6602962219915113`*^9}, 3.6603001987271204`*^9, 
   3.6603053810311484`*^9, 3.660306640584279*^9, {3.6603118674801335`*^9, 
   3.6603118918937235`*^9}, 3.660312042177738*^9, 3.660315140271742*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Mean", "[", "hale", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.660315484377902*^9, 3.6603155046844254`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0755983669061977`", ",", "0.11629335278864657`", ",", 
   "0.2975565978488764`", ",", "0.08436363735705672`", ",", 
   "0.15849817171394437`", ",", "0.2676898733852782`", ",", 
   "0.3184601759771988`", ",", "0.46834686353098154`", ",", 
   "0.723744642948099`"}], "}"}]], "Output",
 CellChangeTimes->{{3.660315492297021*^9, 3.660315505842533*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"{", 
   RowBox[{
   "0.0755983669061977`", ",", "0.11629335278864657`", ",", 
    "0.2975565978488764`"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6603155281967506`*^9, 3.6603155562629414`*^9}}],

Cell[BoxData["0.48944831754372065`"], "Output",
 CellChangeTimes->{{3.6603155326593027`*^9, 3.6603155571775827`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Tally", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"r", ",", "3"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"r", ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "6"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", " ", "hale"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.660295740613058*^9, 3.660295779560026*^9}, 
   3.6602962802984934`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "4"], ",", 
       FractionBox["3", "4"]}], "}"}], ",", "379"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "23"], ",", 
       FractionBox["16", "23"]}], "}"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "3"], ",", 
       FractionBox["2", "3"]}], "}"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["9", "26"], ",", 
       FractionBox["17", "26"]}], "}"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["3", "7"], ",", 
       FractionBox["4", "7"]}], "}"}], ",", "122"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", "103"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "13"], ",", 
       FractionBox["6", "13"]}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["9", "16"], ",", 
       FractionBox["7", "16"]}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["11", "19"], ",", 
       FractionBox["8", "19"]}], "}"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["13", "22"], ",", 
       FractionBox["9", "22"]}], "}"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["21", "34"], ",", 
       FractionBox["13", "34"]}], "}"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["2", "3"], ",", 
       FractionBox["1", "3"]}], "}"}], ",", "252"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["13", "17"], ",", 
       FractionBox["4", "17"]}], "}"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["9", "11"], ",", 
       FractionBox["2", "11"]}], "}"}], ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["7", "8"], ",", 
       FractionBox["1", "8"]}], "}"}], ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "80"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6602962667850747`*^9, 3.660296281173921*^9}, 
   3.66030019959627*^9, 3.660306841595746*^9, 3.660315140461297*^9, 
   3.660315578877055*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"Take", "[", 
           RowBox[{"r", ",", "3"}], "]"}], "]"}], ",", 
         RowBox[{"Total", "[", 
          RowBox[{"Take", "[", 
           RowBox[{"r", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "6"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "hale"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"Take", "[", 
           RowBox[{"r", ",", 
            RowBox[{"{", 
             RowBox[{"7", ",", "9"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"Total", "[", 
          RowBox[{"Take", "[", 
           RowBox[{"r", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "6"}], "}"}]}], "]"}], " ", "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "hale"}], "}"}]}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6602864243625336`*^9, 3.660286427658841*^9}, 
   3.6602958409847546`*^9, {3.6602959564114075`*^9, 3.660295988904708*^9}, {
   3.6603129964858775`*^9, 3.660313051117441*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJzVWz2Lk0EQftHS0sJOOBC00lawWBAULLxCsLCwObRTrhERf4Bw2Nkr6B8Q
G4tDQfBEK1FECafCXfwgJynEX2CSN/riOMszz8wk0ZfAsuzszvfszO5maWX1
zMVdTdMMdjfNuG2/V6VtB+Xs5Psybd8WOd6230vzx2ef//7h5fGv3DpwavTr
G/HV+yy9Eh7121lbv1tEPztfjufw79cPWg/xq/Nn50fvS/mw8rTPZ+3zyPrg
3s3D38rJfeevvD7xHMrTZi9IHnX9Rucj/en8IvuV4yz9fv/I7vvsv6Ofnc/a
i81+6/Jk6ZfjLP0s/6w+dH3m+c+8/dm3f0b3P//+i+IjWs8X31n7yPPPqH4R
PKufRdPbtp18o/sly6/Ez9oDuz5LXzReSvxo/742+QZl/+R7GfZXnf+8/Evi
Q/agz5+dP6H12PVz/NOe32XHkxx7nnX+my1/u30heWXzq/Pjz/9z+iifrPMf
jZ87o+i2PuhP49wmLb9oX8c3nLZP0uOHPr++H7PxmKXHV5+gNs8/EL05/uGP
z6w9RPm34fPHvxz8efyh/MEG788fWH5Yfejj9vqQpV+n1+6vNnuw14PR/JaV
B4ofqJ7Irg+QfFj/k/Tp9cUvvj5U1uv2P5s+6n20n7HyQ/q+unJw9HtXni0P
N5aHn8vRxzunV6+/KReW9px7cfxr2Xg6/j5N5dKrrN/huXTo/t1HN/pl0vzY
pOln9yu2HmfHWX2x9amUg7Qnlr4oP3o/7/4iCh+NP9K+dXmx9wFdK/Uv8fvi
d9d/sPfY6Ldd7vTWbvfWPv4Vn2zxq7M3FA+kP8txSY+uj86e2foHwev1kPSf
Or82ffv9wZcPo/NG+3kZyx9bT0XPK335ZF3+PnzseV4dP3u/qMd/u34Q/az+
WXibPeed37UtWy/X4Wd9no/6vvjA1kd59RmiLyovG3zUX+31jZyfbQ/Z+T0r
3xx+ov7ot1dbPPGvj/D51rPXszl9u7yl/Fh/QvaUfT6P7DW638zHX+znWTq8
3R8R/dH6pG3r9iHricXEm7x8Ztb02OCj8c3+vkHC+/DPLt6h+pill/V/m/34
8xHf/RM6n8zLj6LrI30g+Gx9+fRrr9faNi9f1+nJs/eo/BF8lF4d3r4f6vD/
2n5jxxd975xzPhPNV/3wOfK129ti3pf742X0PtTn33nxDfXl+XB0vWx5sX2f
Pur1BHv+3q4yv/8D2OzVf7/Nrq+3bDzMux/X5ed//5uzHvJ///0ga6/suK4/
e/3F2rMPnz3eZNuXzf789GXn92g+qw8bPv97FYRfvsdA7zXQeiz/i4H3n0/4
3ofML//MPg+V/Zz7tv9H3/r5T15+Juf/BHpORqk=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.006944444444444445],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJzVWz9rFFEQX7T0A9gJAUELiR/hgaCQJoVgYWFzxMrCRsQvoBBiIfYKptRC
sBQLwYhiIVgIR1AQUTkhhZx40Wjh3e3B4mSW3/xmZu9wOfIY3nvz5v+bmd0s
9S6fvXigqqrBwaqajPXzp9TjoJybPj9m49si5+vxW6n+eez7V24fHf9+lemw
8tF4XjvM0ivXI7je9XM2foD0s/vlfA7/fv0gfIhfnT87Pzos5cPK076ftc+v
mxvLjwfDcubwhStvTr+A8rTZC5JHu36j+5H+dH6R/cp5ln6/f2TDPvtv6Gf3
s/Zis992ebL0y3mWfpZ/Vh+6PvP8Z97+7Ls/o/ef//5F8RHh88V31j7y/DOq
X7Se1c+i6a3HRr7R+5LlV57P2gOLn6UvGi/l+ej+3no2eb6XI9Pnddhfdf7z
8i95HrIHfX93/oTwsfhz/NOe32XHkxx77jr/zZa/3b6QvLL51fnx5/85MMon
2/mPxs+b4+i2uTEqJyfD8jYtvyisnzecjU/T44e+v/0+ZuMxS4+vPkFwnn8g
enP8wx+fWXuI8m87zx//cs7P4w/lD7b1/vyB5YfVhz7fXX9Pp9furzZ7sNeD
0fyWlQeKH6ieyK4PkHxY/5P06fXF7mx814Kvuf9s+miH0X3Gyg/pu3fs6vi3
V56v7myt7nwqj25dP7G29LusLR06//LUl5kcRuXa9Onvw/fg/uTZm8Gfy6tL
xx/eezIqk783hts0/ex9xdbj7DyrL7Y+lfKT9sTSF+VHh/PeX0TXR+OPtG9b
vLHLQ+pfnu+L3w08ddfebrnbX7/TX3+/Lz6h+CXtDcUD6c9yXtKj66OxZ7b+
Qev1eqg5D/Fr07ffH3z5MOo32vtlLH9sPYXkycb7qPx957H9vPbz2feLevy3
6wfRz+qfXW+z57z+XT3m9fe77ucj2Bcf/P1TBCP+EH1RednWR/3VXt/I/dn2
kJ3fs/LN4Sfqj357tcWTvH67776y319R+nTY3+9n/QnZU4787PEiet/Mx1/s
/Sx9fV4/M1qf1GO7fch6YjHxJi+f6Zoe2/pofLN/3yDX+87vLt6h+pill/V/
m/348xFbPJP4UX8yLz+K4kf6QOuz9eXTr71eq8fu3v+x+BG+qPzR+ii9+nr2
+5loftr1fROtb+3+mtOfiear/vU58rXb22K+L/fHS1a/Of6dF98QLPvDUXzZ
8mJhnz7s7/9t/M7v/wFs9up/v83i12F/vd9N/6e7/4+w4UP+738/yNorO6/r
z15/sfbsO88eb7Lty2Z/fvqy83u0n9WH7Tz/9yrofPk9BvpeA+Fj+V/Men9/
wvd9yPzyz+x+qIRz3rf9P/rW+z95+Znc/xcupte4
       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->8.96], {0., 0.}], CompressedData["
1:eJzVWz1rlEEQPrW0tLATAoJW2goWCwEFC1MIFhY2QTsljYj4AwLBzl5B/4DY
WAQFwYhWoohyRAU9P7jIFeIv8M29F18cZ3nmmZm705cjy7KzO9+zM7ubheWV
Mxf39Hq9YfNnV9Pu7u18L0vbDsvZ8fd10r4pcrxtf5TeH599/rsHl7d/5ebB
U81vYMRX77P0SnjUb2d9/N0i+tn5cjyHf79+0HqIX50/Oz96X8qHlad9Pmuf
R9eHd28c+V5O7j9/5dWJZ1CeNntB8qjrNzof6U/nF9mvHGfp9/tHdt9n/x39
7HzWXmz2W5cnS78cZ+ln+Wf1oeszz39m7c++/TO6//n3XxQf0Xq++M7aR55/
RvWL4Fn9zJvetu3kG90vWX4lftYe2PVZ+qLxUuJH+/e18TcsB8bfi7C/6vzn
5V8SH7IHff70/Amtx66f45/2/C47nuTY87Tz32z52+0LySubX50ff/6f00f5
ZJ3/aPzcaqLb+nAwiXObtPyifR3faNI+To8f+vz6fszGY5YeX32C2jz/QPTm
+Ic/PrP2EOXfhs8f/3Lw5/GH8gcbvD9/YPlh9aGP2+tDln6dXru/2uzBXg9G
81tWHih+oHoiuz5A8mH9T9Kn1xc7fL2vrNftfzZ91PtoP2Plh/R9dflQ83tb
ni6NNpZGX8qxR1unV66/LhcW9p57vvitbDzZ/j5P5NKvrN/huXT43p2Hq4My
bn5u0vSz+xVbj7PjrL7Y+lTKQdoTS1+UH72fd38RhY/GH2nfurzY+4CulfqX
+H3xu+vf33e8+X0qt/trt/prH/6KT7b41dkbigfSn+W4pEfXR2fPbP2D4PV6
SPpPnV+bvv3+4MuH0Xmj/byM5Y+tp6Lnlb58si5/Hz72PK+On71f1OO/XT+I
flb/LLzNnvPO79qWrZfr8NM+z0d9X3xg66O8+gzRF5WXDT7qr/b6Rs7Ptofs
/J6Vbw4/UX/026stnvjXR/h869nr2Zy+Xd5Sfqw/IXvKPp9H9hrdb2bjL/bz
LB3e7o+I/mh90rZ1+5D1xHziTV4+M216bPDR+GZ/3yDhffinF+9QfczSy/q/
zX78+Yjv/gmdT+blR9H1kT4QfLa+fPq112ttm5ev6/Tk2XtU/gg+Sq8Ob98P
dfh/bb+x44u+d845n4nmq374HPna7W0+78v98TJ6H+rz77z4hvryfDi6Xra8
2L5PH/V6gj1/b1eZ3f8D2OzVf7/Nrq+3bDzMux/X5ed//5uzHvJ///0ga6/s
uK4/e/3F2rMPnz3eZNuXzf789GXn92g+qw8bPv97FYRfvsdA7zXQeiz/84H3
n0/43ofMLv/MPg+V/Zz7tv9H3/r5T15+Juf/AgHRRqs=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[6], 
      AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledSquare]\"\>",
         StripOnInput->False,
         FontSize->8.96], {0., 0.}], CompressedData["
1:eJzVWz9rVEEQP7X0A9gJB4IWEj/CgqCQJoVgYWFzxMrCRsQvoBBiIfYKptRC
sBQLwYhiIVgIR1AQUTkhhZx40Wjh3b0nh5N5/OY3M+8OH0eWYXdn5//OzHvp
9i6duXCg0+kMxn/2jcf9nb/P71KNg3J2+nyvxzdFzlfj19L557HvX751ZPz7
WabD8gfjec0wS69cj+Bq1496fA/pZ/fL+Rz+/fpB+BC/On92fnRYyoeVp30/
a59fNtaXHg2G5fSh85dfn3oO5WmzFySPZv1G9yP96fwi+5XzLP1+/8iGffY/
o5/dz9qLzX6b5cnSL+dZ+ln+WX3o+szzn3n7s+/+jN5//vsXxUeEzxffWfvI
88+oftF6Vj+LprcaZ/KN3pcsv/J81h5Y/Cx90Xgpz0f39+bTyfOtHJ4+r8L+
qvOfl3/J85A96Pvb8yeEj8Wf45/2/C47nuTYc9v5b7b87faF5JXNr86PP//P
gVE+2cx/NH7eGEe3jfVROTEZlrZo+UVh/bxhPT5Jjx/6/ub7mI3HLD2++gTB
ef6B6M3xD398Zu0hyr/tPH/8yzk/jz+UP9jW+/MHlh9WH/p8e/09nV67v9rs
wV4PRvNbVh4ofqB6Irs+QPJh/U/Sp9cXO/X4tgHf7P6z6aMZRvcZKz+k797R
K+Pfbnm2sr25sv2xPLx57fhq91dZ7R489+Lk51oOo3J1+vT34Lt/b/Ls1vCn
8vLisQd3H4/K5O/14RZNP3tfsfU4O8/qi61PpfykPbH0RfnR4bz3F9H10fgj
7dsWb+zykPqX5/vi9wyeumtvp9zpr93ur73bE59Q/JL2huKB9Gc5L+nR9TGz
Z7b+Qev1emh2HuLXpm+/P/jyYdRvtPfLWP7YegrJk433Ufn7zmP7ec3ns+8X
9fhv1w+in9U/u95mz3n9u2rM6++33c9HsC8++PunCEb8Ifqi8rKtj/qrvb6R
+7PtITu/Z+Wbw0/UH/32aosnef12331lv7+i9Omwv9/P+hOypxz52eNF9L6Z
j7/Y+1n6+rx+ZrQ+qcZm+5D1xGLiTV4+0zY9tvXR+Gb/vkGu953fXrxD9TFL
L+v/Nvvx5yO2eCbxo/5kXn4UxY/0gdZn68unX3u9Vo3tvf9j8SN8Ufmj9VF6
9fXs9zPR/LTt+yZa39r9Nac/E81X/etz5Gu3t8V8X+6Pl6x+c/w7L74hWPaH
o/iy5cXCPn3Y3//b+J3f/wPY7NX/fpvFr8P+er+d/k97/x9hw4f83/9+kLVX
dl7Xn73+Yu3Zd5493mTbl83+/PRl5/doP6sP23n+71XQ+fJ7DPS9BsLH8r+Y
9f7+hO/7kPnln9n9UAnnvG/7f/St93/y8jO5/w+2Gte6
       "]]}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 1.75}, {0, 0.75}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6602864286104383`*^9, 3.6602865225680113`*^9, 3.6602865577662425`*^9, 
   3.660286592277341*^9, 3.6602869840980344`*^9, 3.6602877405915365`*^9, {
   3.6602959506118264`*^9, 3.6602959897339983`*^9}, 3.6602962411397295`*^9, 
   3.66030019905116*^9, 3.6603068453970733`*^9, {3.660312987128792*^9, 
   3.6603130517701263`*^9}, 3.6603151410077033`*^9, 
   3.6603156147145977`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzdXAl0FEUaLugZwGNdPFbcdVdY13AKcqmcsigCoiBEWDyQJByRoBwiIAoq
CSHIfcuKGRJArkDkkEwCxEDklCucgoAsuRMEEggknJntv67unq7qGnjre7x9
z2nyeqq//6//++uvqq9r7Bw2fED/QWHDI/qG1egwLGzogIi+H9VoP2SYfkur
gFCFAQihnBoI/vbpf9KLT//PFwEXuHN7fw/E/9yLMjzhKDwcPpHIm49b6J8M
5In0onxiAdpUxI00FOnNp018KBhf79ev+cgb6UEZPunjZhNv4Jv3BPSYyGxD
0gHSj0rIl+FB4ewx42/N9LX56XxvJPJkUCc0ixMuZ8RgxSMCK42srsJdo5Xe
23CMUpkBm0CcjElgRI9UEUA3tDulu0rR+KPm+IWHGywFED8Joip+AiuBxY+4
6qYJpDcJp/nmyaBxdBOj3ozbiWdX5aNik41vIz9ZNMjY64HvuWg0wllEFHnZ
zekpq4Gm5rHv8h+Ybtop47ZRFgy+eXyQWwwjbyqGpiQ/RB7zwVdsGOFr99/v
+w3UrZDIJNTb9AkZ50NzyWP3wT8+eOpduFSQg1W9y+89KLh3P75WJgGYH4Qy
Y5+CD26TGRukByLnrurDH/8/wx8aJQn/ynZ3VR8cwt9LcO8tfK2Csgq8ou75
9L9jz2399B3Bo8/eiaV78gZPSxVZKs2Kr1eu/9vqauFe9PbtmUsm91bPWL7H
p9eGLTELd9Hy7+pUmrUFOlGSvbBB1VvXLs6Uo3jJvU4HTxQCSkn/CSlQ0eHe
0rNpHwLKlsL1byMHiCRitOqVshvX+kQnl4dEeVudyLxAVw95uUtbAMrQi4fj
0AwVirb/s/nbwJHY2LWH6CrB1eDahWO3Mj01b2QtqF39RknOdDnKenJvzJr0
k4BycsScLfpaEt8DB8CRzNzlbZADxPfUaFbBpVt6V26EjvNWP1d85T7qX8Ga
Liw/0DQVivbbB1M2gSP90vdl01HlAkaAeIAB4qfKUdYJOH5AzPEUEwoGWStg
tqqV2a2F3/dEU+Tm14iZfVDA7GQVinb0k3npnNmHrMzCB5idJEdZTe5NWJF6
nDP7iJVZcAg5QHxnZxa69ifSdGfh9905sxNVKFpRxMSNnNlHDWaBD4ABfr6U
oyQKmH1MzOwEOcoqcq/nT0fyAAV8Qn8h96AbgALdQg4QK8UcPy7gOEaFwjme
tch7BP2VIAOvjOOa1y/+Ol6OkiDg+AkBxw4QKwyOy00cV7dyDAMARatQrBzX
EHM8To6ynNxLmbz4J87xk1aOoQ4AYpT/6F1GngXLnNmnrMxCKUJRcvNLxcwG
CZiNVKFowAVntqadWRjJY+UoSwTM1rYyW5CzpBlygPjWyix0CbpWhzSFSQpQ
Es6mDkJfyFEWkntokGlVXRFfcax5u9pitj+XI8dTZN80G7J+9aJ5FmR9jv2h
NlsO0E8QWPtMbcHsu0avYYk+3q4W88RkoSK+akfzEzvydqPVpuZF200N8vmb
qizoTE0I2YQLeyajMQHEzLfJHrPoDD82qgjMNINFAUtAZYfcMPlAAqJQag3i
Vk+K3oolZ1H2osYO6HEkW2B4mXOziTU3VxdujECfqlA0mKl51Wlqz8Oel39N
+sS/XiygpvQaA89CzUHPUa/0NQY8dy0rrg7gjJJ74BFUnWbWqoMzyAEiltYG
fckExRfCAUO2OWkKiy+eGB+rUHjVgbqBWhhVh5Aei0kfKUf5hrpOScdVp5W1
6gCxyAFivsEsQDBmW1uZTSlIDkMj5ChfG6WYsQtzdhtKOCW2X8nxBDRcjvIV
HS0h9toF6wje7gWDd9hcMN4/kiPPZeMwSly7Qi3IbuTzBPnXLhQAfIigcIGk
wdq1Zm6Y4GnhwgnD2g1VmwqNEpjy+ZuqLOoJxAwSC31IzNANhEqQ1r934QZu
i+Kqf7CD83ip89pDHJXsR57QMZ6vzLEARbxwrHpWkkbLzbKbEwSktGVV0e4I
W0ZB2g/lvkjkSjf1BcfPQ2o63qe6wZVZ9pEB1aejvezB6BhiMSbQciuxjkMs
qDFN0PE55N7OqAU7+NKsE7HJlmZQY8D+YFUHmUxudqmiwOZsWnk27DzNi+tr
1uJ6Mm9lO2QYDOAVAusky1DdAVF/ZxlVGbY+rCp3tlblWed3RqJB1LxbmPVc
86WZxUVTS+IJbGuggfBa3sVay5kG8oF8YM8U1PKuglruADGDEkx3xKyWd7PW
cix3vC9HmS7O2GBxxg6UA02heTPCXnTx9M3aBRvlnOVltZulZyPkyJNZ3s8W
l/NFFmSd6K31/YZ4bRQA/AhBje3nNWpsN+aGCZ6Wc7zJZu3C1aYWxdhNjfD5
m6os6EkQ19feCyBgvs32gMUc8aNCZOY5tmNXm3GzBOTlFoLWg5VbG3QHc2aa
Y4XBJxnpWNo3Bqfju9sP5BAx0lWl/OZVczr2lztHgLgAh1cUvY3UgzAyAa6f
HIUIJ9rIpG2neJELtRa503kJbZEDBFFNuExzi9aqMNIUSiSXafqqULSCQVM3
8arTR1x1+shRiHCiJcxO2AcooG9Q110QTrNMEyZHiREXnv6CwuOAMt5guqzP
+GS2iCT5xheReD8fqkKx0jxATHOIHIVoJ1xnxTQPtNKMdVYHiHFimt8X0Nxb
hcJ11shVaSfoFOCCIgldYTrru3IUoqJwNQ6CQ6dhG829/Acg0U5cXfcdyzeT
O8RKLpZae8k9GGuQCwiABOlCVnoazGyc3HdUKNrB0f/eyskdZiWXSa1vy1GI
fKLpsfwFUCC2dFuiwQqBy3AOEJ+LyR0hIPctFQqX4SDb6F4Nz7OMXFixvSlH
+UxA7igxuT3lKGTHLdx8Mcpxi1FW3rH86gBLm1t2XmyCCz1RyNuRvbJ45/Uv
Nbxq50XgK4ngm149d7CH2oJqw/Ux66h9b1eWHVePt3sjgFgptlCknXQLtStv
bXfk8PKdMO263ifaMKPHisg/wv1QeabnKUAOv3Rsudl/jEu9PjB63o+QfvqE
lErrjSuyaO9MeO5WlicIqlWw3CkSPtfIpK14XtUHVFK14pJrtPwdy1nZHmuo
uUubIQcUOnjgSX0LkARI4Zv3nqFzAhtPc85vH0tXVA4o2oWIyXhY7or8Zjub
4l4sy98BEPonCP7uKkehtWDJvMQMQCntF5PCJu0VZ9MGAwpODAeI4dToz6fP
AQR8WupbWboGKcpZjIvmvrzvuqLXVSga8A0IcxYnHaaLITyFmMntIkcZSpNz
5gRbfcgdMv0H3o4ijynePxdQyyn1neXIQ1jaL0+xjbCkkmu83URWIo6+7Jeg
dVEA8GbH+RJ7r88PXrPA0wHsOffjJ7xdJ7WptFmifUkKmmmJUWVBT4JYYqFX
AwiYbw/XeZmZkFmZflQIzHhaYb00e0FdZgYfC1RrQFx3MR1rE22JiYfujodO
nvX1NpVmiPdUVmf8vYoffD7n26bg2YHcxM40zHKVoNJt+WJN/zni9H+F23Q8
8UakEKYMkKOSLn9RDKs/EfJBkz10RhpvT/358OKhOPOg6WjxR3pY0G12kcfD
JYjFwACH2hzZUIsfjDqogkQPaSBfvhdFAlfEISd/VGNT6o+ntckfSaIwgY6d
01MFRzV6iahYSTR6YeS2p/6I9SWzmOaUtQMEkXEJxjhXtu1V67o+3fF27eTl
5D1BUrgEJHwlMKXxa0Pe7iW1KRXfX8t7BWOEt3tRbUrF5ny5KSgNMAxVpug+
F40d58zVfGnZbwSjHqqfU/D6MU9jvY48fSPokYvz1JS3+6falLlHjKeBWwxT
cWwo7HlWNBTaqi2sniSW8MbSdvwNqsmCKL/bBBA33za+T+CmJp3g7eIZPbbO
1AJ6juSuesUSM2yFcO+6GTrOIEWP0GJ8u4odyxMMxR3wRhYfmO/gdZiAAur1
mWEzN/N25BCGC6YvPHXQnH1BjhwqyCNGbgLd5RnIbkEfetLXS47wqtyRwusp
GgC8KnFWyBMHr68YXosAAqVIHAdTN8w5qjTl7rL/eKFlwQQBW+Wcl7A3Qi3l
0ESiwsoLZCnAT16+8Rg5eoeXQLdoRsJ2zcFHAqSdGj5rM4DgLFwvzr7mchSi
dWnTlyQfBRQ8cOghTdi4AkpxzuJGyAGCCF2umgXnSsp7R+Eedd9zNJ8eGIVN
FaAkFqYOpC/3HVC0y+FfbgCEtJj4XSiFILcsw68icFA6luakPy9HeYtyL5BN
Lr43cQNvR5A12HqylxzIDItR32SJJBJLzpVwsGQ2dARiyXNyX98U+CoSS5KZ
G3YpA1KEt2uiNqVSTRxMWWbfAEypVJMUNozEqglOuqYqM25IOp+edGblBG1C
tNrboVk2ri/c2E/dCRAJIBk3fbloF/qRJCPoUywZu5RmpTaWoxAdToNUBhSc
gNsEiecAQbQ2V9jWDHxCplz/PPFbUel20jQvd2lzQDmVu+JFp9+P9LDXnJhV
qb/sMGrOzSwPPkEVU7RnakMVEN4sAcjpj/Sas4u6WHIikdWcmteLTz8jR+lu
rTk3wsYlo93kXnp+EtYxL+YsaoQcIN4wag6TYqBY76G8Zcc9DSibCpJDUAMV
Cqd5/ZQlu9Feglz/2oXjvkwPp7m+HCWYuh4dt4PTvN9Ksx7eWsgMgRG6+ZMb
5QWpjB4jyMxd1hq/v8pZ3hY9LTff1SD3loncA2Jy66mAtPxB037g5B4iKO9c
PrXOTG5dOcrrAnKPCMh1gHhNXsSBZN7uMGl3JTu+Pme7jhz2VUE5F506OuxQ
zmur4VXlnIRUqH3DO4FaaguqKn5IXsVxMrF2QWpTV8qcq/hh5yo+/fzOaHp8
18GMm6Wc5UDQz/IqTlMxCFLRoROd6CBclHSEp+Jpaypezl74DIsD+Y1bQL8E
BrlA9Jtc0TkcomK5WtJDT/ABBfk/pCk4AI6kFXh70RPXd3AUh+pRIuWCmNfK
+sXgt3yJM1fsQ2eMGldOa1z3K2eS/8HNO+pt/vIX17jw11hoI6KLtu+zr/GL
weIBeknMIkYhJVhJhHx/0mLU4Re45gNdij53EBdWctxaO0OPH8G/6MnA+uwm
5jwe4wSS7opItmpP667pnUfk6rQTOeQ2HJBg5Rgi8fc7Zdzh8FV7ax0/9vHs
LSiPmAeWyfsSMnhqUPNicYz9sNUsr+o+iHr9MrnniV17kA+1AttQa0B/1SAc
re3E44SUew3mDD5OqqtQtKt9x6fwdD9rT3dYrTwhR3nJmr9FEZM2oHMEBSZR
c/7+TY5CNCpX+Oa9meY0PG9Nw+zcZa2QA0pbe0KNXpd+sog0NScT/QmMA4r2
2/vk4MKRUXO3oGJ7UkCMHpejEL2Fv0S73ic6GV0i94AY/BMTfTZGDhBtxDSX
WGmGpKE/LTItmOhhapF+v2L2yv3cBnHJBRluJvzPcq9aUmSz6GpeG6RZkIVi
MyTDY2oLKq31IvPELoDmwikI1u5RuakWFEJ0YM6stZLOyN57kZSqJjfTnHlq
OvYn0lkvCXpkCKAv8HaPqE2JehQSZwSvxNFU0O2YUh0BLGWm7KcN8Rt/1u7h
AAKoOAZYxniynzZkqa3ukfvoqLnplt+iwDHA6/g70THAJuykAOS1QyeIpOMa
s44czWJFDn9Z0Vrp8vXtqlM8njdVut7GcQH8JZ102JkBnJsPyaGayivFoU+/
Suft8FWz10GQnB6UwzcJsFyY4EUvymsisw1soonAcVGZMMdXVCt2560J5o0f
UPdE9V7G1BOhPZ6IAdqDl+X+Iq65aJjsCd5Ne9qbz7EozblZdnKTOJTwXSWZ
ifjBv+QktGNp62CisSVrvZasfcCatfjgwh9UUFrRgEn4pMvuL+ZvJ16S/+GA
6bgLydD75VBEDdLWTluGT6HB8p9A0V9TgxwLUFfhzIsDDhGDXEwJZ9M1/pK2
Z3P2vtzVr9M9lAMUvPlP5m/+8TcP0wiaXv9DKt0rhyLKENe+Cz+YmkqgyI+r
+SKNvbm/Rw7VwFq/4Oggr19kjtXMiYAcoOo7ZMJjgkyoIoeqS4eJQAIhWWEe
JtXE2VFZDl+HjUKFFGJyXayHVPKvX3UEjotUEJPjamSJ9yod5H9hQyVj31aE
/GzU84sVjg/ce/zO8PD1d/zfBN1N36MK/wVsGKXB\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"Sort", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "[", "r", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", " ", "hale"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.660302741374857*^9, 3.660302744761468*^9}}],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{3.6603027464581594`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"Take", "[", 
       RowBox[{"hale", ",", 
        RowBox[{"{", "k", "}"}]}], "]"}], "]"}], "->", 
     RowBox[{"Max", "[", 
      RowBox[{"Take", "[", 
       RowBox[{"hale", ",", 
        RowBox[{"{", "k", "}"}]}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6603156949998627`*^9, 3.6603157173147683`*^9}, {
  3.660315751879431*^9, 3.6603157599803705`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", "\[Rule]", 
     FractionBox["3", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", "\[Rule]", 
     FractionBox["2", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", "\[Rule]", 
     FractionBox["6", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", "\[Rule]", 
     FractionBox["5", "6"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6603157182465625`*^9, 3.660315760825961*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "&"}], ",", 
      "hale"}], "]"}], "]"}], "\[Rule]", 
   RowBox[{"Max", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "&"}], ",", 
      "hale"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6603158383788185`*^9, 3.660315891202189*^9}, {
  3.6603159874029293`*^9, 3.6603160466284*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "4"], "\[Rule]", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.660315858531258*^9, 3.6603158918143573`*^9, {3.660316019727569*^9, 
   3.660316047493785*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "6"}], "}"}]}], "]"}], "]"}], "&"}], ",", 
      "hale"}], "]"}], "]"}], "\[Rule]", 
   RowBox[{"Max", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "6"}], "}"}]}], "]"}], "]"}], "&"}], ",", 
      "hale"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6603159172384214`*^9, 3.6603159229523363`*^9}, {
  3.6603160596747465`*^9, 3.660316069488474*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", "\[Rule]", 
   FractionBox["3", "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.660315923973894*^9, 3.6603160702576394`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"Sort", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"r", ",", "5"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"r", ",", 
          RowBox[{"{", 
           RowBox[{"6", ",", "6"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", " ", "hale"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.660300333883933*^9, 3.660300339941064*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["12", "23"], ",", 
     FractionBox["11", "23"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["8", "15"], ",", 
     FractionBox["7", "15"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["4", "7"], ",", 
     FractionBox["3", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "12"], ",", 
     FractionBox["5", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "5"], ",", 
     FractionBox["2", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["8", "13"], ",", 
     FractionBox["5", "13"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "8"], ",", 
     FractionBox["3", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["12", "19"], ",", 
     FractionBox["7", "19"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "14"], ",", 
     FractionBox["5", "14"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["11", "17"], ",", 
     FractionBox["6", "17"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", "3"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "10"], ",", 
     FractionBox["3", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "7"], ",", 
     FractionBox["2", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["13", "18"], ",", 
     FractionBox["5", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "4"], ",", 
     FractionBox["1", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["10", "13"], ",", 
     FractionBox["3", "13"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["17", "22"], ",", 
     FractionBox["5", "22"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "9"], ",", 
     FractionBox["2", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["18", "23"], ",", 
     FractionBox["5", "23"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["11", "14"], ",", 
     FractionBox["3", "14"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["4", "5"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["21", "26"], ",", 
     FractionBox["5", "26"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["13", "16"], ",", 
     FractionBox["3", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "11"], ",", 
     FractionBox["2", "11"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["5", "6"], ",", 
     FractionBox["1", "6"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["6", "7"], ",", 
     FractionBox["1", "7"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["19", "22"], ",", 
     FractionBox["3", "22"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["13", "15"], ",", 
     FractionBox["2", "15"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["7", "8"], ",", 
     FractionBox["1", "8"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["15", "17"], ",", 
     FractionBox["2", "17"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["8", "9"], ",", 
     FractionBox["1", "9"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["9", "10"], ",", 
     FractionBox["1", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["11", "12"], ",", 
     FractionBox["1", "12"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["12", "13"], ",", 
     FractionBox["1", "13"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["14", "15"], ",", 
     FractionBox["1", "15"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["15", "16"], ",", 
     FractionBox["1", "16"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["16", "17"], ",", 
     FractionBox["1", "17"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["17", "18"], ",", 
     FractionBox["1", "18"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["18", "19"], ",", 
     FractionBox["1", "19"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["33", "34"], ",", 
     FractionBox["1", "34"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6603003408896837`*^9, 3.660315620046776*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"r", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"Total", "[", 
        RowBox[{"Take", "[", 
         RowBox[{"r", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "6"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", " ", "hale"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.660296006196677*^9, 3.660296030298532*^9}, {
  3.6603002326522255`*^9, 3.660300262171669*^9}, {3.6603004318496785`*^9, 
  3.660300436119827*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[6], 
     AbsoluteThickness[1.6], GeometricTransformationBox[InsetBox[
       StyleBox["\<\"\[FilledCircle]\"\>",
        StripOnInput->False,
        FontSize->8.96], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGBIAWJGIGZiQAcf7AnxJ6l4AtEh+9vbcoHoNUH1oWBwFUo/
xZCfNRMETkLplxjylqz6yx88nWJ/rf3YrwsR7+1TFLkjTzgts3/lm191efY7
e0Ew2Gh/7y4IvCVof8lFV/HYkov2biDS9bm9HBjss7cBgzcE/QOhL0DpF9Bw
2G2vCgqWSZj6NdYv3NP2aZe99KlsIPMNRvgR8j+pfHTzCJlPqTyp7okFR8AV
e0g0YKYHdD56/KHzSU2P6Ooh6eGg/eJuvV0vFr0mOX7Q5dHTFyH3yRwvBKI9
UPqNPe9T0ynXA87Z7237JHUq+wWO+Nxpf/YMCBBOr9OngcAx+ygweEVy/iSV
D/HvJvs8sIffQsNhuz2YEn+LkV/n3eice6PzrP1NEDX3BTQczthb9j226Hv8
guLyh9Z8i70vQSURtFx6hlE+kGpe7pVys1fWq+13Ns2IcfR5R7J+9PhGj1/0
8CZkHsRf2+wvz773ZZn5W2h5uQ5Kv7MHAI8UwEs=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.65},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 0.3333333333333333}, {0.6666666666666666, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.66029600973392*^9, 3.660296033451317*^9}, 
   3.6603001991171427`*^9, {3.6603002386478257`*^9, 3.6603002628742933`*^9}, 
   3.660300436877107*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Tooltip", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Take", "[", 
             RowBox[{"r", ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "k"}], "}"}]}], "]"}], "]"}], ",", 
           RowBox[{"Total", "[", 
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{"r", ",", 
                RowBox[{"{", 
                 RowBox[{"7", ",", "9"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", "k", "}"}]}], "]"}], "]"}]}], "}"}], ",", "k"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", " ", "hale"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", "  ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6603004618500605`*^9, 3.6603005278276296`*^9}, {
  3.6603013509357815`*^9, 3.6603013594663706`*^9}, {3.6603028742226715`*^9, 
  3.6603029264833856`*^9}, {3.660315654293849*^9, 3.660315670585431*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJztW71rVEEQP7QMFqKQRoQDCwtbQUmxoERIIYhgoZBGYqlBSKO9QpqAIopK
BBsLC+UMmiaCWGgkCvlQjARtQpK7MxfEv8B7exuOzL3Hb+fNfrw7sxzZ/Hhv
d+drZ2Zn78qXR89f2VMqlap7S6Wk39n+KIQfPUzaJ9PXOp5f0O2b6dfgfL4x
l15E/90jQ83Pe7Xy5mrz8xuOp+vT8aH5jT2fdH0kT/Q+4sdOP+9Mv6nGFgb7
h8cW1Jnk7+BGdHv2Pb7F57TSXX+j6+xJitF+b9nPK3VNG1CnfOzG2/sXOj8a
j/hD9u/aP0r1wcWx94/v+ULPf+jj9eZnxvSbYn+B9gOXPq792e3PRTWdkLOy
7lz+sf2jb3ql8QNhqf+1mz+/PdLxXH9JMTe/fHA/aR/UJd3qHc/T85l2vkPf
5+ZbiF7X+XHs/eQaI356jV+KY/PHPU+4Xq9o8/nGof0Fxcj/tvKez+rkxOqJ
idVqzvgya/o6nF9KL5Un9fdu5JkdLxCWxpN89IbD3UYvwr3GD8Xdxh83PwjN
X2x5Ss8f6efBbH9JzyPc+CU9H3D5o+d5dL6n+LBuL0y/lSG/16bfln/+eEEx
1S89r3Pll67v7PP/SLnv4uypZ6p+dvTm0uMs/rPj8Y19a8fvfZ9Xp/U/G2z6
ufUJtB+Q/rn2gdZH9mO3f9v2xKVPyg/Fru8vuO9TepD/kd5Xpa/f1geiN199
wl4fT5bHJ5fHv6gfSTe5nU/Pm76qlhZ1M3Ssdzzfr1tF/fqZtIaRy5wa0oKq
qYMDlQMDlSmzTkMdffl05vbf50pv63NbHc8pTpd3e327+JH9vp28svlF9oLm
93Mflz0/tRc7+862V7Q+sk/u/kPrpeP89To0P5derr9C+pLKg2sPduu7y19c
xx+KXdf3fdfzXeOi10+l+Ty3XiStp6WP93f/gtaX5vfc9aXYd/wMTV+v4dj1
kl28E0vrwb79f9Hjoev4X3R6Qsd7rv6L5k/oeVRKrzQec+MzymdofmI3f/t+
jitP3/eVKN9C9NDnrvUl1S/aT0XzT7Gxa3pD56dFu48qejynuOjyRvh//355
aIz8sVbD8FfVKpvJ/Ts3XvmOLwhTe6L1FVR/iP17AIq58V9aD+LKm4tD13+k
v4+IPZ+dvYb7/m3sfGUX+8Wx9UHXp/e7b2vJFzXm1J1bx0bKfeHrD6Hf5+ZX
vusZse0jNi6avkPjfzFsn4o=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJzNW71rVEEQP7QUC4mQJggBay1EUFIsKAopbAQLBRtROw2Kjf4HQbAQUVRi
YWGhIiSiQbEQRRMxgXwURoI2YnImMfgneG/fk4ezu/zmY98ly8Fmbvfma2dn
Zmc3/WeGjp/b0mq12ltbraL/v/1xcXim6tvu3t2ifar6X8H4Cd8+uCePi7YS
4Lu5e7DzeecWX17ofFbhfMQPmh/ntx6n9KX8WH9vlc8qrxQfkpeur1Xefb7N
u/O+LQWwVD/S3/dNXOp8nrobPw50PuvV+NuqX3NHe09fmT0y7nzX+1tsH9b1
QPqj48g+0PoVUnZEreReFutTxz+C+fLr5tfjTfsL5B+t9ND83Pik/FvjA5rP
s780jPYPD9bj4+knN79p/kv/OOUOegcZxn/qH8vxF1X/z1/W/tQaT6z+lo5T
/1/yM+YueoZCf2/Vf27/KN1P0v0hlQ/FSx3M108z+Vr3+LPyOz/nm7tzu2hL
AX/x9an3J8Unjf/W/C0O1/xTe7eeVxB+xF8e++LvNySvLr7y5Uf4S3/6pupD
f4/0Yc1/efPTv6f0pfYljW/WeEDpSe1Dp798+bw0viB9l/5twu193X54fY89
f0X2zPPf6fyH5ldIv4ge9b/0PMfTR52/UZjKQ39P86f4+TpNn/Jvzeel+5Pn
//X5UjP1Mb69SPFb62vS/cXjj0+fzkf5A89/p/XPm8+XT7oeKH5Z4xWCpftV
6s/i+SXKb/XxlJcPzbnxYnhRnu9K60HS/cyLN3x+y3PFR3fKN5xPlv1k1afk
4dcL6PqieHPZfzHr/Nd9ywGsO/+nYWm8o/QQv1L+UH0G1XfQOKVH8VP61H7Q
/Lg/qe0J0c8tj84/8e2Hwt2+Hznbv+3k5KFHbuXY0LX5++vm/I3Cu3x7VvUh
Pl6+mvbnOwdGewZG3zvf9awG/iTuv9L2VPrlz27Qbzx5fbXk57l7sDA8sjAc
+itKn9KL06f5htRf1fR056/0+cBqr9TeKGw935R9bQ8UH5JPR08vb3x9aXyk
8bPGT+VD9KzyIPpIf1SeHb6Nuu/fiobPo9b7S6TPcp+8ctNTRVsL6FM4Hm/T
5x3r+TB3fX+j6/m57zd4/i7NH1o/yl9u2Jq/Nw0j/st5+vqiVX9W/ru9H631
YbR/dPU1Si9f/UOXP+jvB3j6TvMrrRcie8rzvipNT8d/Gm56v0jXR+f/+euj
qy/V48ier27/uf/Wlxl32P8Rnv+l+ovzp79/QfWJbvNjtQeE33re6M57OL6/
jp+P9fzmzm948qb1Q+uxPPzpeiOi1zQcry9L43MNN52fStcX7afc9+PW/Mca
v6X+M7c+rPh0+Sk//lKYZ098fum4tV7Q9H0fTx59PM3jj/nybo735ei8Us+X
3v9a81+EH8kr9cfx+6F8/n2j44vU/9P6Tu736ihe5NmPfH6s5z+r/Lnx5aaH
6G82fAi/9X0nnZ+n3krhfOdDBEvlbca+0vtX9z5Nz298PN96SOt7OvtL04/D
Unly1yvy6Rfd13S7ntH0++k4zM+XrO/lrfJTuOn1Lt8hTLuvRTfS/P+r/AU1
MSoL
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJzNW0uLXUUQvuhSXEjEbAYhEMlOFyJGZlGgGHATVHDhYlwEdRdlJPj6ByK4
CBJRyUYwC3UzwUSILtQkTEQXuZmYTF7DZB6ZmWRGIvgDvKf73DR+p4uvqvve
xOYybdvd1VXV9e6THfvefvmN+3q93vr9vV7Tx3ZWYr8ur4S22vZ/Su8/7bY8
GdqyfPF50y515uO+0/LtN027KQj/4M4XBr9z8sP+K8f3X7nR/v9F6NP6/BjP
Q3zTesQX1yO+efwTfog/2x/Pn5M3Q7thpD/Rx/iB9OTvB/fr/LbBw/06f7z3
aZtPYzwP+Y1j3N/sGvxaOEsdeCu7P1ke/OSZ0M139m+fOtB/fvs1af5OHbhu
5DfrdX4x/WP8Y/LB7g/pjXB+a/sNSn8Z/ow/dvrL1qN+6Poe+XZBHmvYeHCl
gz/bH/n/ayuXt4z2Sb8/Zs/YfoY/znvtI9obr3/I2399vU3+9LHNn+j+iMHL
r/f6z3J8vfjn9x1r+y0J5mJqRfYEw3FRkZ+f236T6kOeXpTPdL5Nf3T5fmdi
dnpiti/N3+mJtRafo/JWQGhL4Vf5/driK3Y/5fGWVz+88QbKA66vlcda+8v4
Uxa/Jvxwf5m99MaXCZ+5c6HJZ4ea1o2H8vFMmmf0eeMvxg88j+lbPh5k8lx+
fzb87PFdrT1h9I5afhFfBj/a0+sSuumrbv7Uxr9svZf/ZfJlz5fK6C2Pv/P4
2Plnm0d7bOe3zV7o/H7ixPpXHz9+WTYGf0+sLxn1kdlj9FNsfYpP4jlDPK52
1kc9+aPNP+vzE9wf7Xy/9cdrHX5ifuyFj/eL/hnza6//qI3nNTkZ9l7/xM4r
y7+ZvtTmuzr8Wn+k8dXa5/0Fs3f285n/YvUvr720rb978QGjz0ZvbX1S5xfD
B+tP+XpUgpfPP/A8ph8sP0V9Tvmi139560F5e+zNl5PeM/1D//D37aYtyqOh
LSj+LcHPz+v5e1yH9QK93oD8x3w+0vWdBPez+6/OmOX/7+7bNfhdkNN7N0/t
3VyRB1498+wjR8/Kh3NfLvxzZE1OnWzasrwf2nwH3kOh/SI//di0W/Lacx88
uPrUeXkp/Mdq5zyGL67H+8H7Y/WZvB/Q5QXn8TyEj+ej/LD1yD+UJ5TfPH2j
oye/Hu1LGnvfL7z+hr1vMHg4j/LN4jfUV4Yv3j/ij/Eq3kcefpp/eHJm2+TM
SQndtqG8nGn7m0p9JOEf5a0v74W21jkvgJ3sy65gGNak0eZPLy5K6F5c6Mxf
+ujw/ODX4rXc0vu7hPB458YdOY79kuJPsB6Z5BHhIT+HedAwL8LzIr0zsnCt
aV3/hfed1wc9P8Cx9z2Ovc+hvNTqE6MPz/PqH+LH6M3XO3V8WT7FzmP4MnrZ
+ey+kB7URyZvefuR5r3yHfcl+4BxNc7jOMJZavvLd/zU0G/FdaP7fsIbf7N8
Ytz1fEaPN19m9NvyWR0/W77K4nF7/QjH+XqRfn5ZPU3n/2jeX3T+4nzt+0n+
/PJ6AuMXjmv1sbY+zO67LF/3vp/Y8bXl+157otNj47du72z6hOeP+/sqdp4u
Hzb7fff0hY1HY/8Zv9j7Nu7X74fJM9YHME7z8i+PH+OHDl+LGzX8xo0PW19r
P/G+vN8Dlp3v/R6OjTE/nmvrWkP7kuopXnxr/XHeP+v2k8UzLF/Ow9frk+w+
auMrG/xET/4+dP6M+75q46+8PtXqj90/lcU/5f7baz+9/o3tx3kGj50/Gvte
zm9GP/MPtd87l8W7Xvs+bn/qjdf085i83Zvvy735CsufdPoR33zP9JPBT+P8
fns+HuPY2bY+XG/fsT6A/jQ/Hp9/YfeRzydSHYu9z97rfw+A8mCrl9nft3Fs
i2/Y+zOLr3T7Ohr5sMdzjH9l8PR4zMsPL7/y8lb+7zO8+Taeh/BwP4OX36+P
vfTm8bV/b+Sll+Fnkyc7vnl8WHyVxux+cVxW37PL37Hvm3ZejnzdtFV5fUfz
on1cwnP201ud7zUYPey+RlOvsPOX8Ye913jrGXh/3virtt42nnqo15+Vw/+/
3Xe+/jO++u6/SINRPQ==
       "]]}, {}}, {
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.17647058823529413`, 0.8235294117647058}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1875, 0.8125}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.058823529411764705`, 0.9411764705882353}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.043478260869565216`, 0.9565217391304348}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2631578947368421, 0.7368421052631579}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.058823529411764705`, 0.9411764705882353}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.17647058823529413`, 0.8235294117647058}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.23076923076923078`, 0.7692307692307693}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.29411764705882354`, 0.7058823529411765}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.06666666666666667, 0.9333333333333333}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.21428571428571427`, 0.7857142857142857}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07692307692307693, 0.9230769230769231}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05263157894736842, 0.9473684210526315}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07692307692307693, 0.9230769230769231}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07692307692307693, 0.9230769230769231}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.06666666666666667, 0.9333333333333333}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07692307692307693, 0.9230769230769231}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1875, 0.8125}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3181818181818182, 0.6818181818181818}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.29411764705882354`, 0.7058823529411765}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.21739130434782608`, 0.782608695652174}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "1"],
      Annotation[#, 1, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.29411764705882354`, 0.7058823529411765}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.18181818181818182`, 0.8181818181818182}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.17647058823529413`, 0.8235294117647058}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1875, 0.8125}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.17647058823529413`, 0.8235294117647058}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1875, 0.8125}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.043478260869565216`, 0.9565217391304348}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.058823529411764705`, 0.9411764705882353}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.15384615384615385`, 0.8461538461538461}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.17647058823529413`, 0.8235294117647058}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1875, 0.8125}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.21428571428571427`, 0.7857142857142857}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07692307692307693, 0.9230769230769231}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1875, 0.8125}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.21428571428571427`, 0.7857142857142857}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.21428571428571427`, 0.7857142857142857}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1875, 0.8125}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.06666666666666667, 0.9333333333333333}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1, 0.9}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2631578947368421, 0.7368421052631579}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.15384615384615385`, 0.8461538461538461}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1111111111111111, 0.8888888888888888}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.09090909090909091, 0.9090909090909091}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.23076923076923078`, 0.7692307692307693}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "2"],
      Annotation[#, 2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.42857142857142855`, 0.5714285714285714}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6111111111111112, 0.3888888888888889}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.45454545454545453`, 0.5454545454545454}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.45454545454545453`, 0.5454545454545454}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.35714285714285715`, 0.6428571428571429}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6363636363636364, 0.36363636363636365`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6363636363636364, 0.36363636363636365`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.35714285714285715`, 0.6428571428571429}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.29411764705882354`, 0.7058823529411765}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.45454545454545453`, 0.5454545454545454}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5555555555555556, 0.4444444444444444}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.4090909090909091, 0.5909090909090909}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5625, 0.4375}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.42857142857142855`, 0.5714285714285714}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.35714285714285715`, 0.6428571428571429}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6111111111111112, 0.3888888888888889}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5555555555555556, 0.4444444444444444}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6363636363636364, 0.36363636363636365`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5555555555555556, 0.4444444444444444}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.42857142857142855`, 0.5714285714285714}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5294117647058824, 0.47058823529411764`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5625, 0.4375}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5625, 0.4375}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6363636363636364, 0.36363636363636365`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.34615384615384615`, 0.6538461538461539}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2608695652173913, 0.7391304347826086}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6176470588235294, 0.38235294117647056`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2777777777777778, 0.7222222222222222}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.13333333333333333`, 0.8666666666666667}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3157894736842105, 0.6842105263157895}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.05555555555555555, 0.9444444444444444}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.42857142857142855`, 0.5714285714285714}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6363636363636364, 0.36363636363636365`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6363636363636364, 0.36363636363636365`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5294117647058824, 0.47058823529411764`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6363636363636364, 0.36363636363636365`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.13333333333333333`, 0.8666666666666667}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5625, 0.4375}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5555555555555556, 0.4444444444444444}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.42857142857142855`, 0.5714285714285714}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2608695652173913, 0.7391304347826086}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6111111111111112, 0.3888888888888889}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5294117647058824, 0.47058823529411764`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.42857142857142855`, 0.5714285714285714}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.15384615384615385`, 0.8461538461538461}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.1875, 0.8125}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.29411764705882354`, 0.7058823529411765}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.26666666666666666`, 0.7333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2692307692307692, 0.7307692307692307}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5263157894736842, 0.47368421052631576`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2692307692307692, 0.7307692307692307}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.38461538461538464`, 0.6153846153846154}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.21428571428571427`, 0.7857142857142857}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.4375, 0.5625}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.21428571428571427`, 0.7857142857142857}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.42857142857142855`, 0.5714285714285714}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5909090909090909, 0.4090909090909091}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.4375, 0.5625}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.06666666666666667, 0.9333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.42857142857142855`, 0.5714285714285714}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6111111111111112, 0.3888888888888889}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6111111111111112, 0.3888888888888889}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.42857142857142855`, 0.5714285714285714}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6111111111111112, 0.3888888888888889}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6111111111111112, 0.3888888888888889}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.35714285714285715`, 0.6428571428571429}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6111111111111112, 0.3888888888888889}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6111111111111112, 0.3888888888888889}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.42857142857142855`, 0.5714285714285714}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.26666666666666666`, 0.7333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2727272727272727, 0.7272727272727273}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3, 0.7}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.4, 0.6}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.125, 0.875}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5833333333333334, 0.4166666666666667}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.4444444444444444, 0.5555555555555556}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6363636363636364, 0.36363636363636365`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5555555555555556, 0.4444444444444444}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2222222222222222, 0.7777777777777778}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.35714285714285715`, 0.6428571428571429}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6363636363636364, 0.36363636363636365`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3157894736842105, 0.6842105263157895}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3888888888888889, 0.6111111111111112}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3888888888888889, 0.6111111111111112}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3888888888888889, 0.6111111111111112}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.45454545454545453`, 0.5454545454545454}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3076923076923077, 0.6923076923076923}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5625, 0.4375}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5625, 0.4375}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.07142857142857142, 0.9285714285714286}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.45454545454545453`, 0.5454545454545454}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3888888888888889, 0.6111111111111112}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3888888888888889, 0.6111111111111112}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.45454545454545453`, 0.5454545454545454}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.45454545454545453`, 0.5454545454545454}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.18181818181818182`, 0.8181818181818182}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.35714285714285715`, 0.6428571428571429}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3333333333333333, 0.6666666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.35714285714285715`, 0.6428571428571429}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08333333333333333, 0.9166666666666666}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.16666666666666666`, 0.8333333333333334}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.14285714285714285`, 0.8571428571428571}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3235294117647059, 0.6764705882352942}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.08695652173913043, 0.9130434782608695}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6176470588235294, 0.38235294117647056`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6363636363636364, 0.36363636363636365`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.45454545454545453`, 0.5454545454545454}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6666666666666666, 0.3333333333333333}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2857142857142857, 0.7142857142857143}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0., 1.}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6, 0.4}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.6363636363636364, 0.36363636363636365`}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.2, 0.8}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.3076923076923077, 0.6923076923076923}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.5, 0.5}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {Opacity[0.], PointBox[{{0.25, 0.75}}]},
       "3"],
      Annotation[#, 3, "Tooltip"]& ]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1111., Automatic},
  Method->{},
  PlotRange->{{0, 0.6666666666666666}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6603004899722395`*^9, 3.660300528953968*^9, 
  3.6603013603271685`*^9, 3.6603028893257484`*^9, 3.6603029276644*^9, 
  3.6603156274760327`*^9, 3.6603156729980493`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"BoolToChar", "[", "b_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{"b", ",", "\"\<+\>\"", ",", "\"\<-\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.66031644083362*^9, 3.660316450950308*^9}, {
   3.660316505000662*^9, 3.6603165069643054`*^9}, 3.660316663795329*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ColofoursSlowWithPictures", "[", 
   RowBox[{"g_", ",", "vertices_"}], "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", " ", "\[IndentingNewLine]", "graph1", ",", 
      " ", "graph2", ",", " ", "graph3", ",", " ", "graph4", ",", " ", 
      "graph5", ",", " ", "graph6", ",", "  ", "\[IndentingNewLine]", "cond1",
       ",", " ", "cond2", ",", " ", "cond3", ",", "cond1Excl", ",", " ", 
      "cond2Excl", ",", " ", "cond3Excl", ",", " ", "cond4", ",", " ", 
      "cond5", ",", " ", "cond6", ",", " ", "\[IndentingNewLine]", "sols", 
      ",", "\[IndentingNewLine]", "div", ",", "  ", "second", ",", "   ", 
      "full", ",", " ", "vert1", ",", " ", "vert2", ",", " ", "vert3", ",", 
      " ", "vert4", ",", " ", "vert5", ",", " ", "vert6", ",", " ", 
      RowBox[{"circle", " ", "=", " ", 
       RowBox[{"Rule3Cycle", "[", "vertices", "]"}]}], ",", " ", "newNode", 
      ",", " ", "toAdd", ",", "\[IndentingNewLine]", "record", ",", " ", 
      "index"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"div", "=", 
      RowBox[{"ChromaticPolynomial", "[", 
       RowBox[{"g", ",", "4"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newNode", "=", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"VertexList", "[", "g", "]"}], "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"toAdd", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"newNode", "\[UndirectedEdge]", "vertex"}], ",", 
        RowBox[{"{", 
         RowBox[{"vertex", ",", "vertices"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "double", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vert1", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph1", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"double", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vert2", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"vertices", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
         RowBox[{"vertices", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph2", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"second", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ChromaticPolynomial", "[", 
         RowBox[{"graph2", ",", "4"}], "]"}], "/", "24"}], ")"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"second", " ", "\[NotEqual]", " ", "div"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "single", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vert3", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vertices", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "\[UndirectedEdge]", 
           RowBox[{"vertices", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph3", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert3"}], "]"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "ELSE", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"double", " ", "2", " ", "other", " ", "direction"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vert2", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"vertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"vertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph2", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"single", " ", "other", " ", "direction"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vert3", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"vertices", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
           RowBox[{"vertices", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"graph3", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"EdgeAdd", "[", 
           RowBox[{"g", ",", "vert3"}], "]"}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"couples", " ", "of", " ", "1"}], ",", " ", 
       RowBox[{"2", " ", "and", " ", "3", " ", "solutions"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"vert4", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert1", ",", " ", "vert2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph4", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert4"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"vert5", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert1", ",", " ", "vert3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph5", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert5"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"vert6", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"vert2", ",", " ", "vert3"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph6", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"g", ",", "vert6"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"cond1", "=", 
      RowBox[{"ToLogical", "[", "graph1", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond2", "=", 
      RowBox[{"ToLogical", "[", "graph2", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond3", "=", 
      RowBox[{"ToLogical", "[", "graph3", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond4", "=", 
      RowBox[{"ToLogical", "[", "graph4", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond5", "=", 
      RowBox[{"ToLogical", "[", "graph5", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond6", "=", 
      RowBox[{"ToLogical", "[", "graph6", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond1Excl", "=", 
      RowBox[{"cond1", " ", "&&", " ", 
       RowBox[{"!", " ", "cond4"}], " ", "&&", " ", 
       RowBox[{"!", " ", "cond5"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond2Excl", "=", 
      RowBox[{"cond2", " ", "&&", " ", 
       RowBox[{"!", " ", "cond4"}], " ", "&&", " ", 
       RowBox[{"!", " ", "cond6"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond3Excl", "=", 
      RowBox[{"cond3", " ", "&&", " ", 
       RowBox[{"!", " ", "cond5"}], " ", "&&", " ", 
       RowBox[{"!", " ", "cond6"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"sols", "=", 
      RowBox[{"GraphSolutions2", "[", 
       RowBox[{"g", ",", "vertices"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"With", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"colors", "=", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"IndexToColor", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "&"}], ",", "s"}], 
               "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"colors", "[", 
               RowBox[{"[", 
                RowBox[{"vertices", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "]"}], "]"}], ",", 
              RowBox[{"colors", "[", 
               RowBox[{"[", 
                RowBox[{"vertices", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], " ", "]"}], "]"}], ",", 
              RowBox[{"colors", "[", 
               RowBox[{"[", 
                RowBox[{"vertices", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], " ", "]"}], "]"}], ",", 
              RowBox[{"colors", "[", 
               RowBox[{"[", 
                RowBox[{"vertices", "[", 
                 RowBox[{"[", "4", "]"}], "]"}], " ", "]"}], "]"}], ",", 
              RowBox[{"colors", "[", 
               RowBox[{"[", 
                RowBox[{"vertices", "[", 
                 RowBox[{"[", "5", "]"}], "]"}], " ", "]"}], "]"}]}], "}"}]}],
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"BoolToChar", "[", 
             RowBox[{"cond1Excl", "/.", "s"}], "]"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"BoolToChar", "[", 
             RowBox[{"cond2Excl", "/.", "s"}], "]"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"BoolToChar", "[", 
             RowBox[{"cond3Excl", "/.", "s"}], "]"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"BoolToChar", "[", 
             RowBox[{"cond4", "/.", "s"}], "]"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"BoolToChar", "[", 
             RowBox[{"cond5", "/.", "s"}], "]"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"BoolToChar", "[", 
             RowBox[{"cond6", "/.", "s"}], "]"}]}], 
           RowBox[{"(*", 
            RowBox[{",", "\[IndentingNewLine]", 
             RowBox[{"BoolToChar", "[", 
              RowBox[{"cond1", "/.", "s"}], "]"}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"BoolToChar", "[", 
              RowBox[{"cond2", "/.", "s"}], "]"}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"BoolToChar", "[", 
              RowBox[{"cond3", "/.", "s"}], "]"}]}], "*)"}], 
           "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "sols"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.660316144821034*^9, 3.6603161477456465`*^9}, {
  3.660316178564461*^9, 3.6603162129020724`*^9}, {3.6603162607837*^9, 
  3.660316269891225*^9}, {3.660316376240287*^9, 3.6603163799470463`*^9}, {
  3.6603164566876864`*^9, 3.660316465541757*^9}, {3.6603223585260277`*^9, 
  3.6603223641801195`*^9}, {3.660322433506515*^9, 3.6603225497715545`*^9}, {
  3.660322736070772*^9, 3.6603227371105027`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"empty", "=", 
          RowBox[{"EdgeDelete", "[", 
           RowBox[{
            RowBox[{"ReadGrof", "[", 
             RowBox[{"deps3", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "1"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"deps3", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "3", ",", "3"}], "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"cycle", "=", 
          RowBox[{"deps3", "[", 
           RowBox[{"[", 
            RowBox[{"k", ",", "3", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", "=", 
           RowBox[{"ColofoursSlowWithPictures", "[", 
            RowBox[{"empty", ",", " ", 
             RowBox[{"deps3", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", "3", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Select", "[", 
            RowBox[{"t", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "7", "]"}], "]"}], "==", "\"\<+\>\""}], "||", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "6", "]"}], "]"}], "==", "\"\<+\>\""}], "||", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "8", "]"}], "]"}], "==", "\"\<+\>\""}]}], 
              "&"}]}], "]"}], ",", " ", 
           RowBox[{"TableSpacing", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0"}], "}"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "100", ",", "100"}], "}"}]}], "]"}], ",", "k"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.660316239830745*^9, 3.6603162430300703`*^9}, 
   3.660316274007554*^9, {3.6603167397760534`*^9, 3.6603167405923095`*^9}, 
   3.660321532393321*^9, {3.6603218305262847`*^9, 3.6603218340990973`*^9}, {
   3.6603226310513563`*^9, 3.66032278481796*^9}, {3.6603228535844297`*^9, 
   3.660322887120719*^9}, {3.660322925102298*^9, 3.660322966320067*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[GridBox[{
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"},
     {
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->
        False], "\<\"-\"\>", "\<\"+\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"-\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$, TableSpacing -> {0, 0}]]], "}"}]], "Output",
 CellChangeTimes->{{3.6603162513467407`*^9, 3.6603162764378557`*^9}, 
   3.6603163860751796`*^9, 3.660316472034236*^9, 3.66031651548004*^9, 
   3.660316670957876*^9, 3.6603167483505626`*^9, 3.660321534050342*^9, 
   3.6603218371267076`*^9, 3.6603223718495665`*^9, {3.660322533262431*^9, 
   3.6603225569344287`*^9}, {3.660322663868696*^9, 3.6603227164032946`*^9}, {
   3.660322749676338*^9, 3.660322789335658*^9}, {3.660322856150576*^9, 
   3.6603228915113254`*^9}, {3.660322944163304*^9, 3.6603229688819184`*^9}}]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 10834, 259, 1210, "Input"],
Cell[CellGroupData[{
Cell[11417, 283, 1942, 47, 152, "Input"],
Cell[13362, 332, 70995, 2087, 1155, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84394, 2424, 2669, 82, 55, "Input"],
Cell[87066, 2508, 932, 27, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88035, 2540, 393, 11, 33, "Input"],
Cell[88431, 2553, 158, 4, 31, "Output"]
}, Open  ]],
Cell[88604, 2560, 9575, 239, 1192, "Input"],
Cell[CellGroupData[{
Cell[98204, 2803, 133, 2, 31, "Input"],
Cell[98340, 2807, 97, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98474, 2813, 3595, 86, 372, "Input"],
Cell[102072, 2901, 3056, 64, 236, "Output"]
}, Open  ]],
Cell[105143, 2968, 2182, 54, 192, "Input"],
Cell[CellGroupData[{
Cell[107350, 3026, 1874, 52, 92, "Input"],
Cell[109227, 3080, 245, 5, 31, "Output"]
}, Open  ]],
Cell[109487, 3088, 218, 5, 31, "Input"],
Cell[109708, 3095, 11535, 265, 1592, "Input"],
Cell[CellGroupData[{
Cell[121268, 3364, 131, 2, 31, "Input"],
Cell[121402, 3368, 78, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121517, 3374, 2375, 51, 192, "Input"],
Cell[123895, 3427, 282265, 8319, 7066, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406197, 11751, 156, 3, 31, "Input"],
Cell[406356, 11756, 393, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[406786, 11769, 249, 6, 31, "Input"],
Cell[407038, 11777, 117, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407192, 11783, 626, 18, 31, "Input"],
Cell[407821, 11803, 2823, 99, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410681, 11907, 1408, 39, 52, "Input"],
Cell[412092, 11948, 13737, 241, 243, 7079, 131, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425866, 12194, 320, 8, 31, "Input"],
Cell[426189, 12204, 94, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426320, 12211, 567, 16, 31, "Input"],
Cell[426890, 12229, 800, 25, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427727, 12259, 771, 24, 31, "Input"],
Cell[428501, 12285, 220, 6, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428758, 12296, 775, 24, 31, "Input"],
Cell[429536, 12322, 167, 4, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429740, 12331, 609, 17, 31, "Input"],
Cell[430352, 12350, 4643, 169, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435032, 12524, 748, 20, 31, "Input"],
Cell[435783, 12546, 1669, 39, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437489, 12590, 1282, 33, 72, "Input"],
Cell[438774, 12625, 420766, 15117, 704, "Output"]
}, Open  ]],
Cell[859555, 27745, 306, 6, 31, "Input"],
Cell[859864, 27753, 12429, 285, 1632, "Input"],
Cell[CellGroupData[{
Cell[872318, 28042, 2597, 62, 232, "Input"],
Cell[874918, 28106, 768554, 19979, 1106, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
