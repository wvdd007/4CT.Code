(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    111865,       2348]
NotebookOptionsPosition[    110107,       2310]
NotebookOutlinePosition[    110450,       2325]
CellTagsIndexPosition[    110407,       2322]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"FormulaGraphReverse2", "[", 
  RowBox[{"allGraphs4", "[", 
   RowBox[{"K4Key", ",", "\"\<colofourrealnull\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7938575091960173`*^9, 3.7938575404883504`*^9}},
 CellLabel->
  "In[593]:=",ExpressionUUID->"16455568-4253-4a92-ab50-e731ec259f0b"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{$CellContext`v12x34, $CellContext`v13x24, $CellContext`v14x23, \
$CellContext`v1x2x3x4, $CellContext`v1234, $CellContext`v123x4, \
$CellContext`v124x3, $CellContext`v12x3x4, $CellContext`v134x2, \
$CellContext`v13x2x4, $CellContext`v14x2x3, $CellContext`v1x234, \
$CellContext`v1x23x4, $CellContext`v1x24x3, $CellContext`v1x2x34}, {{{8, 1}, {
        15, 1}, {10, 2}, {14, 2}, {11, 3}, {13, 3}, {1, 5}, {2, 5}, {3, 5}, {
        6, 5}, {7, 5}, {9, 5}, {12, 5}, {8, 6}, {10, 6}, {13, 6}, {8, 7}, {11,
         7}, {14, 7}, {4, 8}, {10, 9}, {11, 9}, {15, 9}, {4, 10}, {4, 11}, {
        13, 12}, {14, 12}, {15, 12}, {4, 13}, {4, 14}, {4, 15}}, Null}, {
       GraphLayout -> "LayeredDigraphEmbedding", 
        VertexLabels -> {$CellContext`v1234 -> Rotate[
            Row[{"1234"}], Rational[1, 6] Pi], $CellContext`v14x23 -> Rotate[
            Row[{"14", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "23"}], Rational[1, 6] 
            Pi], $CellContext`v14x2x3 -> Rotate[
            Row[{"14", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "2", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
            Pi], $CellContext`v1x24x3 -> Rotate[
            Row[{"1", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "24", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
            Pi], $CellContext`v134x2 -> Rotate[
            Row[{"134", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "2"}], Rational[1, 6] 
            Pi], $CellContext`v1x2x34 -> Rotate[
            Row[{"1", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "2", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "34"}], Rational[1, 6] 
            Pi], $CellContext`v124x3 -> Rotate[
            Row[{"124", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
            Pi], $CellContext`v13x2x4 -> Rotate[
            Row[{"13", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "2", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
            Pi], $CellContext`v123x4 -> Rotate[
            Row[{"123", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
            Pi], $CellContext`v1x2x3x4 -> Rotate[
            Row[{"1", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "2", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "3", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
            Pi], $CellContext`v1x234 -> Rotate[
            Row[{"1", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "234"}], Rational[1, 6] 
            Pi], $CellContext`v12x3x4 -> Rotate[
            Row[{"12", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "3", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
            Pi], $CellContext`v1x23x4 -> Rotate[
            Row[{"1", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "23", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
            Pi], $CellContext`v13x24 -> Rotate[
            Row[{"13", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "24"}], Rational[1, 6] 
            Pi], $CellContext`v12x34 -> Rotate[
            Row[{"12", 
              Style["\[Earth]", 
               RGBColor[0, 
                Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}}]]}, 
     TagBox[GraphicsGroupBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[{{0., 1.}, {3., 0.}}, 0.04847715736040609], 
         ArrowBox[{{2., 1.}, {3., 0.}}, 0.04847715736040609], 
         ArrowBox[{{6., 1.}, {3., 0.}}, 0.04847715736040609], 
         ArrowBox[{{4., 3.}, {1., 2.}}, 0.04847715736040609], 
         ArrowBox[{{4., 3.}, {2., 2.}}, 0.04847715736040609], 
         ArrowBox[{{4., 3.}, {5., 2.}}, 0.04847715736040609], 
         ArrowBox[{{4., 3.}, {6., 2.}}, 0.04847715736040609], 
         ArrowBox[{{4., 3.}, {3., 2.}}, 0.04847715736040609], 
         ArrowBox[{{4., 3.}, {4., 2.}}, 0.04847715736040609], 
         ArrowBox[{{1., 1.}, {3., 0.}}, 0.04847715736040609], 
         ArrowBox[{{3., 1.}, {3., 0.}}, 0.04847715736040609], 
         ArrowBox[{{1., 2.}, {0., 1.}}, 0.04847715736040609], 
         ArrowBox[{{1., 2.}, {1., 1.}}, 0.04847715736040609], 
         ArrowBox[{{1., 2.}, {3., 1.}}, 0.04847715736040609], 
         ArrowBox[{{4., 1.}, {3., 0.}}, 0.04847715736040609], 
         ArrowBox[{{2., 2.}, {2., 1.}}, 0.04847715736040609], 
         ArrowBox[{{2., 2.}, {1., 1.}}, 0.04847715736040609], 
         ArrowBox[{{2., 2.}, {4., 1.}}, 0.04847715736040609], 
         ArrowBox[{{5., 2.}, {6., 1.}}, 0.04847715736040609], 
         ArrowBox[{{5., 2.}, {3., 1.}}, 0.04847715736040609], 
         ArrowBox[{{5., 2.}, {4., 1.}}, 0.04847715736040609], 
         ArrowBox[{{5., 1.}, {3., 0.}}, 0.04847715736040609], 
         ArrowBox[{{6., 2.}, {6., 1.}}, 0.04847715736040609], 
         ArrowBox[{{6., 2.}, {1., 1.}}, 0.04847715736040609], 
         ArrowBox[{{6., 2.}, {5., 1.}}, 0.04847715736040609], 
         ArrowBox[{{3., 2.}, {2., 1.}}, 0.04847715736040609], 
         ArrowBox[{{3., 2.}, {3., 1.}}, 0.04847715736040609], 
         ArrowBox[{{3., 2.}, {5., 1.}}, 0.04847715736040609], 
         ArrowBox[{{4., 2.}, {0., 1.}}, 0.04847715736040609], 
         ArrowBox[{{4., 2.}, {4., 1.}}, 0.04847715736040609], 
         ArrowBox[{{4., 2.}, {5., 1.}}, 0.04847715736040609]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
         0.7]}], {DiskBox[{0., 1.}, 0.04847715736040609], InsetBox[
           RotationBox[
            TemplateBox[{"\"12\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {2.048477157360406, 1.0484771573604061}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{6., 1.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"23\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {6.048477157360406, 1.0484771573604061}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{4., 3.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {4.048477157360406, 3.048477157360406}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{3., 0.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"1234\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {3.048477157360406, 0.04847715736040609}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"123\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {1.0484771573604061, 1.0484771573604061}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"124\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {3.048477157360406, 1.0484771573604061}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"12\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {1.0484771573604061, 2.048477157360406}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"134\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {4.048477157360406, 1.0484771573604061}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{5., 2.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {5.048477157360406, 2.048477157360406}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{5., 1.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"234\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {5.048477157360406, 1.0484771573604061}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{6., 2.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"23\"",
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {6.048477157360406, 2.048477157360406}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{4., 2.}, 0.04847715736040609], 
          InsetBox[
           RotationBox[
            TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
             "RowDefault"],
            BoxRotation->0.5235987755982988], 
           Offset[{2, 2}, {4.048477157360406, 2.048477157360406}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{1032., Automatic},
   ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXmclcW1Lrxvz03TzCijgCiigAyKoDIj0DI2czM1MzRzM8+TTDKDE2hU
HEBEUTQa8TgEY45iosZcM2iOOZrEJMaTRDN98SY59/Z9qta7a+/9rKrX/df3
/fP5I52991tV66lnrRreGtYaMXNV1dwlM1ctmD2z9ZAVM6urFsxe2XrwshX4
Kfd/JBJ5RYlETrsmCXyuSSTkf/xfbfxP//z///r/1q9fmU+5n3/++ccff2w+
JlPUdyn+Zj4Vffjhh6vXbigfO2HE6IljK6YPGjJsafXKl15+OZm+rkv/F/Mp
/x//+Md99z8wYcqcHUdPHn/824mcR59/J5F/4pmLu+96fO7idSjriy++cNJK
M3PnrlqzfsXmAyZLofmTi0KmzpiTniNVgz/bHN964YV5yzaaxMXJHJCRXqMS
l+NPyTqPnTgNiBIlNgdQSX1cjlqU4+SpU4vX7DaJJcehB745c878uBybtmzb
euCESVzb5hg4eCiISc9RTDmGjii//+x3UznAIKiPyzG+YurdJ19K5YB2SJec
I4VK6gEOoE9/PX5rc/z9q3/+7JPf4V8ix/wpfPWtD59/7Ufy74kX373r3ofm
V2+J5EPB8xYsffqV9xK5eJrIe++DTyUv/iXLz3Xl/9qW/+nvvlyy60zV9scS
heZP/pqDT3/zwvsvfff9CZMqjfVYnHkVlfPPfevVVy7+dPd9LxabdLnAIQXa
sv7blfob86kOJCOV/Ju58ZGKVQ+MWnJs0Jw7xi67d962UzuPv/Dnv/793Xff
nTJrUS1Tfq21O+46dOToP//13/ef/XdkmbzmwaFVd41Zeu+k1Q/O2fxorpWI
eqVJ/N+Z9chHgSef+96ElfdDSq+pBxI5N03Zn6g1YObhyvUPIfsdJy+ASaTE
3117D0+fXw1di4XD3GfNXfir3/w+kWNKygOryACxQ+bdaUvJ7zP90K3z7xq9
5Pi9Z17/9DNpCf/Hyf+l+VQA+a+/89HBh15Zc/Dc3ae/M23dCckLLKOXmkqj
zIeffUtkNAR72+5+HnneeOON8ZMqF67eBd2J9eHD8s2HYHxoxLBYlAhAgv3f
/v2niRzDRcHElff3nnYQAvBv+IK7Dz/yag7Ks2r/7Pd/TnL0T4fxY4Xx1PPf
h1VIjV984ye9ph28ZfZRqErKhyQ8+cnPf4tS8QPg2pRF6Acee+wx9D9oLH36
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
m7MJsjOtJwCNlGW0VJbhIi1HliFlf/RfP1/xjaPPv/16ZMVy5KLGbk6YOY62
iBZkEbJ2WL1uZ6cu3d07aAEKSWcPxY4jO2hJdmDLNecoyux/yJFjBh9jCPgq
S46GOelBbqbScpK53YrLhFgbaEI2wGhkdIVgWdEXX7BG9wdOvHznyQvefuJS
0p4rAwTAFgI659jStk3ny8uArF6buZ0+H9tUadjFh440bOtU7PaTa+z+jQzX
snUkiDK025K0a+bGOUCam6yLLA1GscdS/F9G/Nl+uUC2vUQePkCnEifO2kxh
+hk/9JgYMMyoPCVWb41IbxIj18mtseerQJ69+VEn/ff4Pt6+oxc6LQhXYkjR
7J/11tentzyYi+zKQm/NlM4aK531JZ1JfZzOQLVs7OSAmm5KW5eRtvpF2hLL
EybMR257rXzaMucbZGkgslf7/h7FwHZ5QQgUhZY5PVZP9UhPVmK+kwg5xifX
WsJREOhh0zVlUeU73uWIW/Sezzri+NqiIzliJTuNLZSO6isdufjYkY5sXQqd
jjCjQHVkYUd8LWXoqBXpaECkIzvMAIThgfXTmngR3GhNFfY/fBDdyJurywcA
c2K1Upu0ki7HoF9Hckuy0EdJki/hGMV09uqC43cPVMyXKuYHEvOCN+Uhrqti
uzWxfYtj260MRNEuU2y3oVrLuf6+lKoqltkiYpbLZEuvlwWzhcRYJy+vHOt7
kOK1WPE6iHhtQ7xeq3htQ7wOjnjl2d3lXi77UapFsVzmEZdc5hr63jgLLnOJ
pWu8XHIs8CGKy3zF5RDi8nLisoPi8nLisizicjSx1NbLZX9KJbPSoD8FyyLv
tK6m73akKolh8Pnv/MjcmGnvZY2jgtvvxems1dgTyI6yxK3EWVvirL3irC1x
NjTibBSxwTUVzgZQquXK/kYsOvbIc28JZ8z7Kvreymdvk9c8OHPjI87eLvcy
xTHBJdq2CZm08/TY6nuPyn33YcTOFcTOlYqdK4id4RE7I6jeV3rZGUipbH2L
lu4+c/al90Jv3KkyVtL3K5LsPPHiO+uPPOttjc297HAUcHuCpdAZzmtv/4cz
qMRQ4uhK4uhyxdGVxNHIiKNhVPt2Xo5uoVS21rVdH4X/Qi2Q3yxW0Hcrr9TV
Or4bkz0IxRzHBS9TvZS+0VpGDLYjBlspBtsRg+URg7cSN1d5GRxEqVZQL58f
OybwauZy+s4n2PKyGBNKvVxy/PDBistCxeVg4vIq4rKF4vIq4nJMxOUQYqm9
l8vBvv6Mz8IGueR902r63p4YKMqCywIvlxxn/BbFpb4vcgtx2Z64bKq4bE9c
jou4ZIvj027CJTNeTVyWxnLJ57mW0Xc+B2dn4HViuPzk139Mp5CjkA9QDOpd
1gHE4NXE4CWKwauJwQkRgzwyXONlsIxSLSMG68cyWJ/KXErfryEG0mfOz134
0cp9Z4dW3TW++ht773/JWSNHk++nWGuoWOtHrF1DrDVUrF1DrFVErPEMrYOX
Ne41lxJrjWNZq0NlLqHvfPrNWkldap9fM9bwqNJHsahXpfoQix2IxXqKxQ7E
4uSIxb7ET0cvi0Mp1RJisWksi7wvuZi+d/S1XtXLZeN1bCiV1Etx2Vxx2Yu4
7EhcliouOxKXUyMuexNLnbxc8kxoMXHZMpbLIipzEX3nM3LFXi7rZMElv/He
pLhspbi8ibjsRFxqz/adiMvKiEteeeaz+cLlcEq1iLhsE8tlPpW5kL5fSwz4
R99s3ov7UUk9FZdtFZc9ictrictCxeW1xOWMiMsbiaXOXi75LWYhcRnvZSGH
ylxA3/lMXa6Xy2w8T/HuzQ2Ky6sUlzcQl52JyzzFZWficlbEZQ9iqYuXy5GU
agFxaWcCxV4uHzz3ptkDZf7klparNRHXNgvebiDerle8dVC8XU+8WRSpu3P4
BoEJ9kzPdjgn4q47sdLVyx2vNVQRd52UHVZueHjfiZfEDudRmbJifeH7P1t7
8FzKzq7Jgi8+mddN8dVZ8dWN+Oqa5Asp1h9+RkwrqneKn3kRP9dRzbt5+Smn
VPOJn65JfjYcfnbNwaepnc7ytctUOzz8yKv3n31DyvgafnjU7qL4uU7x08Vr
T9Lu9j/4MtK59eY0fqoifrpSzfnOoPDD63vziB+bq5bkivUZw6NqETW6Grvc
hkTds2CL35yvVWz1UGxd6xsBitJ7qRq7kiGNkXushRFrnYmP672s8Wr9XGKN
c+XEjgaTKXUHb2+fR5xk49XjcsrTUfF4s+KxI/HYUfX2eTQe8KxkccRlJ2Kp
u5dLXq2fQ1xyrvg1mQmU+movl7yL0SsLLltSnmsUl30Vl9cQl9coLguJS37z
WBpx2YFYusHLJe/ZzSYuOVdRLJdjKPVVXi5rES/9suCyCeVpr7jUO3HtiUu9
Hl+LuOQVhOqIy6uJpR5eLvk0wSziknOVxHI5klJf6eWylHi5JQsuG1KedopL
vWPUjrhsp7gsJS55bXBFxOVVxFJPL5d8Um8mccm56sRyOZRSt/VyWY94KcuC
yzqU5wrF5TDF5RXE5RWKy3rEJa/6r4q4vJJYutHL5URKNYO45FzxK12DKXUb
L5dsY9ncpCymPJcrLkcpLi8nLvWOSUPikvfg1kRctiWWbvJyWUGpphOXnCve
Y/AASt3Ky+UlxEt5Flzy2N9acTlWcdmauGytuLyEuOT99HURl22IpZu9XE6i
VJXEJee6NJbLPpS6pZfLpsSLHf+y2DNupfibqPi7jPi7TPHXlPhrRfxtiPhr
Rcz08vI3mVJNI/44V7NY/thy/bubLYi/CmWLVbc9NmrxsXRb1Gf8pijuWhB3
eq+pBXHHZ/w2Rdy1JFZ6e7mbQqmmEnecK37VkGdJTb3ctSLuLIYSfH/w3Jtx
K9gNFH/TFX/NiL9mir9WxB+fid4S8decmOF2JfzxLaEpxB/nah3LH7+JX+rl
j99NJtP3bCKhlCguZysumxCXTRSXfDqG78Bsi7hsSiz19XI5jVJNJi45V7x/
XF7Jbezlkj31TKLv2eyW5iku5ysuLyEu9a4dn3ngu4+3RVxeSiz183LJtx8n
EZecq10sl7xT2NDLJe80V9B3OzP2jzH7Trw0f9tjdz72mjkxs0ix14jYa6TY
431lvg+/M2KvMfHS38vedEpVQexxrnjvo3wGpb6XPd7jm0jfbe9X6/V3P1q8
8/ENh5+94+S3tSUuUMw1IOYaKOZ4T499pOyOmGtInPCcTZjjW90TiTnOFe+J
k88K1vUyx/snE+h7PdU+s+kh5yku6xGXeveT907Yd9btEZf1iaWBXi5nUqoJ
xCXnivcxyWf6/edleDWaTyzUUVxmE4dHjy11iMs6isuuxCV7Z9wXcVmXWLrF
y+UsSjWeuORc3WK55PNLJV4uryfu+BxDbcVl/Sy4nKG4rE1c1lZcXk9csvfe
AxGXpcTSIC+XsynVOOKSc3WP5ZI9jfh3kvmmJp9FqqW4bJIFl9MUl7WIS72T
3IO4LCEuD0VclhBLvF4gXM6hVGOJS87VM5ZL9qxX6OXyJuJuDH0vUly2yoLL
yYrLIuKySHF5E3FZTFweibgsJpaGeLlkHzZjiEvOFe9Fi8/k5Hu57E3c8XnD
AsVluyy41O/UBcSlji3fm7gsJC7viLgsJJbKvFyyZ6nRxCXnivfYU4tS+3fl
+fRCOX3X8+xOWXA5TnGZR1zqXfl+xGU+cXlXxGU+sXSrl8v5lKqcuORc/WO5
tJovdqlr1Ca9upvDJ79yFI/XZ8HjaMVjDvGYo3gcSDzmEo/31KTfR0wxxOvU
wmMVpRpFPHKuW2J5FN9qkpoZHEyM2T2I1H3CdOqy8vJu8xelc+dYQy4+12Bx
p26k4VuKseMRY9ZoHRXDvHwtIL5GEl+cy/aPJZqvXfeeP2ijRwduiIjHPnzf
fs+3UrwMyIKX9D2BQw+/Mnvzo8yFxRSdBPn2938WsXCfzQc4T7/8Q6nccC8D
7CN0BDHAuawFFf3055/tvu/FPpWHbp1/1657X8z0ls33PUw7mrv10cW7zqDM
W7Oos9QICZbd/mTPSXtRc4NMdPHJb/4wde2JH/z0V4lvJJEvvO30I89+L0LO
9VtE9RtO9eNcVnaddGu//+wbb4bPJ3A7KEtqWtT84hs/MWvCo7Kote1RU9Hv
vvejT1BEeoOIyhZL//Nfv4p6jHuphsb2/bpeTCmHERe8jyi9gz5rISnyYvsO
7mEHJfsHZ/41yUMbWfmYsztPhXTiQroIT8w6keb6hJq0wxmJY8xXTfq9GOZs
ibffTXE2yjcyBeKx0azzazziprjTZ+D5dp9eW9cM6tvUuTQ66TszA2g0ctF9
Iy7vJnbyIi79o9NSSn0rcVlOufp4ueSzovF74zz77Ku4zKcU07LgUt9xzCcu
8xWXfYnLfOLyTmKnoCb9thFzyR7Dy4jL0ZTrZi+XhZSqbiyX/Fakz3Tz2ZdZ
WXCp97QLiUt9/6gXccknXY4SO0URl/6ZPEcHGEJc8lkVv6ekYkrVMJZLflvX
HlB5j3t+Fly2VFwWE5c6ltmNxGUxcXmY2KlVk35zi7nk6B6DicuxlKu7l0u+
pxC/n8urSPoccgmlWJwFl3r/oYS41He5biAuS4jLg8RO7YhL/8rHCko9iLgc
R7n8fjtKKVXzWC55dfM6xSWfI1qeBZd1FZelxKX203odccmnhvYTO3Vq0m/B
MZcc5YijF4ynXH6fDnUpVatYLnnVXZ/LrUsp1mTBpV4jqktc6htyXYjLusTl
XmKnXsSlf6V4FaUeSFzyOcmOXi75Hlz8XiXv/Wj/mPUphY0mXTueyxrv2yXz
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
45OI0R+gaqCwmWJkNTEiJ8fcnoO59QcbWUJcmDeBHDOpzXWHCxLsid+uHOe7
hR/54PHAIje33c6A7N1KLc2ZarxKm9FmYKCOMoOvV69edPahharhKqphTmYr
ADemIr4a2vUJFG2sgbUqEWVkpJaZutkj1D5RZD3GrbZn1E40Yz4ODtROPPaJ
hdUkZw8ZtVvpq13arGqpt17S5fi0NjbZc8vrbRQ1Jb1GduaZ69apoxoZEwjN
uKoV6hWEegWh5NMIKxSK3U5qj4DUZUrqcpLKb4+8L79cSb3dSb0pIHWpklpN
UnkmXk1Sq5XUfU5q74DUJUrqMpK6jKTy7vcyJfWAk9ovIHWxkrqUpLL1LSWp
S5XUQ05qqMUvUlKXkFRuyxz1WJ8VO+KkhlriQiV1MUnlmT7vUi9WUu9wUm8N
SF2gpC4iqTxKcYRifVrsLid1eEBqlZK6kKTyfG4hSdVnse5xUkcFpM5XUheQ
1AUklfeYFyipx53UMQGp85TUKpJaRVKrSGqVknqfkzo+IHWukjqfpM4nqRxj
eL6Ser+TWhGQOkdJnUdS55FU3juep6Q+6KROCUidraTOJanssZh3RucqqQ85
qZUBqbOU1DkkdQ5JnUNS5yipjzipMwNSZyqps0kq+7bmyL+zldSTTuqcgNQZ
SuoskspejmeRVH2G7zEndX5A6nQldSZJZZ/oHJt3ppL6uJO6MCC1UkmdQVJn
kNQZJFWfonvCSV0SkDpNSZ1OUqeT1OkkdbqSetZJrQ5InaqkVpJU9sBcSVJ1
JOKnndSVAalTlNRpJJVjMEwjqdOU1Gec1DUBqZOV1KkkdSpJ5f1iHSn4m07q
+oDUSUrqFJLKsTt4f3SKkvq8k7opILVCSZ1MUtkb9GSSqiP5vuCkbg1Inaik
TiKpHPOFdxonKakvOqm3BaROUFIrSGoFSeX9Mn228iUndVdA6ngldSJJ5VhB
HLt1opL6ipN6e0DqOCV1Akllz9QTSKqOhPttJ3V/QOpYJXU8SeUYUxxbVZ+A
fM1JPRSQOkZJHUdSx5HUcSRVR6p93Uk9GpA6WkkdS1I5Nhnv8I1VUv/dSb0r
ILVcSR1DUtlL9hiSqs8zvumkHgtIHaWkjiapHNOO981GK6lvOan3BaSOVFLL
SWo5SS0nqfrE4Ped1AcCUkcoqaNIKkdB5N2RUUrqO07qQwGpw5XUkSSVPXaP
JKk6EusPnNRHA1KHKakjSCpHyhxBUkcoqT90Uh8LSB2qpA4nqcNJ6nCSqs8a
vu+knglIvVVJHUZSOYIqxz4dpqT+2Ek9G5BapqQOJansPXwoSdXRT3/qpJ4L
SB2ipN5KUjm+Lu8u3aqkfuikfjMgdbCSWkZSy0gq76joM4z/4aR+KyB1kJI6
hKRyNGbeTxiipP7cSX0xIPUWJXUwSWVP5rxqq+OMfuykvhyQOlBJHURSOYo3
r6kOUlJ/4aR+OyB1gJJ6C0m9haTeQlJ1HNBfOanfCUjtr6QOJKkc/X0gSR2o
pP7aSf33gNR+SuoAkspe1QeQVH3q8LdO6sWA1L5Kan+S2p+k9iep/ZXU3zmp
3w9I7aOk9iOp/UhqP5Kq42j+l5P6bkBqbyW1L0ntS1L7ktS+SuofnNQfBqT2
UlL7kFT28N6HpOo4l184qT8KSL1ZSe1NUnuT1N4ktbeS+icnNeQX4CYltRdJ
7UVSe5FUHYfyL05q6H7/jUrqzST1ZpJ6M0m9WUn9m5MauqPfU0m9iaSyt/mb
SKo+dfp3J/WTgNQeSuqNJPVGksrRmG9UUv+Xkxq6e3+DktqTpPYkqT1Jqo7j
+E8n9TcBqd2V1B4ktQdJ7UFS9ZnR/3ZSfxeQer2SegNJZc/3N5BUHWfx/zip
vw9IvU5J7U5Su5PU7iS1u5Jq5P0PJ/mLgORuSvL1JPl6knw9SdZnP428XCf5
zwHJXZXk60jydSSZo2Ff55Wc7yT/LSC5i5LcjSSzR/5uJFmfrDTyCp3krwKS
OyvJXUlyV5LclSR39UoudpL/GZB8rZLchSR3IcldSLI+vWjklTjJ/zsguZOS
3JkkdybJHBGvs1dyqZPsLN0jvaOSfi1J54gB15J0HUPQyKubIT0vIL2Dkt6J
pHci6RzBrpNXev0M6YUB6dco6R1JekeS3pGk65h/Rl7DDOm1AtKvVtI7kPQO
JJ0jznXwSm+cIb00IL29kn4NSefoBteQdH161Mi7NEN6vYD0q5T0q0n61SSd
I8Rd7ZXeNEN6w4D0dkp6e5LenqS3J+k6pp6R1zxD+iUB6Vcq6VeR9KtIOkd0
0ydGjbyWGdJD/niuUNLbkXSOxNCOpOsYeEZeqwzpId8xbZX0K0n6lSSdI7Bd
6ZXeJkN6q4D0y5X0K0j6FST9CpKuY9YZeW0zpF8ekN5GSW9L0tuSdI6Yps9N
GnlXZkgP3bltraRfTtI5asTlJF3HmDPyrsqQHrpr2kpJb0PS25B0jnDWxiv9
6gzpobtH+kRca5LemqS3Jun6RKKT56SH7ti0VNJbkfRWJL0VSW/lld4pQ3ro
Nok+63gZSecIF5eRdH1e0cjrnCE9dKqvuZLekqS3JOkcQUyfLXS1ddJDp/v0
SdYWJL0FSW9B0nXMNSPvugzpoVN+TZX05iS9OUnniF/NvdK7Z0gPnfZroqQ3
I+nNSHozkq5jpDmunfTQqb9LlfSmJL0pSecIXU290m/MkB46/afPdDch6U1I
ehOSrmOaGXk3Z0gPnQJsrKRfStIvJekcUetSr/TeGdJDpwH1rYBLSPolJP0S
kq5jkBl5fTOkh04FNlTSG5P0xiSdI2A19krvnyE9dDpQ30NpRNIbkfRGJF3H
DHN25qSHTgnWV9IbkvSGJJ0jVjX0Sh+UIT10WlDfhmpA0huQ9AYkXcf4MvKG
ZEgPnRrU/gjqk/T6JL0+Sa/vlX5rhvTQ6UF9T7geSa9H0uuRdB2Ty8gbliE9
dIpQ3yivS9LrknSOCFXXK31EhvTQaULte6AOSa9D0uuQdB1Dy7UxJz10qlD7
eiwl6aUkvZSkl3qlj86QHjpdqP1X1SbptUl6bZJe2yt9bIb00CnDYiW9hKSX
kPQSkq4ja7kW7qSHThsWKem1SHotkl6LpNfySp+YIT106rBQSS8m6cUkvZik
F3ulT8qQHjp9WKCkF5H0IpJeRNKLvNKnZEgPnULMV9ILSXohSS8k6TpOl5E3
LUN66DRinpJeQNILSHoBSS/wSp+eIT10KlH7hs4n6c4n+Isvf7u8cmUUBS6P
MOR7MczMwLA1gCFHYbClp25e45t4f3fO3Csq5w8cPLRq4RIJS5PCoSNyGcmz
M3DYU4slGkcN+fSWW3FAcdepV3fdvk+c+YuffhNrafzkmScfOxPJzfXKnZsh
155brKXlpguVm1xLV25YucVGHSlMxp+orFr1jQdPRfc9Wc78DDm3++S8/9Fv
RMjJM8/MXLDKRqIoQLmoxbdefSujtAUZpUkcrPTSHn3m3wcNG2+4kCge4GLY
mKnIbPMsysjtPI3vOvLQpJlLoogz0KP4+U+d+nY5JMLGyVOnFq/Z7YsOE8oR
jooTysHRgFJRjEI5OD7R2IrpH3/8cVyOVLymkmRkjaEjypM5MrkSH/KpGC0S
LWTu4nUS4SyYA+1x0tQZd598KYpWAhpWr92QzLE4I4c9Y2kiAKXHjDDxZBav
3oHmJBF6ZIxyeeyNpSgaAmoMYiFh912Pb9r7jfnVW8ZOnPb4GXOYvmZZRi57
rrIQkqAF6GZp9crbdu5+9tlnTfQB87w6I3Xyv9r/H/5qjSXXOdexv8/KSHHK
ppBL28bPg/lttidFeXl55Mk88gJo/Sr0u7vfuufXGc+xJuXUjHz2lkkeTPzw
4cMXLlww/s1sSV/966ueR3oatxE5xhFNbpcDXSL/QCbXFE8Z4uJIXDeLh47q
Z6rlqntN0gGE8/do807OKMWeYMx1bjMjLx9y9VucGYt/wBrr6wgfgmUAQHRb
NN3HK3CACFRCXCA4H6/mrrfJW5FRkr0bUiBuLsXXjPjxtJ5P8wVGWVlZ5JnP
5Jig8xsfh+IAFlSIxxH8Ii6Fa5znbvInZ/6M0WUZR6jipRBKhR7EiwI+iKah
dneHGnq0ecdllPKE1yLEb9eXX36JmjjGCsRPAVLhHz7I/fmakRnlPSM6tsqq
sTeupQ7iD8m4rjWWk2Nu8Kd5Zjd/huly6oh4IVU63PIHyyFdmBJ/O+JLyCQa
oUuoCwOuqKgACT179oQtirMUcSUnniLEcwHKMf6mTL7hGaXIK43zpVKTdBpU
Yx1+iMtScegkrrZ0Cfb8YsoflLjdgGxxm4IShAZxXSUOsGrKMkqw9yryxIGi
eGx1fsKl5oCHGopDIaGJ3qttCZFvUFgviANUYQHSZfYkDjCS2hickd8OQwXi
NzBd/xKn9ty5cxLiQHxNiXO+RI5xuZOLDKIsW1bfjFJftRpCoxSvfJCOjkwi
JQCVOIgHTigYmMUDY6gU46NN7rGLc6aUpytxGFiT9HQF3NEvmaXYM5B1AWHd
unUwFXHLJD52xHMoNIZeQto9PiSx9Mko5YLVNZToGq74g61Jur106haX97qE
75pvtcT3aI3tIJFFvClJJxG1usxc9lRjHfFvCtqlI0JKfIbZ/N9Bjq2DHCcG
OSsEpMcS0wRmyNlToMwJLt85IV4Hevr+/fvALAhMXkASqbZBNQN8hwFKKQGJ
fUhZBIkeyNEusLIIVT945SAz5HhI0CmfIDFrLCqAboBUKDhVAG1BSsvYVECO
tcGuAgZIr7sZGAFYjvMA\
\>"]], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.793871134013446*^9, 
  3.793871134298661*^9}},ExpressionUUID->"94aee2a6-cef7-480d-a9bc-\
691a36e8ee74"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MobiusMatrixFromSets", "[", 
   RowBox[{"Map", "[", 
    RowBox[{"SymbolToSets", ",", 
     RowBox[{"Sort", "[", 
      RowBox[{
       RowBox[{"ListofVars", "[", 
        RowBox[{"allGraphs4", "[", 
         RowBox[{"K4Key", ",", "\"\<colofourrealnull\>\""}], "]"}], "]"}], 
       ",", "CompareSymbols"}], "]"}]}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7938711468280168`*^9, 3.7938712293744507`*^9}, {
  3.7938712925913987`*^9, 3.793871293093057*^9}},
 CellLabel->
  "In[600]:=",ExpressionUUID->"6a41d006-3155-468c-b9dd-1d2c9335314f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "2", "2", "1", "2", "1", "1", "2", 
      RowBox[{"-", "6"}]},
     {"0", "1", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "2"},
     {"0", "0", "1", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0", "0", "2"},
     {"0", "0", "0", "1", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", 
      RowBox[{"-", "1"}], "0", 
      RowBox[{"-", "1"}], "0", "2"},
     {"0", "0", "0", "0", "1", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "2"},
     {"0", "0", "0", "0", "0", "1", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", 
      RowBox[{"-", "1"}], "0", 
      RowBox[{"-", "1"}], "2"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "0", "0", 
      RowBox[{"-", "1"}], "2"},
     {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7938711760485654`*^9, 3.793871230215756*^9}, 
   3.793871293996663*^9},
 CellLabel->
  "Out[600]//MatrixForm=",ExpressionUUID->"846f718f-62c2-4b51-92c0-\
c8bdb1dd9af8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaGraphReverse2", "[", 
  RowBox[{"allGraphs3", "[", 
   RowBox[{"K3Key", ",", "\"\<colofourrealnull\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.79390062254134*^9, 3.7939006378361793`*^9}},
 CellLabel->
  "In[602]:=",ExpressionUUID->"9e6badbf-549e-4a24-98cf-d4b059d9820a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`v1x2x3, $CellContext`v123, $CellContext`v12x3, \
$CellContext`v13x2, $CellContext`v1x23}, {{{3, 2}, {4, 2}, {5, 2}, {1, 3}, {1,
        4}, {1, 5}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {$CellContext`v123 -> Rotate[
           Row[{"123"}], Rational[1, 6] Pi], $CellContext`v1x23 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "23"}], Rational[1, 6] 
           Pi], $CellContext`v13x2 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
           Pi], $CellContext`v12x3 -> Rotate[
           Row[{"12", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3"}], Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 2.}, {-1., 1.}}, 0.02261146496815286], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.02261146496815286], 
        ArrowBox[{{0., 2.}, {1., 1.}}, 0.02261146496815286], 
        ArrowBox[{{-1., 1.}, {0., 0.}}, 0.02261146496815286], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.02261146496815286], 
        ArrowBox[{{1., 1.}, {0., 0.}}, 0.02261146496815286]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 2.}, 0.02261146496815286], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.02261146496815286, 2.022611464968153}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.02261146496815286], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"123\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.02261146496815286, 0.02261146496815286}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.02261146496815286], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"12\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9773885350318472, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.02261146496815286], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.02261146496815286, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.02261146496815286], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"23\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], Offset[{2, 2}, 
          {1.0226114649681528, 1.0226114649681528}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.7939006274612246`*^9, 3.793900638220868*^9}},
 CellLabel->
  "Out[602]=",ExpressionUUID->"43f8d254-bd87-440f-ae3a-1d80c7ca85a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MobiusMatrixFromSets", "[", 
   RowBox[{"Map", "[", 
    RowBox[{"SymbolToSets", ",", 
     RowBox[{"Sort", "[", 
      RowBox[{
       RowBox[{"ListofVars", "[", 
        RowBox[{"allGraphs3", "[", 
         RowBox[{"K3Key", ",", "\"\<colofourrealnull\>\""}], "]"}], "]"}], 
       ",", "CompareSymbols"}], "]"}]}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.793900661714752*^9, 3.7939006686563115`*^9}},
 CellLabel->
  "In[603]:=",ExpressionUUID->"ac321ef1-554a-4207-823d-a3b577563585"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], "2"},
     {"0", "1", "0", "0", 
      RowBox[{"-", "1"}]},
     {"0", "0", "1", "0", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "1", 
      RowBox[{"-", "1"}]},
     {"0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.793900669257733*^9},
 CellLabel->
  "Out[603]//MatrixForm=",ExpressionUUID->"61830852-cbb2-411c-8a15-\
c5e3006b49ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"allGraphs3", "[", 
    RowBox[{"k", ",", "\"\<colofourrealnull\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "allGraphs3NullAtomKeys"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7939077715700164`*^9, 3.793907809546883*^9}},
 CellLabel->
  "In[605]:=",ExpressionUUID->"f2656979-f8e5-44e3-b594-0321062bb40c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"n1x2x3", ",", "n12x3", ",", "n123", ",", "n13x2", ",", "n1x23"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.793907799126794*^9, 3.793907810067973*^9}},
 CellLabel->
  "Out[605]=",ExpressionUUID->"d095f9b9-b585-4b85-a8b9-aa89c66cf4e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Keys", "[", "allGraphs3", "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7939793011848335`*^9, 3.7939793082005997`*^9}},
 CellLabel->
  "In[606]:=",ExpressionUUID->"3e65ad70-5cb4-410a-8efc-2ed6e09bae41"],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{3.7939793089114757`*^9},
 CellLabel->
  "Out[606]=",ExpressionUUID->"31f2282b-42ae-49af-9c3c-0f0ab596f2bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MobiusMatrixFromSets", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"SymbolToSets", ",", 
         RowBox[{"Sort", "[", 
          RowBox[{
           RowBox[{"ListofVars", "[", 
            RowBox[{"allGraphs3", "[", 
             RowBox[{"k", ",", "\"\<colofourrealnull\>\""}], "]"}], "]"}], 
           ",", "CompareSymbols"}], "]"}]}], "]"}], "]"}], "//", 
      "MatrixForm"}], ",", 
     RowBox[{"allGraphs3", "[", 
      RowBox[{"k", ",", "\"\<graph\>\""}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"Keys", "[", "allGraphs3", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7939793144031596`*^9, 3.7939793592594643`*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"5b21aadd-4c41-4f2e-9034-3c29a8ab07d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1"}}, RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
         Baseline, ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2, 3}, {}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {
              0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
             VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
             VertexSize -> {0.1}, VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"3\"", TraditionalForm], 
              Offset[{2, 2}, {-0.7794228634059948, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1", 
           RowBox[{"-", "1"}]}, {"0", "1"}}, RowSpacings -> 1, ColumnSpacings -> 
         1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
        "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2, 3}, {Null, {{1, 2}}}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {
              0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
             VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
             VertexSize -> {0.1}, VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            RGBColor[0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0], 
            LineBox[{{0., 1.}, {0.8660254037844386, -0.5}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"3\"", TraditionalForm], 
              Offset[{2, 2}, {-0.7794228634059948, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1", 
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], "2"}, {"0", "1", "0", 
           RowBox[{"-", "1"}]}, {"0", "0", "1", 
           RowBox[{"-", "1"}]}, {"0", "0", "0", "1"}}, RowSpacings -> 1, 
         ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
         Center], "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}}}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {
              0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
             VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
             VertexSize -> {0.1}, VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            RGBColor[0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0], 
            
            LineBox[{{{0., 1.}, {0.8660254037844386, -0.5}}, {{0., 
             1.}, {-0.8660254037844386, -0.5}}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"3\"", TraditionalForm], 
              Offset[{2, 2}, {-0.7794228634059948, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1", 
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], "2"}, {"0", "1", "0", "0", 
           RowBox[{"-", "1"}]}, {"0", "0", "1", "0", 
           RowBox[{"-", "1"}]}, {"0", "0", "0", "1", 
           RowBox[{"-", "1"}]}, {"0", "0", "0", "0", "1"}}, RowSpacings -> 1, 
         ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
         Center], "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {
              0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
             VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
             VertexSize -> {0.1}, VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            RGBColor[0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0], 
            
            LineBox[{{{0., 1.}, {0.8660254037844386, -0.5}}, {{0., 
             1.}, {-0.8660254037844386, -0.5}}, {{
             0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"3\"", TraditionalForm], 
              Offset[{2, 2}, {-0.7794228634059948, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1", 
           RowBox[{"-", "1"}]}, {"0", "1"}}, RowSpacings -> 1, ColumnSpacings -> 
         1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
        "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2}, {Null, {{1, 2}}}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {0.8660254037844386, -0.5}}, 
             VertexLabels -> {2 -> "2,3", 1 -> "1"}, VertexSize -> {0.1}, 
             VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            RGBColor[0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0], 
            LineBox[{{0., 1.}, {0.8660254037844386, -0.5}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2,3\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1", 
           RowBox[{"-", "1"}]}, {"0", "1"}}, RowSpacings -> 1, ColumnSpacings -> 
         1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
        "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2}, {Null, {{1, 2}}}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {0.8660254037844386, -0.5}}, 
             VertexLabels -> {2 -> "2", 1 -> "1,3"}, VertexSize -> {0.1}, 
             VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            RGBColor[0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0], 
            LineBox[{{0., 1.}, {0.8660254037844386, -0.5}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1,3\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1", 
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], "2"}, {"0", "1", "0", 
           RowBox[{"-", "1"}]}, {"0", "0", "1", 
           RowBox[{"-", "1"}]}, {"0", "0", "0", "1"}}, RowSpacings -> 1, 
         ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
         Center], "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {
              0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
             VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
             VertexSize -> {0.1}, VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            RGBColor[0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0], 
            
            LineBox[{{{0., 1.}, {0.8660254037844386, -0.5}}, {{
             0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"3\"", TraditionalForm], 
              Offset[{2, 2}, {-0.7794228634059948, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1"}}, RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
         Baseline, ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2}, {}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {-0.8660254037844386, -0.5}}, 
             VertexLabels -> {2 -> "3", 1 -> "1,2"}, VertexSize -> {0.1}, 
             VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1,2\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"3\"", TraditionalForm], 
              Offset[{2, 2}, {-0.7794228634059948, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1", 
           RowBox[{"-", "1"}]}, {"0", "1"}}, RowSpacings -> 1, ColumnSpacings -> 
         1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
        "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2}, {Null, {{1, 2}}}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {-0.8660254037844386, -0.5}}, 
             VertexLabels -> {2 -> "3", 1 -> "1,2"}, VertexSize -> {0.1}, 
             VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            RGBColor[0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0], 
            LineBox[{{0., 1.}, {-0.8660254037844386, -0.5}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1,2\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"3\"", TraditionalForm], 
              Offset[{2, 2}, {-0.7794228634059948, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1"}}, RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
         Baseline, ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1}, {}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}}, VertexLabels -> {1 -> "1,2,3"}, 
             VertexSize -> {0.1}, VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.05], 
             InsetBox[
              FormBox["\"1,2,3\"", TraditionalForm], 
              Offset[{2, 2}, {0.05, 1.05}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, PlotRangePadding -> 0.1, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1", 
           RowBox[{"-", "1"}]}, {"0", "1"}}, RowSpacings -> 1, ColumnSpacings -> 
         1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
        "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2, 3}, {Null, {{1, 3}}}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {
              0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
             VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
             VertexSize -> {0.1}, VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            RGBColor[0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0], 
            LineBox[{{0., 1.}, {-0.8660254037844386, -0.5}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"3\"", TraditionalForm], 
              Offset[{2, 2}, {-0.7794228634059948, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1", 
           RowBox[{"-", "1"}], 
           RowBox[{"-", "1"}], "2"}, {"0", "1", "0", 
           RowBox[{"-", "1"}]}, {"0", "0", "1", 
           RowBox[{"-", "1"}]}, {"0", "0", "0", "1"}}, RowSpacings -> 1, 
         ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
         Center], "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2, 3}, {Null, {{1, 3}, {2, 3}}}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {
              0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
             VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
             VertexSize -> {0.1}, VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            RGBColor[0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0], 
            
            LineBox[{{{0., 1.}, {-0.8660254037844386, -0.5}}, {{
             0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"3\"", TraditionalForm], 
              Offset[{2, 2}, {-0.7794228634059948, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1"}}, RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
         Baseline, ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2}, {}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {0.8660254037844386, -0.5}}, 
             VertexLabels -> {2 -> "2", 1 -> "1,3"}, VertexSize -> {0.1}, 
             VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1,3\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1", 
           RowBox[{"-", "1"}]}, {"0", "1"}}, RowSpacings -> 1, ColumnSpacings -> 
         1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
        "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2, 3}, {Null, {{2, 3}}}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {
              0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
             VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
             VertexSize -> {0.1}, VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            RGBColor[0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0], 
            
            LineBox[{{
             0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"3\"", TraditionalForm], 
              Offset[{2, 2}, {-0.7794228634059948, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      RowBox[{"(", "\[NoBreak]", 
        GridBox[{{"1"}}, RowSpacings -> 1, ColumnSpacings -> 1, RowAlignments -> 
         Baseline, ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2}, {}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {0.8660254037844386, -0.5}}, 
             VertexLabels -> {2 -> "2,3", 1 -> "1"}, VertexSize -> {0.1}, 
             VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
             InsetBox[
              FormBox["\"2,3\"", TraditionalForm], 
              Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.793979366448411*^9},
 CellLabel->
  "Out[607]=",ExpressionUUID->"f8e2eccb-9b1d-4f97-b42c-b6f382622285"]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 314, 6, 28, "Input",ExpressionUUID->"16455568-4253-4a92-ab50-e731ec259f0b"],
Cell[875, 28, 52853, 947, 597, InheritFromParent,ExpressionUUID->"94aee2a6-cef7-480d-a9bc-691a36e8ee74"],
Cell[CellGroupData[{
Cell[53753, 979, 604, 15, 28, "Input",ExpressionUUID->"6a41d006-3155-468c-b9dd-1d2c9335314f"],
Cell[54360, 996, 2580, 66, 283, "Output",ExpressionUUID->"846f718f-62c2-4b51-92c0-c8bdb1dd9af8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56977, 1067, 311, 6, 28, "Input",ExpressionUUID->"9e6badbf-549e-4a24-98cf-d4b059d9820a"],
Cell[57291, 1075, 4499, 99, 377, "Output",ExpressionUUID->"43f8d254-bd87-440f-ae3a-1d80c7ca85a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61827, 1179, 551, 14, 28, "Input",ExpressionUUID->"ac321ef1-554a-4207-823d-a3b577563585"],
Cell[62381, 1195, 879, 28, 113, "Output",ExpressionUUID->"61830852-cbb2-411c-8a15-c5e3006b49ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63297, 1228, 388, 9, 28, "Input",ExpressionUUID->"f2656979-f8e5-44e3-b594-0321062bb40c"],
Cell[63688, 1239, 275, 6, 32, "Output",ExpressionUUID->"d095f9b9-b585-4b85-a8b9-aa89c66cf4e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64000, 1250, 248, 5, 28, "Input",ExpressionUUID->"3e65ad70-5cb4-410a-8efc-2ed6e09bae41"],
Cell[64251, 1257, 156, 3, 32, "Output",ExpressionUUID->"31f2282b-42ae-49af-9c3c-0f0ab596f2bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64444, 1265, 878, 23, 28, "Input",ExpressionUUID->"5b21aadd-4c41-4f2e-9034-3c29a8ab07d2"],
Cell[65325, 1290, 44766, 1017, 154, "Output",ExpressionUUID->"f8e2eccb-9b1d-4f97-b42c-b6f382622285"]
}, Open  ]]
}
]
*)

