(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    749811,      15236]
NotebookOptionsPosition[    747549,      15158]
NotebookOutlinePosition[    747892,      15173]
CellTagsIndexPosition[    747849,      15170]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReadGrof", "[", "k", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "15"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"VertexDegree", "[", "#", "]"}], "]"}], "\[Equal]", "5"}], 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763121881359294*^9, 3.7631219172519274`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 5, 6, 4}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {2, 5}, {3, 6}, {3, 
         4}, {3, 5}, {6, 4}, {6, 5}, {4, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2.077635572424192, 0.14538312809263582`}, {
         1.622121700519018, 0.9989210826630444}, {1.0379005300359831`, 0.}, {
         1.0388715748066573`, 0.5716078363709886}, {0.454770110930767, 
         0.9978125230323187}, {0., 0.14605821591057733`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{2, 4}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{2, 5}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{3, 5}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{3, 6}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{4, 6}, 0.023238294114515057`]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.023238294114515057`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.023238294114515057`], 
           DiskBox[2, 0.023238294114515057`], 
           DiskBox[3, 0.023238294114515057`], 
           DiskBox[4, 0.023238294114515057`], 
           DiskBox[5, 0.023238294114515057`], 
           DiskBox[6, 0.023238294114515057`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 5, 7, 6, 4}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {2, 5}, {3, 
         7}, {3, 4}, {3, 6}, {7, 4}, {7, 6}, {4, 6}, {4, 5}, {6, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 0.6320692897834503}, {0.028762369118840447`, 
         1.2659624841067054`}, {1.0263164711717216`, 1.213151987515831}, {
         1.0276769779622779`, 0.05260577982625947}, {0.02994323832954815, 
         0.}, {0.9152503691928224, 0.6328292637128081}, {1.9414581703850644`, 
         0.6337815739342127}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{1, 5}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{2, 5}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{3, 6}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{3, 7}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{4, 6}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{4, 7}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.02213468346661418]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.02213468346661418]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02213468346661418], DiskBox[2, 0.02213468346661418], 
           DiskBox[3, 0.02213468346661418], DiskBox[4, 0.02213468346661418], 
           DiskBox[5, 0.02213468346661418], DiskBox[6, 0.02213468346661418], 
           DiskBox[7, 0.02213468346661418]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 5, 7, 6, 4}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 6}, {3, 
         7}, {3, 6}, {3, 5}, {7, 4}, {7, 6}, {7, 5}, {4, 6}, {4, 5}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1.4588993179967102`, 1.6609395903312887`}, {
         0.34399637314613885`, 1.671460349624229}, {0.9700963871630214, 
         1.1444152232828557`}, {0.801975626863257, 0.7119683470446849}, {
         1.7602691600218272`, 0.6283457607398115}, {0., 0.6763980820693232}, {
         0.8933327604395502, 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{1, 5}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{2, 4}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{3, 5}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{3, 6}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{3, 7}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{4, 6}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{4, 7}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{5, 7}, 0.020636146156385787`]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.020636146156385787`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020636146156385787`], 
           DiskBox[2, 0.020636146156385787`], 
           DiskBox[3, 0.020636146156385787`], 
           DiskBox[4, 0.020636146156385787`], 
           DiskBox[5, 0.020636146156385787`], 
           DiskBox[6, 0.020636146156385787`], 
           DiskBox[7, 0.020636146156385787`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]]}], "}"}]], "Output",
 CellChangeTimes->{3.763121918244372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"VertexDegree", "[", 
        RowBox[{"ReadGrof", "[", "k", "]"}], "]"}], "]"}], "\[Equal]", "5"}], 
     ",", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"ReadGrof", "[", "k", "]"}], ",", 
         RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
       "k"}], "]"}], ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763121931943697*^9, 3.763121990112419*^9}, {
  3.763122289133914*^9, 3.7631222893756356`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 5, 6, 4}, {
            Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {2, 5}, {3, 6}, {3,
              4}, {3, 5}, {6, 4}, {6, 5}, {4, 5}}}, {
            GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {"Name"}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             
             ArrowBox[{{2.077635572424192, 0.14538312809263582`}, {
              1.622121700519018, 0.9989210826630444}}, 
              0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.077635572424192, 0.14538312809263582`}, {
              1.0379005300359831`, 0.}}, 0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.077635572424192, 0.14538312809263582`}, {
              1.0388715748066573`, 0.5716078363709886}}, 
              0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.622121700519018, 0.9989210826630444}, {
              1.0379005300359831`, 0.}}, 0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.622121700519018, 0.9989210826630444}, {
              1.0388715748066573`, 0.5716078363709886}}, 
              0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.622121700519018, 0.9989210826630444}, {
              0.454770110930767, 0.9978125230323187}}, 
              0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0379005300359831`, 0.}, {1.0388715748066573`, 
              0.5716078363709886}}, 0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0379005300359831`, 0.}, {0.454770110930767, 
              0.9978125230323187}}, 0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0379005300359831`, 0.}, {0., 0.14605821591057733`}},
               0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0388715748066573`, 0.5716078363709886}, {
              0.454770110930767, 0.9978125230323187}}, 
              0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0388715748066573`, 0.5716078363709886}, {0., 
              0.14605821591057733`}}, 0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.454770110930767, 0.9978125230323187}, {0., 
              0.14605821591057733`}}, 0.023238294114515057`]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             
             DiskBox[{2.077635572424192, 0.14538312809263582`}, 
              0.023238294114515057`], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {2.100873866538707, 0.16862142220715087`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.622121700519018, 0.9989210826630444}, 
              0.023238294114515057`], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {1.645359994633533, 1.0221593767775594`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{1.0379005300359831`, 0.}, 0.023238294114515057`], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.0611388241504982`, 0.023238294114515057`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.0388715748066573`, 0.5716078363709886}, 
              0.023238294114515057`], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.0621098689211723`, 0.5948461304855036}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.454770110930767, 0.9978125230323187}, 
              0.023238294114515057`], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {0.4780084050452821, 1.0210508171468338`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0., 0.14605821591057733`}, 0.023238294114515057`], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {0.023238294114515057`, 0.16929651002509238`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {FrameTicks -> None, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", "0", ",", "0", ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 5, 7, 6, 4}, {
            Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {2, 5}, {3,
              7}, {3, 4}, {3, 6}, {7, 4}, {7, 6}, {4, 6}, {4, 5}, {6, 5}}}, {
            GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {"Name"}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.6320692897834503}, {0.028762369118840447`, 
              1.2659624841067054`}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.6320692897834503}, {1.0263164711717216`, 
              1.213151987515831}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.6320692897834503}, {1.0276769779622779`, 
              0.05260577982625947}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.6320692897834503}, {0.02994323832954815, 0.}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.028762369118840447`, 1.2659624841067054`}, {
              1.0263164711717216`, 1.213151987515831}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.028762369118840447`, 1.2659624841067054`}, {
              0.02994323832954815, 0.}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.028762369118840447`, 1.2659624841067054`}, {
              0.9152503691928224, 0.6328292637128081}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0263164711717216`, 1.213151987515831}, {
              1.0276769779622779`, 0.05260577982625947}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0263164711717216`, 1.213151987515831}, {
              0.9152503691928224, 0.6328292637128081}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0263164711717216`, 1.213151987515831}, {
              1.9414581703850644`, 0.6337815739342127}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0276769779622779`, 0.05260577982625947}, {
              0.02994323832954815, 0.}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0276769779622779`, 0.05260577982625947}, {
              0.9152503691928224, 0.6328292637128081}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0276769779622779`, 0.05260577982625947}, {
              1.9414581703850644`, 0.6337815739342127}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.02994323832954815, 0.}, {0.9152503691928224, 
              0.6328292637128081}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.9152503691928224, 0.6328292637128081}, {
              1.9414581703850644`, 0.6337815739342127}}, 
              0.02213468346661418]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             DiskBox[{0., 0.6320692897834503}, 0.02213468346661418], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {0.02213468346661418, 0.6542039732500645}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.028762369118840447`, 1.2659624841067054`}, 
              0.02213468346661418], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {0.05089705258545463, 1.2880971675733197`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.0263164711717216`, 1.213151987515831}, 
              0.02213468346661418], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.048451154638336, 1.235286670982445}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.0276769779622779`, 0.05260577982625947}, 
              0.02213468346661418], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.0498116614288922`, 0.07474046329287365}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.02994323832954815, 0.}, 0.02213468346661418], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {0.05207792179616233, 0.02213468346661418}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.9152503691928224, 0.6328292637128081}, 
              0.02213468346661418], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {0.9373850526594366, 0.6549639471794223}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.9414581703850644`, 0.6337815739342127}, 
              0.02213468346661418], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {1.9635928538516785`, 0.6559162574008269}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {FrameTicks -> None, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 5, 7, 6, 4}, {
            Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 6}, {3,
              7}, {3, 6}, {3, 5}, {7, 4}, {7, 6}, {7, 5}, {4, 6}, {4, 5}}}, {
            GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {"Name"}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             
             ArrowBox[{{1.4588993179967102`, 1.6609395903312887`}, {
              0.34399637314613885`, 1.671460349624229}}, 
              0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.4588993179967102`, 1.6609395903312887`}, {
              0.9700963871630214, 1.1444152232828557`}}, 
              0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.4588993179967102`, 1.6609395903312887`}, {
              0.801975626863257, 0.7119683470446849}}, 
              0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.4588993179967102`, 1.6609395903312887`}, {
              1.7602691600218272`, 0.6283457607398115}}, 
              0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.34399637314613885`, 1.671460349624229}, {
              0.9700963871630214, 1.1444152232828557`}}, 
              0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.34399637314613885`, 1.671460349624229}, {
              0.801975626863257, 0.7119683470446849}}, 
              0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.34399637314613885`, 1.671460349624229}, {0., 
              0.6763980820693232}}, 0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.9700963871630214, 1.1444152232828557`}, {
              1.7602691600218272`, 0.6283457607398115}}, 
              0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.9700963871630214, 1.1444152232828557`}, {0., 
              0.6763980820693232}}, 0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.9700963871630214, 1.1444152232828557`}, {
              0.8933327604395502, 0.}}, 0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.801975626863257, 0.7119683470446849}, {
              1.7602691600218272`, 0.6283457607398115}}, 
              0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.801975626863257, 0.7119683470446849}, {0., 
              0.6763980820693232}}, 0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.801975626863257, 0.7119683470446849}, {
              0.8933327604395502, 0.}}, 0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.7602691600218272`, 0.6283457607398115}, {
              0.8933327604395502, 0.}}, 0.020636146156385787`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.6763980820693232}, {0.8933327604395502, 0.}}, 
              0.020636146156385787`]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             
             DiskBox[{1.4588993179967102`, 1.6609395903312887`}, 
              0.020636146156385787`], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {1.479535464153096, 1.6815757364876744`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.34399637314613885`, 1.671460349624229}, 
              0.020636146156385787`], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {0.3646325193025246, 1.6920964957806148`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.9700963871630214, 1.1444152232828557`}, 
              0.020636146156385787`], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {0.9907325333194071, 1.1650513694392415`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.801975626863257, 0.7119683470446849}, 
              0.020636146156385787`], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {0.8226117730196427, 0.7326044932010707}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.7602691600218272`, 0.6283457607398115}, 
              0.020636146156385787`], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {1.780905306178213, 0.6489819068961973}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0., 0.6763980820693232}, 0.020636146156385787`], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {0.020636146156385787`, 0.6970342282257089}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.8933327604395502, 0.}, 0.020636146156385787`], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {0.913968906595936, 0.020636146156385787`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {FrameTicks -> None, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 7, 8, 5, 6, 4}, {
            Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {2, 7}, {2,
              4}, {3, 8}, {3, 7}, {3, 5}, {8, 6}, {8, 7}, {8, 5}, {6, 7}, {6, 
             4}, {6, 5}, {4, 5}}}, {
            GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {"Name"}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             
             ArrowBox[{{1.917523569545854, 0.17239483064470007`}, {
              1.1892313475945586`, 0.9666499323778386}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.917523569545854, 0.17239483064470007`}, {
              0.7016324838274254, 0.}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.917523569545854, 0.17239483064470007`}, {
              1.9167768299883257`, 1.1582331710954001`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.917523569545854, 0.17239483064470007`}, {
              1.1887618932576218`, 0.36371412587321383`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.1892313475945586`, 0.9666499323778386}, {
              0.7016324838274254, 0.}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.1892313475945586`, 0.9666499323778386}, {
              1.9167768299883257`, 1.1582331710954001`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.1892313475945586`, 0.9666499323778386}, {
              0.7010655272440445, 1.3304714595560723`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.1892313475945586`, 0.9666499323778386}, {0., 
              1.0012841390641225`}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.7016324838274254, 0.}, {1.1887618932576218`, 
              0.36371412587321383`}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.7016324838274254, 0.}, {0., 1.0012841390641225`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.7016324838274254, 0.}, {0.0002578959133234804, 
              0.32859388220781915`}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.9167768299883257`, 1.1582331710954001`}, {
              1.1887618932576218`, 0.36371412587321383`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.9167768299883257`, 1.1582331710954001`}, {
              0.7010655272440445, 1.3304714595560723`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.1887618932576218`, 0.36371412587321383`}, {
              0.7010655272440445, 1.3304714595560723`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.1887618932576218`, 0.36371412587321383`}, {
              0.0002578959133234804, 0.32859388220781915`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.7010655272440445, 1.3304714595560723`}, {0., 
              1.0012841390641225`}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.7010655272440445, 1.3304714595560723`}, {
              0.0002578959133234804, 0.32859388220781915`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 1.0012841390641225`}, {0.0002578959133234804, 
              0.32859388220781915`}}, 0.021938723761557366`]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             
             DiskBox[{1.917523569545854, 0.17239483064470007`}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {1.9394622933074113`, 0.19433355440625744`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.1892313475945586`, 0.9666499323778386}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {1.211170071356116, 0.988588656139396}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.7016324838274254, 0.}, 0.021938723761557366`], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {0.7235712075889827, 0.021938723761557366`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.9167768299883257`, 1.1582331710954001`}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {1.938715553749883, 1.1801718948569575`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.1887618932576218`, 0.36371412587321383`}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["8", TraditionalForm], 
              Offset[{2, 2}, {1.2107006170191792`, 0.3856528496347712}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.7010655272440445, 1.3304714595560723`}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {0.7230042510056018, 1.3524101833176296`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0., 1.0012841390641225`}, 0.021938723761557366`], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {0.021938723761557366`, 1.0232228628256799`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.0002578959133234804, 0.32859388220781915`}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {0.022196619674880846`, 0.3505326059693765}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {FrameTicks -> None, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"18"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 7, 5, 6, 8, 4}, {
            Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 6}, {2, 4}, {3,
              6}, {3, 4}, {3, 7}, {8, 5}, {8, 6}, {8, 7}, {5, 6}, {5, 4}, {5, 
             7}, {6, 7}, {4, 7}}}, {
            GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {"Name"}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             
             ArrowBox[{{2.9110434854650196`, 0.5579849586136919}, {
              1.8790765997554948`, 0.5586081058905648}}, 
              0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.9110434854650196`, 0.5579849586136919}, {
              2.0129147819180853`, 0.}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.9110434854650196`, 0.5579849586136919}, {
              2.01381311318356, 1.1164105786250644`}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.8790765997554948`, 0.5586081058905648}, {
              2.0129147819180853`, 0.}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.8790765997554948`, 0.5586081058905648}, {
              2.01381311318356, 1.1164105786250644`}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.8790765997554948`, 0.5586081058905648}, {
              0.898167909064677, 1.1164059482740858`}}, 
              0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.8790765997554948`, 0.5586081058905648}, {
              0.8969749328723111, 0.00002176295418143681}}, 
              0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.0129147819180853`, 0.}, {2.01381311318356, 
              1.1164105786250644`}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.0129147819180853`, 0.}, {0.8969749328723111, 
              0.00002176295418143681}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.0129147819180853`, 0.}, {1.031757370776695, 
              0.5584453699940966}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.01381311318356, 1.1164105786250644`}, {
              0.898167909064677, 1.1164059482740858`}}, 
              0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.01381311318356, 1.1164105786250644`}, {
              1.031757370776695, 0.5584453699940966}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.898167909064677, 1.1164059482740858`}, {
              0.8969749328723111, 0.00002176295418143681}}, 
              0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.898167909064677, 1.1164059482740858`}, {
              1.031757370776695, 0.5584453699940966}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.898167909064677, 1.1164059482740858`}, {0., 
              0.5588277751588822}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.8969749328723111, 0.00002176295418143681}, {
              1.031757370776695, 0.5584453699940966}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.8969749328723111, 0.00002176295418143681}, {0., 
              0.5588277751588822}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.031757370776695, 0.5584453699940966}, {0., 
              0.5588277751588822}}, 0.02959817203837685]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             
             DiskBox[{2.9110434854650196`, 0.5579849586136919}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {2.9406416575033965`, 0.5875831306520688}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.8790765997554948`, 0.5586081058905648}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {1.9086747717938717`, 0.5882062779289416}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{2.0129147819180853`, 0.}, 0.02959817203837685], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {2.042512953956462, 0.02959817203837685}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{2.01381311318356, 1.1164105786250644`}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {2.043411285221937, 1.1460087506634413`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.898167909064677, 1.1164059482740858`}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {0.9277660811030539, 1.1460041203124627`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.8969749328723111, 0.00002176295418143681}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {0.926573104910688, 0.029619934992558286`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.031757370776695, 0.5584453699940966}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["8", TraditionalForm], 
              Offset[{2, 2}, {1.0613555428150718`, 0.5880435420324734}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0., 0.5588277751588822}, 0.02959817203837685], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {0.02959817203837685, 0.588425947197259}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {FrameTicks -> None, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"19"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7631219599605412`*^9, 3.7631219910016336`*^9, 
  3.7631222903765717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"ReadGrof", "[", "7", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"full", "=", 
       RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AlmostSinks", "[", 
        RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Sinks", "[", 
        RowBox[{"FormulaGraphReverse", "[", "full", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], ",", 
         RowBox[{"GraphHighlight", "\[Rule]", 
          RowBox[{"EdgeList", "[", "  ", 
           RowBox[{"Graph", "[", 
            RowBox[{
             RowBox[{"DrawNormal", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                   "full"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"e", ",", 
                   RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"EdgeList", "[", "g", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "3"}], "||", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "3"}]}], 
                    "&"}]}], "]"}]}], "}"}]}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"VertexStyle", "\[Rule]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"v", "\[Rule]", "Red"}], ",", 
                RowBox[{"{", 
                 RowBox[{"v", ",", 
                  RowBox[{"AlmostSinks", "[", 
                   RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], 
                   "]"}]}], "}"}]}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
           "  ", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "800"}], "\[IndentingNewLine]", ",", 
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"v", "\[Rule]", "Red"}], ",", 
            RowBox[{"{", 
             RowBox[{"v", ",", 
              RowBox[{"AlmostSinks", "[", 
               RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}]}], 
             "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7631220403960223`*^9, 3.7631222676572456`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{$CellContext`v14x27x35x6, $CellContext`v14x27x3x5x6, \
$CellContext`v14x2x35x67, $CellContext`v14x2x35x6x7, \
$CellContext`v14x2x3x5x67, $CellContext`v14x2x3x5x6x7, \
$CellContext`v16x24x35x7, $CellContext`v16x24x3x5x7, \
$CellContext`v16x27x35x4, $CellContext`v16x27x3x4x5, \
$CellContext`v16x2x35x4x7, $CellContext`v16x2x3x4x5x7, \
$CellContext`v1x24x35x67, $CellContext`v1x24x35x6x7, \
$CellContext`v1x24x3x5x67, $CellContext`v1x24x3x5x6x7, \
$CellContext`v1x27x35x4x6, $CellContext`v1x27x3x4x5x6, \
$CellContext`v1x2x35x4x67, $CellContext`v1x2x35x4x6x7, \
$CellContext`v1x2x3x4x5x67, $CellContext`v1x2x3x4x5x6x7}, {{{2, 1}, {4, 1}, {
         17, 1}, {6, 2}, {18, 2}, {4, 3}, {5, 3}, {19, 3}, {6, 4}, {20, 4}, {
         6, 5}, {21, 5}, {22, 6}, {8, 7}, {11, 7}, {14, 7}, {12, 8}, {16, 
         8}, {10, 9}, {11, 9}, {17, 9}, {12, 10}, {18, 10}, {12, 11}, {20, 
         11}, {22, 12}, {14, 13}, {15, 13}, {19, 13}, {16, 14}, {20, 14}, {16,
          15}, {21, 15}, {22, 16}, {18, 17}, {20, 17}, {22, 18}, {20, 19}, {
         21, 19}, {22, 20}, {22, 21}}, Null}, {
        GraphLayout -> "LayeredDigraphEmbedding", 
         VertexLabels -> {$CellContext`v1x24x3x5x6x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v16x27x3x4x5 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
             Pi], $CellContext`v14x27x35x6 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x35x4x67 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v16x27x35x4 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
             Pi], $CellContext`v16x2x35x4x7 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x35x4x6x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v14x2x35x67 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v1x24x35x6x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x27x35x4x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v16x24x35x7 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v14x2x3x5x67 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v1x24x3x5x67 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v16x24x3x5x7 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x4x5x67 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v14x2x35x6x7 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x27x3x4x5x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x24x35x67 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v14x27x3x5x6 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] Pi]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.01746207497820401], 
          ArrowBox[{{-1., 1.}, {0., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{0., 1.}, {0., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{0., 1.}, {1., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{1., 1.}, {1., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{1., 2.}, {-1., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{1., 2.}, {0., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{1., 2.}, {1., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{8., 1.}, {6., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 1.}, {3., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{5., 1.}, {6., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{5., 1.}, {3., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{5., 2.}, {8., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{5., 2.}, {3., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{5., 2.}, {5., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{6., 1.}, {6., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{6., 1.}, {5., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{7., 1.}, {5., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{7., 2.}, {8., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{7., 2.}, {6., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{7., 2.}, {7., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{2., 1.}, {0., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{2., 1.}, {3., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{2., 2.}, {-1., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{2., 2.}, {3., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{2., 2.}, {2., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{4., 1.}, {1., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{4., 1.}, {5., 0.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 2.}, {0., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 2.}, {5., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 2.}, {6., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 2.}, {2., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 2.}, {4., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{4., 2.}, {1., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{4., 2.}, {7., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{4., 2.}, {4., 1.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 3.}, {1., 2.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 3.}, {5., 2.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 3.}, {7., 2.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 3.}, {2., 2.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 3.}, {3., 2.}}, 0.061894273127753294`], 
          ArrowBox[{{3., 3.}, {4., 2.}}, 0.061894273127753294`]}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 0.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.061894273127753294`, 0.061894273127753294`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 1.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9381057268722467, 1.0618942731277532`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 0.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {1.0618942731277532`, 0.061894273127753294`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 1.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.061894273127753294`, 1.0618942731277532`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 1.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {1.0618942731277532`, 1.0618942731277532`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 2.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {1.0618942731277532`, 2.0618942731277534`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{6., 0.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {6.061894273127753, 0.061894273127753294`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{8., 1.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {8.061894273127754, 1.0618942731277532`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 0.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {3.0618942731277534`, 0.061894273127753294`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 1.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {3.0618942731277534`, 1.0618942731277532`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{5., 1.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {5.061894273127753, 1.0618942731277532`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{5., 2.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {5.061894273127753, 2.0618942731277534`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{5., 0.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], Offset[{2, 2}, 
            {5.061894273127753, 0.061894273127753294`}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{6., 1.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {6.061894273127753, 1.0618942731277532`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{7., 1.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {7.061894273127753, 1.0618942731277532`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{7., 2.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {7.061894273127753, 2.0618942731277534`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 1.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {2.0618942731277534`, 1.0618942731277532`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 2.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {2.0618942731277534`, 2.0618942731277534`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{4., 1.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {4.061894273127753, 1.0618942731277532`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 2.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {3.0618942731277534`, 2.0618942731277534`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{4., 2.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {4.061894273127753, 2.0618942731277534`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 3.}, 0.061894273127753294`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {3.0618942731277534`, 3.0618942731277534`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Cag2LT1jEG+zGobTNEK8W6havfOjZy9zpsxeQqQgo8r1mq9f5Z1tuyTc9a1W
n8eaHjt/0/va42tlxl2MZ2cvnNXiyB/XeXJP+KyItybhZh8N+hv9GdwpGuHx
uf3gxbD8kSNvePv4MSTPHWzcuHGtc5cuo+LRWCAr9dfNJ+cNnb6JyEJ6ro2G
IVboB58vvr9gyIzN+ENLVJ4ZrwgyqKFwrHPx6gOhLP1u3H1CQPh7i07Jmtak
uFpQ48rX7zxFFLgPm6fNXvDrZ109vWOR/dL3t5rcc1mvZakRe/7cf8u/VmOH
pyWl9yp6V35uY2sH2wsF2nbjpY3rus1PXhm/YJDD4zePZUw5sUym45W10Z27
Cd3bacPWXa8srWxmZA2bIAjw2MHBQSB+ScbMJXNSV+XAzM13Fu9cMHTmVgjH
eGBxVXrB2nXdk3M/6enre9y+c09ehf24nG05J4KnBV/zHu1zsO3YjC2xk0Y+
d8zyOaWSj2d2EQ7c50mL0tLSF9Y2tsfCWnYCC2Djpa2D6+r+wxeCxWqX79zJ
mrBv0tHwgricibtnSmqrrYZPq/AVkI2ZsmxfouoVQTdBBE1LNWL48OH/tkyv
7N0rp/y65eSfVQKqBp84cQJksqxj9XrUu11hVIVFfZan72w7PeGTfobxF313
s24b9hy5q7JiU0dMWd7s8IkLFW6/uH2++qTqlwPG1Abxc5PWJv1QpCvSph6a
qtbr9gV5w8cuzRz766FfspeEnPnr7tykpCQwfsfDy481natZKxBTxtqnZq4Z
/thhmMPUtE1pYP1OhXyvMouBrrtj82cAh/AzUWToTsFkXDsdPClk4cCF07d3
HzutOGBkMOsYOGPPYpgpYeGmhQcbz27M04MmTZl2oGWHHqX2bn7nGjbvgs0p
TOidLCvJ4p1P7Ic6nKs3Ompa+vps3mE91c8/OC94X/aSjQTqWRbejqbYjJz2
6wE8aNCujquKqwc3PdiifffimvWbC9afn/Rbv53N5zdXQ2HOLGDzo7GX9XPb
Kk7HWnZLGzp71aHCwdM3XfMdXXlV94VpkuMn2a5DU1G0PN9l1blVagVqJXib
lAHz3PLxrzFk5tIdI6Ys3LQ8KXPMpu4po1g6ogJkTY9cvAwvr+87bulL6xyH
K7VzOp2rOTFQXrYrw4F0oITdzwaPa5Y2e8+vYgmHG81qxGsr4pYldi86uepE
/clNmfa2X7V6T5wreC/KGDm38cGDB7EqvONX/LT4g8Egg8KBc+dLWkJ1DRAg
NgyH1Cpay4g2+b+I5hUhKgRiZzqkzSdM+an3HY6HRnZ5Y2ZmjlLmcuqSrYfe
m2RaPnPM9dgXMaNdlb8f3ISsIOC5YwW/z7oOuswq6bL0xVM+G6XaqVjOCX3j
X/zoulgVxEGqtf8jkJOvBSxOSs19WbF6s/u1W6XOTx0kSRvD3vYcXuWpS3bl
Wz7Da/RedmDrrP7rUlECsMqx+tMbwnX/RjQ04V3GgL7wCcuAZoDQedvR83er
DewAly/uWziCdaTMmDGjxNbOvsTe0eVQo0aN3O/cucP7CxNW977rObTaDa9R
3syFD7Sx7WJZlWiDejXGzaQPk39jnKs4mqj5WSPnbBca5kDb2PSfbnFA8Ik7
J8Asr6zuPi/jk0GG8WvLLPuOO49ffOhdreGBJiOaND54/SBPw8obusxNWpw9
Y/UfDca0B4xjYROihYCXWgy2+D9uslp5sSyWt6NjbP+/azVocb557JCLUf3m
IHEvrAdLGSPALPYb5wevgTbyBr/9srDv7rZT+vwDvbLH5LCj5fyo+27DPI6F
j+kBeBkLtuxZ37Gw69XK+XVECIfSuenl7fd7aPP2y+Li4rDnzAVqmx78+zQc
AvzAwvy8A7ygWo1gOZ+gI1StTADp/93+jXShunstKVrRdfPe04ShhKNCtSNJ
8KNsuL58uOM+3P1i1Zgaz20HOz2tmtj7fsW8qoNmbv+tz6odfzxziHDeFzY8
DH00M29x4VP7fg7XfJMq/x0wKnjXL6MnvjHLsoo8ePrqnCGTV9/w8vImzyiw
PG3w6Jn5kxduxM1anT5+LRRqcvLibe59MBpk4nfjoRRSb4la2Pqab9fKpVaZ
9s99ktsdC50QXZC3fiz3UPnYdkwLv10fPnk+PWvoOMZYkj1t7Y62M3u8Nss1
B3NQHuEwe/OhjDW037b7CBrkQs3AOjlzV+7V5IoTdac2EJjmnTOBqYH3XLNd
+Q6TY46Eow+1oKBafrusWrVKuH+KZpqaXYfLxX5+fjyt5g8/TeoMWLB8E66E
2Zu3ZayCvIim9n/sPKRC+83n9uaM2zfuUKNejYAe3njuNMj/me0Qu8Kc6esO
xuUufWVd0emjQarh35VqVL7iO8LvXsVq/gNnzF2MZgILOyPndCSVe6TTgBll
5taOJa4+Ne96+9fa+UvaxJfWtg7RW/ed7LFh74Wf+SzL/c1mRJ1vNKTX2fDc
zDLzOMcHbhV9IvedO3fTf0hDkIu9FgRZ2iM+4b6bu8eB1t36n2jWrtfeyHbd
NNJSDh3XrVv/wN3TjyUtTE4dtCIhdSiILxw4cn5BTt7wzIl7Jq7qUtRlwLS5
0x469Xe67uXjZf+k5An6hLkAQyAfFx/Xl+REh3Xr1hFoRPwD6SQSRCSkXoEe
SL/jXbnWltj+IxFuMkk/UxouUhZGxeHvVNq9zKyvjSrodQg6d+kqHPHWIsNp
fP6aucJc4vYdbprX/rVlhsMn/cZG13z9AwomLN0xKXtd/h33ke5LM2f8uitm
zLiLzQZlfzRxttuRMGTZufCY7DITM4slvfumA7icdLHW1NQbe49b+MQxzx2h
K7V2dp6bPXpu5K6LR57bZ1ccPXRbPpp68JQtRaca9+pypklUXOqSdYdWxvzS
vcTGxkbiPtmPczhXo0aNXRERzRlzWVL68D2tO8XDWlMyp+Wdr96q+h+16te6
VTG6IsbqaIPWDcApag38o15QAKiauGX7lxFSMeqQUaNGPbO1tSXcUONaxqsB
jI0oYiIJOIQcoJa4JuO3PT9FbkdkSSDJxqShix4GNmgRdObseeE2o814Fhvw
1D7E4YeikQImKHFM9XpQI6SxlFZQ61BEb0O7du0SFxxd8EVpo/tD8Yv0bKld
D++SgCZhn417OJQ45HhcqFlQ55Nemt7O5hOb1z598fQjJ2eXzEVrj2xOGDrv
dlBk0yeOVSt8NLAwvVq5Ru3Y1Rt3MT9IOVknsc4Phac05huL/rZ3giKbna87
NAov4ErlUbWu+I3x/6jfVx+EwZjCN+F91gZKYFDYUcDG5yNHR0fW3XTvvv33
VfL/NKBB/ccOA1SMP8Lrpke2x3PrZOvXZq3Mnlt7WH/VsdVh/lfmg821t0Uu
jFTovzfMMjzaYGYDTMQXZV9lyoxDM8rjf3UuAfQQVvOPpUkKs4km8ZRQgle4
TSQuv+nGTxaOHPEII/AYACF5kjJTZxm+B4eEP6vo4T1/4NApS+MTk1gFz4vU
gOCHYWPGT/hep2GzR95+/v1mzZrFOC127NhRZmxsLFaunr7E3sPxe3CTZjui
e3cTPHPXLcutzLiHcYlNsg1LknSgXbT99+BGzUoqVPaCeaHDHXdfd5hW4J5Q
qv/yraem5I2a/NWhp+tf1XNr9Z29aLZw0L9pd9N+ZT7I/Jp3iLc8vQ+sWWph
YSGmRs+wYuKaOQMGDTkU0brLgQ4JQ87XC2u7tV2P6O91mjRb1jc3BazwbIlN
pM17wxqGL6y8rFpv3ryZpeJpHa87ve5jh+EOF6rlV3tlnmvedeW5lZ91k3Qf
O2Q6PHYIdwjbt28fmBAmA73Kd0ABO000ojVt0CfraWvuwVbEPwS8sjw/fvzB
wMCAe4gR7Ol67/m943Xr1vW4efPmwdBmzXl2Zl5BYerseYU8G71m3RqFtuRU
tXO5//D+nmbNmi3ul5n/3sjYFFTCP29MTU2JaqtevH6RJ2OLdhY9tY+1/2AY
bXgiOCs4vnB5IR7moUbTGr01MTEpM+5j3GrrX1sfuIxwOxaRmfBJT08PeDCm
xGVfdQx0Oq/evZr5N0d367Wlx4QJk4cunx+++/Je0j23Ko6oeNMj1AOdhGv/
d6WQSl+UvsozgQWBQl28MzIyuli1alVUOLqUPAY26L5npZrkLrutP3yk7eYL
O6HD5tYLWpPTmJSxLsP9zuM7p4L6BL0y72b+3Nra+pV5FfOwfVf3QavoNefX
4Kzz/a1Jksmc5N+S35jmmP5RK63WF6W58oXVIKvEBYsXkOd44Ozs/FlXVxeS
iOSYlARWewcWpe9LwZWE2QaaIbcO5MEf0fDdrCEj2lKYOpEhOxNYN/Bi1fFV
QQNij1W/51rdFdQwHcKaNWXWoiUZY5bc9Qysgneg0JYC1S48W+wX5Gf/5MmT
z3p6+ntbtO40LD8//6GTixNeBWDy5B33PPdv2una6+OnjpvXZ2mfT3r99V5Y
5VhtbZXU6pmtu+2RhmMb/hE4uc4D97xKr8wbmm9sm9T2UkDNgMcO8Q5FsXGx
O1p2a3U8ZFKLl7ZubiV22Y4Xq06oxrig7nTtqbVDDt88/MIq1arEJtvmUKOC
Rg+dnJxYO5415MucMb9IxW4mN/1rNjwc1S11UWpuwWNHJ5fGR86f3NEiqcWt
ip0qvjPKNmJMPPKvOgN1mu69uhcfDXJ91+qjtSwuOQ4NMKvfwn5bWy1ohV/7
yHG445nAqYGw5kf9gfovrNKtntoNtntm+4vtVR8fn1NBU4L6zl4zG+39V+XK
lb8olUrWhvhC1g7rNq8j6bsrYl4Eons4ZFYI44I3xqwnU1WqsGtLJkAPCUYK
ZUP14jbLgwPU2SX57WCHk3X614GJ5MueOJpE52SLsN9B525eBdCXltUt94V1
CxufnZ29qnvvNAi4vv2i9kTt8Bdvr28/qP1XnXRlmekgK2R+QeKyxI/6qfpf
dZJ0lnZf2f1woxlh37UHqlTHxBo3PH08z9aMrflDFR8fbdih4bpuPZJX95+8
8Jn9YGdyFryvZsi6D5xHOF/3GiOpWEzie8MMw7cmA0x3tprUMWfu+r2EZriq
e6Kie74xM7eod/KP8zAxRMicuGkiSLrhOcbzRPD04ItVJ0kMnDnxwMQvygwl
9wg+0AfvjJKN/qg1sRZYwu87FTQ1CBVdGJ8fX2oxwAITCBEeOuU6vTJPN39l
nm3OekAleog5X1paWh5o0qSJMGpZBYUFMD9jAcOBJnOa8Dth4YmFUATcSr5l
XQ0KKnSwMKg5jbRQT1DNq6gtUC4Caab6rGuqm7Bwy0IRPwnVQVYDL+dSUH7L
bdHTUs4G1gn6pm2ubVH6ViJZzozNa98ZZ5kCUteVx1fybolNhs0tzxzv42Hj
uorl/lFrci1kh2TKJ/0MozLjbONdEfMjSi1cLW5X9Kv4Ud/F8K15aztkr/mu
y3tfWOVZidin6d4je8fmrsk90GR2kz+rFFS94T3K/3ztsaEnmo3sVZQxdeXe
VlPjXpsPsrhQfWxN1jR8xIgR8D98P3ngwIGttp7dCiyocca8WHVi1RdWg61G
5+3I+6Q3SI815g/bOYz1ALdwH0Etz29uXdgashXF9oz9pp2i/ca0kmmJzUCb
WxVHV4S8f1UuqMz4vNvpt/W/wTbftbS0UOlExqH7T+9nHOBXaPOkQu9CtYnV
YBHcIMZGtfP+P6mIZhVKWShj3od6vK0ezZC3YZ7f63eoL12X/Dc5QwODSekN
bcZXdAs59deN+xV9qj506+rTdc3prSJ3tTl6Tq+ixDFZ7w0TDUstMix+r59X
f/rAcYMRxq86GTpoQMbbHTE38my90VHPrYfYZBXsL1BpnjpvTVuaf9OxV76w
drC/7u3tvbLroK5oxLcm2Sas9UL1/jU/GPQ3+qyXYlBcK6IlAdhz21znEts8
e9eHz5+LXNhNj3yPE8HtgnEcMLLvDQ1VTmKDBnfd3FS+k4Px4ZBpIUAxNW1j
2vKY5TFwCVRCOIeO3DPyiu9Y38+6mbpSClDNyXA9go+QsP7MiZMnlhnHGv9Z
ZXSVDwb9DH7rlN+JtQ4duXskgn0mMD6wKDY29quOjs4rc3NzqiBo0tdmtmYn
gkcGP7EfZn+0wYwG/WYdnQVVWQ8xk8hjsx7UZbBmEklXxPrin5TRkSlqyJu8
xezwXe7YbWMFFSdmFmT+WSW/ivysNo8pmkPOqhdvXTzcZHrE+l5TxqNnTwb3
rY/BIypL/nX3QXTcN+1E7TNBafVW9ZlVgK56bZZrdqb2xGCVv633UT/d4J5r
vmvchgN/FNcc1vy9UarxK/OK5nIq/n3p4viiPje9R1ZSheTGywcWrJkzYva2
I2GT2t+tMMLzlXkf8/jC3YUYxKd2Q+1kw5vt/tQu106ktPAhsCDXvby8+M61
V+ZZ0vjoct77pJepJ9AIex1qNLsRxhCjyJgngicHlxmnGy/uubynqFIC+zPb
VNu7bgFuCM4177He6HdggzSwstoPwXm/5+rqOikjI4Mru8NnhbM8pnzgnO+M
OsZNAqnIEehAWqCDSA2ggqXcVG2ZnHIHXGtWAUPxuKbK4FWgEVhAZbw37G94
rF6zetnjN47nPYZj5bzHs7yLii0z87L+pJ9guDy2e88zwWNDV3efOSDwzMUz
RT0W9/5gmGmyO3xe+EvLwVabfhmT98jJx/mL0l63xCHM86V1gm3KrK1zrnnn
+37VcVL+UPRSqKyo7m3f9Do5c9bseuzYzGVNpz5dGh4pPsKctU+fPX3dq7HX
7QrDpfn7zNsxL23q2qnbIhMiQRnGvMHRo0dhWdZKHlXkIkCT/ZM3TxCAbypL
jACKz4UJvyX8Xn9mfcbcFjk/su/sDbNzxv067rpXNS84AVOkLQVe9nC3KtZV
LbWvAtk70GRUk86rj68WRG65fft2XA+cYxjoUkBAANd3RYyOmNcnt4/7nWd3
mPJog6kNXpn3Mj9XY3KN2KI/itCqaj2nh+5kNqygCP8AqZYmIZUitEEz/GQd
U0RSVEj4hwu7se2wtld8R/miNJbHJMSAJyQFEypVeOR3Y3AHTwePbvjMKdXz
s268/vmghmFFif2zojed3ocyJSPy1CnXc/LQlbM/GlqYnGowtmVRQvLAL7p6
el907Qw+GMWZHQpv3WnaoNz8az4+vih2AvA3phaqKCZDZfFH+N13aeSCx76i
W1w3FNzJOvmSE0b0BsKgGS74rYoVK+6KiIgQ6T6eYZULEtck3vQY7bG456qe
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
qVNvTM1M+85eOzt891+7X5nbq2xgP22EgDnx+j7rVtd97NDb4a1JU5OvOq46
pRZ1LK57JXiBpXYbNmy44x7sLid6InWu+gz2+aQ3UA9GvukxyoPM6hdlunJl
1wldRS8Tth8q4qnipcuYlgK0gFZbL28VSiBt6uGpcOsb03TTG57dPU8F5QR9
1m2liyCS96MsBbVEVlhuPjAwII6n/wbXh1FFHo+5eBYuRnP/XalSJagAZXdF
tIng2U1tEtp81h2giyu3qU1hGzxc3BlsKlxJoCdluKXylrorQIZLn3GgpMjx
iF4RKe/oLJNWipwUbiK3h9tCOgXSVL14+yJ3YQ6WCYOjq0hpPHB2d/6itFC+
NXFX6T1Xgx+KAIXKi1J80svQ29RmXpsrvuG+xJFUKyHHBwN/FRoqmMqVBbnj
Dp0i58Nq0Bby0CnR6b1hb8My4wrGqKevOtY6T+xd7cHkI8dox6d2bexeWkZZ
lhlnGJ8KmhyE8wwv33Ub6QZ194VNDyOGZ6moV7wI5Oueq4frS8tmlnAtalhW
zyx1kJ5IM4LJbZHxkYdDQkPKjFONCUOJE1DRBPCLevXqBdhwGGPed3FVGUA7
k5eW3SxJQ7ImdW6vAn4AILMGovhDjZo1em3mZ3bDM8sTbv+q01/nvsswF2oy
rEHm1AwdkWVGvWLqyC1CUaQHThLeqdB9kEm01iCVwvN0lAkrpVcVHRmBbyRh
0SrwNhWk94bGhp91LXUjt53Zhmk/Xz2j+jftrtqlFjkq1zm2Ar5aqUW8xRP7
FHs0KL6X+52Xd4hOi2JnxsKD1Pco2AMF7j7mHDnF/SdP13v+/Pkf9bvp/16/
RX2M3iPHXxwvBXQOmJOcnLyqy/AuQH7Ne4w3/Ih2RCvuC5sV9sA5w/mZraOt
aOs8E9gwkKbxvrOXz8YpWBO9LJr5wBQJWrgAOcB3hnGFm08/S/+ZM2cyd+bE
iRO3RUZGggNKWCRQKFmTvyRkkP3M5MCrPl188Ls/6qfoE3FuaJfSLnPi/ImM
RxJCvY3ns26cLgE6yGfpwh6iCjXrlAkLFy7EePEWCpVIUShZnqX6LTwtkWoU
zTwKB01KDkC/gw3yeZhrkUv4rGuiCpYiTKESGD1bc2zNb9q9tE/Wya3zQ5Gk
WBM9LZqUzWX/Nv4sE0zJ7R2DLYjZ13VY2oFlwINodGzVjJT1KTh3mP5Peol6
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
9f8AkyRvOw==\
\>"]], ",", 
   RowBox[{"{", 
    RowBox[{
    "v14x27x3x5x6", ",", "v14x2x35x6x7", ",", "v1x27x35x4x6", ",", 
     "v14x2x3x5x67", ",", "v1x2x35x4x67", ",", "v16x24x3x5x7", ",", 
     "v16x2x35x4x7", ",", "v1x24x35x6x7", ",", "v16x27x3x4x5", ",", 
     "v1x24x3x5x67"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v14x27x35x6", ",", "v14x2x35x67", ",", "v16x24x35x7", ",", "v16x27x35x4",
      ",", "v1x24x35x67"}], "}"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{$CellContext`v14x27x35x6, $CellContext`v14x27x3x5x6, \
$CellContext`v14x2x35x67, $CellContext`v14x2x35x6x7, \
$CellContext`v14x2x3x5x67, $CellContext`v14x2x3x5x6x7, \
$CellContext`v16x24x35x7, $CellContext`v16x24x3x5x7, \
$CellContext`v16x27x35x4, $CellContext`v16x27x3x4x5, \
$CellContext`v16x2x35x4x7, $CellContext`v16x2x3x4x5x7, \
$CellContext`v1x24x35x67, $CellContext`v1x24x35x6x7, \
$CellContext`v1x24x3x5x67, $CellContext`v1x24x3x5x6x7, \
$CellContext`v1x27x35x4x6, $CellContext`v1x27x3x4x5x6, \
$CellContext`v1x2x35x4x67, $CellContext`v1x2x35x4x6x7, \
$CellContext`v1x2x3x4x5x67, $CellContext`v1x2x3x4x5x6x7}, {{{2, 1}, {4, 1}, {
         17, 1}, {6, 2}, {18, 2}, {4, 3}, {5, 3}, {19, 3}, {6, 4}, {20, 4}, {
         6, 5}, {21, 5}, {22, 6}, {8, 7}, {11, 7}, {14, 7}, {12, 8}, {16, 
         8}, {10, 9}, {11, 9}, {17, 9}, {12, 10}, {18, 10}, {12, 11}, {20, 
         11}, {22, 12}, {14, 13}, {15, 13}, {19, 13}, {16, 14}, {20, 14}, {16,
          15}, {21, 15}, {22, 16}, {18, 17}, {20, 17}, {22, 18}, {20, 19}, {
         21, 19}, {22, 20}, {22, 21}}, Null}, {GraphHighlight -> {
           
           DirectedEdge[$CellContext`v14x2x3x5x6x7, \
$CellContext`v14x2x3x5x67], 
           
           DirectedEdge[$CellContext`v1x2x3x4x5x6x7, \
$CellContext`v16x2x3x4x5x7], 
           
           DirectedEdge[$CellContext`v1x24x3x5x6x7, \
$CellContext`v16x24x3x5x7], 
           
           DirectedEdge[$CellContext`v1x2x3x4x5x6x7, \
$CellContext`v1x27x3x4x5x6], 
           
           DirectedEdge[$CellContext`v1x2x3x4x5x6x7, \
$CellContext`v1x24x3x5x6x7], 
           
           DirectedEdge[$CellContext`v1x24x3x5x6x7, \
$CellContext`v1x24x3x5x67], 
           
           DirectedEdge[$CellContext`v1x27x3x4x5x6, \
$CellContext`v14x27x3x5x6], 
           
           DirectedEdge[$CellContext`v14x2x3x5x6x7, \
$CellContext`v14x27x3x5x6], 
           
           DirectedEdge[$CellContext`v1x2x3x4x5x67, \
$CellContext`v14x2x3x5x67], 
           
           DirectedEdge[$CellContext`v16x2x3x4x5x7, \
$CellContext`v16x24x3x5x7], 
           
           DirectedEdge[$CellContext`v1x27x3x4x5x6, \
$CellContext`v16x27x3x4x5], 
           
           DirectedEdge[$CellContext`v1x2x3x4x5x6x7, \
$CellContext`v1x2x3x4x5x67], 
           
           DirectedEdge[$CellContext`v1x2x3x4x5x6x7, \
$CellContext`v14x2x3x5x6x7], 
           
           DirectedEdge[$CellContext`v16x2x3x4x5x7, \
$CellContext`v16x27x3x4x5], 
           
           DirectedEdge[$CellContext`v1x2x3x4x5x67, \
$CellContext`v1x24x3x5x67]}, GraphHighlightStyle -> {"Thick"}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
         ImageSize -> 800, 
         VertexLabels -> {$CellContext`v1x24x35x6x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x35x4x6x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x4x5x67 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v14x2x3x5x67 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v14x27x35x6 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x24x3x5x67 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v14x27x3x5x6 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x27x3x4x5x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x35x4x67 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x24x35x67 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v16x24x3x5x7 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v16x27x3x4x5 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
             Pi], $CellContext`v1x24x3x5x6x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x27x35x4x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v16x24x35x7 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "24", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v14x2x35x67 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
             Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v14x2x35x6x7 -> Rotate[
             Row[{"14", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v16x2x35x4x7 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v16x27x35x4 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "27", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4"}], Rational[1, 6] Pi]}, 
         VertexStyle -> {$CellContext`v16x27x3x4x5 -> 
           RGBColor[1, 0, 0], $CellContext`v14x2x35x6x7 -> 
           RGBColor[1, 0, 0], $CellContext`v14x2x3x5x67 -> 
           RGBColor[1, 0, 0], $CellContext`v14x27x3x5x6 -> 
           RGBColor[1, 0, 0], $CellContext`v1x24x3x5x67 -> 
           RGBColor[1, 0, 0], $CellContext`v16x24x3x5x7 -> 
           RGBColor[1, 0, 0], $CellContext`v1x2x35x4x67 -> 
           RGBColor[1, 0, 0], $CellContext`v1x27x35x4x6 -> 
           RGBColor[1, 0, 0], $CellContext`v16x2x35x4x7 -> 
           RGBColor[1, 0, 0], $CellContext`v1x24x35x6x7 -> 
           RGBColor[1, 0, 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
      GraphicsGroupBox[{{
         Arrowheads[0.01746207497820401], 
         Directive[
          Opacity[0.7], 
          Hue[0.6, 0.7, 0.5]], 
         ArrowBox[{
           DynamicLocation["VertexID$2", Automatic, Center], 
           DynamicLocation["VertexID$1", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$4", Automatic, Center], 
           DynamicLocation["VertexID$1", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$4", Automatic, Center], 
           DynamicLocation["VertexID$3", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$5", Automatic, Center], 
           DynamicLocation["VertexID$3", Automatic, Center]}], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         ArrowBox[{
           DynamicLocation["VertexID$6", Automatic, Center], 
           DynamicLocation["VertexID$4", Automatic, Center]}], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$6", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         ArrowBox[{
           DynamicLocation["VertexID$8", Automatic, Center], 
           DynamicLocation["VertexID$7", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$10", Automatic, Center], 
           DynamicLocation["VertexID$9", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$11", Automatic, Center], 
           DynamicLocation["VertexID$7", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$11", Automatic, Center], 
           DynamicLocation["VertexID$9", Automatic, Center]}], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$12", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$12", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         ArrowBox[{
           DynamicLocation["VertexID$12", Automatic, Center], 
           DynamicLocation["VertexID$11", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$14", Automatic, Center], 
           DynamicLocation["VertexID$7", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$14", Automatic, Center], 
           DynamicLocation["VertexID$13", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$15", Automatic, Center], 
           DynamicLocation["VertexID$13", Automatic, Center]}], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$16", Automatic, Center], 
            DynamicLocation["VertexID$8", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         ArrowBox[{
           DynamicLocation["VertexID$16", Automatic, Center], 
           DynamicLocation["VertexID$14", Automatic, Center]}], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$16", Automatic, Center], 
            DynamicLocation["VertexID$15", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         ArrowBox[{
           DynamicLocation["VertexID$17", Automatic, Center], 
           DynamicLocation["VertexID$1", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$17", Automatic, Center], 
           DynamicLocation["VertexID$9", Automatic, Center]}], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$18", Automatic, Center], 
            DynamicLocation["VertexID$2", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$18", Automatic, Center], 
            DynamicLocation["VertexID$10", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         ArrowBox[{
           DynamicLocation["VertexID$18", Automatic, Center], 
           DynamicLocation["VertexID$17", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$19", Automatic, Center], 
           DynamicLocation["VertexID$3", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$19", Automatic, Center], 
           DynamicLocation["VertexID$13", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$20", Automatic, Center], 
           DynamicLocation["VertexID$4", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$20", Automatic, Center], 
           DynamicLocation["VertexID$11", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$20", Automatic, Center], 
           DynamicLocation["VertexID$14", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$20", Automatic, Center], 
           DynamicLocation["VertexID$17", Automatic, Center]}], 
         ArrowBox[{
           DynamicLocation["VertexID$20", Automatic, Center], 
           DynamicLocation["VertexID$19", Automatic, Center]}], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$21", Automatic, Center], 
            DynamicLocation["VertexID$5", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$21", Automatic, Center], 
            DynamicLocation["VertexID$15", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         ArrowBox[{
           DynamicLocation["VertexID$21", Automatic, Center], 
           DynamicLocation["VertexID$19", Automatic, Center]}], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$22", Automatic, Center], 
            DynamicLocation["VertexID$6", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$22", Automatic, Center], 
            DynamicLocation["VertexID$12", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$22", Automatic, Center], 
            DynamicLocation["VertexID$16", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$22", Automatic, Center], 
            DynamicLocation["VertexID$18", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False], 
         ArrowBox[{
           DynamicLocation["VertexID$22", Automatic, Center], 
           DynamicLocation["VertexID$20", Automatic, Center]}], 
         StyleBox[
          ArrowBox[{
            DynamicLocation["VertexID$22", Automatic, Center], 
            DynamicLocation["VertexID$21", Automatic, Center]}], 
          Directive[
           Thickness[Large], 
           Hue[1, 1, 0.7], 
           Opacity[1]], StripOnInput -> False]}, {
         Directive[
          Hue[0.6, 0.2, 0.8], 
          EdgeForm[
           Directive[
            GrayLevel[0], 
            Opacity[0.7]]]], 
         TagBox[{
           TagBox[
            DiskBox[{0., 0.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$1"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"14\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"27\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$1"], 
         TagBox[{
           TagBox[
            StyleBox[
             DiskBox[{-1., 1.}, 0.061894273127753294`], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$2"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"14\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"27\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$2"], 
         TagBox[{
           TagBox[
            DiskBox[{1., 0.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$3"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"14\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$3"], 
         TagBox[{
           TagBox[
            StyleBox[
             DiskBox[{0., 1.}, 0.061894273127753294`], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"14\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$4"], 
         TagBox[{
           TagBox[
            StyleBox[
             DiskBox[{1., 1.}, 0.061894273127753294`], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"14\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$5"], 
         TagBox[{
           TagBox[
            DiskBox[{1., 2.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$6"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"14\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$6"], 
         TagBox[{
           TagBox[
            DiskBox[{6., 0.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$7"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"16\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$7", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$7"], 
         TagBox[{
           TagBox[
            StyleBox[
             DiskBox[{8., 1.}, 0.061894273127753294`], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$8"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"16\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$8", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$8"], 
         TagBox[{
           TagBox[
            DiskBox[{3., 0.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$9"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"16\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"27\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$9", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$9"], 
         TagBox[{
           TagBox[
            StyleBox[
             DiskBox[{3., 1.}, 0.061894273127753294`], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$10"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"16\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"27\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$10", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$10"], 
         TagBox[{
           TagBox[
            StyleBox[
             DiskBox[{5., 1.}, 0.061894273127753294`], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$11"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"16\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$11", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$11"], 
         TagBox[{
           TagBox[
            DiskBox[{5., 2.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$12"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"16\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$12", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$12"], 
         TagBox[{
           TagBox[
            DiskBox[{5., 0.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$13"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"1\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$13", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$13"], 
         TagBox[{
           TagBox[
            StyleBox[
             DiskBox[{6., 1.}, 0.061894273127753294`], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$14"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"1\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$14", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$14"], 
         TagBox[{
           TagBox[
            StyleBox[
             DiskBox[{7., 1.}, 0.061894273127753294`], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$15"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"1\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$15", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$15"], 
         TagBox[{
           TagBox[
            DiskBox[{7., 2.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$16"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"1\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$16", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$16"], 
         TagBox[{
           TagBox[
            StyleBox[
             DiskBox[{2., 1.}, 0.061894273127753294`], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$17"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"1\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"27\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$17", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$17"], 
         TagBox[{
           TagBox[
            DiskBox[{2., 2.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$18"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"1\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"27\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$18", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$18"], 
         TagBox[{
           TagBox[
            StyleBox[
             DiskBox[{4., 1.}, 0.061894273127753294`], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$19"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"1\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$19", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$19"], 
         TagBox[{
           TagBox[
            DiskBox[{3., 2.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$20"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"1\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$20", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$20"], 
         TagBox[{
           TagBox[
            DiskBox[{4., 2.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$21"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"1\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$21", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$21"], 
         TagBox[{
           TagBox[
            DiskBox[{3., 3.}, 0.061894273127753294`], "DynamicName", BoxID -> 
            "VertexID$22"], 
           InsetBox[
            FormBox[
             RotationBox[
              TemplateBox[{"\"1\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                StyleBox["\"\[Earth]\"", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
               "RowDefault"], BoxRotation -> 0.5235987755982988], 
             TraditionalForm], 
            Offset[{2, 2}, 
             DynamicLocation["VertexID$22", Automatic, {Right, Top}]], 
            ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
          BoxID -> "VertexLabelID$22"]}}], $CellContext`flag}, 
      TagBox[
       DynamicBox[GraphComputation`NetworkGraphicsBox[
        3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
        CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
         SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
        ImageSizeCache->{{14.97999999999999, 
         862.2030449567696}, {-197.84224495676978`, 129.95876340109118`}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False,
      UnsavedVariables:>{$CellContext`flag}]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->800,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXm4VMW1Ptw53X26+4xwmOd5UJmccQJEEdSIGGPECXCKaNRgREVxRBRH
hjgrRiUYHINGIooaNGpwSBxIFIwGoyYXTaJmMDG55n79O2+temvX7rP27oLr
/Z77x/WxOed0765h1bveWrVq1aqDjp0988TTjp198vHH9p34nWNnzTz5+DP7
7vft77S+lf1KJpPtl8l8ZXDfDH4vZzL8p9z6v/fPQPyDz/7v3eR3TzY/sj0/
+OCD4evXr++3adOmzCHKe3cHvqd99ymp6iTzozBk48aNa46edtzbUw476r2p
005659Cp01854KApY55//vnMQQHP3PUlPRNS1xPS9G9Kr4548IcrN33jqBPK
S+58NJMtf3/Vz1v/XfrAs+9PP2nW6d+7c1nmwMDn7viSnwutd41050R5HIOz
4YhpJ5bveGhdplYex6Om53hiUuBzS7/k50LrfSzWnaVnnXNe+dIly82D9vHy
zff8ZN2UQ7/hF1v1uaVf8nOh9ca7Awxi8MyDBXn81wcdcnjnjz76yDwxMfC5
277k50LrXS3dOUEeb//JJ5+8dcDkQ82DRXkc6gaWME/sF/jcrV/yc6H1ro6N
zjOHTT26fMPyNX7vN+53wOT6zz77zJdS1edu+5KfC6033p0LFi5e8q9zLr0+
hs3Lr79n+emzzvQxrDyX43NDNn3wx9GvbvggO/ytdz/MZGv/84t/Z+xkk7kh
sJql/+3mxJ+LqxQ6v+7wI6dDMJm8/VIrhN887MhjMWPt87PXfrPDG+/8R/0/
Pv/P/cK+gqfwtRVnXHl//kczL/lBpvDAaZfde/m1dz7J13k33/vTI1Y9/UvI
J7MwrFiIcK+Xf/Ve5z/9+bNbw77S74MPP0VLem7+418CG4/S8RV89VF/pmsB
6vFNI9yFt/8I3zVwOv/K21457Ihpo19++WU8CUktmX/zo+j50rlLHj5r6QPP
Hfr4c2+i/QDAeFNcKai4rFXEv/ztHxd/d/laI8yi+TeLvx2eFm5BmTUyx3/7
rodfQEkYJZSF4cBAo67MjVteHr6P8jjU+BvQh0AzW9JnW97kp17Y6Jc3/YdP
vsrhzzzs82gdxmrST3/+tpF+6/hCBVYde8JJb40dPwFKf/W8+ZeDy6w0ITUn
zZz8iwGDRFArQLmnlAzghJRcKyUT9aZMgX72xotvWOXG6VopFjIGJPB+WrE5
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
EJNwX19NOmKSowDiiNFmjdD0FCG7NlrSveZAxFymIEaLQs7piBGvXeaHiYip
jSGm9UW02EqOf2Xp0hsfOfnkA9evWpXZIxwoVkt6fvDBB7fNnn9bv02bNqUC
ZZd0oCRfd2+qGL5+/XpTRVYBj7xXr3ngEs90DgmEjtfNJRdcfed2b274NSmv
KnSGB0CnkFx+VehcqUCHB5h/vW4dRvWs56+6yr7XBjrHCXQeSoROow8dn2SG
bNy4cc3R0457e8phR703ddpJ7xw6dforBxw0Zczzzz/PKJYQDEnn69OKI485
HO2ejiOZiht9HKUVH8ORzQfYJlIoAUPDAyFkT+ykCq0YCKkdAiCVDa+vKsSu
lRHyIZZWLsrjTMXrzMzL0tSPqtMUcHb29bfcuekbR51QXnLno9ny91f9vLVt
Sx949v3pJ806/Xt3LsuMCYeY1YcjHvzhSpaYkSLzLPLimxcuhpANvMakw8uy
MOByydXfvS3eyFqWuPiSBUsYYBBtB9fu8cob72lA2jEQSMl9iYsnNIhAgnDq
0sDk15VSVVUcLRG5QZVumjNvcbzIvF8kWmygc4JAZpX5UfQhg/IxzrtsfPHF
DUdMO7F8x0PraqVxKMUAHF8amwgTd1MsZIR5Ja0YidpVwxU527ctooQiDl69
5ikM9sIFt66eueLHL7WZhXZLHPk8R94vOiNl59k8iD11hPfU6eLSp88/P6nM
0Z+sW5c6lDZMSGlXXGx2/B6NbAI0a87bCxYsPeuc88qXLlmeKVhE3XzPT9ZN
OVRCBsYrg2YZBTZF6nf3bau8EDm/U7Ba2vqVlyYfctiNF12/yh+Nscpg1EQC
SKoZwuJz2hFJCB9Qu2P27HOiVrivL9gwZ45fjZPzTdaotNXatrfttJXz4/I4
mBjqZB60Vf36oEMO7/zRRx95MspTvpM+Wr2a38kUleftsRIgXXtu1C83vOOX
S+mBfyuez+H5/d969FFKaL/EJptHx7/z1FOUxq2BvTtehPGYPN7+k08+eeuA
yYeaB22jMWXBmvQ797/2uVsDnzs+hoFnDpt6dPmG5Wt8KW3c74DJ9Z99JmuT
if/Ln7st8Ll4ty9YuHjJv8659PqYplx+/T3LT591pnli0v/y5661tnsrA2N+
kpkK/+ZkBQgWgZHCggpKGXE2gKTWHX7kdEixdZp1k+2bhx15LJYc4CZj9kxM
fD7rP+9Cz7+s56TePNqAqbjq83IQOYtZhJNZKzLMvxCZn/ayalkS1pBZY360
hy7hcTNCC2//Eb5gwHf+lbe9ctgR00a//PLLeBLEBZrnwhz8DbIzlG8TLQWV
deD/0LPShvYQKYh40RuzZnHux/zCq1GDyloUmXcQ7aYn+/Wz4jYOJkwi8sQW
tO+bIvYnxDTBKAHPq4494aS3xo6fAJ2/et78y0F5fi73dc+NHi0Vi3kEkwfd
QrMwh5mmyAxel1pm6xOY92CPHBDQBCt5fiX1Wak+B/3F8zAM0Oy8tBu/Epu8
KCK1uGviwvfM1+xT68aPd/jPRtYRLwpnjujU8k+SgfhZtCYzmVcilTLORmOf
RBO8WVXANgTmM7fIexgAYAsTO48s4XsVKmpWM7zZjacPYt3LR2YUcHvFm+ec
49u1ZnmJb50tTbc3IUDQripbBIpz0pYm5YghfAZJyfhnuVLzuDoPm4MuLPTM
tHpCJClQccTPmSxa68pYlNizHHsGKaJ59rIIvIUHIFgorWxVZV6UglBI5Wi/
/vSIEUhy4pkTtegTn8MLckEldv658eIbVvESFlog+JiV0wpF21xfJkSj/tpP
R46UXshzZrT5nAbWhD7bHRSIEDxuRHuedPgl+cj3VDEr18a1Q4bgN/oJbJ/p
H/IXr2iYZ7bCl21WW/Y9fGyuiff6bIx99kWQnkN7yfQfPd65s5U85hkDfjx0
VXi3JRVj5mVpN1SGkzx+okvomubmt+d0QXHOLvBWZk4r7HNwMaDPR6x6+pfU
Wmqo/12Uxfvk7Hfr/D4TkJAXpQ+5gd+uCO/31dLvn8s3gFEUgg7yGAf7zkqd
K0iZ7D2/CGcyHquFHw/9Ns4Wu4z09ZjUENNV+W59Ur/JVuggmuW77EM6v8jH
dR45kXjRPFoP8DKrSpIQpIG1aAh9H+Y1vfW1xOEXyuToTk7p5lacceX9kMcD
p112Lxx4NuoDaXqYO9je5pJlCjBAgmJCbY6sW6LvulwpEmldSBUdcyC2isQ1
z8YIoByXOOXEcJHaJiN1jMtMc3SML90tdNFMm3U9MaJJF/m4qGPmo1YxlztL
2srHX9hvP2NqCL7y4BXImK/Rr274wB2o9jMI7xrx7WMvTJzo66G/OcOQDeTd
cVnLtg0QtI2T5t2o5nvHhQvV7hD6921VCNW/RIiHF5IEKIZQwcy3o1s/mtuq
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
3Ny987597vb4UTRh40O7dvE7h74xOYnbJb83s2pVtL69pj5dB42gPtyqunPb
lR/s3rB9Ny+X37H34X1nrztv5gcrV0aLvMcUuVEBhI6EprSx+u8vzzrn/Mt/
vH07ShrMP4P37jMFXawF4brqx9asXSdF1LVhQMvKR2dmshcfGGwB7ruWC8iz
FlT2n7FmLe7F1lGe8yIuzZZbzLW7VRU33rZ39+VXbM1e/Nrgi4W3zsuXHzQv
vl0dnrT75/Hdr5uXdQ0Yv+dbvvgN81L2z9L/w1PVl+wXefJAPrh38EtMOxf+
kibWrvCqwexLXzFf2qJzp7170fP+bsOdUYGMMuXBV3l/z0BZI4zm4skqf8xS
L0bBXgfvmylp4rqKz1jm27h7sFwefeROgYsCZS4TRs3ba6FQuhRxtylOV3Ft
cGI2OzijUXi8grFejD5lRjf58l0D5c3poYC6utXMLWMG1PnI765JvNHVYErt
Avy1yxSuK7a2zT3DzVTGqzAAiAqgjlColPElU9421SW2GdEAKM/fo1DOorDk
zC2j4zJqXto9UJpkNmfwZKksm9cVtIwxRNyx594s/gJbrJsyptDS8/4HXCpk
tg==\
\>"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.7631220451497965`*^9, 3.7631221114410315`*^9}, {
   3.7631221655258975`*^9, 3.763122193531495*^9}, {3.7631222341372137`*^9, 
   3.7631222711734495`*^9}, 3.7631736562008715`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7631219955812454`*^9, 3.7631219967094316`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"ReadGrof", "[", "18", "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"EdgeList", "[", "g", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "2"}], "||", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "2"}]}], "&"}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.763123080473461*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "7"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7631230813130846`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"ReadGrof", "[", "18", "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"full", "=", 
       RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], ",", 
       RowBox[{"GraphHighlight", "\[Rule]", 
        RowBox[{"EdgeList", "[", "  ", 
         RowBox[{"Graph", "[", 
          RowBox[{
           RowBox[{"DrawNormal", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"AugmentedFormula", "[", 
                RowBox[{
                 RowBox[{"FindFullFormula", "[", 
                  RowBox[{"EdgeContract", "[", 
                   RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                 "full"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"e", ",", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"EdgeList", "[", "g", "]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "2"}], "||", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "2"}]}], 
                    "&"}]}], "]"}]}], "}"}]}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"VertexStyle", "\[Rule]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"v", "\[Rule]", "Red"}], ",", 
              RowBox[{"{", 
               RowBox[{"v", ",", 
                RowBox[{"AlmostSinks", "[", 
                 RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}]}], 
               "}"}]}], "]"}]}]}], "]"}], "\[IndentingNewLine]", "  ", 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "1600"}], "\[IndentingNewLine]", ",", 
       RowBox[{"VertexStyle", "\[Rule]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"v", "\[Rule]", "Red"}], ",", 
          RowBox[{"{", 
           RowBox[{"v", ",", 
            RowBox[{"AlmostSinks", "[", 
             RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}]}], 
           "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.763122301033926*^9, 3.763122305594469*^9}, {
  3.7631223580302534`*^9, 3.763122366077662*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`v14x28x35x67, $CellContext`v14x28x35x6x7, \
$CellContext`v14x28x37x5x6, $CellContext`v14x28x3x5x67, \
$CellContext`v14x28x3x5x6x7, $CellContext`v14x2x35x67x8, \
$CellContext`v14x2x35x68x7, $CellContext`v14x2x35x6x7x8, \
$CellContext`v14x2x37x5x68, $CellContext`v14x2x37x5x6x8, \
$CellContext`v14x2x3x5x67x8, $CellContext`v14x2x3x5x68x7, \
$CellContext`v14x2x3x5x6x7x8, $CellContext`v15x24x37x68, \
$CellContext`v15x24x37x6x8, $CellContext`v15x24x3x67x8, \
$CellContext`v15x24x3x68x7, $CellContext`v15x24x3x6x7x8, \
$CellContext`v15x28x37x4x6, $CellContext`v15x28x3x47x6, \
$CellContext`v15x28x3x4x67, $CellContext`v15x28x3x4x6x7, \
$CellContext`v15x2x37x4x68, $CellContext`v15x2x37x4x6x8, \
$CellContext`v15x2x3x47x68, $CellContext`v15x2x3x47x6x8, \
$CellContext`v15x2x3x4x67x8, $CellContext`v15x2x3x4x68x7, \
$CellContext`v15x2x3x4x6x7x8, $CellContext`v16x24x35x7x8, \
$CellContext`v16x24x37x5x8, $CellContext`v16x24x3x5x7x8, \
$CellContext`v16x28x35x47, $CellContext`v16x28x35x4x7, \
$CellContext`v16x28x37x4x5, $CellContext`v16x28x3x47x5, \
$CellContext`v16x28x3x4x5x7, $CellContext`v16x2x35x47x8, \
$CellContext`v16x2x35x4x7x8, $CellContext`v16x2x37x4x5x8, \
$CellContext`v16x2x3x47x5x8, $CellContext`v16x2x3x4x5x7x8, \
$CellContext`v1x24x35x67x8, $CellContext`v1x24x35x68x7, \
$CellContext`v1x24x35x6x7x8, $CellContext`v1x24x37x5x68, \
$CellContext`v1x24x37x5x6x8, $CellContext`v1x24x3x5x67x8, \
$CellContext`v1x24x3x5x68x7, $CellContext`v1x24x3x5x6x7x8, \
$CellContext`v1x28x35x47x6, $CellContext`v1x28x35x4x67, \
$CellContext`v1x28x35x4x6x7, $CellContext`v1x28x37x4x5x6, \
$CellContext`v1x28x3x47x5x6, $CellContext`v1x28x3x4x5x67, \
$CellContext`v1x28x3x4x5x6x7, $CellContext`v1x2x35x47x68, \
$CellContext`v1x2x35x47x6x8, $CellContext`v1x2x35x4x67x8, \
$CellContext`v1x2x35x4x68x7, $CellContext`v1x2x35x4x6x7x8, \
$CellContext`v1x2x37x4x5x68, $CellContext`v1x2x37x4x5x6x8, \
$CellContext`v1x2x3x47x5x68, $CellContext`v1x2x3x47x5x6x8, \
$CellContext`v1x2x3x4x5x67x8, $CellContext`v1x2x3x4x5x68x7, \
$CellContext`v1x2x3x4x5x6x7x8}, {CompressedData["
1:eJwVxdd1glAAAFBBUKSIoAIiKCBd6V16eQtkBBfIRpk1ycc9V/18f33g1Wr1
8+d/GEKgDZRCKIzBGYyu8XW+RhECKREKrVBsQ2yaDbYlt+2WwjoM35G7fkfh
A04RM0GRCwkoes/s+b2/Z2mBDmj2cD2EB5aRmIiR2ZjljsIxP3In8VScuPP1
XJ5lruIEXuJ7XhYGQbxIl/Eii5MoX+erLC0SkJWbdfNuyt2+B3dXiRVN1VVT
TVRDs7RMMx72I38YuqMXumtUhmU6Zm26Vme59mC7zuQA13uGz+bpvaJX+4q9
zgv8yO/9OBiCOJzDOFoiEGdJkdRJlpZpk1ZZl1X5kFfFVFTlXIKqfrfv8d3V
U901c9O1Swu6oV96MEzjMoIJzGD5BQL1MUs=
       "], Null}, {GraphHighlight -> {
         DirectedEdge[$CellContext`v15x2x3x4x68x7, \
$CellContext`v15x2x37x4x68], 
         DirectedEdge[$CellContext`v14x2x3x5x6x7x8, \
$CellContext`v14x28x3x5x6x7], 
         DirectedEdge[$CellContext`v1x2x35x47x6x8, \
$CellContext`v1x2x35x47x68], 
         DirectedEdge[$CellContext`v1x2x3x47x5x68, \
$CellContext`v15x2x3x47x68], 
         DirectedEdge[$CellContext`v1x2x3x4x5x6x7x8, \
$CellContext`v1x2x37x4x5x6x8], 
         DirectedEdge[$CellContext`v1x2x35x4x68x7, \
$CellContext`v14x2x35x68x7], 
         DirectedEdge[$CellContext`v15x24x3x6x7x8, \
$CellContext`v15x24x3x68x7], 
         DirectedEdge[$CellContext`v1x2x3x47x5x6x8, \
$CellContext`v1x2x3x47x5x68], 
         DirectedEdge[$CellContext`v1x2x37x4x5x68, \
$CellContext`v15x2x37x4x68], 
         DirectedEdge[$CellContext`v1x2x3x4x5x67x8, \
$CellContext`v14x2x3x5x67x8], 
         DirectedEdge[$CellContext`v16x2x3x4x5x7x8, \
$CellContext`v16x2x37x4x5x8], 
         DirectedEdge[$CellContext`v1x2x3x4x5x6x7x8, \
$CellContext`v1x24x3x5x6x7x8], 
         DirectedEdge[$CellContext`v1x24x35x6x7x8, \
$CellContext`v1x24x35x67x8], 
         DirectedEdge[$CellContext`v15x2x3x4x6x7x8, \
$CellContext`v15x2x3x47x6x8], 
         DirectedEdge[$CellContext`v1x2x35x4x67x8, $CellContext`v1x24x35x67x8]
         , 
         DirectedEdge[$CellContext`v1x2x37x4x5x6x8, \
$CellContext`v15x2x37x4x6x8], 
         DirectedEdge[$CellContext`v15x2x3x4x6x7x8, \
$CellContext`v15x28x3x4x6x7], 
         DirectedEdge[$CellContext`v1x2x37x4x5x6x8, \
$CellContext`v1x2x37x4x5x68], 
         DirectedEdge[$CellContext`v1x2x35x4x6x7x8, \
$CellContext`v1x28x35x4x6x7], 
         DirectedEdge[$CellContext`v1x24x3x5x6x7x8, \
$CellContext`v15x24x3x6x7x8], 
         DirectedEdge[$CellContext`v1x28x3x47x5x6, \
$CellContext`v1x28x35x47x6], 
         DirectedEdge[$CellContext`v14x28x3x5x6x7, \
$CellContext`v14x28x37x5x6], 
         DirectedEdge[$CellContext`v1x2x3x4x5x68x7, \
$CellContext`v1x2x35x4x68x7], 
         DirectedEdge[$CellContext`v16x24x3x5x7x8, \
$CellContext`v16x24x35x7x8], 
         DirectedEdge[$CellContext`v15x2x3x47x6x8, \
$CellContext`v15x28x3x47x6], 
         DirectedEdge[$CellContext`v1x2x3x4x5x6x7x8, \
$CellContext`v1x2x3x4x5x67x8], 
         DirectedEdge[$CellContext`v15x2x3x4x68x7, \
$CellContext`v15x2x3x47x68], 
         DirectedEdge[$CellContext`v14x2x3x5x68x7, \
$CellContext`v14x2x37x5x68], 
         DirectedEdge[$CellContext`v1x2x3x47x5x68, \
$CellContext`v1x2x35x47x68], 
         DirectedEdge[$CellContext`v1x2x3x4x5x6x7x8, \
$CellContext`v1x28x3x4x5x6x7], 
         DirectedEdge[$CellContext`v1x2x37x4x5x68, \
$CellContext`v1x24x37x5x68], 
         DirectedEdge[$CellContext`v1x2x3x4x5x6x7x8, \
$CellContext`v1x2x35x4x6x7x8], 
         DirectedEdge[$CellContext`v1x2x3x47x5x6x8, \
$CellContext`v15x2x3x47x6x8], 
         DirectedEdge[$CellContext`v1x2x3x4x5x6x7x8, \
$CellContext`v1x2x3x47x5x6x8], 
         DirectedEdge[$CellContext`v16x2x3x4x5x7x8, \
$CellContext`v16x24x3x5x7x8], 
         DirectedEdge[$CellContext`v14x2x35x6x7x8, \
$CellContext`v14x2x35x67x8], 
         DirectedEdge[$CellContext`v15x2x3x4x6x7x8, \
$CellContext`v15x2x3x4x68x7], 
         DirectedEdge[$CellContext`v1x24x37x5x6x8, \
$CellContext`v1x24x37x5x68], 
         DirectedEdge[$CellContext`v14x28x3x5x6x7, \
$CellContext`v14x28x35x6x7], 
         DirectedEdge[$CellContext`v1x2x37x4x5x6x8, \
$CellContext`v1x28x37x4x5x6], 
         DirectedEdge[$CellContext`v14x2x35x6x7x8, \
$CellContext`v14x28x35x6x7], 
         DirectedEdge[$CellContext`v1x28x3x4x5x6x7, \
$CellContext`v1x28x35x4x6x7], 
         DirectedEdge[$CellContext`v16x2x3x47x5x8, \
$CellContext`v16x2x35x47x8], 
         DirectedEdge[$CellContext`v1x24x3x5x68x7, \
$CellContext`v15x24x3x68x7], 
         DirectedEdge[$CellContext`v15x2x3x47x6x8, \
$CellContext`v15x2x3x47x68], 
         DirectedEdge[$CellContext`v1x2x3x4x5x68x7, \
$CellContext`v1x2x37x4x5x68], 
         DirectedEdge[$CellContext`v1x2x35x4x6x7x8, \
$CellContext`v1x2x35x4x68x7], 
         DirectedEdge[$CellContext`v15x2x37x4x6x8, \
$CellContext`v15x28x37x4x6], 
         DirectedEdge[$CellContext`v1x2x3x4x5x68x7, \
$CellContext`v15x2x3x4x68x7], 
         DirectedEdge[$CellContext`v1x2x35x4x6x7x8, \
$CellContext`v1x2x35x4x67x8], 
         DirectedEdge[$CellContext`v1x2x3x4x5x6x7x8, \
$CellContext`v14x2x3x5x6x7x8], 
         DirectedEdge[$CellContext`v1x2x35x4x6x7x8, \
$CellContext`v14x2x35x6x7x8], 
         DirectedEdge[$CellContext`v14x2x3x5x6x7x8, \
$CellContext`v14x2x35x6x7x8], 
         DirectedEdge[$CellContext`v14x2x37x5x6x8, \
$CellContext`v14x28x37x5x6], 
         DirectedEdge[$CellContext`v1x2x35x47x6x8, \
$CellContext`v1x28x35x47x6], 
         DirectedEdge[$CellContext`v1x24x3x5x6x7x8, \
$CellContext`v16x24x3x5x7x8], 
         DirectedEdge[$CellContext`v1x24x3x5x6x7x8, \
$CellContext`v1x24x37x5x6x8], 
         DirectedEdge[$CellContext`v1x28x37x4x5x6, \
$CellContext`v14x28x37x5x6], 
         DirectedEdge[$CellContext`v1x24x35x6x7x8, \
$CellContext`v16x24x35x7x8], 
         DirectedEdge[$CellContext`v14x2x3x5x6x7x8, \
$CellContext`v14x2x37x5x6x8], 
         DirectedEdge[$CellContext`v15x2x3x4x6x7x8, \
$CellContext`v15x24x3x6x7x8], 
         DirectedEdge[$CellContext`v16x2x3x4x5x7x8, \
$CellContext`v16x2x35x4x7x8], 
         DirectedEdge[$CellContext`v14x2x3x5x6x7x8, \
$CellContext`v14x2x3x5x68x7], 
         DirectedEdge[$CellContext`v1x28x37x4x5x6, \
$CellContext`v15x28x37x4x6], 
         DirectedEdge[$CellContext`v1x24x3x5x6x7x8, \
$CellContext`v1x24x35x6x7x8], 
         DirectedEdge[$CellContext`v15x28x3x4x6x7, \
$CellContext`v15x28x37x4x6], 
         DirectedEdge[$CellContext`v1x2x35x4x6x7x8, \
$CellContext`v1x24x35x6x7x8], 
         DirectedEdge[$CellContext`v1x24x3x5x6x7x8, \
$CellContext`v1x24x3x5x68x7], 
         DirectedEdge[$CellContext`v14x2x3x5x6x7x8, \
$CellContext`v14x2x3x5x67x8], 
         DirectedEdge[$CellContext`v14x2x37x5x6x8, \
$CellContext`v14x2x37x5x68], 
         DirectedEdge[$CellContext`v14x2x35x6x7x8, \
$CellContext`v14x2x35x68x7], 
         DirectedEdge[$CellContext`v1x2x3x4x5x67x8, \
$CellContext`v15x2x3x4x67x8], 
         DirectedEdge[$CellContext`v1x2x3x4x5x67x8, \
$CellContext`v1x2x35x4x67x8], 
         DirectedEdge[$CellContext`v1x28x3x4x5x6x7, \
$CellContext`v14x28x3x5x6x7], 
         DirectedEdge[$CellContext`v1x2x35x4x68x7, \
$CellContext`v1x24x35x68x7], 
         DirectedEdge[$CellContext`v15x2x37x4x6x8, \
$CellContext`v15x2x37x4x68], 
         DirectedEdge[$CellContext`v1x2x3x4x5x6x7x8, \
$CellContext`v16x2x3x4x5x7x8], 
         DirectedEdge[$CellContext`v1x2x3x47x5x6x8, \
$CellContext`v1x28x3x47x5x6], 
         DirectedEdge[$CellContext`v1x2x37x4x5x6x8, \
$CellContext`v16x2x37x4x5x8], 
         DirectedEdge[$CellContext`v15x28x3x4x6x7, \
$CellContext`v15x28x3x47x6], 
         DirectedEdge[$CellContext`v1x2x3x4x5x67x8, \
$CellContext`v1x24x3x5x67x8], 
         DirectedEdge[$CellContext`v1x2x35x4x68x7, \
$CellContext`v1x2x35x47x68], 
         DirectedEdge[$CellContext`v1x2x3x4x5x68x7, \
$CellContext`v1x24x3x5x68x7], 
         DirectedEdge[$CellContext`v1x24x35x6x7x8, \
$CellContext`v1x24x35x68x7], 
         DirectedEdge[$CellContext`v16x2x35x4x7x8, \
$CellContext`v16x24x35x7x8], 
         DirectedEdge[$CellContext`v1x24x3x5x68x7, \
$CellContext`v1x24x35x68x7], 
         DirectedEdge[$CellContext`v16x2x3x4x5x7x8, \
$CellContext`v16x2x3x47x5x8], 
         DirectedEdge[$CellContext`v1x28x3x47x5x6, \
$CellContext`v15x28x3x47x6], 
         DirectedEdge[$CellContext`v14x2x3x5x67x8, \
$CellContext`v14x2x35x67x8], 
         DirectedEdge[$CellContext`v1x2x3x47x5x6x8, \
$CellContext`v16x2x3x47x5x8], 
         DirectedEdge[$CellContext`v1x28x3x4x5x6x7, \
$CellContext`v15x28x3x4x6x7], 
         DirectedEdge[$CellContext`v14x2x3x5x68x7, \
$CellContext`v14x2x35x68x7], 
         DirectedEdge[$CellContext`v1x2x3x4x5x68x7, \
$CellContext`v14x2x3x5x68x7], 
         DirectedEdge[$CellContext`v1x28x35x4x6x7, \
$CellContext`v1x28x35x47x6], 
         DirectedEdge[$CellContext`v15x2x3x4x68x7, \
$CellContext`v15x24x3x68x7], 
         DirectedEdge[$CellContext`v1x28x35x4x6x7, \
$CellContext`v14x28x35x6x7], 
         DirectedEdge[$CellContext`v1x2x37x4x5x6x8, \
$CellContext`v14x2x37x5x6x8], 
         DirectedEdge[$CellContext`v1x28x3x4x5x6x7, \
$CellContext`v1x28x37x4x5x6], 
         DirectedEdge[$CellContext`v15x2x3x4x6x7x8, \
$CellContext`v15x2x3x4x67x8], 
         DirectedEdge[$CellContext`v1x24x3x5x68x7, \
$CellContext`v1x24x37x5x68], 
         DirectedEdge[$CellContext`v15x2x3x4x6x7x8, \
$CellContext`v15x2x37x4x6x8], 
         DirectedEdge[$CellContext`v1x2x37x4x5x68, \
$CellContext`v14x2x37x5x68], 
         DirectedEdge[$CellContext`v1x2x35x4x67x8, \
$CellContext`v14x2x35x67x8], 
         DirectedEdge[$CellContext`v1x2x35x4x6x7x8, \
$CellContext`v16x2x35x4x7x8], 
         DirectedEdge[$CellContext`v1x2x3x4x5x6x7x8, \
$CellContext`v15x2x3x4x6x7x8], 
         DirectedEdge[$CellContext`v1x2x35x47x6x8, \
$CellContext`v16x2x35x47x8], 
         DirectedEdge[$CellContext`v1x2x3x4x5x68x7, \
$CellContext`v1x2x3x47x5x68], 
         DirectedEdge[$CellContext`v1x28x3x4x5x6x7, \
$CellContext`v1x28x3x47x5x6], 
         DirectedEdge[$CellContext`v1x24x3x5x6x7x8, \
$CellContext`v1x24x3x5x67x8], 
         DirectedEdge[$CellContext`v1x2x3x47x5x6x8, \
$CellContext`v1x2x35x47x6x8], 
         DirectedEdge[$CellContext`v1x2x37x4x5x6x8, \
$CellContext`v1x24x37x5x6x8], 
         DirectedEdge[$CellContext`v1x2x3x4x5x6x7x8, \
$CellContext`v1x2x3x4x5x68x7], 
         DirectedEdge[$CellContext`v1x2x35x4x6x7x8, \
$CellContext`v1x2x35x47x6x8], 
         DirectedEdge[$CellContext`v1x24x3x5x67x8, \
$CellContext`v1x24x35x67x8], 
         DirectedEdge[$CellContext`v16x2x35x4x7x8, \
$CellContext`v16x2x35x47x8]}, GraphHighlightStyle -> {"Thick"}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       ImageSize -> 1600, 
       VertexLabels -> {$CellContext`v15x28x37x4x6 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v15x24x37x68 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v14x28x37x5x6 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x35x47x6x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x28x3x4x5x6x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v15x2x3x4x68x7 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v15x24x37x6x8 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x35x47x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v15x2x37x4x6x8 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x37x4x5x6x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v14x2x37x5x6x8 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x28x35x4x6x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x35x47x68 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v1x28x37x4x5x6 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v15x24x3x6x7x8 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v16x28x3x47x5 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x67x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v14x2x3x5x68x7 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x24x35x68x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x28x3x4x5x67 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
           Pi], $CellContext`v1x24x37x5x68 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x68x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v15x28x3x47x6 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v1x24x37x5x6x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v16x28x37x4x5 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v14x2x35x6x7x8 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v15x28x3x4x67 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x37x4x5x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v15x2x37x4x68 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v1x28x3x47x5x6 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v15x2x3x47x68 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v15x2x3x47x6x8 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x35x4x6x7x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v15x24x3x68x7 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x24x3x5x68x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v16x28x35x47 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47"}], Rational[1, 6] 
           Pi], $CellContext`v14x2x37x5x68 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v14x28x3x5x67 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x47x5x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v15x24x3x67x8 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x47x5x68 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v16x24x37x5x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x24x35x67x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x24x3x5x67x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v15x2x3x4x6x7x8 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v14x2x35x68x7 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x35x4x68x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v16x28x3x4x5x7 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v16x24x3x5x7x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x6x7x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x5x7x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v15x2x3x4x67x8 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v16x24x35x7x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x35x4x67x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x37x4x5x68 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v14x28x35x6x7 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x28x35x47x6 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v14x2x35x67x8 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x24x3x5x6x7x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x35x4x7x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v16x28x35x4x7 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v14x28x3x5x6x7 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v14x28x35x67 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
           Pi], $CellContext`v15x28x3x4x6x7 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x28x35x4x67 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "28", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x47x5x6x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x24x35x6x7x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v14x2x3x5x6x7x8 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v14x2x3x5x67x8 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] Pi]}, 
       VertexStyle -> {$CellContext`v1x28x35x4x67 -> 
         RGBColor[1, 0, 0], $CellContext`v15x2x37x4x68 -> 
         RGBColor[1, 0, 0], $CellContext`v1x24x37x5x68 -> 
         RGBColor[1, 0, 0], $CellContext`v15x24x3x68x7 -> 
         RGBColor[1, 0, 0], $CellContext`v1x28x35x47x6 -> 
         RGBColor[1, 0, 0], $CellContext`v14x28x35x6x7 -> 
         RGBColor[1, 0, 0], $CellContext`v14x28x3x5x67 -> 
         RGBColor[1, 0, 0], $CellContext`v16x28x35x4x7 -> 
         RGBColor[1, 0, 0], $CellContext`v14x2x35x67x8 -> 
         RGBColor[1, 0, 0], $CellContext`v15x24x37x6x8 -> 
         RGBColor[1, 0, 0], $CellContext`v16x28x3x47x5 -> 
         RGBColor[1, 0, 0], $CellContext`v16x2x35x47x8 -> 
         RGBColor[1, 0, 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Arrowheads[0.01081315538577356], 
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       ArrowBox[{
         DynamicLocation["VertexID$2", Automatic, Center], 
         DynamicLocation["VertexID$1", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$4", Automatic, Center], 
         DynamicLocation["VertexID$1", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$5", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$5", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$6", Automatic, Center], 
         DynamicLocation["VertexID$1", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$8", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$10", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$11", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$11", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$12", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$13", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$15", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$17", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$18", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$18", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$18", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$22", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$22", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$22", Automatic, Center], 
         DynamicLocation["VertexID$21", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$23", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$24", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$24", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$26", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$27", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$27", Automatic, Center], 
         DynamicLocation["VertexID$21", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$28", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$26", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$27", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$29", Automatic, Center], 
          DynamicLocation["VertexID$28", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$32", Automatic, Center], 
          DynamicLocation["VertexID$30", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$32", Automatic, Center], 
         DynamicLocation["VertexID$31", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$34", Automatic, Center], 
         DynamicLocation["VertexID$33", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$36", Automatic, Center], 
         DynamicLocation["VertexID$33", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$37", Automatic, Center], 
         DynamicLocation["VertexID$34", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$37", Automatic, Center], 
         DynamicLocation["VertexID$35", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$37", Automatic, Center], 
         DynamicLocation["VertexID$36", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$38", Automatic, Center], 
         DynamicLocation["VertexID$33", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$39", Automatic, Center], 
          DynamicLocation["VertexID$30", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$39", Automatic, Center], 
         DynamicLocation["VertexID$34", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$39", Automatic, Center], 
          DynamicLocation["VertexID$38", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$40", Automatic, Center], 
         DynamicLocation["VertexID$31", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$40", Automatic, Center], 
         DynamicLocation["VertexID$35", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$41", Automatic, Center], 
         DynamicLocation["VertexID$36", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$41", Automatic, Center], 
          DynamicLocation["VertexID$38", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$42", Automatic, Center], 
          DynamicLocation["VertexID$32", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$42", Automatic, Center], 
         DynamicLocation["VertexID$37", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$42", Automatic, Center], 
          DynamicLocation["VertexID$39", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$42", Automatic, Center], 
          DynamicLocation["VertexID$40", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$42", Automatic, Center], 
          DynamicLocation["VertexID$41", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$45", Automatic, Center], 
          DynamicLocation["VertexID$30", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$45", Automatic, Center], 
          DynamicLocation["VertexID$43", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$45", Automatic, Center], 
          DynamicLocation["VertexID$44", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$46", Automatic, Center], 
         DynamicLocation["VertexID$14", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$47", Automatic, Center], 
         DynamicLocation["VertexID$15", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$47", Automatic, Center], 
         DynamicLocation["VertexID$31", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$47", Automatic, Center], 
          DynamicLocation["VertexID$46", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$48", Automatic, Center], 
         DynamicLocation["VertexID$16", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$48", Automatic, Center], 
          DynamicLocation["VertexID$43", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$49", Automatic, Center], 
          DynamicLocation["VertexID$17", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$49", Automatic, Center], 
          DynamicLocation["VertexID$44", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$49", Automatic, Center], 
          DynamicLocation["VertexID$46", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$50", Automatic, Center], 
          DynamicLocation["VertexID$18", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$50", Automatic, Center], 
          DynamicLocation["VertexID$32", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$50", Automatic, Center], 
          DynamicLocation["VertexID$45", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$50", Automatic, Center], 
          DynamicLocation["VertexID$47", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$50", Automatic, Center], 
          DynamicLocation["VertexID$48", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$50", Automatic, Center], 
          DynamicLocation["VertexID$49", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$51", Automatic, Center], 
         DynamicLocation["VertexID$33", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$52", Automatic, Center], 
         DynamicLocation["VertexID$1", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$53", Automatic, Center], 
          DynamicLocation["VertexID$2", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$53", Automatic, Center], 
         DynamicLocation["VertexID$34", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$53", Automatic, Center], 
          DynamicLocation["VertexID$51", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$53", Automatic, Center], 
         DynamicLocation["VertexID$52", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$54", Automatic, Center], 
          DynamicLocation["VertexID$3", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$54", Automatic, Center], 
          DynamicLocation["VertexID$19", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$54", Automatic, Center], 
         DynamicLocation["VertexID$35", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$55", Automatic, Center], 
          DynamicLocation["VertexID$20", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$55", Automatic, Center], 
         DynamicLocation["VertexID$36", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$55", Automatic, Center], 
          DynamicLocation["VertexID$51", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$56", Automatic, Center], 
         DynamicLocation["VertexID$4", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$56", Automatic, Center], 
         DynamicLocation["VertexID$21", Automatic, Center]}], 
       ArrowBox[{
         DynamicLocation["VertexID$56", Automatic, Center], 
         DynamicLocation["VertexID$52", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$57", Automatic, Center], 
          DynamicLocation["VertexID$5", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$57", Automatic, Center], 
          DynamicLocation["VertexID$22", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$57", Automatic, Center], 
         DynamicLocation["VertexID$37", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$57", Automatic, Center], 
          DynamicLocation["VertexID$53", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$57", Automatic, Center], 
          DynamicLocation["VertexID$54", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$57", Automatic, Center], 
          DynamicLocation["VertexID$55", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$57", Automatic, Center], 
         DynamicLocation["VertexID$56", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$59", Automatic, Center], 
          DynamicLocation["VertexID$38", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$59", Automatic, Center], 
          DynamicLocation["VertexID$51", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$59", Automatic, Center], 
          DynamicLocation["VertexID$58", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$60", Automatic, Center], 
          DynamicLocation["VertexID$6", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$60", Automatic, Center], 
          DynamicLocation["VertexID$43", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$60", Automatic, Center], 
         DynamicLocation["VertexID$52", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$61", Automatic, Center], 
          DynamicLocation["VertexID$7", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$61", Automatic, Center], 
          DynamicLocation["VertexID$44", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$61", Automatic, Center], 
          DynamicLocation["VertexID$58", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$62", Automatic, Center], 
          DynamicLocation["VertexID$8", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$62", Automatic, Center], 
          DynamicLocation["VertexID$39", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$62", Automatic, Center], 
          DynamicLocation["VertexID$45", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$62", Automatic, Center], 
          DynamicLocation["VertexID$53", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$62", Automatic, Center], 
          DynamicLocation["VertexID$59", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$62", Automatic, Center], 
          DynamicLocation["VertexID$60", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$62", Automatic, Center], 
          DynamicLocation["VertexID$61", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$63", Automatic, Center], 
          DynamicLocation["VertexID$9", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$63", Automatic, Center], 
          DynamicLocation["VertexID$23", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$63", Automatic, Center], 
          DynamicLocation["VertexID$46", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$64", Automatic, Center], 
          DynamicLocation["VertexID$10", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$64", Automatic, Center], 
          DynamicLocation["VertexID$24", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$64", Automatic, Center], 
          DynamicLocation["VertexID$40", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$64", Automatic, Center], 
          DynamicLocation["VertexID$47", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$64", Automatic, Center], 
          DynamicLocation["VertexID$54", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$64", Automatic, Center], 
          DynamicLocation["VertexID$63", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$65", Automatic, Center], 
          DynamicLocation["VertexID$25", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$65", Automatic, Center], 
          DynamicLocation["VertexID$58", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$66", Automatic, Center], 
          DynamicLocation["VertexID$26", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$66", Automatic, Center], 
          DynamicLocation["VertexID$41", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$66", Automatic, Center], 
          DynamicLocation["VertexID$55", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$66", Automatic, Center], 
          DynamicLocation["VertexID$59", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$66", Automatic, Center], 
          DynamicLocation["VertexID$65", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$67", Automatic, Center], 
          DynamicLocation["VertexID$11", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$67", Automatic, Center], 
          DynamicLocation["VertexID$27", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$67", Automatic, Center], 
          DynamicLocation["VertexID$48", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       ArrowBox[{
         DynamicLocation["VertexID$67", Automatic, Center], 
         DynamicLocation["VertexID$56", Automatic, Center]}], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$67", Automatic, Center], 
          DynamicLocation["VertexID$60", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$68", Automatic, Center], 
          DynamicLocation["VertexID$12", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$68", Automatic, Center], 
          DynamicLocation["VertexID$28", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$68", Automatic, Center], 
          DynamicLocation["VertexID$49", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$68", Automatic, Center], 
          DynamicLocation["VertexID$61", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$68", Automatic, Center], 
          DynamicLocation["VertexID$63", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$68", Automatic, Center], 
          DynamicLocation["VertexID$65", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$69", Automatic, Center], 
          DynamicLocation["VertexID$13", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$69", Automatic, Center], 
          DynamicLocation["VertexID$29", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$69", Automatic, Center], 
          DynamicLocation["VertexID$42", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$69", Automatic, Center], 
          DynamicLocation["VertexID$50", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$69", Automatic, Center], 
          DynamicLocation["VertexID$57", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$69", Automatic, Center], 
          DynamicLocation["VertexID$62", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$69", Automatic, Center], 
          DynamicLocation["VertexID$64", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$69", Automatic, Center], 
          DynamicLocation["VertexID$66", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$69", Automatic, Center], 
          DynamicLocation["VertexID$67", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False], 
       StyleBox[
        ArrowBox[{
          DynamicLocation["VertexID$69", Automatic, Center], 
          DynamicLocation["VertexID$68", Automatic, Center]}], 
        Directive[
         Thickness[Large], 
         Hue[1, 1, 0.7], 
         Opacity[1]], StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[{
         TagBox[
          DiskBox[{0., 0.}, 0.10316159250864691`], "DynamicName", BoxID -> 
          "VertexID$1"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$1"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{0.4644522715081507, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$2"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$2"], 
       TagBox[{
         TagBox[
          DiskBox[{-15.535547731442193`, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$3"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$3"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{-1.535547729479731, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$4"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$4"], 
       TagBox[{
         TagBox[
          DiskBox[{-1.5355477316519455`, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$5"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$5"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{-0.5355477295163951, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$6"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$6"], 
       TagBox[{
         TagBox[
          DiskBox[{-7.535547730974656, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$7"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$7", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$7"], 
       TagBox[{
         TagBox[
          DiskBox[{0.4644522705788745, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$8"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$8", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$8"], 
       TagBox[{
         TagBox[
          DiskBox[{-17.53554773133709, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$9"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$9", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$9"], 
       TagBox[{
         TagBox[
          DiskBox[{-17.535547731813267`, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$10"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$10", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$10"], 
       TagBox[{
         TagBox[
          DiskBox[{-2.535547731696795, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$11"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$11", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$11"], 
       TagBox[{
         TagBox[
          DiskBox[{-8.53554773124307, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$12"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$12", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$12"], 
       TagBox[{
         TagBox[
          DiskBox[{-3.3278324186914574`, 3.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$13"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"14\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$13", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$13"], 
       TagBox[{
         TagBox[
          DiskBox[{-19.504096256523127`, 0.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$14"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$14", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$14"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{-20.535547731506284`, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$15"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$15", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$15"], 
       TagBox[{
         TagBox[
          DiskBox[{-11.535547730827318`, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$16"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$16", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$16"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{-13.53554773131222, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$17"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$17", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$17"], 
       TagBox[{
         TagBox[
          DiskBox[{-13.53554773172479, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$18"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$18", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$18"], 
       TagBox[{
         TagBox[
          DiskBox[{-19.535547731742298`, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$19"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$19", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$19"], 
       TagBox[{
         TagBox[
          DiskBox[{-9.535547730588348, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$20"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$20", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$20"], 
       TagBox[{
         TagBox[
          DiskBox[{-10.53554773050297, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$21"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$21", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$21"], 
       TagBox[{
         TagBox[
          DiskBox[{-11.535547731190036`, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$22"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$22", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$22"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{-21.535547731537548`, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$23"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$23", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$23"], 
       TagBox[{
         TagBox[
          DiskBox[{-20.535547731944092`, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$24"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$24", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$24"], 
       TagBox[{
         TagBox[
          DiskBox[{-12.535547731096301`, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$25"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$25", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$25"], 
       TagBox[{
         TagBox[
          DiskBox[{-9.535547731187108, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$26"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$26", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$26"], 
       TagBox[{
         TagBox[
          DiskBox[{-12.53554773150151, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$27"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$27", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$27"], 
       TagBox[{
         TagBox[
          DiskBox[{-14.535547731838989`, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$28"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$28", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$28"], 
       TagBox[{
         TagBox[
          DiskBox[{-12.535547731356047`, 3.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$29"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"15\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$29", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$29"], 
       TagBox[{
         TagBox[
          DiskBox[{-2.9681268161371577`, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$30"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$30", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$30"], 
       TagBox[{
         TagBox[
          DiskBox[{-16.535547731383133`, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$31"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$31", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$31"], 
       TagBox[{
         TagBox[
          DiskBox[{-4.535547731293718, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$32"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$32", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$32"], 
       TagBox[{
         TagBox[
          DiskBox[{4.964895607847893, 0.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$33"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$33", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$33"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{3.4644522702230347`, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$34"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$34", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$34"], 
       TagBox[{
         TagBox[
          DiskBox[{-14.535547731559461`, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$35"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$35", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$35"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{4.464452270351501, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$36"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$36", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$36"], 
       TagBox[{
         TagBox[
          DiskBox[{2.4644522699167055`, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$37"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$37", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$37"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{6.464452270471668, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$38"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$38", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$38"], 
       TagBox[{
         TagBox[
          DiskBox[{5.464452270599338, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$39"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$39", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$39"], 
       TagBox[{
         TagBox[
          DiskBox[{-15.535547731676985`, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$40"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$40", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$40"], 
       TagBox[{
         TagBox[
          DiskBox[{6.464452270680908, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$41"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$41", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$41"], 
       TagBox[{
         TagBox[
          DiskBox[{0.0021339298060070178`, 3.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$42"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"16\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$42", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$42"], 
       TagBox[{
         TagBox[
          DiskBox[{-3.9681268160679792`, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$43"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$43", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$43"], 
       TagBox[{
         TagBox[
          DiskBox[{-8.535547730865545, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$44"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$44", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$44"], 
       TagBox[{
         TagBox[
          DiskBox[{-3.535547731625087, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$45"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$45", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$45"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{-18.535547731618834`, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$46"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$46", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$46"], 
       TagBox[{
         TagBox[
          DiskBox[{-18.53554773162182, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$47"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$47", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$47"], 
       TagBox[{
         TagBox[
          DiskBox[{-5.53554773175108, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$48"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$48", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$48"], 
       TagBox[{
         TagBox[
          DiskBox[{-10.535547731207203`, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$49"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$49", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$49"], 
       TagBox[{
         TagBox[
          DiskBox[{-5.53554773156182, 3.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$50"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$50", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$50"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{5.464452270339734, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$51"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$51", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$51"], 
       TagBox[{
         TagBox[
          StyleBox[
           DiskBox[{1.4644522718763824`, 1.}, 0.10316159250864691`], 
           RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
          "VertexID$52"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$52", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$52"], 
       TagBox[{
         TagBox[
          DiskBox[{3.46445227031154, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$53"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$53", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$53"], 
       TagBox[{
         TagBox[
          DiskBox[{-16.535547731560968`, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$54"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$54", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$54"], 
       TagBox[{
         TagBox[
          DiskBox[{4.4644522703127905`, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$55"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$55", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$55"], 
       TagBox[{
         TagBox[
          DiskBox[{-0.5355477316394968, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$56"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$56", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$56"], 
       TagBox[{
         TagBox[
          DiskBox[{-1.1213032411627637`, 3.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$57"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$57", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$57"], 
       TagBox[{
         TagBox[
          DiskBox[{-6.5355477308117145`, 1.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$58"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$58", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$58"], 
       TagBox[{
         TagBox[
          DiskBox[{7.464452271007872, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$59"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$59", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$59"], 
       TagBox[{
         TagBox[
          DiskBox[{1.4644522697465163`, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$60"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$60", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$60"], 
       TagBox[{
         TagBox[
          DiskBox[{-7.535547731474139, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$61"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$61", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$61"], 
       TagBox[{
         TagBox[
          DiskBox[{1.1317037192412727`, 3.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$62"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$62", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$62"], 
       TagBox[{
         TagBox[
          DiskBox[{-19.53554773182057, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$63"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$63", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$63"], 
       TagBox[{
         TagBox[
          DiskBox[{-17.535547731663797`, 3.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$64"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$64", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$64"], 
       TagBox[{
         TagBox[
          DiskBox[{-6.535547731243099, 2.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$65"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$65", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$65"], 
       TagBox[{
         TagBox[
          DiskBox[{2.742523472773371, 3.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$66"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$66", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$66"], 
       TagBox[{
         TagBox[
          DiskBox[{-2.327832418935259, 3.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$67"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$67", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$67"], 
       TagBox[{
         TagBox[
          DiskBox[{-8.535547731277035, 3.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$68"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"68\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$68", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$68"], 
       TagBox[{
         TagBox[
          DiskBox[{-2.919618023572582, 4.}, 0.10316159250864691`], 
          "DynamicName", BoxID -> "VertexID$69"], 
         InsetBox[
          FormBox[
           RotationBox[
            TemplateBox[{"\"1\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
              StyleBox["\"\[Earth]\"", 
               RGBColor[0, 
                Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
             "RowDefault"], BoxRotation -> 0.5235987755982988], 
           TraditionalForm], 
          Offset[{2, 2}, 
           DynamicLocation["VertexID$69", Automatic, {Right, Top}]], 
          ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
        BoxID -> "VertexLabelID$69"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{55.72002593985391, 
       2870.1717586945615`}, {-262.0015848965913, 201.99483180727162`}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{Automatic, 517.4460567095313}]], "Output",
 CellChangeTimes->{
  3.7631223110899725`*^9, {3.7631223622271657`*^9, 
   3.763122370598981*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
wttrHut3T8JWUfw7vMaFsZWRDE6hxJ7IyI3ddeqlv91X4/xXH+7Qd+YTEx4r
3Lhtb5KKlbXyI9tf1emjZ846z9qt6EzNtSoaIEtv7RbsWuaRY1eKnrt1/PIB
j699DTHnR016zfRWil7occ+SWp9/+V1jTR21XoPiRWuv01xNCbXS7oQyjgIy
EsqQ7VlQiZ9dZJN7rL4MVz0mqBWQmlt57ZIn2O03Am7bsqtJEyxgvPujiRNx
ajNwQeKx4u1OnfgkIu6lMh1RXCJ7TiqE9/rnyzxR1EoIG6E4L+jj/YeADpgF
YcxCjmmRbscZBPjrgIMzZx7TvkIP/a5hAy2Q4wIQd1zmaM9TTYh0LIBVq8NP
cNCYeMGxh4Rd9aF3/LghKwv7QxjRQcg8EAHa6GwtJsqlkRtQlliT4jjjIROg
IW/wyvqm1/xpZtPr//xgy5uRO9hR1Gc8dwVCq6RrpxJK25QKdkJMpQDThvST
UEi1tdel4nnjcGHlYZ2k7/O6ViATL+fEM5TJscpi5TT3qdKHq2GRFAaHeYJY
VY7fFFi7XOZpxaL0I3ki0J/K16fvrOR+nqNcMk7fp9qpjKyN8reJTHivepbe
YR1CkOeIV3J8eiZGXKM6DfISP4s4yVvGOVZn5ET9uEpDlNck8VjdIPeqmE6m
VTOOakdQybNxxLaHC4PMheKOFTIeaOtQ+fQqDNv06xdeEOqa+gY5bAHX4d9z
E8cDe4svuPhfz4XC/trw7EwdxQP4nP3Tz7+CfnDc6Uh1LgCZmQhLn0m8HNsa
PNfCOdpzC+/l1gfhl2mcmCGCQWVmBrPTXuXSiFIcgchEiFv1pRw2EAz43mM+
bIvvyRkJLIoK3zFULshiQGEohy1HC6pKIpzsEGja+RgBf81vPj/CduyYzpoj
heZowxYh2vV/eeopc2s+qyufvDZrMah06kOoiXFVAY6eLDZEEUEgUMD1SePu
07bfNGwRSmeIIAKOEGL54IlPuzb8lNwrEkpKXQuuSQMrShcmyvLFFxckUIFg
ReSOHoQhb/7XTZuWvX3jjbw5naiixl+LwdXmCkGHjcjQzoAXpRASFXGe5RAe
8sux0GzyqyPHH9h0Rv4/14bC7yy5qg1tERP5bWytBu8ObT/guXF3z5w0Zf5G
LvNIE2FtpDp54vzNOzoPmR8I7r4ujv4gN2eJoEyGZkG46h7OEmupWry8+wDk
fcuI2yd6w4dke53K7HHI3JMU1oNkx9HsLQopF+17/3NhYNLcrWbP3H7fymR7
tVymHSvlgBk7gXgqQEFWiEIUTzvuACJsBRDx0USqOU+LkWc7dwGnco9CmoeU
wZK2M2I6lJxgwVhVS40VQmDPrbuuugrNXKgghLVvzolr8vVLbKuSprdVQfuX
zCHJUd09YCXWYJ2TSD49CZKovg9/FbEeafXj3oj04WMLGAAvtlMX369T68Ct
TfmpWZmlFv9qWyaqmWaXgpkesuoS5HSaS+BIAUS8pzbcfPjxx3VTne3YDNAm
1FPFDrLKMxdWoX9eFWBdBy5QbwxMEDhecHiGNlceZSHkQZmr0/Q0FX/nOFIl
ZNbYYSvFk7ITwHkOv5LusxLKeQ7mMko8KpmZfmz63TyvjVWZtVF3nh1GCfXG
rVVmLj3H4Z+P1aZVrdKhfJm1xogECCkn/FVsyVzBEaPQO2AcvPCV6oIQ63JP
lHD8yuv3qmdzHXWHvONwL0hXWlV9ehZ8o9wyWcsMquU4hrKxyj7kQkJaBW/h
U4aDD42Nr8Aj4j3LzQAgbKpvcT2uH8PQk98dMsTco8uKfC+SL2b3fcjjT7+c
sDoQJZ3wuEzceCOCUQue2Mwks3bjJt8foHPi29xcWXnVuf59/4ELVmyyfH/j
dEX1DoLXWuMZv8w4IJAgEKiiQzFlwQlkq6hCr2UFK/SXzLOn5x09evScv+zd
mygY8BMLVHTEAkb9WJmA8raTJxiKG76PHDliK2LfUUEF7Yp40rii80alF+SS
KbGfE9NpU9ehs0M6SwBSCpc5olnBax1SixSCDlEmzCzc26OHajeLaBFVRCO1
W/OQwRf5Wv2o6IFS1nNHP7z2luUb3mIViWiC/NUQfFgOD6bf92ix7NEJmT06
SFLR1yhi8nIPKDRXMBHVZEv/mchLx7pg8iq/FNF6y8uNnBEQfh/tqVpKW9RL
2xs1+nDt6adTcXvPy/XrM8o5BzvooNybOqElijoijWxH4FpTz1BBbpzP4BFf
tURb8orcUIfFV9yR5hZhOfGIt/7R7JW3P0axMk0GIdxFhCse8+FnhllNwnXo
6h7T8BfEhuv7jFn2lnhSPJ9hBjG4pjzx0JKOn696hjsiSj2NId3BjKR9eKmr
abuskIWE8Z7ZK18e9cjy7eKT3M44FwLLfJXyVpOZDpioDmMdRpXt8KWkKhK5
azZKUCrcYxhXioqta6YW6nzYv8NdfLpCII12KJ1aqZbaoTTqcLukbpIF18ft
DhiQQuXUaBcKM8TBlBIcevi3jbm5JIEhVdOIO85ImdOCGM7L8Ej4NsEqF7WW
4BkZzkB9J13lUiLCOeU4FISkTKZJ7ONtqnoUgyQPdlRQs1YlUkV1CLz04P5h
w3jLAdY+VqBG202ZmU9MM83BY1W1IeclSZwn5OWwwlpS/fa3dWHVbCvCW4nE
se/Ltf9Ch+U69FdP6Ubx1sSocqKWsXdC655IVXw257xGWE/3w/JKJ5pHG7y/
5pwL8Lcdiwu6WkcbRPQ7VCcNbVQutj3mNn3yNq0IJ9uR3TlZo+air15/3WQQ
YPy+9++5J6GL6Crj031WObS8g7nYLYuTQ+HLlaaNaKdGjZemmdqP3bEioGyN
K9UgTJoJaobvw99cCpiGtHKJ2ToYUZ7PGK3BVAI8ogNRZdjpHRwEiSWT6Q42
StdTUQFZtg7m1FT8emY0ZQ76cAc8a9ngDmbI0AOpyK6co/JS4TjcrYoOBKcn
dmyt3EYtzXtqTQepeWuVFu0o4lW6URvHkl002yv2XSZ+BtrJUVR3ztj4daqy
F+9uq1v3wIu1ZaN9liNElLFUkDlGUJlWqCfquvplaTQaqxJ/zTPKLkVh2b67
odmtXxVecwfabvZ26zkBTTib+o5YxNwFp1JxFyGJ93w3nSerTOnZ3/CTU2vn
T7p3+uO+aitBrWi8OTQrvvKchZIsxiJ9Ya0OiWr5VjxAe7djSKYt7uf1ZoPi
/02jjRfo8PrjrsFkO9gz0+FdSLEImWKB56mM0W/OnDmrC6i4dayLSmgsKzDJ
dORPamoVs71j/wnfV6pWw1RF6gQuo1btNwILfrT1tNO8eHhpZ6NG6juXSFbR
qv9QzZo1hQzScW3WQZ2ZSq+uWnbXpGfEp6gji0BdCGWxd6HYG+HFps1b3fHI
o4sgRhdp51ZVd40TYVWGgtQlS5lElPxuQlFREXjRMF1+1qJgBQal5v9eXK4c
uumNoEa8Ccp09AfjxklTSFbRirL4/Bkzt0/8ULA6/h/zIC/oK0MhDjkskdy4
L4xtVl/sWrR41YAHViI0wtarFDZFzLDrnba3z5k4eeELumwUAWcvmDX+0VWP
DhwH3+jPqy664pO1tfMlTTI+2VKjZCAFvzXOY+A14f1RQcsKmOh4u3gQt3Te
PTPXiOZm2vzPOqJO6pHsVAMnQsae+vH/9pAo1NVaTinnTIeHRqoEU2G6Qh9Q
3LQ8jnGl5epqnL/4bLtCOp1BxkPGCXTx77BALCL2ueRT6eJ3LVg8chp0u8g+
UOQwavL48T9el5Vlcr657b3ZN6bS/fSs1ftM5UnnIXEkwSbrQuuSUAFjwJz8
JH6GTS2FSyw+oDVxHDXxJdz41MIm49DqlMWeG/NM9Sa/O/5i0Twtf8rjri5n
5rODTGqJdLPPmNGNv0AjQDOcqI2B4n2D0iqkoN1oLXc/fnFYPHffLbdgvY9x
lhWLZyFvcU/4AhMrNdlDfmetAKGTt2DvzM3pSzm4O93cpx633rfvnns+Pf2U
U7q+8eSK1bePf5KknPeaN/0mK3jK1A6swgrxOSNNBjbaJ/xw6+mnJ/QJjX51
1Q+UmTDIEmkTk83SHVhzbR3raqWhDRlKjZ/oPit+ytQGWLmZBKKpUFUw4RFf
o0CnrEKmTgerZYGj5X3WYhOXPiYXkGMsXNB+UYe+zdAuhtdfwmflL1Xy6VfR
rM2oEe0v3L9lep8ZejZqgWOWo0xGr7Yat/x6VRUcZj0zsUsAQis+ruXQ14au
92Lbq6dp+wCL0DHqLkjXYqMyNU+InxxU8WEqCKhiM9SLv9pUpYoCmkbZt71e
PQAu1I10zcIm/nGJEFe6Xplz+vXrN2Tq5MmJCldi/KmVakWEPYx6Y6s9hf2m
3/3EiheFXqipdYKnh8zuB6T1QXDxYZsNo5Xtt3et3c4de557uWMnlwfGgasP
D8zYb0gta6HiulWYl1QNm1TFJbgj0yHDUs0cfyyVpjUb7wGDxlZiUGsVHnUy
sALEheG4OGCaWpEOP4ZwyliaMHXCvE3wBNkrtM4ZI1mB8vu0dt0L3mjReTBr
JisBV0lb0KThFO0xzsni/10bDP68IT2dCGUtwBUpyzTEE2dpHbVw+LTnDPso
tnlAvxpak/g7qx+XUj8JwqUVve+894Ozz7/s2A53y9eTVt32NBNHdTRs+rQc
IrOytFx2XttnZgaJ67G82Gydcx0mzh0s5mpXiqN+WR+NetXM5PeGDFGg1tQ8
psxJrp4mR/jcFuJTWNO9woo7QaKRs5e/tKnnyCeIcihIoTUOXzE7WgYw2WFv
1PVVtG7+0zNWj5uKeOmD5edf9uWqU07jytNvl0fTv+1drfrmFTf0nLO26L57
101fKJ+j5Tvm+XqMCwCwvu+YpSbb8amZ5neQB4/36CtyWtRvYNET3Xr2BT6M
KAlig3On2YRZtUPSEOz3sJvkCiHkkCHezRm7ccHYUEuTOMUxHjj9Mr/SyQ8t
nbKIlXVKW5zzhtFHjx4FD496bfx4ZkLoMKXbjN5K5QQSE2IjbmwhbjTLlQie
zK3TrR4SYrxdcaPbstjeVaJsIye1bL/1l2vXPra3T59jEvl0h88kwT3+kOkR
ssdxlJdo9XqhWjWMK9yJYKKGO6pBYTHf+sevuebImdWqqQq48KFp+wrEjYqI
1Ohlbfwa1KysAn5yuze+1qIFz4xFk7fztXYKNypZ+/Pz84XF664tktqjk1SF
efYTYTna6tALW1GCwrIalKA2b7mmrbJGYYK+d3zy7YhKWAsY94++v/7qW7Av
6ic3diiCh7S7e9/JyD5v6TNsPt7Gm3WrBBNV1ra/euWVzkQUHWmHLZfAqPjE
mw4zB5XqBFbUPiSY9/AL1avj+QztmCknuWISBjSqasrmuLYXCzpkjZi31GiK
SAf9sGrgAyvNtJO1tp2mxFUX7pdzhTTGeduqSJOuM1kLR0yTS30omrKW6rh0
NMmoWRXCJVrlCEWFy+P/sV9rpKC948Jgzbj30WIRLlU24Xx0Q0LfiqZubkUg
qmUOJW7sX6rqoJzEi5smZSMr2soeDIUrQytZrGgz+ctyubjEaXqY2ToSUBqF
xkPED49AeAE1Eit3a4taaaNC3BSICwwmZx0pbtmyJYI6BolFhN6It6mRloif
1P4X4lL36pHxcLKJPspiRfwd8Y+xhvHrHsXTcDw9AWZYNGUb1lSInDx7PGxG
+4pJKECEesJvTDHJ+tkACN4rpsR6nutfw7c/sui9Hl3GfN653RBomX9dd1GX
sAjLMmJDa10ilNDN57Q9MLVR+80vt7zWu+CIwy5rGVGmI9jhbcAIQouwFJB0
X7Ro0bbGjRsDVNxHnd6u6G37vT3v+WVVttogcvBL859UlbHMhN5fiVDN2PBB
LS8i6Lnf12CVsFlWwiVmmG5THTOA7adup7yj/zg6oWhd0f78CflH80bkrS5Y
WNCyeH+x7B7yE8yF/7E+I4PLELje237mmczQVsqKDiWE1jOhFAjwQAmTP3ZM
PEzTcqYmK4ZxR3J/erHeOQeePfv8P89r3HbhtlsHbZ3Yowg2rfj24fO5uAW1
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
qkT8OZ0cE8qB4jIFEdRta+PdDXCUZqBGT1d9uXo10gKfPnzttcdfLirCkvPw
FYSJLTuQEQzE+RY8k8zgIvipGtJCpBwajp8P+qTjGUZuUuJcRgDk1lxAbvpa
SX61IepaG2Ji9TCSULhkRn6R6fn7cWyzC/83pH7XGI3qTg69aMibNwyefVrt
HVOFVzxbRnLVbHXGb73hUK9e3Ckn7PTGMdZQxzVWkLPm/toxeoZg2I3ofh9b
tz1QXHkjyVeUScnFYWLz7nU9r/5/xH0HnFXF9f/Lvrq90JZepEsXEBEXBAVs
oHREQQQEQQURBQuKYKyo2IIo2COoYAMFFRVURFHEEks0scRuYuw1Mft/35k5
M2fum3vffbvr75/P50V2976ZuTNnzvmeft+FZ6zAjaOG2h7YpiSOlQci239i
UE/TLYHAshbFkTiJozbfXLxg0IaOeh7QlsKl376jqgqduPAb+OvB6WgJ6t4K
sUBU1MiNzfq62WtLNzZrq1lor5DYrNiNvqTzJ7Lc/dcyBzYrcWOz1mEEeFCV
m+zYrDgAm7kKb7d2YzNWg0RjMxVJ0+2bV17Z8tywYaJBsCJd4DJuFwmy4ZW4
T0sVm6whNEs4YFgbx+9a+kMzEmxYEH7G32AW08Kta4AgLg4+WVepjya5QTNf
a56rN54qzFprK97+Dg6mzM3osvLu461bSxqU/4/QLq2M9s8dmzkb8XF6I3J7
yCa3ng4odpKbV7AGYLkH9okLVxpABk3rDo+VudKHcwFjrl6zZ5hLxsEG4aN9
zeb4ZPUmEaqHr65/cfRo1GgmTi59TFIK8KKEqpx8nOeF4YOUEUpbDd+UJUoI
TdwOpQHzbGGc16F1jNoSDkhTEgK19XagNtVJ0g+1oZwCNWJCVXp4ZWGLwwe2
uXPXr7onmpk+hE+Nuj8r623fV9/66JqlKx8Sr9bbjdbauKWfSvDwlsnm9WVw
t8BdcInxG9SNULP4MkwllngQXo5t+LI7c92gzaWZlhhpeMuu46d/80B5Paf9
zQextXEgNmWg9xaSsUpnF8lXAFdFPJ9VQaanQUhauGWFZ3ViU/Op/bKPm9+2
cUv7Npqd9g6JzYrc9CedKZHL3X8tdWCzYjc2axtMkN0DsFlhSGxWHoDNXE3y
Wrqx2b4ObBZQ8ReB1de+OmdOUGhUVQBe86neUxEGr6X88BrRravSuoyXKcaE
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
0d//Zf/98Vkc3LEg6QTPsoo4vXzZtn32e3TeLzBtPJzy1cjDmjiS+P3hwfJy
EBNpQXFlVawWysRlnB3X55iy42W8DFtldXawsW1J/wz8EbBgMRg48zBwONfN
t1Xn74RCjQfNS0kJUFqOna8ot3/M25dcwpWF9ylylE7a4+24tPXRynnO4XSO
qjXyZDGnsT1VyoA6oI6I+M3g1975eKDb/fgm4jM5n/Dc0K/Ffnv1if79kcxj
YS/xbb42owTIEIBBmtL81NEhWh3a9NC/MaYS39JdM0xzPftuRi64pQUlsGjs
qhvOvmrNhXtOf/HWbXb6YHHPXmrh5yWLJUjI2+GJZj9SAeFVxI/ReBG4OJpv
l9grRicvJSq8SwBIDARlSYwSZYsbdJ2oFd/Zk6gNyU1ijow5jgs9VcSAiDIB
q5F+NRCHfPmJgQORcwiCQ33D0DGiycEoahhBJ82+RtO+LQ5uaVNL8sXGDiPj
x0hAF++ivJBrcZjHHIiYCVKfzS69TiGSoxIikvp4RNLkRyQdPIikQwwiaUyI
SF5q50H0qwSIpNGPSDp4jo5mPyLZOCEiaVoviOTn7UQke0mALJ+7Vw4IcuHL
Tta6GF8wIUSJtG0xEKVDDERpTABRurRzZXTND5Xgs6X5xB9XtlOKJkOYErjC
xB04Olb9ccQI2FEw983YHl1w8eQJahgnRHAH75ovc5x2NXdvY/IUO9K+N7a5
JNk08SZIfqhWn9oRNGtfuXJtD66kSuEsBmtBMkK+chd9sAnLLVzSIgf7bc9O
mRLQJRuc26f3Lq4P49ffXQbLF4Xj0bpbFqKIrUdAAqrOKHBGymdArN2NJtIk
TseFuHj1+PGAoYgcMMkebZx00toFVyy85PjzzSP1zncA3OYPcU4V00zH2pzE
WRYf3PHjpY8jSfWre664DeEWPBUOZGT6TOilJN+xjVa0Y6D+sGbPPW96bupU
/N+YngJMft3QefQXTz6JMB8GAMLu2BdSrV9c26wiP/aB+wfCwX1LWWU0qxU5
WawkSRg20/JFV31eSzELjtK0w1g++ad56T8eqqpieR8PJayyyaw17+tO4gJd
gciEdInYtiSyAnpcNxclxH3SAsMS4bnMTu7vxgfv0Zpe0d5XVW4l4ubCQdgy
nSQ1xE+8+0aFII5NiCDq4hFEox9BNHkQRFMMgmhIiCDebuc5MTcBgmjwI4gm
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", "=", 
       RowBox[{"ReadGrof", "[", "k", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"VertexDegree", "[", "g", "]"}], "]"}], "\[Equal]", "5"}], "&&", 
        RowBox[{
         RowBox[{"ChromaticPolynomial", "[", 
          RowBox[{"g", ",", "4"}], "]"}], "<", "100"}]}], ",", 
       RowBox[{"Labeled", "[", 
        RowBox[{
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", 
           RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
         "k"}], "]"}], ",", "0"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "50"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7631224159026113`*^9, 3.763122467090042*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 5, 6, 4}, {
            Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {2, 5}, {3, 6}, {3,
              4}, {3, 5}, {6, 4}, {6, 5}, {4, 5}}}, {
            GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {"Name"}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             
             ArrowBox[{{2.077635572424192, 0.14538312809263582`}, {
              1.622121700519018, 0.9989210826630444}}, 
              0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.077635572424192, 0.14538312809263582`}, {
              1.0379005300359831`, 0.}}, 0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.077635572424192, 0.14538312809263582`}, {
              1.0388715748066573`, 0.5716078363709886}}, 
              0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.622121700519018, 0.9989210826630444}, {
              1.0379005300359831`, 0.}}, 0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.622121700519018, 0.9989210826630444}, {
              1.0388715748066573`, 0.5716078363709886}}, 
              0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.622121700519018, 0.9989210826630444}, {
              0.454770110930767, 0.9978125230323187}}, 
              0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0379005300359831`, 0.}, {1.0388715748066573`, 
              0.5716078363709886}}, 0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0379005300359831`, 0.}, {0.454770110930767, 
              0.9978125230323187}}, 0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0379005300359831`, 0.}, {0., 0.14605821591057733`}},
               0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0388715748066573`, 0.5716078363709886}, {
              0.454770110930767, 0.9978125230323187}}, 
              0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0388715748066573`, 0.5716078363709886}, {0., 
              0.14605821591057733`}}, 0.023238294114515057`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.454770110930767, 0.9978125230323187}, {0., 
              0.14605821591057733`}}, 0.023238294114515057`]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             
             DiskBox[{2.077635572424192, 0.14538312809263582`}, 
              0.023238294114515057`], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {2.100873866538707, 0.16862142220715087`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.622121700519018, 0.9989210826630444}, 
              0.023238294114515057`], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {1.645359994633533, 1.0221593767775594`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{1.0379005300359831`, 0.}, 0.023238294114515057`], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.0611388241504982`, 0.023238294114515057`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.0388715748066573`, 0.5716078363709886}, 
              0.023238294114515057`], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.0621098689211723`, 0.5948461304855036}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.454770110930767, 0.9978125230323187}, 
              0.023238294114515057`], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {0.4780084050452821, 1.0210508171468338`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0., 0.14605821591057733`}, 0.023238294114515057`], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {0.023238294114515057`, 0.16929651002509238`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {FrameTicks -> None, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", "0", ",", "0", ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 5, 7, 6, 4}, {
            Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {2, 5}, {3,
              7}, {3, 4}, {3, 6}, {7, 4}, {7, 6}, {4, 6}, {4, 5}, {6, 5}}}, {
            GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {"Name"}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.6320692897834503}, {0.028762369118840447`, 
              1.2659624841067054`}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.6320692897834503}, {1.0263164711717216`, 
              1.213151987515831}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.6320692897834503}, {1.0276769779622779`, 
              0.05260577982625947}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.6320692897834503}, {0.02994323832954815, 0.}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.028762369118840447`, 1.2659624841067054`}, {
              1.0263164711717216`, 1.213151987515831}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.028762369118840447`, 1.2659624841067054`}, {
              0.02994323832954815, 0.}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.028762369118840447`, 1.2659624841067054`}, {
              0.9152503691928224, 0.6328292637128081}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0263164711717216`, 1.213151987515831}, {
              1.0276769779622779`, 0.05260577982625947}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0263164711717216`, 1.213151987515831}, {
              0.9152503691928224, 0.6328292637128081}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0263164711717216`, 1.213151987515831}, {
              1.9414581703850644`, 0.6337815739342127}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0276769779622779`, 0.05260577982625947}, {
              0.02994323832954815, 0.}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0276769779622779`, 0.05260577982625947}, {
              0.9152503691928224, 0.6328292637128081}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0276769779622779`, 0.05260577982625947}, {
              1.9414581703850644`, 0.6337815739342127}}, 
              0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.02994323832954815, 0.}, {0.9152503691928224, 
              0.6328292637128081}}, 0.02213468346661418]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.9152503691928224, 0.6328292637128081}, {
              1.9414581703850644`, 0.6337815739342127}}, 
              0.02213468346661418]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             DiskBox[{0., 0.6320692897834503}, 0.02213468346661418], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {0.02213468346661418, 0.6542039732500645}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.028762369118840447`, 1.2659624841067054`}, 
              0.02213468346661418], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {0.05089705258545463, 1.2880971675733197`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.0263164711717216`, 1.213151987515831}, 
              0.02213468346661418], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.048451154638336, 1.235286670982445}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.0276769779622779`, 0.05260577982625947}, 
              0.02213468346661418], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.0498116614288922`, 0.07474046329287365}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.02994323832954815, 0.}, 0.02213468346661418], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {0.05207792179616233, 0.02213468346661418}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.9152503691928224, 0.6328292637128081}, 
              0.02213468346661418], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {0.9373850526594366, 0.6549639471794223}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.9414581703850644`, 0.6337815739342127}, 
              0.02213468346661418], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {1.9635928538516785`, 0.6559162574008269}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {FrameTicks -> None, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 7, 8, 5, 6, 4}, {
            Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {2, 7}, {2,
              4}, {3, 8}, {3, 7}, {3, 5}, {8, 6}, {8, 7}, {8, 5}, {6, 7}, {6, 
             4}, {6, 5}, {4, 5}}}, {
            GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {"Name"}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             
             ArrowBox[{{1.917523569545854, 0.17239483064470007`}, {
              1.1892313475945586`, 0.9666499323778386}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.917523569545854, 0.17239483064470007`}, {
              0.7016324838274254, 0.}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.917523569545854, 0.17239483064470007`}, {
              1.9167768299883257`, 1.1582331710954001`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.917523569545854, 0.17239483064470007`}, {
              1.1887618932576218`, 0.36371412587321383`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.1892313475945586`, 0.9666499323778386}, {
              0.7016324838274254, 0.}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.1892313475945586`, 0.9666499323778386}, {
              1.9167768299883257`, 1.1582331710954001`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.1892313475945586`, 0.9666499323778386}, {
              0.7010655272440445, 1.3304714595560723`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             ArrowBox[{{1.1892313475945586`, 0.9666499323778386}, {0., 
              1.0012841390641225`}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.7016324838274254, 0.}, {1.1887618932576218`, 
              0.36371412587321383`}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.7016324838274254, 0.}, {0., 1.0012841390641225`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.7016324838274254, 0.}, {0.0002578959133234804, 
              0.32859388220781915`}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.9167768299883257`, 1.1582331710954001`}, {
              1.1887618932576218`, 0.36371412587321383`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.9167768299883257`, 1.1582331710954001`}, {
              0.7010655272440445, 1.3304714595560723`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.1887618932576218`, 0.36371412587321383`}, {
              0.7010655272440445, 1.3304714595560723`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.1887618932576218`, 0.36371412587321383`}, {
              0.0002578959133234804, 0.32859388220781915`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.7010655272440445, 1.3304714595560723`}, {0., 
              1.0012841390641225`}}, 0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.7010655272440445, 1.3304714595560723`}, {
              0.0002578959133234804, 0.32859388220781915`}}, 
              0.021938723761557366`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 1.0012841390641225`}, {0.0002578959133234804, 
              0.32859388220781915`}}, 0.021938723761557366`]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             
             DiskBox[{1.917523569545854, 0.17239483064470007`}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {1.9394622933074113`, 0.19433355440625744`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.1892313475945586`, 0.9666499323778386}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {1.211170071356116, 0.988588656139396}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0.7016324838274254, 0.}, 0.021938723761557366`], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {0.7235712075889827, 0.021938723761557366`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.9167768299883257`, 1.1582331710954001`}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {1.938715553749883, 1.1801718948569575`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.1887618932576218`, 0.36371412587321383`}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["8", TraditionalForm], 
              Offset[{2, 2}, {1.2107006170191792`, 0.3856528496347712}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.7010655272440445, 1.3304714595560723`}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {0.7230042510056018, 1.3524101833176296`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0., 1.0012841390641225`}, 0.021938723761557366`], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {0.021938723761557366`, 1.0232228628256799`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.0002578959133234804, 0.32859388220781915`}, 
              0.021938723761557366`], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {0.022196619674880846`, 0.3505326059693765}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {FrameTicks -> None, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"18"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 7, 5, 6, 8, 4}, {
            Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 6}, {2, 4}, {3,
              6}, {3, 4}, {3, 7}, {8, 5}, {8, 6}, {8, 7}, {5, 6}, {5, 4}, {5, 
             7}, {6, 7}, {4, 7}}}, {
            GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {"Name"}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             
             ArrowBox[{{2.9110434854650196`, 0.5579849586136919}, {
              1.8790765997554948`, 0.5586081058905648}}, 
              0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.9110434854650196`, 0.5579849586136919}, {
              2.0129147819180853`, 0.}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.9110434854650196`, 0.5579849586136919}, {
              2.01381311318356, 1.1164105786250644`}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.8790765997554948`, 0.5586081058905648}, {
              2.0129147819180853`, 0.}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.8790765997554948`, 0.5586081058905648}, {
              2.01381311318356, 1.1164105786250644`}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.8790765997554948`, 0.5586081058905648}, {
              0.898167909064677, 1.1164059482740858`}}, 
              0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.8790765997554948`, 0.5586081058905648}, {
              0.8969749328723111, 0.00002176295418143681}}, 
              0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.0129147819180853`, 0.}, {2.01381311318356, 
              1.1164105786250644`}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.0129147819180853`, 0.}, {0.8969749328723111, 
              0.00002176295418143681}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.0129147819180853`, 0.}, {1.031757370776695, 
              0.5584453699940966}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.01381311318356, 1.1164105786250644`}, {
              0.898167909064677, 1.1164059482740858`}}, 
              0.02959817203837685]}, {
             Arrowheads[0.], 
             ArrowBox[{{2.01381311318356, 1.1164105786250644`}, {
              1.031757370776695, 0.5584453699940966}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.898167909064677, 1.1164059482740858`}, {
              0.8969749328723111, 0.00002176295418143681}}, 
              0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.898167909064677, 1.1164059482740858`}, {
              1.031757370776695, 0.5584453699940966}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.898167909064677, 1.1164059482740858`}, {0., 
              0.5588277751588822}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.8969749328723111, 0.00002176295418143681}, {
              1.031757370776695, 0.5584453699940966}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.8969749328723111, 0.00002176295418143681}, {0., 
              0.5588277751588822}}, 0.02959817203837685]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.031757370776695, 0.5584453699940966}, {0., 
              0.5588277751588822}}, 0.02959817203837685]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             
             DiskBox[{2.9110434854650196`, 0.5579849586136919}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {2.9406416575033965`, 0.5875831306520688}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.8790765997554948`, 0.5586081058905648}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {1.9086747717938717`, 0.5882062779289416}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{2.0129147819180853`, 0.}, 0.02959817203837685], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {2.042512953956462, 0.02959817203837685}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{2.01381311318356, 1.1164105786250644`}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {2.043411285221937, 1.1460087506634413`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.898167909064677, 1.1164059482740858`}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {0.9277660811030539, 1.1460041203124627`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.8969749328723111, 0.00002176295418143681}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {0.926573104910688, 0.029619934992558286`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.031757370776695, 0.5584453699940966}, 
              0.02959817203837685], 
             InsetBox[
              FormBox["8", TraditionalForm], 
              Offset[{2, 2}, {1.0613555428150718`, 0.5880435420324734}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0., 0.5588277751588822}, 0.02959817203837685], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {0.02959817203837685, 0.588425947197259}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {FrameTicks -> None, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"19"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 7, 9, 5, 6, 4, 8}, {
            Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {2, 7}, {2,
              4}, {3, 8}, {3, 7}, {3, 5}, {8, 6}, {8, 7}, {8, 9}, {8, 5}, {6, 
             7}, {6, 4}, {6, 9}, {4, 9}, {4, 5}, {9, 5}}}, {
            GraphLayout -> {"Dimension" -> 2}, VertexLabels -> {"Name"}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.9981469462974062}, {1.0416155458871166`, 
              0.457583515450546}}, 0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.9981469462974062}, {0.4925520431576156, 
              0.38237225703535904`}}, 0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.9981469462974062}, {1.043115441105675, 
              1.5335153127789696`}}, 0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0., 0.9981469462974062}, {0.49666794067845066`, 
              1.6114891119867263`}}, 0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0416155458871166`, 0.457583515450546}, {
              0.4925520431576156, 0.38237225703535904`}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0416155458871166`, 0.457583515450546}, {
              1.043115441105675, 1.5335153127789696`}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0416155458871166`, 0.457583515450546}, {
              2.025134559993192, 0.9932856568070925}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.0416155458871166`, 0.457583515450546}, {
              1.6386368524079344`, 0.}}, 0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.4925520431576156, 0.38237225703535904`}, {
              0.49666794067845066`, 1.6114891119867263`}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.4925520431576156, 0.38237225703535904`}, {
              1.6386368524079344`, 0.}}, 0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.4925520431576156, 0.38237225703535904`}, {
              1.4095248475819455`, 0.9955328174920627}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.043115441105675, 1.5335153127789696`}, {
              0.49666794067845066`, 1.6114891119867263`}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.043115441105675, 1.5335153127789696`}, {
              2.025134559993192, 0.9932856568070925}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.043115441105675, 1.5335153127789696`}, {
              1.6436516420703757`, 1.9879733866415634`}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.49666794067845066`, 1.6114891119867263`}, {
              1.4095248475819455`, 0.9955328174920627}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{0.49666794067845066`, 1.6114891119867263`}, {
              1.6436516420703757`, 1.9879733866415634`}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.025134559993192, 0.9932856568070925}, {
              1.6386368524079344`, 0.}}, 0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.025134559993192, 0.9932856568070925}, {
              1.4095248475819455`, 0.9955328174920627}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{2.025134559993192, 0.9932856568070925}, {
              1.6436516420703757`, 1.9879733866415634`}}, 
              0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.6386368524079344`, 0.}, {1.4095248475819455`, 
              0.9955328174920627}}, 0.022815078791868476`]}, {
             Arrowheads[0.], 
             
             ArrowBox[{{1.4095248475819455`, 0.9955328174920627}, {
              1.6436516420703757`, 1.9879733866415634`}}, 
              0.022815078791868476`]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             DiskBox[{0., 0.9981469462974062}, 0.022815078791868476`], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {0.022815078791868476`, 1.0209620250892746`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.0416155458871166`, 0.457583515450546}, 
              0.022815078791868476`], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {1.064430624678985, 0.4803985942424145}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.4925520431576156, 0.38237225703535904`}, 
              0.022815078791868476`], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {0.5153671219494841, 0.40518733582722755`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.043115441105675, 1.5335153127789696`}, 
              0.022815078791868476`], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {1.0659305198975433`, 1.556330391570838}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{0.49666794067845066`, 1.6114891119867263`}, 
              0.022815078791868476`], 
             InsetBox[
              FormBox["9", TraditionalForm], 
              Offset[{2, 2}, {0.5194830194703192, 1.6343041907785947`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{2.025134559993192, 0.9932856568070925}, 
              0.022815078791868476`], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {2.0479496387850604`, 1.0161007355989609`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{1.6386368524079344`, 0.}, 0.022815078791868476`], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {1.6614519311998028`, 0.022815078791868476`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.4095248475819455`, 0.9955328174920627}, 
              0.022815078791868476`], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {1.432339926373814, 1.0183478962839312`}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             
             DiskBox[{1.6436516420703757`, 1.9879733866415634`}, 
              0.022815078791868476`], 
             InsetBox[
              FormBox["8", TraditionalForm], 
              Offset[{2, 2}, {1.6664667208622441`, 2.010788465433432}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {FrameTicks -> None, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"46"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", "0", ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.763122430834921*^9, 3.763122467958203*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FinerSyms", "[", "s_", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"SetsToSymbol", ",", 
      RowBox[{"FindFiner", "[", 
       RowBox[{"SymbolToSets", "[", "s", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"#", "=!=", "s"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763126979320381*^9, 3.7631269858645134`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CoarserSyms", "[", "s_", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"SetsToSymbol", ",", 
      RowBox[{"FindCoarser", "[", 
       RowBox[{"SymbolToSets", "[", "s", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"#", "=!=", "s"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763126862539564*^9, 3.7631268859327755`*^9}, {
  3.7631269191699686`*^9, 3.7631269290978074`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"ReadGrof", "[", "46", "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"full5", "=", 
        RowBox[{"FindFullFormula5", "[", "g", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"full4", "=", 
        RowBox[{"FindFullFormula4", "[", "g", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"good", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"AugmentedFormula", "[", 
             RowBox[{
              RowBox[{"FindFullFormula4", "[", 
               RowBox[{"EdgeContract", "[", 
                RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
              "full5"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"e", ",", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"EdgeList", "[", "g", "]"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "2"}], "||", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "2"}]}], 
                 "&"}]}], "]"}]}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", "good", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "full4", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SubsetQ", "[", 
             RowBox[{"good", ",", 
              RowBox[{"FinerSyms", "[", "atom", "]"}]}], "]"}], ",", "atom", 
            ",", "Null"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"atom", ",", "full4"}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.763123121782095*^9, 3.7631231733831*^9}, {
  3.76312680244503*^9, 3.763126833561288*^9}, {3.7631269574708953`*^9, 
  3.7631269651634526`*^9}, {3.763127004308991*^9, 3.763127020126958*^9}, {
  3.7631270574710884`*^9, 3.7631271528824186`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "v1x24x38x59x67", ",", "v14x2x38x59x67", ",", "v1x28x35x47x69", ",", 
   "v18x2x35x47x69", ",", "v1x24x37x59x68", ",", "v14x2x37x59x68", ",", 
   "v14x2x38x59x67", ",", "v14x28x3x59x67", ",", "v168x2x3x47x59", ",", 
   "v16x2x38x47x59", ",", "v16x28x3x47x59", ",", "v15x2x38x47x69", ",", 
   "v15x28x3x47x69", ",", "v14x2x38x59x67", ",", "v14x29x38x5x67", ",", 
   "v14x2x37x59x68", ",", "v14x29x37x5x68", ",", "v168x2x3x47x59", ",", 
   "v168x29x3x47x5", ",", "v16x2x38x47x59", ",", "v16x29x38x47x5", ",", 
   "v168x2x37x4x59", ",", "v168x29x37x4x5", ",", "v18x2x35x47x69", ",", 
   "v18x29x35x47x6", ",", "v14x2x37x59x68", ",", "v14x28x37x59x6", ",", 
   "v15x2x38x47x69", ",", "v15x29x38x47x6", ",", "v18x2x35x47x69", ",", 
   "v18x24x35x69x7", ",", "v168x2x3x47x59", ",", "v168x24x3x59x7", ",", 
   "v16x2x38x47x59", ",", "v16x24x38x59x7", ",", "v168x2x35x47x9", ",", 
   "v168x24x35x7x9", ",", "v15x2x38x47x69", ",", "v15x24x38x69x7"}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.763127084857918*^9, 3.7631271545234203`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"v168x24x37x59", ",", "v168x29x35x47"}], "}"}]], "Print",
 CellChangeTimes->{{3.763127084857918*^9, 3.7631271545283885`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Null", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.763123144400797*^9, 3.763123175307361*^9}, 
   3.763127022375774*^9, {3.7631270704859905`*^9, 3.7631271545318947`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"SymbolLevel", ",", 
   RowBox[{"CoarserSyms", "[", "v1x24x38x59x67", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763126842435755*^9, 3.7631268570236683`*^9}, {
  3.763126891574821*^9, 3.763126895697946*^9}, {3.7631269379631615`*^9, 
  3.7631269491952276`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", 
   ",", "4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.7631268473624177`*^9, 3.763126857806359*^9}, 
   3.763126896145513*^9, {3.7631269330284557`*^9, 3.763126949645364*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "v1x24x37x59x68", ",", "v16x24x37x59x8", ",", "v18x24x37x59x6", ",", 
     "v168x2x37x4x59", ",", "v168x24x3x59x7", ",", "v168x24x37x5x9"}], "}"}], 
   ",", 
   RowBox[{"FinerSyms", "[", "v168x24x37x59", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763127162306436*^9, 3.7631271879653807`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7631271666025486`*^9, 3.763127188855373*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"ReadGrof", "[", "46", "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"full5", "=", 
        RowBox[{"FindFullFormula5", "[", "g", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"full4", "=", 
        RowBox[{"FindFullFormula4", "[", "g", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"good", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"AugmentedFormula", "[", 
             RowBox[{
              RowBox[{"FindFullFormula4", "[", 
               RowBox[{"EdgeContract", "[", 
                RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
              "full5"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"e", ",", 
              RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SubsetQ", "[", 
            RowBox[{"good", ",", 
             RowBox[{"FinerSyms", "[", "atom", "]"}]}], "]"}], ",", "atom", 
           ",", "\"\<Miep\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"atom", ",", "full4"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.763127209877593*^9, 3.763127249432528*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"v168x24x37x59", ",", "v168x29x35x47"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7631272140038724`*^9, {3.7631272450780287`*^9, 3.7631272540954723`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"ReadGrof", "[", "gr", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"full5", "=", 
            RowBox[{"FindFullFormula5", "[", "g", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"full4", "=", 
            RowBox[{"FindFullFormula4", "[", "g", "]"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"With", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"good", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"AugmentedFormula", "[", 
                 RowBox[{
                  RowBox[{"FindFullFormula4", "[", 
                   RowBox[{"GContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                  "full5"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"e", ",", 
                  RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SubsetQ", "[", 
                RowBox[{"good", ",", 
                 RowBox[{"FinerSyms", "[", "atom", "]"}]}], "]"}], ",", 
               "atom", ",", 
               RowBox[{"{", 
                RowBox[{"good", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"atom", ",", "Red"}], "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"atom", ",", "full4"}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"gr", ",", "15", ",", "20"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", "gr"}], "]"}]], "Input",
 CellChangeTimes->{{3.763127258888711*^9, 3.763127284200781*^9}, {
   3.763127344683653*^9, 3.7631273786266894`*^9}, 3.7631276006979866`*^9, {
   3.7631276499557505`*^9, 3.763127684027234*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v15x24x38x67", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1x25x3x48x67", ",", "v15x2x3x48x67", ",", "v1x25x38x47x6", ",", 
         "v15x2x38x47x6", ",", "v1x25x38x4x67", ",", "v15x2x38x4x67", ",", 
         "v1x24x38x5x67", ",", "v14x2x38x5x67", ",", "v1x25x38x47x6", ",", 
         "v18x25x3x47x6", ",", "v1x25x38x4x67", ",", "v18x25x3x4x67", ",", 
         "v1x25x3x48x67", ",", "v1x24x38x5x67", ",", "v18x24x3x5x67", ",", 
         "v1x25x3x48x67", ",", "v16x25x3x48x7", ",", "v1x25x38x47x6", ",", 
         "v14x25x38x6x7", ",", "v1x25x38x4x67", ",", "v16x25x38x4x7", ",", 
         "v1x24x38x5x67", ",", "v16x24x38x5x7", ",", "v15x2x3x48x67", ",", 
         "v148x2x3x5x67", ",", "v15x2x38x47x6", ",", "v15x2x38x47x6", ",", 
         "v15x24x38x6x7", ",", "v16x2x38x47x5", ",", "v16x24x38x5x7", ",", 
         "v15x2x3x48x67", ",", "v15x24x3x67x8", ",", "v1x25x3x48x67", ",", 
         "v1x25x38x4x67", ",", "v15x2x3x48x67", ",", "v15x2x38x4x67", ",", 
         "v18x25x3x4x67", ",", "v16x25x3x48x7", ",", "v16x25x38x4x7", ",", 
         "v148x2x3x5x67", ",", "v18x24x3x5x67", ",", "v148x25x3x6x7", ",", 
         "v18x25x3x47x6", ",", "v148x25x3x6x7", ",", "v16x25x3x48x7", ",", 
         "v1x25x38x4x67", ",", "v1x24x38x5x67", ",", "v15x2x38x4x67", ",", 
         "v14x2x38x5x67", ",", "v18x25x3x4x67", ",", "v18x24x3x5x67", ",", 
         "v16x25x38x4x7", ",", "v16x24x38x5x7", ",", "v1x25x38x47x6", ",", 
         "v1x25x38x4x67", ",", "v14x25x38x6x7", ",", "v16x25x38x4x7", ",", 
         "v15x2x38x47x6", ",", "v15x2x38x4x67", ",", "v18x25x3x47x6", ",", 
         "v18x25x3x4x67", ",", "v15x2x38x47x6", ",", "v16x2x38x47x5", ",", 
         "v15x24x38x6x7", ",", "v16x24x38x5x7", ",", "v16x24x38x5x7", ",", 
         "v15x24x3x67x8", ",", "v18x24x3x5x67", ",", "v18x25x3x47x6", ",", 
         "v16x25x3x47x8", ",", "v16x25x3x48x7", ",", "v16x25x3x47x8"}], "}"}],
        ",", 
       StyleBox["v14x25x38x67",
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontColor->RGBColor[1, 0, 0]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1x25x3x48x67", ",", "v15x2x3x48x67", ",", "v1x25x38x47x6", ",", 
         "v15x2x38x47x6", ",", "v1x25x38x4x67", ",", "v15x2x38x4x67", ",", 
         "v1x24x38x5x67", ",", "v14x2x38x5x67", ",", "v1x25x38x47x6", ",", 
         "v18x25x3x47x6", ",", "v1x25x38x4x67", ",", "v18x25x3x4x67", ",", 
         "v1x25x3x48x67", ",", "v1x24x38x5x67", ",", "v18x24x3x5x67", ",", 
         "v1x25x3x48x67", ",", "v16x25x3x48x7", ",", "v1x25x38x47x6", ",", 
         "v14x25x38x6x7", ",", "v1x25x38x4x67", ",", "v16x25x38x4x7", ",", 
         "v1x24x38x5x67", ",", "v16x24x38x5x7", ",", "v15x2x3x48x67", ",", 
         "v148x2x3x5x67", ",", "v15x2x38x47x6", ",", "v15x2x38x47x6", ",", 
         "v15x24x38x6x7", ",", "v16x2x38x47x5", ",", "v16x24x38x5x7", ",", 
         "v15x2x3x48x67", ",", "v15x24x3x67x8", ",", "v1x25x3x48x67", ",", 
         "v1x25x38x4x67", ",", "v15x2x3x48x67", ",", "v15x2x38x4x67", ",", 
         "v18x25x3x4x67", ",", "v16x25x3x48x7", ",", "v16x25x38x4x7", ",", 
         "v148x2x3x5x67", ",", "v18x24x3x5x67", ",", "v148x25x3x6x7", ",", 
         "v18x25x3x47x6", ",", "v148x25x3x6x7", ",", "v16x25x3x48x7", ",", 
         "v1x25x38x4x67", ",", "v1x24x38x5x67", ",", "v15x2x38x4x67", ",", 
         "v14x2x38x5x67", ",", "v18x25x3x4x67", ",", "v18x24x3x5x67", ",", 
         "v16x25x38x4x7", ",", "v16x24x38x5x7", ",", "v1x25x38x47x6", ",", 
         "v1x25x38x4x67", ",", "v14x25x38x6x7", ",", "v16x25x38x4x7", ",", 
         "v15x2x38x47x6", ",", "v15x2x38x4x67", ",", "v18x25x3x47x6", ",", 
         "v18x25x3x4x67", ",", "v15x2x38x47x6", ",", "v16x2x38x47x5", ",", 
         "v15x24x38x6x7", ",", "v16x24x38x5x7", ",", "v16x24x38x5x7", ",", 
         "v15x24x3x67x8", ",", "v18x24x3x5x67", ",", "v18x25x3x47x6", ",", 
         "v16x25x3x47x8", ",", "v16x25x3x48x7", ",", "v16x25x3x47x8"}], "}"}],
        ",", 
       StyleBox["v148x25x3x67",
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontColor->RGBColor[1, 0, 0]]}], "}"}], ",", "v16x25x38x47"}], "}"}], 
   ",", 
   RowBox[{"{", "v158x24x3x67", "}"}], ",", 
   RowBox[{"{", "v15x24x38x67", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v14x28x35x67", ",", "v16x28x35x47", ",", "v15x24x37x68"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "v14x28x35x67", ",", "v18x24x35x67", ",", "v16x28x35x47", ",", 
     "v15x28x34x67"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v14x25x37x68", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1x24x37x5x68", ",", "v14x2x37x5x68", ",", "v1x25x3x47x68", ",", 
         "v1x25x3x478x6", ",", "v1x24x37x5x68", ",", "v1x248x37x5x6", ",", 
         "v1x25x3x47x68", ",", "v14x25x3x68x7", ",", "v1x24x37x5x68", ",", 
         "v16x24x37x5x8", ",", "v1x25x3x47x68", ",", "v16x25x3x47x8", ",", 
         "v1x25x37x48x6", ",", "v14x25x37x6x8", ",", "v1x25x37x4x68", ",", 
         "v16x25x37x4x8", ",", "v16x2x3x478x5", ",", "v14x2x37x5x68", ",", 
         "v14x28x37x5x6", ",", "v16x2x3x478x5", ",", "v16x24x3x5x78", ",", 
         "v16x248x3x5x7", ",", "v16x28x3x47x5", ",", "v1x25x3x47x68", ",", 
         "v1x25x37x4x68", ",", "v16x28x3x47x5", ",", "v16x28x37x4x5", ",", 
         "v16x25x3x47x8", ",", "v16x25x37x4x8", ",", "v16x25x3x4x78", ",", 
         "v16x2x3x478x5", ",", "v16x24x3x5x78", ",", "v16x248x3x5x7", ",", 
         "v16x28x3x47x5", ",", "v1x25x3x478x6", ",", "v14x25x3x6x78", ",", 
         "v14x25x3x6x78", ",", "v14x25x37x6x8", ",", "v16x24x3x5x78", ",", 
         "v16x24x37x5x8", ",", "v16x25x3x4x78", ",", "v16x25x37x4x8", ",", 
         "v16x25x3x47x8", ",", "v1x24x37x5x68", ",", "v1x25x37x4x68", ",", 
         "v16x24x3x5x78", ",", "v16x25x3x4x78", ",", "v16x24x37x5x8", ",", 
         "v16x25x37x4x8", ",", "v16x28x37x4x5", ",", "v1x25x37x48x6", ",", 
         "v1x25x37x4x68", ",", "v14x28x37x5x6", ",", "v16x28x37x4x5", ",", 
         "v14x25x3x6x78", ",", "v16x25x3x4x78", ",", "v14x25x37x6x8", ",", 
         "v16x25x37x4x8", ",", "v1x248x37x5x6", ",", "v14x28x37x5x6", ",", 
         "v16x248x3x5x7", ",", "v14x28x37x5x6", ",", "v14x25x37x6x8", ",", 
         "v16x28x3x47x5", ",", "v16x25x3x47x8", ",", "v16x28x37x4x5", ",", 
         "v16x25x37x4x8", ",", "v16x24x37x5x8", ",", "v14x25x3x68x7", ",", 
         "v14x25x3x6x78"}], "}"}], ",", 
       StyleBox["v16x248x37x5",
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontColor->RGBColor[1, 0, 0]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1x24x37x5x68", ",", "v14x2x37x5x68", ",", "v1x25x3x47x68", ",", 
         "v1x25x3x478x6", ",", "v1x24x37x5x68", ",", "v1x248x37x5x6", ",", 
         "v1x25x3x47x68", ",", "v14x25x3x68x7", ",", "v1x24x37x5x68", ",", 
         "v16x24x37x5x8", ",", "v1x25x3x47x68", ",", "v16x25x3x47x8", ",", 
         "v1x25x37x48x6", ",", "v14x25x37x6x8", ",", "v1x25x37x4x68", ",", 
         "v16x25x37x4x8", ",", "v16x2x3x478x5", ",", "v14x2x37x5x68", ",", 
         "v14x28x37x5x6", ",", "v16x2x3x478x5", ",", "v16x24x3x5x78", ",", 
         "v16x248x3x5x7", ",", "v16x28x3x47x5", ",", "v1x25x3x47x68", ",", 
         "v1x25x37x4x68", ",", "v16x28x3x47x5", ",", "v16x28x37x4x5", ",", 
         "v16x25x3x47x8", ",", "v16x25x37x4x8", ",", "v16x25x3x4x78", ",", 
         "v16x2x3x478x5", ",", "v16x24x3x5x78", ",", "v16x248x3x5x7", ",", 
         "v16x28x3x47x5", ",", "v1x25x3x478x6", ",", "v14x25x3x6x78", ",", 
         "v14x25x3x6x78", ",", "v14x25x37x6x8", ",", "v16x24x3x5x78", ",", 
         "v16x24x37x5x8", ",", "v16x25x3x4x78", ",", "v16x25x37x4x8", ",", 
         "v16x25x3x47x8", ",", "v1x24x37x5x68", ",", "v1x25x37x4x68", ",", 
         "v16x24x3x5x78", ",", "v16x25x3x4x78", ",", "v16x24x37x5x8", ",", 
         "v16x25x37x4x8", ",", "v16x28x37x4x5", ",", "v1x25x37x48x6", ",", 
         "v1x25x37x4x68", ",", "v14x28x37x5x6", ",", "v16x28x37x4x5", ",", 
         "v14x25x3x6x78", ",", "v16x25x3x4x78", ",", "v14x25x37x6x8", ",", 
         "v16x25x37x4x8", ",", "v1x248x37x5x6", ",", "v14x28x37x5x6", ",", 
         "v16x248x3x5x7", ",", "v14x28x37x5x6", ",", "v14x25x37x6x8", ",", 
         "v16x28x3x47x5", ",", "v16x25x3x47x8", ",", "v16x28x37x4x5", ",", 
         "v16x25x37x4x8", ",", "v16x24x37x5x8", ",", "v14x25x3x68x7", ",", 
         "v14x25x3x6x78"}], "}"}], ",", 
       StyleBox["v16x25x3x478",
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontColor->RGBColor[1, 0, 0]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "v1x24x37x5x68", ",", "v14x2x37x5x68", ",", "v1x25x3x47x68", ",", 
         "v1x25x3x478x6", ",", "v1x24x37x5x68", ",", "v1x248x37x5x6", ",", 
         "v1x25x3x47x68", ",", "v14x25x3x68x7", ",", "v1x24x37x5x68", ",", 
         "v16x24x37x5x8", ",", "v1x25x3x47x68", ",", "v16x25x3x47x8", ",", 
         "v1x25x37x48x6", ",", "v14x25x37x6x8", ",", "v1x25x37x4x68", ",", 
         "v16x25x37x4x8", ",", "v16x2x3x478x5", ",", "v14x2x37x5x68", ",", 
         "v14x28x37x5x6", ",", "v16x2x3x478x5", ",", "v16x24x3x5x78", ",", 
         "v16x248x3x5x7", ",", "v16x28x3x47x5", ",", "v1x25x3x47x68", ",", 
         "v1x25x37x4x68", ",", "v16x28x3x47x5", ",", "v16x28x37x4x5", ",", 
         "v16x25x3x47x8", ",", "v16x25x37x4x8", ",", "v16x25x3x4x78", ",", 
         "v16x2x3x478x5", ",", "v16x24x3x5x78", ",", "v16x248x3x5x7", ",", 
         "v16x28x3x47x5", ",", "v1x25x3x478x6", ",", "v14x25x3x6x78", ",", 
         "v14x25x3x6x78", ",", "v14x25x37x6x8", ",", "v16x24x3x5x78", ",", 
         "v16x24x37x5x8", ",", "v16x25x3x4x78", ",", "v16x25x37x4x8", ",", 
         "v16x25x3x47x8", ",", "v1x24x37x5x68", ",", "v1x25x37x4x68", ",", 
         "v16x24x3x5x78", ",", "v16x25x3x4x78", ",", "v16x24x37x5x8", ",", 
         "v16x25x37x4x8", ",", "v16x28x37x4x5", ",", "v1x25x37x48x6", ",", 
         "v1x25x37x4x68", ",", "v14x28x37x5x6", ",", "v16x28x37x4x5", ",", 
         "v14x25x3x6x78", ",", "v16x25x3x4x78", ",", "v14x25x37x6x8", ",", 
         "v16x25x37x4x8", ",", "v1x248x37x5x6", ",", "v14x28x37x5x6", ",", 
         "v16x248x3x5x7", ",", "v14x28x37x5x6", ",", "v14x25x37x6x8", ",", 
         "v16x28x3x47x5", ",", "v16x25x3x47x8", ",", "v16x28x37x4x5", ",", 
         "v16x25x37x4x8", ",", "v16x24x37x5x8", ",", "v14x25x3x68x7", ",", 
         "v14x25x3x6x78"}], "}"}], ",", 
       StyleBox["v16x25x37x48",
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.763127293432376*^9, 3.763127331676227*^9, 
  3.7631273709802685`*^9, 3.7631274258729424`*^9, 3.763127638566695*^9, 
  3.7631277042097006`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{".", ";;"}]], "Input",
 CellChangeTimes->{{3.763127371694081*^9, 3.7631273718141637`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "v1x25x3x48x67", ",", "v15x2x3x48x67", ",", "v1x25x38x47x6", ",", 
     "v15x2x38x47x6", ",", "v1x25x38x4x67", ",", "v15x2x38x4x67", ",", 
     "v1x24x38x5x67", ",", "v14x2x38x5x67", ",", "v1x25x38x47x6", ",", 
     "v18x25x3x47x6", ",", "v1x25x38x4x67", ",", "v18x25x3x4x67", ",", 
     "v1x25x3x48x67", ",", "v1x24x38x5x67", ",", "v18x24x3x5x67", ",", 
     "v1x25x3x48x67", ",", "v16x25x3x48x7", ",", "v1x25x38x47x6", ",", 
     "v14x25x38x6x7", ",", "v1x25x38x4x67", ",", "v16x25x38x4x7", ",", 
     "v1x24x38x5x67", ",", "v16x24x38x5x7", ",", "v15x2x3x48x67", ",", 
     "v148x2x3x5x67", ",", "v15x2x38x47x6", ",", "v15x2x38x47x6", ",", 
     "v15x24x38x6x7", ",", "v16x2x38x47x5", ",", "v16x24x38x5x7", ",", 
     "v15x2x3x48x67", ",", "v15x24x3x67x8", ",", "v1x25x3x48x67", ",", 
     "v1x25x38x4x67", ",", "v15x2x3x48x67", ",", "v15x2x38x4x67", ",", 
     "v18x25x3x4x67", ",", "v16x25x3x48x7", ",", "v16x25x38x4x7", ",", 
     "v148x2x3x5x67", ",", "v18x24x3x5x67", ",", "v148x25x3x6x7", ",", 
     "v18x25x3x47x6", ",", "v148x25x3x6x7", ",", "v16x25x3x48x7", ",", 
     "v1x25x38x4x67", ",", "v1x24x38x5x67", ",", "v15x2x38x4x67", ",", 
     "v14x2x38x5x67", ",", "v18x25x3x4x67", ",", "v18x24x3x5x67", ",", 
     "v16x25x38x4x7", ",", "v16x24x38x5x7", ",", "v1x25x38x47x6", ",", 
     "v1x25x38x4x67", ",", "v14x25x38x6x7", ",", "v16x25x38x4x7", ",", 
     "v15x2x38x47x6", ",", "v15x2x38x4x67", ",", "v18x25x3x47x6", ",", 
     "v18x25x3x4x67", ",", "v15x2x38x47x6", ",", "v16x2x38x47x5", ",", 
     "v15x24x38x6x7", ",", "v16x24x38x5x7", ",", "v16x24x38x5x7", ",", 
     "v15x24x3x67x8", ",", "v18x24x3x5x67", ",", "v18x25x3x47x6", ",", 
     "v16x25x3x47x8", ",", "v16x25x3x48x7", ",", "v16x25x3x47x8"}], "}"}], 
   ",", 
   RowBox[{"FinerSyms", "[", "v14x25x38x67", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763127717022835*^9, 3.7631277528945*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"v14x25x38x6x7", ",", "v14x2x38x5x67", ",", "v1x25x38x4x67"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.763127725072693*^9, 3.763127753918602*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FinerSyms", "[", "v14x25x38x67", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "v1x25x38x4x67", ",", "v14x2x38x5x67", ",", "v14x25x3x67x8", ",", 
   "v14x25x38x6x7"}], "}"}]], "Output",
 CellChangeTimes->{3.763127762271329*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"ReadGrof", "[", "gr", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"full5", "=", 
            RowBox[{"FindFullFormula5", "[", "g", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"full4", "=", 
            RowBox[{"FindFullFormula4", "[", "g", "]"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"With", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"good", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"AugmentedFormula", "[", 
                 RowBox[{
                  RowBox[{"FindFullFormula4", "[", 
                   RowBox[{"GContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                  "full5"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"e", ",", 
                  RowBox[{"EdgeList", "[", 
                   RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], 
                 "}"}]}], "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SubsetQ", "[", 
                RowBox[{"good", ",", 
                 RowBox[{"FinerSyms", "[", "atom", "]"}]}], "]"}], ",", 
               "atom", ",", 
               RowBox[{"{", 
                RowBox[{"good", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"atom", ",", "Red"}], "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"atom", ",", "full4"}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"gr", ",", "15", ",", "50"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", "gr"}], "]"}]], "Input",
 CellChangeTimes->{{3.7631385559214892`*^9, 3.763138566900525*^9}, {
  3.7631739379048567`*^9, 3.763173938214965*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "v15x24x38x67", ",", "v14x25x38x67", ",", "v148x25x3x67", ",", 
     "v16x25x38x47"}], "}"}], ",", 
   RowBox[{"{", "v158x24x3x67", "}"}], ",", 
   RowBox[{"{", "v15x24x38x67", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v14x28x35x67", ",", "v16x28x35x47", ",", "v15x24x37x68"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "v14x28x35x67", ",", "v18x24x35x67", ",", "v16x28x35x47", ",", 
     "v15x28x34x67"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v14x25x37x68", ",", "v16x248x37x5", ",", "v16x25x3x478", ",", 
     "v16x25x37x48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v1x267x35x48", ",", "v16x24x35x78", ",", "v16x27x35x48", ",", 
     "v14x26x35x78", ",", "v14x267x35x8", ",", "v148x2x35x67", ",", 
     "v148x26x35x7", ",", "v18x24x35x67", ",", "v148x267x3x5", ",", 
     "v18x267x35x4", ",", "v148x27x35x6"}], "}"}], ",", 
   RowBox[{"{", "v178x246x3x5", "}"}], ",", 
   RowBox[{"{", "v16x24x38x57", "}"}], ",", 
   RowBox[{"{", "v15x26x34x789", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v159x24x36x78", ",", "v159x28x34x67", ",", "v159x28x36x47", ",", 
     "v15x28x36x479"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v156x2x34x789", ",", "v156x24x3x789", ",", "v156x24x39x78", ",", 
     "v156x28x34x79", ",", "v156x28x39x47"}], "}"}], ",", 
   RowBox[{"{", "v145x28x39x67", "}"}], ",", 
   RowBox[{"{", "v15x28x39x467", "}"}], ",", 
   RowBox[{"{", "v167x28x34x59", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v16x278x349x5", ",", "v15x28x349x67", ",", "v15x278x34x69", ",", 
     "v15x278x349x6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v149x28x35x67", ",", "v18x249x35x67", ",", "v169x24x35x78", ",", 
     "v16x249x35x78", ",", "v169x28x35x47"}], "}"}], ",", 
   RowBox[{"{", "v159x28x34x67", "}"}], ",", 
   RowBox[{"{", "v15x28x349x67", "}"}], ",", 
   RowBox[{"{", "v15x289x34x67", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v156x24x39x78", ",", "v156x28x34x79", ",", "v156x28x39x47", ",", 
     "v145x28x39x67"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v189x25x34x67", ",", "v156x24x39x78", ",", "v156x28x39x47"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v1x268x35x479", ",", "v18x26x35x479", ",", "v168x2x35x479", ",", 
     "v16x28x35x479", ",", "v168x24x35x79", ",", "v14x268x35x79", ",", 
     "v149x28x35x67", ",", "v149x268x35x7", ",", "v19x268x35x47", ",", 
     "v189x26x35x47", ",", "v189x24x35x67", ",", "v15x268x3x479"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"v189x24x35x67", ",", "v168x24x35x79", ",", "v159x28x36x47"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v147x2x35x689", ",", "v147x28x35x69", ",", "v17x24x35x689", ",", 
     "v167x28x35x49", ",", "v167x24x35x89"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v1x247x35x689", ",", "v18x247x35x69", ",", "v14x27x35x689", ",", 
     "v168x247x35x9", ",", "v16x247x35x89", ",", "v168x27x35x49", ",", 
     "v168x247x39x5", ",", "v15x247x3x689", ",", "v15x247x39x68"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "v18x249x35x67", ",", "v168x24x37x59", ",", "v168x249x35x7", ",", 
     "v168x29x35x47", ",", "v168x249x37x5", ",", "v15x249x37x68"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "v149x28x35x67", ",", "v189x24x35x67", ",", "v168x2x35x479", ",", 
     "v16x28x35x479", ",", "v168x24x35x79"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v189x24x35x67", ",", "v14x289x35x67", ",", "v168x29x35x47", ",", 
     "v16x289x35x47", ",", "v168x24x35x79"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v149x28x35x67", ",", "v189x24x35x67", ",", "v168x2x35x479", ",", 
     "v16x28x35x479", ",", "v168x24x35x79"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v149x28x35x67", ",", "v189x24x35x67", ",", "v1689x2x35x47", ",", 
     "v169x28x35x47", ",", "v1689x24x35x7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v168x24x37x59", ",", "v168x29x35x47"}], "}"}], ",", 
   RowBox[{"{", "v145x26x3x789", "}"}], ",", 
   RowBox[{"{", "v159x28x3x467", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "v18x245x39x67", ",", "v145x28x39x67", ",", "v189x245x3x67", ",", 
     "v16x245x39x78"}], "}"}], ",", 
   RowBox[{"{", "v167x28x3x459", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7631385769384966`*^9, 3.763174015748622*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"ReadGrof", "[", "gr", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"full5", "=", 
            RowBox[{"FindFullFormula5", "[", "g", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"full4", "=", 
            RowBox[{"FindFullFormula4", "[", "g", "]"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"With", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"good", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"AugmentedFormula", "[", 
                 RowBox[{
                  RowBox[{"FindFullFormula4", "[", 
                   RowBox[{"GContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                  "full5"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"e", ",", 
                  RowBox[{"EdgeList", "[", 
                   RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], 
                 "}"}]}], "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SubsetQ", "[", 
                RowBox[{"good", ",", 
                 RowBox[{"FinerSyms", "[", "atom", "]"}]}], "]"}], ",", 
               "atom", ",", 
               RowBox[{"{", 
                RowBox[{"good", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"atom", ",", "Red"}], "]"}]}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"atom", ",", "full4"}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"gr", ",", "51", ",", "100"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}], ",", "\[IndentingNewLine]", "gr"}], "]"}]], "Input",
 CellChangeTimes->{{3.763174512824439*^9, 3.7631745165031066`*^9}}]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 432, 13, 31, "Input"],
Cell[1015, 37, 7077, 127, 188, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8129, 169, 709, 20, 31, "Input"],
Cell[8841, 191, 35174, 791, 211, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44052, 987, 3289, 76, 332, "Input"],
Cell[47344, 1065, 162975, 3260, 440, "Output"]
}, Open  ]],
Cell[210334, 4328, 96, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[210455, 4333, 609, 19, 72, "Input"],
Cell[211067, 4354, 347, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211451, 4367, 2816, 68, 232, "Input"],
Cell[214270, 4437, 461045, 9071, 532, 179025, 4446, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[675352, 13513, 919, 26, 52, "Input"],
Cell[676274, 13541, 37426, 838, 400, "Output"]
}, Open  ]],
Cell[713715, 14382, 413, 11, 31, "Input"],
Cell[714131, 14395, 470, 12, 64, "Input"],
Cell[CellGroupData[{
Cell[714626, 14411, 2527, 63, 252, "Input"],
Cell[CellGroupData[{
Cell[717178, 14478, 1071, 17, 81, "Print"],
Cell[718252, 14497, 164, 3, 23, "Print"]
}, Open  ]],
Cell[718431, 14503, 221, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[718689, 14512, 311, 6, 31, "Input"],
Cell[719003, 14520, 302, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[719342, 14531, 382, 9, 31, "Input"],
Cell[719727, 14542, 99, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[719863, 14548, 1725, 46, 212, "Input"],
Cell[721591, 14596, 194, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[721822, 14605, 2443, 59, 272, "Input"],
Cell[724268, 14666, 11496, 196, 752, "Output"]
}, Open  ]],
Cell[735779, 14865, 113, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[735917, 14871, 1960, 31, 172, "Input"],
Cell[737880, 14904, 188, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[738105, 14913, 73, 1, 31, "Input"],
Cell[738181, 14916, 190, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[738408, 14926, 2430, 59, 272, "Input"],
Cell[740841, 14987, 4309, 108, 292, "Output"]
}, Open  ]],
Cell[745165, 15098, 2380, 58, 272, "Input"]
}
]
*)

(* End of internal cache information *)
