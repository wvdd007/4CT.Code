(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2035343,      40783]
NotebookOptionsPosition[   2031335,      40652]
NotebookOutlinePosition[   2031937,      40674]
CellTagsIndexPosition[   2031894,      40671]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"AugmentedFormula", "[", 
   RowBox[{"form_", ",", "edge_", ",", "full_"}], "]"}], ":=", 
  RowBox[{"ImpliedNodes", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"SymbolReplace", "[", 
        RowBox[{"#", ",", "edge"}], "]"}], "&"}], ",", "form"}], "]"}], ",", 
    "full"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7626075139641743`*^9, 3.762607529617793*^9}, {
  3.7626075889997015`*^9, 3.762607596732269*^9}, {3.762607764004901*^9, 
  3.7626077658137107`*^9}, {3.7626078653059835`*^9, 3.7626078736922903`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DrawAugmented", "[", "form_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"labels", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Labeled", "[", 
             RowBox[{
              RowBox[{"SymbolToLabel", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "Red"}], "]"}]}], "]"}],
             ",", 
            RowBox[{"Pi", "/", "6"}]}], "]"}]}], "&"}], ",", 
        RowBox[{"Tally", "[", "form", "]"}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"FormulaGraphReverse2", "[", "form", "]"}], ",", 
      RowBox[{"VertexLabels", "\[Rule]", "labels"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "650"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7626084185465603`*^9, 3.7626084876974955`*^9}, {
  3.762608544505576*^9, 3.762608699442933*^9}, {3.7626115800876045`*^9, 
  3.7626115888241167`*^9}, {3.7626118427966204`*^9, 3.7626118891664553`*^9}, {
  3.762612036339734*^9, 3.7626120369373407`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sinks", "[", "g_", "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"VertexList", "[", "g", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"SymbolLevel", "[", "#", "]"}], "\[Equal]", "4"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.762612163294442*^9, 3.762612194327939*^9}, {
  3.762612836132908*^9, 3.7626128426815324`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AlmostSinks", "[", "g_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{"Sinks", "[", "g", "]"}], "//", "First"}]}], "}"}], ",", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"VertexList", "[", 
       RowBox[{"VertexInComponent", "[", 
        RowBox[{"g", ",", "s"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"#", "=!=", "s"}], "&"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7626122170450826`*^9, 3.7626122181701107`*^9}, {
  3.7626122497954845`*^9, 3.762612322971298*^9}, {3.762612559323762*^9, 
  3.7626125996282406`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AlmostSinks", "[", "g_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", "=", 
      RowBox[{"Sinks", "[", "g", "]"}]}], "}"}], ",", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"VertexInComponent", "[", 
           RowBox[{"g", ",", "v", ",", "1"}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", "=!=", "v"}], "&"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"v", ",", "s"}], "}"}]}], "]"}], "]"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.7626126265547934`*^9, {3.762612673152181*^9, 3.7626126746582336`*^9}, {
   3.762613332484456*^9, 3.762613362111163*^9}, 3.7626136871765056`*^9, {
   3.7626137496576734`*^9, 3.762613792312478*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"MinimalGraph", "[", "5", "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"full", "=", 
       RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"full", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"AugmentedFormula", "[", 
            RowBox[{
             RowBox[{"FindFullFormula", "[", 
              RowBox[{"EdgeContract", "[", 
               RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", "full"}],
             "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"e", ",", 
             RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}], "//", 
         "Flatten"}], "//", "Tally"}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7626075999748898`*^9, 3.762607711226533*^9}, {
  3.762607771714428*^9, 3.7626077939846334`*^9}, {3.7626078420123672`*^9, 
  3.762607855396994*^9}, {3.7626078874278173`*^9, 3.7626078923078194`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "v1x2x3x4x5x6", ",", "v1x2x3x46x5", ",", "v1x2x36x4x5", ",", 
     "v1x2x35x4x6", ",", "v1x2x35x46"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1x2x3x4x5x6", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v1x2x3x46x5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v1x2x36x4x5", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v1x2x35x4x6", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v1x2x35x46", ",", "1"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.762607647190464*^9, 3.762607712650319*^9}, 
   3.762607822079382*^9, {3.7626078769439354`*^9, 3.7626078939832525`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlmostSinks", "[", 
  RowBox[{"FormulaGraphReverse2", "[", 
   RowBox[{"FindFullFormula", "[", 
    RowBox[{"MinimalGraph", "[", "6", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.762613591339082*^9, 3.76261359486456*^9}, 
   3.7626137109394646`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "v1x2x357x46", ",", "v1x2x357x4x6", ",", "v1x2x35x46x7", ",", 
   "v1x2x37x46x5", ",", "v1x2x3x46x57"}], "}"}]], "Output",
 CellChangeTimes->{{3.7626135957519503`*^9, 3.7626136138923874`*^9}, 
   3.7626137114287815`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexInComponent", "[", 
  RowBox[{
   RowBox[{"FormulaGraphReverse2", "[", 
    RowBox[{"FindFullFormula", "[", 
     RowBox[{"CycleGraph", "[", "6", "]"}], "]"}], "]"}], ",", "v1x2x3x4x5x6",
    ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.762612720052412*^9, 3.7626127985256863`*^9}}],

Cell[BoxData[
 RowBox[{"{", "v1x2x3x4x5x6", "}"}]], "Output",
 CellChangeTimes->{{3.7626127475684724`*^9, 3.762612799270692*^9}, 
   3.762613691092045*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"MinimalGraph", "[", "6", "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"full", "=", 
       RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"AlmostSinks", "[", 
        RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Sinks", "[", 
        RowBox[{"FormulaGraphReverse", "[", "full", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"DrawAugmented", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"AugmentedFormula", "[", 
              RowBox[{
               RowBox[{"FindFullFormula", "[", 
                RowBox[{"EdgeContract", "[", 
                 RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
               "full"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}], 
          "]"}], ",", 
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"v", "\[Rule]", "Red"}], ",", 
            RowBox[{"{", 
             RowBox[{"v", ",", 
              RowBox[{"AlmostSinks", "[", 
               RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}]}], 
             "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7626085043628063`*^9, 3.762608515323975*^9}, {
   3.7626087183000917`*^9, 3.7626087625817327`*^9}, {3.762608797796728*^9, 
   3.762608809787568*^9}, 3.762608845635911*^9, {3.762611550504981*^9, 
   3.762611551394407*^9}, {3.762611779773704*^9, 3.7626117870653286`*^9}, {
   3.762612199545986*^9, 3.7626122026483636`*^9}, 3.7626123008407545`*^9, {
   3.7626128476228313`*^9, 3.7626128821026535`*^9}, {3.7626133774557743`*^9, 
   3.7626134451572323`*^9}, {3.762613489216674*^9, 3.762613575062272*^9}, {
   3.7626136245822496`*^9, 3.762613658008219*^9}, {3.7626137243916698`*^9, 
   3.762613730262472*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{$CellContext`v1x2x357x46, $CellContext`v1x2x357x4x6, \
$CellContext`v1x2x35x46x7, $CellContext`v1x2x35x47x6, \
$CellContext`v1x2x35x4x6x7, $CellContext`v1x2x36x47x5, \
$CellContext`v1x2x36x4x57, $CellContext`v1x2x36x4x5x7, \
$CellContext`v1x2x37x46x5, $CellContext`v1x2x37x4x5x6, \
$CellContext`v1x2x3x46x57, $CellContext`v1x2x3x46x5x7, \
$CellContext`v1x2x3x47x5x6, $CellContext`v1x2x3x4x57x6, \
$CellContext`v1x2x3x4x5x6x7}, {{{2, 1}, {3, 1}, {9, 1}, {11, 1}, {5, 2}, {10, 
         2}, {14, 2}, {5, 3}, {12, 3}, {5, 4}, {13, 4}, {15, 5}, {8, 6}, {13, 
         6}, {8, 7}, {14, 7}, {15, 8}, {10, 9}, {12, 9}, {15, 10}, {12, 11}, {
         14, 11}, {15, 12}, {15, 13}, {15, 14}}, Null}, {
        GraphLayout -> "LayeredDigraphEmbedding", 
         VertexLabels -> {$CellContext`v1x2x3x46x57 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "46", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "57"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x36x4x5x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "36", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x35x46x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "46", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x4x57x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "57", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x35x4x6x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x37x46x5 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "37", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "46", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x357x46 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "357", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "46"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x357x4x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "357", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x37x4x5x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "37", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x36x4x57 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "36", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "57"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x35x47x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "35", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "47", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x46x5x7 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "46", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x36x47x5 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "36", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "47", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x47x5x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "47", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] Pi]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.021167650531286893`],
           ArrowBox[{{-2., 1.}, {0., 0.}}, 0.04847715736040609], 
          ArrowBox[{{-1., 1.}, {0., 0.}}, 0.04847715736040609], 
          ArrowBox[{{-3., 2.}, {-2., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-3., 2.}, {-1., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-3., 2.}, {-4., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-4., 2.}, {-5., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-4., 2.}, {-3., 1.}}, 0.04847715736040609], 
          ArrowBox[{{1., 1.}, {0., 0.}}, 0.04847715736040609], 
          ArrowBox[{{-1., 2.}, {-2., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-1., 2.}, {1., 1.}}, 0.04847715736040609], 
          ArrowBox[{{0., 1.}, {0., 0.}}, 0.04847715736040609], 
          ArrowBox[{{0., 2.}, {-1., 1.}}, 0.04847715736040609], 
          ArrowBox[{{0., 2.}, {1., 1.}}, 0.04847715736040609], 
          ArrowBox[{{0., 2.}, {0., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-5., 2.}, {-4., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-5., 2.}, {-5., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 2.}, {-2., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 2.}, {-3., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 2.}, {0., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {-3., 2.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {-4., 2.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {-1., 2.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {0., 2.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {-5., 2.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {-2., 2.}}, 0.04847715736040609]}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"357\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-2., 1.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"357\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-1.9515228426395939`, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9515228426395939, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-4., 1.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-3.951522842639594, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-3., 2.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-2.951522842639594, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-5., 1.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"36\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-4.951522842639594, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-3., 1.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"36\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-2.951522842639594, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-4., 2.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"36\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-3.951522842639594, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609], 
           InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9515228426395939, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.04847715736040609], 
           InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.04847715736040609], 
           InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-5., 2.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-4.951522842639594, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-1.9515228426395939`, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-2., 3.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-1.9515228426395939`, 3.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]], ",", 
   RowBox[{"{", 
    RowBox[{
    "v1x2x357x4x6", ",", "v1x2x35x46x7", ",", "v1x2x37x46x5", ",", 
     "v1x2x3x46x57"}], "}"}], ",", 
   RowBox[{"{", "v1x2x357x46", "}"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{$CellContext`v1x2x357x46, $CellContext`v1x2x357x4x6, \
$CellContext`v1x2x35x46x7, $CellContext`v1x2x35x47x6, \
$CellContext`v1x2x35x4x6x7, $CellContext`v1x2x36x47x5, \
$CellContext`v1x2x36x4x57, $CellContext`v1x2x36x4x5x7, \
$CellContext`v1x2x37x46x5, $CellContext`v1x2x37x4x5x6, \
$CellContext`v1x2x3x46x57, $CellContext`v1x2x3x46x5x7, \
$CellContext`v1x2x3x47x5x6, $CellContext`v1x2x3x4x57x6, \
$CellContext`v1x2x3x4x5x6x7}, {{{2, 1}, {3, 1}, {9, 1}, {11, 1}, {5, 2}, {10, 
         2}, {14, 2}, {5, 3}, {12, 3}, {5, 4}, {13, 4}, {15, 5}, {8, 6}, {13, 
         6}, {8, 7}, {14, 7}, {15, 8}, {10, 9}, {12, 9}, {15, 10}, {12, 11}, {
         14, 11}, {15, 12}, {15, 13}, {15, 14}}, Null}, {
        GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
         ImageSize -> 650, 
         VertexLabels -> {$CellContext`v1x2x3x46x57 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "3", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "46", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "57"}], 
              Style[4, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x36x4x5x7 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "36", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "4", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "5", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "7"}], 
              Style[11, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x35x46x7 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "35", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "46", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "7"}], 
              Style[4, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x4x57x6 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "3", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "4", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "57", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "6"}], 
              Style[9, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x35x4x6x7 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "35", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "4", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "6", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "7"}], 
              Style[9, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x37x46x5 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "37", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "46", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "5"}], 
              Style[3, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x357x46 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "357", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "46"}], 
              Style[1, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x357x4x6 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "357", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "4", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "6"}], 
              Style[5, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "3", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "4", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "5", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "6", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "7"}], 
              Style[15, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x37x4x5x6 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "37", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "4", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "5", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "6"}], 
              Style[11, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x36x4x57 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "36", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "4", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "57"}], 
              Style[5, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x35x47x6 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "35", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "47", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "6"}], 
              Style[5, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x46x5x7 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "3", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "46", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "5", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "7"}], 
              Style[9, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x36x47x5 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "36", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "47", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "5"}], 
              Style[5, 
               RGBColor[1, 0, 0]]], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x47x5x6 -> Rotate[
             Labeled[
              Row[{"1", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "2", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "3", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "47", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "5", 
                Style["\[Earth]", 
                 RGBColor[0, 
                  Rational[4, 9], 0], 12], "6"}], 
              Style[11, 
               RGBColor[1, 0, 0]]], Rational[1, 6] Pi]}, 
         VertexStyle -> {$CellContext`v1x2x37x46x5 -> 
           RGBColor[1, 0, 0], $CellContext`v1x2x35x46x7 -> 
           RGBColor[1, 0, 0], $CellContext`v1x2x3x46x57 -> 
           RGBColor[1, 0, 0], $CellContext`v1x2x357x4x6 -> 
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.021167650531286893`],
           ArrowBox[{{-2., 1.}, {0., 0.}}, 0.04847715736040609], 
          ArrowBox[{{-1., 1.}, {0., 0.}}, 0.04847715736040609], 
          ArrowBox[{{-3., 2.}, {-2., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-3., 2.}, {-1., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-3., 2.}, {-4., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-4., 2.}, {-5., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-4., 2.}, {-3., 1.}}, 0.04847715736040609], 
          ArrowBox[{{1., 1.}, {0., 0.}}, 0.04847715736040609], 
          ArrowBox[{{-1., 2.}, {-2., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-1., 2.}, {1., 1.}}, 0.04847715736040609], 
          ArrowBox[{{0., 1.}, {0., 0.}}, 0.04847715736040609], 
          ArrowBox[{{0., 2.}, {-1., 1.}}, 0.04847715736040609], 
          ArrowBox[{{0., 2.}, {1., 1.}}, 0.04847715736040609], 
          ArrowBox[{{0., 2.}, {0., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-5., 2.}, {-4., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-5., 2.}, {-5., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 2.}, {-2., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 2.}, {-3., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 2.}, {0., 1.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {-3., 2.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {-4., 2.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {-1., 2.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {0., 2.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {-5., 2.}}, 0.04847715736040609], 
          ArrowBox[{{-2., 3.}, {-2., 2.}}, 0.04847715736040609]}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"357\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\""}, 
                "RowDefault"],StyleBox["1", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[1, 0, 0], DiskBox[{-2., 1.}, 0.04847715736040609]}, 
           InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"357\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                "RowDefault"],StyleBox["5", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-1.9515228426395939`, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[1, 0, 0], DiskBox[{-1., 1.}, 0.04847715736040609]}, 
           InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                "RowDefault"],StyleBox["4", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9515228426395939, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-4., 1.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                "RowDefault"],StyleBox["5", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-3.951522842639594, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-3., 2.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                "RowDefault"],StyleBox["9", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-2.951522842639594, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-5., 1.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"36\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                "RowDefault"],StyleBox["5", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-4.951522842639594, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-3., 1.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"36\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"57\""}, 
                "RowDefault"],StyleBox["5", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-2.951522842639594, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-4., 2.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"36\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                "RowDefault"],StyleBox["11", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-3.951522842639594, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.04847715736040609]}, 
           InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                "RowDefault"],StyleBox["3", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                "RowDefault"],StyleBox["11", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9515228426395939, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           {RGBColor[1, 0, 0], DiskBox[{0., 1.}, 0.04847715736040609]}, 
           InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"57\""}, 
                "RowDefault"],StyleBox["4", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.04847715736040609], 
           InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                "RowDefault"],StyleBox["9", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-5., 2.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                "RowDefault"],StyleBox["11", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-4.951522842639594, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"57\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                "RowDefault"],StyleBox["9", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-1.9515228426395939`, 2.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{-2., 3.}, 0.04847715736040609],
            InsetBox[
            RotationBox[
             TemplateBox[{TemplateBox[{"\"1\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                "RowDefault"],StyleBox["15", 
                RGBColor[1, 0, 0], StripOnInput -> False]},
              "Labeled",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              InterpretationFunction->(RowBox[{"Labeled", "[", 
                 RowBox[{#, ",", #2}], "]"}]& )],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-1.9515228426395939`, 3.048477157360406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->650]}], "}"}]], "Output",
 CellChangeTimes->{{3.7626134928060813`*^9, 3.762613576884149*^9}, 
   3.762613626701955*^9, 3.7626136602181635`*^9, 3.762613695340477*^9, {
   3.762613726145417*^9, 3.7626137321265097`*^9}, 3.762613797806265*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", "=", 
      RowBox[{"ReadGrof", "[", "6", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"full", "=", 
        RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"DrawAugmented", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"AugmentedFormula", "[", 
               RowBox[{
                RowBox[{"FindFullFormula", "[", 
                 RowBox[{"EdgeContract", "[", 
                  RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                "full"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", 
                RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}], 
           "]"}], ",", 
          RowBox[{"VertexStyle", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"v", "\[Rule]", "Red"}], ",", 
             RowBox[{"{", 
              RowBox[{"v", ",", 
               RowBox[{"AlmostSinks", "[", 
                RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}]}], 
              "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
  "Column"}]], "Input",
 CellChangeTimes->{{3.762611619300142*^9, 3.7626117218789043`*^9}, 
   3.7626118078214836`*^9, {3.7626120146604176`*^9, 3.762612058789153*^9}, {
   3.7626120987897997`*^9, 3.76261210176982*^9}, 3.7626138178181267`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v14x25x37x6, $CellContext`v14x25x3x6x7, \
$CellContext`v14x2x37x5x6, $CellContext`v14x2x3x5x6x7, \
$CellContext`v16x24x37x5, $CellContext`v16x24x3x5x7, \
$CellContext`v16x25x37x4, $CellContext`v16x25x3x47, \
$CellContext`v16x25x3x4x7, $CellContext`v16x2x37x4x5, \
$CellContext`v16x2x3x47x5, $CellContext`v16x2x3x4x5x7, \
$CellContext`v1x24x37x5x6, $CellContext`v1x24x3x5x6x7, \
$CellContext`v1x25x37x4x6, $CellContext`v1x25x3x47x6, \
$CellContext`v1x25x3x4x6x7, $CellContext`v1x2x37x4x5x6, \
$CellContext`v1x2x3x47x5x6, $CellContext`v1x2x3x4x5x6x7}, {{{2, 1}, {3, 1}, {
           15, 1}, {4, 2}, {17, 2}, {4, 3}, {18, 3}, {20, 4}, {6, 5}, {10, 
           5}, {13, 5}, {12, 6}, {14, 6}, {9, 7}, {10, 7}, {15, 7}, {9, 8}, {
           11, 8}, {16, 8}, {12, 9}, {17, 9}, {12, 10}, {18, 10}, {12, 11}, {
           19, 11}, {20, 12}, {14, 13}, {18, 13}, {20, 14}, {17, 15}, {18, 
           15}, {17, 16}, {19, 16}, {20, 17}, {20, 18}, {20, 19}}, Null}, {
          GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 600, 
           VertexLabels -> {$CellContext`v1x25x3x47x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "25", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v1x25x3x4x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "25", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x47x5 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
               Pi], $CellContext`v16x25x37x4 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "25", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "37", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x47x5x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v16x25x3x4x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "25", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v14x25x3x6x7 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "25", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x25x37x4x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "25", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "37", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v14x25x37x6 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "25", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "37", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v1x24x37x5x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "37", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x37x5x6 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "37", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v16x24x37x5 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "37", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x37x4x5 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "37", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
               Pi], $CellContext`v16x25x3x47 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "25", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x37x4x5x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "37", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] Pi]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
            0.018461318051575932`], 
            ArrowBox[{{0., 1.}, {0., 0.}}, 0.05783410138248847], 
            ArrowBox[{{-1., 1.}, {0., 0.}}, 0.05783410138248847], 
            ArrowBox[{{0., 2.}, {0., 1.}}, 0.05783410138248847], 
            ArrowBox[{{0., 2.}, {-1., 1.}}, 0.05783410138248847], 
            ArrowBox[{{2., 1.}, {2., 0.}}, 0.05783410138248847], 
            ArrowBox[{{5., 1.}, {4., 0.}}, 0.05783410138248847], 
            ArrowBox[{{5., 1.}, {6., 0.}}, 0.05783410138248847], 
            ArrowBox[{{4., 1.}, {2., 0.}}, 0.05783410138248847], 
            ArrowBox[{{4., 1.}, {4., 0.}}, 0.05783410138248847], 
            ArrowBox[{{7., 1.}, {6., 0.}}, 0.05783410138248847], 
            ArrowBox[{{5., 2.}, {2., 1.}}, 0.05783410138248847], 
            ArrowBox[{{5., 2.}, {5., 1.}}, 0.05783410138248847], 
            ArrowBox[{{5., 2.}, {4., 1.}}, 0.05783410138248847], 
            ArrowBox[{{5., 2.}, {7., 1.}}, 0.05783410138248847], 
            ArrowBox[{{1., 1.}, {2., 0.}}, 0.05783410138248847], 
            ArrowBox[{{2., 2.}, {2., 1.}}, 0.05783410138248847], 
            ArrowBox[{{2., 2.}, {1., 1.}}, 0.05783410138248847], 
            ArrowBox[{{3., 1.}, {0., 0.}}, 0.05783410138248847], 
            ArrowBox[{{3., 1.}, {4., 0.}}, 0.05783410138248847], 
            ArrowBox[{{6., 1.}, {6., 0.}}, 0.05783410138248847], 
            ArrowBox[{{4., 2.}, {0., 1.}}, 0.05783410138248847], 
            ArrowBox[{{4., 2.}, {5., 1.}}, 0.05783410138248847], 
            ArrowBox[{{4., 2.}, {3., 1.}}, 0.05783410138248847], 
            ArrowBox[{{4., 2.}, {6., 1.}}, 0.05783410138248847], 
            ArrowBox[{{3., 2.}, {-1., 1.}}, 0.05783410138248847], 
            ArrowBox[{{3., 2.}, {4., 1.}}, 0.05783410138248847], 
            ArrowBox[{{3., 2.}, {1., 1.}}, 0.05783410138248847], 
            ArrowBox[{{3., 2.}, {3., 1.}}, 0.05783410138248847], 
            ArrowBox[{{6., 2.}, {7., 1.}}, 0.05783410138248847], 
            ArrowBox[{{6., 2.}, {6., 1.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {0., 2.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {5., 2.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {2., 2.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {4., 2.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {3., 2.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {6., 2.}}, 0.05783410138248847]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
            0.7]}], {DiskBox[{0., 0.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.05783410138248847, 0.05783410138248847}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 1.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.05783410138248847, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-1., 1.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-0.9421658986175115, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.05783410138248847, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 0.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0578341013824883`, 0.05783410138248847}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 1.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0578341013824883`, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 0.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.057834101382489, 0.05783410138248847}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 0.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.057834101382489, 0.05783410138248847}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 1.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.057834101382489, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 1.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.057834101382489, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7., 1.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.057834101382489, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.057834101382489, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 1.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0578341013824886`, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0578341013824883`, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 1.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0578341013824883`, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 1.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.057834101382489, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.057834101382489, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0578341013824883`, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.057834101382489, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 3.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.057834101382489, 3.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->600]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v14x25x37x6, $CellContext`v14x25x3x6x7, \
$CellContext`v14x2x37x5x6, $CellContext`v14x2x3x5x6x7, \
$CellContext`v16x24x37x5, $CellContext`v16x24x3x5x7, \
$CellContext`v16x25x37x4, $CellContext`v16x25x3x47, \
$CellContext`v16x25x3x4x7, $CellContext`v16x2x37x4x5, \
$CellContext`v16x2x3x47x5, $CellContext`v16x2x3x4x5x7, \
$CellContext`v1x24x37x5x6, $CellContext`v1x24x3x5x6x7, \
$CellContext`v1x25x37x4x6, $CellContext`v1x25x3x47x6, \
$CellContext`v1x25x3x4x6x7, $CellContext`v1x2x37x4x5x6, \
$CellContext`v1x2x3x47x5x6, $CellContext`v1x2x3x4x5x6x7}, {{{2, 1}, {3, 1}, {
           15, 1}, {4, 2}, {17, 2}, {4, 3}, {18, 3}, {20, 4}, {6, 5}, {10, 
           5}, {13, 5}, {12, 6}, {14, 6}, {9, 7}, {10, 7}, {15, 7}, {9, 8}, {
           11, 8}, {16, 8}, {12, 9}, {17, 9}, {12, 10}, {18, 10}, {12, 11}, {
           19, 11}, {20, 12}, {14, 13}, {18, 13}, {20, 14}, {17, 15}, {18, 
           15}, {17, 16}, {19, 16}, {20, 17}, {20, 18}, {20, 19}}, Null}, {
          GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 650, 
           VertexLabels -> {$CellContext`v1x25x3x47x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x25x3x4x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[7, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x47x5 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x25x37x4 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "37", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x47x5x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x25x3x4x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x25x3x6x7 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x25x37x4x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "37", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[7, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x24x37x5x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "37", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x25x37x6 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "37", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[1, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[15, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x37x5x6 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "37", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x24x37x5 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "37", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], 
                Style[1, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x37x4x5 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "37", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x25x3x47 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47"}], 
                Style[1, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x37x4x5x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "37", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[7, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] Pi]}, 
           VertexStyle -> {$CellContext`v16x25x3x4x7 -> 
             RGBColor[1, 0, 0], $CellContext`v16x2x37x4x5 -> 
             RGBColor[1, 0, 0], $CellContext`v16x2x3x47x5 -> 
             RGBColor[1, 0, 0], $CellContext`v1x24x37x5x6 -> 
             RGBColor[1, 0, 0], $CellContext`v16x24x3x5x7 -> 
             RGBColor[1, 0, 0], $CellContext`v14x2x37x5x6 -> 
             RGBColor[1, 0, 0], $CellContext`v1x25x37x4x6 -> 
             RGBColor[1, 0, 0], $CellContext`v1x25x3x47x6 -> 
             RGBColor[1, 0, 0], $CellContext`v14x25x3x6x7 -> 
             RGBColor[1, 0, 0]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
            0.018461318051575932`], 
            ArrowBox[{{0., 1.}, {0., 0.}}, 0.05783410138248847], 
            ArrowBox[{{-1., 1.}, {0., 0.}}, 0.05783410138248847], 
            ArrowBox[{{0., 2.}, {0., 1.}}, 0.05783410138248847], 
            ArrowBox[{{0., 2.}, {-1., 1.}}, 0.05783410138248847], 
            ArrowBox[{{2., 1.}, {2., 0.}}, 0.05783410138248847], 
            ArrowBox[{{5., 1.}, {4., 0.}}, 0.05783410138248847], 
            ArrowBox[{{5., 1.}, {6., 0.}}, 0.05783410138248847], 
            ArrowBox[{{4., 1.}, {2., 0.}}, 0.05783410138248847], 
            ArrowBox[{{4., 1.}, {4., 0.}}, 0.05783410138248847], 
            ArrowBox[{{7., 1.}, {6., 0.}}, 0.05783410138248847], 
            ArrowBox[{{5., 2.}, {2., 1.}}, 0.05783410138248847], 
            ArrowBox[{{5., 2.}, {5., 1.}}, 0.05783410138248847], 
            ArrowBox[{{5., 2.}, {4., 1.}}, 0.05783410138248847], 
            ArrowBox[{{5., 2.}, {7., 1.}}, 0.05783410138248847], 
            ArrowBox[{{1., 1.}, {2., 0.}}, 0.05783410138248847], 
            ArrowBox[{{2., 2.}, {2., 1.}}, 0.05783410138248847], 
            ArrowBox[{{2., 2.}, {1., 1.}}, 0.05783410138248847], 
            ArrowBox[{{3., 1.}, {0., 0.}}, 0.05783410138248847], 
            ArrowBox[{{3., 1.}, {4., 0.}}, 0.05783410138248847], 
            ArrowBox[{{6., 1.}, {6., 0.}}, 0.05783410138248847], 
            ArrowBox[{{4., 2.}, {0., 1.}}, 0.05783410138248847], 
            ArrowBox[{{4., 2.}, {5., 1.}}, 0.05783410138248847], 
            ArrowBox[{{4., 2.}, {3., 1.}}, 0.05783410138248847], 
            ArrowBox[{{4., 2.}, {6., 1.}}, 0.05783410138248847], 
            ArrowBox[{{3., 2.}, {-1., 1.}}, 0.05783410138248847], 
            ArrowBox[{{3., 2.}, {4., 1.}}, 0.05783410138248847], 
            ArrowBox[{{3., 2.}, {1., 1.}}, 0.05783410138248847], 
            ArrowBox[{{3., 2.}, {3., 1.}}, 0.05783410138248847], 
            ArrowBox[{{6., 2.}, {7., 1.}}, 0.05783410138248847], 
            ArrowBox[{{6., 2.}, {6., 1.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {0., 2.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {5., 2.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {2., 2.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {4., 2.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {3., 2.}}, 0.05783410138248847], 
            ArrowBox[{{4., 3.}, {6., 2.}}, 0.05783410138248847]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
            0.7]}], {DiskBox[{0., 0.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["1", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.05783410138248847, 0.05783410138248847}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{0., 1.}, 0.05783410138248847]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.05783410138248847, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{-1., 1.}, 0.05783410138248847]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-0.9421658986175115, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.05783410138248847, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 0.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                  "RowDefault"],StyleBox["1", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0578341013824883`, 0.05783410138248847}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{2., 1.}, 0.05783410138248847]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0578341013824883`, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 0.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                  "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.057834101382489, 0.05783410138248847}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 0.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\""},
                   "RowDefault"],StyleBox["1", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.057834101382489, 0.05783410138248847}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{5., 1.}, 0.05783410138248847]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.057834101382489, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{4., 1.}, 0.05783410138248847]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                  "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.057834101382489, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{7., 1.}, 0.05783410138248847]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.057834101382489, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["7", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.057834101382489, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.05783410138248847]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0578341013824886`, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0578341013824883`, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{3., 1.}, 0.05783410138248847]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0578341013824883`, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{6., 1.}, 0.05783410138248847]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.057834101382489, 1.0578341013824886`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["7", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.057834101382489, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["7", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0578341013824883`, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 2.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.057834101382489, 2.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 3.}, 0.05783410138248847], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["15", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.057834101382489, 3.0578341013824883`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->650]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.762611653553022*^9, 3.7626117232866993`*^9}, 
   3.762611809661435*^9, 3.7626119018748183`*^9, {3.7626120174589124`*^9, 
   3.762612060708349*^9}, 3.7626121029660463`*^9, 3.762613819808481*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", "=", 
      RowBox[{"ReadGrof", "[", "5", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"full", "=", 
        RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"DrawAugmented", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"AugmentedFormula", "[", 
               RowBox[{
                RowBox[{"FindFullFormula", "[", 
                 RowBox[{"EdgeContract", "[", 
                  RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                "full"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", 
                RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}], 
           "]"}], ",", 
          RowBox[{"VertexStyle", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"v", "\[Rule]", "Red"}], ",", 
             RowBox[{"{", 
              RowBox[{"v", ",", 
               RowBox[{"AlmostSinks", "[", 
                RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}]}], 
              "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
  "Column"}]], "Input",
 CellChangeTimes->{{3.7626138476690197`*^9, 3.7626138904792433`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v14x2x3x5x67, $CellContext`v14x2x3x5x6x7, \
$CellContext`v15x24x3x67, $CellContext`v15x24x3x6x7, \
$CellContext`v15x2x3x47x6, $CellContext`v15x2x3x4x67, \
$CellContext`v15x2x3x4x6x7, $CellContext`v16x24x3x5x7, \
$CellContext`v16x2x3x47x5, $CellContext`v16x2x3x4x5x7, \
$CellContext`v1x24x3x5x67, $CellContext`v1x24x3x5x6x7, \
$CellContext`v1x2x3x47x5x6, $CellContext`v1x2x3x4x5x67, \
$CellContext`v1x2x3x4x5x6x7}, {{{2, 1}, {14, 1}, {15, 2}, {4, 3}, {6, 3}, {11,
            3}, {7, 4}, {12, 4}, {7, 5}, {13, 5}, {7, 6}, {14, 6}, {15, 7}, {
           10, 8}, {12, 8}, {10, 9}, {13, 9}, {15, 10}, {12, 11}, {14, 11}, {
           15, 12}, {15, 13}, {15, 14}}, Null}, {
          GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 600, 
           VertexLabels -> {$CellContext`v1x24x3x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x4x67 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v15x24x3x6x7 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x47x6 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x67 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x67 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x67 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v15x24x3x67 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x4x6x7 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x47x5x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x47x5 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5"}], Rational[1, 6] Pi]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
            0.021167650531286893`], 
            ArrowBox[{{0., 2.}, {0., 1.}}, 0.04847715736040609], 
            ArrowBox[{{4., 1.}, {3., 0.}}, 0.04847715736040609], 
            ArrowBox[{{1., 1.}, {3., 0.}}, 0.04847715736040609], 
            ArrowBox[{{2., 2.}, {4., 1.}}, 0.04847715736040609], 
            ArrowBox[{{2., 2.}, {2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{2., 2.}, {1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{5., 2.}, {6., 1.}}, 0.04847715736040609], 
            ArrowBox[{{5., 2.}, {5., 1.}}, 0.04847715736040609], 
            ArrowBox[{{3., 1.}, {3., 0.}}, 0.04847715736040609], 
            ArrowBox[{{4., 2.}, {4., 1.}}, 0.04847715736040609], 
            ArrowBox[{{4., 2.}, {6., 1.}}, 0.04847715736040609], 
            ArrowBox[{{4., 2.}, {3., 1.}}, 0.04847715736040609], 
            ArrowBox[{{3., 2.}, {2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{3., 2.}, {5., 1.}}, 0.04847715736040609], 
            ArrowBox[{{1., 2.}, {0., 1.}}, 0.04847715736040609], 
            ArrowBox[{{1., 2.}, {1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{1., 2.}, {3., 1.}}, 0.04847715736040609], 
            ArrowBox[{{3., 3.}, {0., 2.}}, 0.04847715736040609], 
            ArrowBox[{{3., 3.}, {2., 2.}}, 0.04847715736040609], 
            ArrowBox[{{3., 3.}, {5., 2.}}, 0.04847715736040609], 
            ArrowBox[{{3., 3.}, {4., 2.}}, 0.04847715736040609], 
            ArrowBox[{{3., 3.}, {3., 2.}}, 0.04847715736040609], 
            ArrowBox[{{3., 3.}, {1., 2.}}, 0.04847715736040609]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
            0.7]}], {DiskBox[{0., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.048477157360406, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.048477157360406, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 3.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.048477157360406, 3.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->600]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v14x2x3x5x67, $CellContext`v14x2x3x5x6x7, \
$CellContext`v15x24x3x6x7, $CellContext`v15x2x3x47x6, \
$CellContext`v15x2x3x4x67, $CellContext`v15x2x3x4x6x7, \
$CellContext`v16x24x3x5x7, $CellContext`v16x2x3x47x5, \
$CellContext`v16x2x3x4x5x7, $CellContext`v1x24x3x5x67, \
$CellContext`v1x24x3x5x6x7, $CellContext`v1x2x3x47x5x6, \
$CellContext`v1x2x3x4x5x67, $CellContext`v1x2x3x4x5x6x7}, {{{2, 1}, {13, 1}, {
           14, 2}, {6, 3}, {11, 3}, {6, 4}, {12, 4}, {6, 5}, {13, 5}, {14, 
           6}, {9, 7}, {11, 7}, {9, 8}, {12, 8}, {14, 9}, {11, 10}, {13, 
           10}, {14, 11}, {14, 12}, {14, 13}}, Null}, {
          GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 650, 
           VertexLabels -> {$CellContext`v1x24x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x4x67 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[15, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x47x6 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x24x3x6x7 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x67 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x67 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x67 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[13, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x4x6x7 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x47x5x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x47x5 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] Pi]}, 
           VertexStyle -> {$CellContext`v15x24x3x6x7 -> 
             RGBColor[1, 0, 0], $CellContext`v1x24x3x5x67 -> 
             RGBColor[1, 0, 0], $CellContext`v15x2x3x4x67 -> 
             RGBColor[1, 0, 0]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
            0.021167650531286893`], 
            ArrowBox[{{0., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{2., 1.}, {4., 0.}}, 0.04847715736040609], 
            ArrowBox[{{2., 1.}, {2., 0.}}, 0.04847715736040609], 
            ArrowBox[{{2., 1.}, {1., 0.}}, 0.04847715736040609], 
            ArrowBox[{{5., 1.}, {6., 0.}}, 0.04847715736040609], 
            ArrowBox[{{5., 1.}, {5., 0.}}, 0.04847715736040609], 
            ArrowBox[{{4., 1.}, {4., 0.}}, 0.04847715736040609], 
            ArrowBox[{{4., 1.}, {6., 0.}}, 0.04847715736040609], 
            ArrowBox[{{4., 1.}, {3., 0.}}, 0.04847715736040609], 
            ArrowBox[{{3., 1.}, {2., 0.}}, 0.04847715736040609], 
            ArrowBox[{{3., 1.}, {5., 0.}}, 0.04847715736040609], 
            ArrowBox[{{1., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{1., 1.}, {1., 0.}}, 0.04847715736040609], 
            ArrowBox[{{1., 1.}, {3., 0.}}, 0.04847715736040609], 
            ArrowBox[{{3., 2.}, {0., 1.}}, 0.04847715736040609], 
            ArrowBox[{{3., 2.}, {2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{3., 2.}, {5., 1.}}, 0.04847715736040609], 
            ArrowBox[{{3., 2.}, {4., 1.}}, 0.04847715736040609], 
            ArrowBox[{{3., 2.}, {3., 1.}}, 0.04847715736040609], 
            ArrowBox[{{3., 2.}, {1., 1.}}, 0.04847715736040609]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
            0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["13", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{4., 0.}, 0.04847715736040609]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{1., 0.}, 0.04847715736040609]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                  "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{3., 0.}, 0.04847715736040609]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["15", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->650,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvXmcVdWxNnxun+7TE93NoIAKCCqDooI4hKgIoiiiIg4IOAAqKs4oDkhU
cEDEGYegVxBRARkUFBSjRhAHjIoYE0WcUIki0WjM5w1vku/+znueVetZu/bu
2rtN3vze+/3x+bPpPufss1atqmdV1apVq9bRp1069swLTrv0nDNO63j4JaeN
G3vOGeM7HnbRJaW38v+Ry5XdnMv9R5uOOfxdzOX4T7H0v/xzK/7B2/8ffaPe
/aqo/fHHH3uvWbNmxLx58/qsXr26xXfffZcb+i9+duL/5TZHyFDq3K/KPd59
9901w04a9dXIM8cVz71sypbRY8e/PXTEyENWrVqVO149c07v3l9N2W674rxc
bsvNrVu/fc5eex2y+oUXYs+ktXPCP9nOv6uvtGeGCwuauV/5Tp9++umGE0aM
Lt732Iu5fPGR5W+V/p25+GV81T1+rHruwi5dit+VQJtHA6V/f8zlQKoj79if
2N5x/0J7/+5+s54bFmPPc6eMPL04/aFn3IPl0eNvH3vCCAAsN8Q/d86AAcVN
bjrnSs8FMt8+Y6+9Ys811d6x/2R7/+5+m3pOJleuVh5vvWXLlg+PPnaYe7Ag
j4OTmHfuicHquTM6d3YEFoRMSNB8Lqu9Y/6F9v7d/WY9NzTGnl5r167ddPLp
5+nH/z72kmuPX7x4se7ePTepXTtN5t8fqqgwn8tq75h/ob1/d79Zz8XZA0B9
cNigwfrxz4ePPBvqS3fvnhvetasm8/MrO3Qwn8tq75h/ob1/d79Zzw2N6Z4b
b5p2y98m3nhfbC7ePuupZWeOPb/wt7/9jXP7xjuvvPJvLxQKMR3waS637NKj
joo911R7MpyKFj/8P3/t9d7HXw3+9esf3Dbt0svQdq7CaPdoeb7w93/8v3ts
2Pj18b965f27p4wbn/q8tF/eadPX3x/y2jufzLp0wmTQU5FOSutv//xj73Xr
Nw1c/dZHt1w/ZRoez1nPnxjjHBj93KjTz3KPU8lfP/3Rt48fdmqXjz7eSG3n
nrtwwABHMY3L2lzurbF779Pz3fc3xJ4z2nvzxBEj3XOD3HO1tX/d+ndwYsTy
Vb+bfNejK+dcftuSp8ZeOw+/Meq0/taduVevThs3fubbqUEb4P5Fc558/ZeT
712ONhZfMGUBuKbbUE28ec4++7TbtGmTbyIweczCZ9feeNtDL5ShjVw5Wmzx
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
DQa1tBm0n9FvVOCyVQaD9jUY1D6DQfsaDLLOabW0GXRwJqEL0xl0tMGgKoNB
Kec1Ld0XneFskcGg3gaDts9gUG+DQVUGg5rbDDokk9BF6QwabDCo0mBQvc2g
A41+oxKBWQcADzAY1CaDQQcYDLJOoabcbz0gk9DF6Qw6xmBQwWBQM5tB1tSO
TpjXZTDoIINB22Qw6CCDQQWDQSlFxg/PJPTxdAYNMRhUYTCoxmZQf6Pf6NqW
2gwGHWwwKOvM8sEGg6wj9Sm1rY/IJPSJdAYdazCo3GBQlc0gC7lRuYys44mH
GgzKOjh7qMGgcoNBKeWVj8wkVJJ62H/tjz/+eMSzz7+4csjI8X1Wr17d4rvv
vvOMqk6m5uBZ7BQvPWXsxFFzFz7pni3YzBKnvErTwK/ffdnV066ddtccfD3r
RJxMhOoY11QzI+bNmxcozqoY7NtJ5rmyHYx88PIVz+nR2Byt4FfmnDP+unEz
HnzMfSW60mWpcFZ0SeUe77777pphJ4366tQzLyqee9mULaPHjn976IiRh6xa
tSrJ4b6rX/uNe3bkmePw7Dejzr4kPJtS5PTIiMNjHln0jP76n04982J+PZ/B
4UFxDgeKfTMxissyODwozuH93nzzbd3OH0efPT45miSHj0owjSMZedbFEQlg
skxlLgs6ffrppxtOGDG6eN9jL+byxUeWv1X6d+bil/F9xej8Pmt/+/tvBhw1
TD1Xrp9LOzx3ZNTNlsOOHq6+XqW/bnHXezwnL3561ZeDjj1JfbWSXx34wq9f
bMRM/72DXnvjnUSXlbrLRiWSjs7myLcjTrtgyk13PZR7KsbA504ZeXpx+kPP
eJaEx98+9oQRgDutivGcY+CmvgMG3zL1/uXg2jGpj1bg0fVHDD7hoctvWRDg
l/68a/rb3n0HnffI0lfAlSYe/cNBhw6ePP3h58CI9EfjA/NA8sun1lu2bPnw
6GOHuQcL8jhYHW7XGJz+3OZTx1z0U56DJujz8iuvxtyZ/8P2ftJzehxLY8Pu
tXbt2k0nn36efvzvYy+59vjFixfrZv9tzx3zP9RvfNgAwAeHDRqsH/98+Miz
oX50s/+25475H+p3aWyy33jTtFv+NvHG+2Jz4vZZTz172pnnXDhn6aviB+Uq
zp27/A3oWv5A13jFmGe2v/vpn93u02POPm/3DZ9+SSWS9tyyM8eeX/jb3/5G
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
Z8yeM/eznXbptnDslXdB6JzBuaZNuoteQN/JrcyE/739sKky4fanZxNYvCQ1
XIpqSTyRrd/77Q0bcdPznb1ztTrJn16hrAMmTWIONbOO0sQtK/5qDB0GDWwm
SLmDRlDJ9bmevyEJPuKvO+0W9mv9uMlrbqBCTvpyWDflvLjlzFodr+XFK+4l
WGmlNAkOWf68uvb+GHTGe0JNLfNieZ8M5iWk6op2n3/nfUtH3zr1+qmLH9z5
s6+3ZPrnO0dSxfwFRxFVS65BnS2xpOpTl5Ln03kluOkMesuHq0SRi4mk05Cs
HVLjo21Kv2/aSOJS37iOizc+zqUJVRK6p6BCaGNwJFSSBHLp/GEuB58xJtRY
IicvEOU81omc5rGnQcF/8ze28hPIEFoKcuT+KXpZOGz2yW/2vrn//6oaX/vS
UTeex9mblXcvYqol/ejtrzWX1cHu4m8QjaUlVDUEoKIe+XDaDz/bG+LeJT6J
dVSU+bqR0+T0R64ADug7g8EZjDtFrGIc6/Ul6PRkGOakW0+VjB54C7xfgzFZ
WWemUsVi9JhLVmaL33uXzI+QGckOSQS33RJuPG8MHULVMmQI892ZgoD+tbpj
Qtbvu9+0x03XLpzhaxwFLY3Hso7n+ExaveTEnAVDj1i19n2oO8b9yCVePwzy
2hkytg7OyIlbd8SPt4urqxNhI8LGe70tVjmIUsX7XPXM4/3pUKOJlTX9Di9V
Tj48zRghpwtBAtXIgCkTO7xUD6ZZi7IIvVMcrlLH6KLzcu4aNr3zrC6Szuvo
ki8K4Q516YuIxRl0obe8zofwrlw5fSXqbkv8WWfyJNhVl1xr/tBwRSvsttG6
0HXjKS61VGh0Bre1AQnrPEwzTvv166HBnUb34XFwIBzMtvIwCzZG5KidS8tn
OE5HPvApYKYXOhgRF0HEEgWkU+x8PYc66gBtmLgpxknCQ+BNncobL6jyNRFi
SX1+0aidF14qJxfU2uec3M6sLBprgFsNPaAWlPKKaa7srV15nxdBVAFU2vfL
QpR8FpasOrUcPIEGgD7Te7/QpfrqV4ZPwOttDDR1MtDE/WDvubr5I2iqDbdx
+p+080/qAtRGyOovzYPvwZn2jh0NNFSNPiSi41k5FeCmwWdpmdjiXmUtYGL8
U1kLFwucDmez69YlTz8xMwQjjjIZ3eknnTznF6oEDHlmnWrSJ+jDjG0CPR0y
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
sq7MzDHL0xa1jWyRyNnlTXNAwQtVNQ2CbtkuW8hZx/tbpgq5iXoeBSyadMCS
wm1lCLelLVzZK6tJJoWwhpJsgm/ejJhWtDWX1/UkeGtDEwU3QtUmvPK3etEC
83E6kFaJLi/PUdSpaqnsH8ccDafnxeyUU3XQSfSP6j1mHgBME11DhuhapKrk
eF0Kv0cKcOrsNsqrpSGvlIw3SaqrSYYKWLqbWhZjdvs30nIselNuwH1IRHQI
AvnnGH3QUjg9MsqMe7Emg3fPy3V6INjdKZvL9Rlcbm5w2d92rgtNYnmjsnCt
alpxFqfU2pd6TRU8N8TFtBPcCfJZqKSvBugHXqHzzaEinOkYFeObLuUYavIM
jZpmeXduWrJKahrzssrhNBjM81XPMKG5FmP5X5N5DQbzGmzm+bo00JWMPuBv
P7jk9rtzizzfQAGoYZaWA5bn25hIwQO27mvDpCc2w3raXbJZ1SyDVfWprHK7
I8AX0rwABItL9QaXUhIc/ZFzFghy0JLxxDeqh0W9g23oHZ97rpwp3yCP3Ss5
xZPXMX9e5JfGktoMltSlTr2CLj+jlZnFhjqbDbcZxHo2QPqhda91vsseR1aV
s2bGOJoZMrRK1KRc5ODIlahG7odsyqozKKs1KKs1KKs1KKvNoExcp9yP2ZRl
1T+sMSirMSirMShLuR/BUSauVW5rNmWVGZRZ191UG5RVG5RVZ1AmTkPu79mU
ZZU/tW4lsjakrFozVRmUHS+U/Xc2ZRUZlFnXbFQalFm1TFJuM3CUiWbPub//
I5u8rCLH1iUvVlC8YJCXkiHsSBqmyGsiUy2rMHiFQZ4VdaswyEup5u9IGqHI
ayKZqiyDvHKDvHKDPKskSXkGeScr8mRKN0sjD59atFkl0fMGaXmDtHwGaacq
0sS81KausC2WlRl0WVa9zKArJXHY0TJK0SUO5g4WXd0/+mxLI5qK8Rxq3L49
ePmKF+aeNW5yn9WrV+PW7eThqcbb13j3NEWELAZbJ4kYs+jZtZc9sPgVTQAa
GvPIomfWDDtp1FcjzxxXPPeyKVtGjx2/7oThp8669Np70Kk56DNUfxLuqNb9
zZp459L/vOqup+ZfMm3xiU/+6pWPjx02snjfYy/6W9wrijMXv7zl5DMunH7N
tP+MD+RM1bDfv2XDaHRD/yOOK05/6JlSE3IdfKmhDYcfdTw4J186SzXg00Ra
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
Xg==\
\>"]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.762613850080509*^9, 3.7626138930140653`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", "=", 
      RowBox[{"ReadGrof", "[", "7", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"full", "=", 
        RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"DrawAugmented", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"AugmentedFormula", "[", 
               RowBox[{
                RowBox[{"FindFullFormula", "[", 
                 RowBox[{"VertexContract", "[", 
                  RowBox[{"g", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                ",", "e", ",", "full"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", 
                RowBox[{"EdgeList", "[", 
                 RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], "}"}]}],
              "]"}], "]"}], "]"}], ",", 
          RowBox[{"VertexStyle", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"v", "\[Rule]", "Red"}], ",", 
             RowBox[{"{", 
              RowBox[{"v", ",", 
               RowBox[{"AlmostSinks", "[", 
                RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}]}], 
              "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
  "Column"}]], "Input",
 CellChangeTimes->{
  3.7626121330048895`*^9, {3.762614380182485*^9, 3.7626143877787366`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v14x27x35x6, $CellContext`v14x27x3x5x6, \
$CellContext`v14x2x35x67, $CellContext`v14x2x35x6x7, \
$CellContext`v14x2x3x5x67, $CellContext`v14x2x3x5x6x7, \
$CellContext`v16x24x35x7, $CellContext`v16x24x3x5x7, \
$CellContext`v16x27x35x4, $CellContext`v16x27x3x4x5, \
$CellContext`v16x2x35x4x7, $CellContext`v16x2x3x4x5x7, \
$CellContext`v1x24x35x67, $CellContext`v1x24x35x6x7, \
$CellContext`v1x24x3x5x67, $CellContext`v1x24x3x5x6x7, \
$CellContext`v1x27x35x4x6, $CellContext`v1x27x3x4x5x6, \
$CellContext`v1x2x35x4x67, $CellContext`v1x2x35x4x6x7, \
$CellContext`v1x2x3x4x5x67, $CellContext`v1x2x3x4x5x6x7}, {{{2, 1}, {4, 1}, {
           17, 1}, {6, 2}, {18, 2}, {4, 3}, {5, 3}, {19, 3}, {6, 4}, {20, 
           4}, {6, 5}, {21, 5}, {22, 6}, {8, 7}, {11, 7}, {14, 7}, {12, 8}, {
           16, 8}, {10, 9}, {11, 9}, {17, 9}, {12, 10}, {18, 10}, {12, 11}, {
           20, 11}, {22, 12}, {14, 13}, {15, 13}, {19, 13}, {16, 14}, {20, 
           14}, {16, 15}, {21, 15}, {22, 16}, {18, 17}, {20, 17}, {22, 18}, {
           20, 19}, {21, 19}, {22, 20}, {22, 21}}, Null}, {
          GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 600, 
           VertexLabels -> {$CellContext`v1x24x35x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "35", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x35x4x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "35", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x67 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x67 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v14x27x35x6 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "27", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "35", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x67 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v14x27x3x5x6 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "27", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v1x27x3x4x5x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "27", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x35x4x67 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "35", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x24x35x67 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "35", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v16x27x3x4x5 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "27", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x27x35x4x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "27", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "35", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v16x24x35x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "35", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x35x67 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "35", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x35x6x7 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "35", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x35x4x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "35", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v16x27x35x4 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "27", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "35", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4"}], Rational[1, 6] Pi]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.01746207497820401],
             ArrowBox[{{-1., 1.}, {0., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{0., 1.}, {0., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{0., 1.}, {1., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{1., 1.}, {1., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{1., 2.}, {-1., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{1., 2.}, {0., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{1., 2.}, {1., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{8., 1.}, {6., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 1.}, {3., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{5., 1.}, {6., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{5., 1.}, {3., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{5., 2.}, {8., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{5., 2.}, {3., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{5., 2.}, {5., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 1.}, {6., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 1.}, {5., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{7., 1.}, {5., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{7., 2.}, {8., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{7., 2.}, {6., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{7., 2.}, {7., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{2., 1.}, {0., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{2., 1.}, {3., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{2., 2.}, {-1., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{2., 2.}, {3., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{2., 2.}, {2., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{4., 1.}, {1., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{4., 1.}, {5., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 2.}, {0., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 2.}, {5., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 2.}, {6., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 2.}, {2., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 2.}, {4., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{4., 2.}, {1., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{4., 2.}, {7., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{4., 2.}, {4., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 3.}, {1., 2.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 3.}, {5., 2.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 3.}, {7., 2.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 3.}, {2., 2.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 3.}, {3., 2.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 3.}, {4., 2.}}, 0.061894273127753294`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
            0.7]}], {DiskBox[{0., 0.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.061894273127753294`, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-1., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-0.9381057268722467, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 0.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0618942731277532`, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.061894273127753294`, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0618942731277532`, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 2.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0618942731277532`, 2.0618942731277534`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 0.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.061894273127753, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{8., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {8.061894273127754, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 0.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0618942731277534`, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0618942731277534`, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.061894273127753, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 2.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.061894273127753, 2.0618942731277534`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 0.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.061894273127753, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], Offset[{2, 2}, 
              {6.061894273127753, 1.0618942731277532`}], ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.061894273127753, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7., 2.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.061894273127753, 2.0618942731277534`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0618942731277534`, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 2.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"27\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0618942731277534`, 2.0618942731277534`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.061894273127753, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 2.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0618942731277534`, 2.0618942731277534`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 2.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.061894273127753, 2.0618942731277534`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 3.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0618942731277534`, 3.0618942731277534`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->600,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v14x27x3x5x6, $CellContext`v14x2x35x6x7, \
$CellContext`v14x2x3x5x67, $CellContext`v14x2x3x5x6x7, \
$CellContext`v16x24x3x5x7, $CellContext`v16x27x3x4x5, \
$CellContext`v16x2x35x4x7, $CellContext`v16x2x3x4x5x7, \
$CellContext`v1x24x35x6x7, $CellContext`v1x24x3x5x67, \
$CellContext`v1x24x3x5x6x7, $CellContext`v1x27x35x4x6, \
$CellContext`v1x27x3x4x5x6, $CellContext`v1x2x35x4x67, \
$CellContext`v1x2x35x4x6x7, $CellContext`v1x2x3x4x5x67, \
$CellContext`v1x2x3x4x5x6x7}, {{{4, 1}, {13, 1}, {4, 2}, {15, 2}, {4, 3}, {16,
            3}, {17, 4}, {8, 5}, {11, 5}, {8, 6}, {13, 6}, {8, 7}, {15, 7}, {
           17, 8}, {11, 9}, {15, 9}, {11, 10}, {16, 10}, {17, 11}, {13, 12}, {
           15, 12}, {17, 13}, {15, 14}, {16, 14}, {17, 15}, {17, 16}}, 
           Null}, {GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 650, 
           VertexLabels -> {$CellContext`v1x24x35x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x35x4x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[10, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x67 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x67 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x67 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x27x3x5x6 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "27", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x27x3x4x5x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "27", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x35x4x67 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x27x3x4x5 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "27", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x27x35x4x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "27", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x35x6x7 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x35x4x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] Pi]}, 
           VertexStyle -> {$CellContext`v16x27x3x4x5 -> 
             RGBColor[1, 0, 0], $CellContext`v14x2x35x6x7 -> 
             RGBColor[1, 0, 0], $CellContext`v14x2x3x5x67 -> 
             RGBColor[1, 0, 0], $CellContext`v14x27x3x5x6 -> 
             RGBColor[1, 0, 0], $CellContext`v1x24x3x5x67 -> 
             RGBColor[1, 0, 0], $CellContext`v16x24x3x5x7 -> 
             RGBColor[1, 0, 0], $CellContext`v1x2x35x4x67 -> 
             RGBColor[1, 0, 0], $CellContext`v1x27x35x4x6 -> 
             RGBColor[1, 0, 0], $CellContext`v16x2x35x4x7 -> 
             RGBColor[1, 0, 0], $CellContext`v1x24x35x6x7 -> 
             RGBColor[1, 0, 0]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.01746207497820401],
             ArrowBox[{{3., 1.}, {0., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 1.}, {3., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{3., 1.}, {4., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{5., 1.}, {6., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{5., 1.}, {1., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{5., 1.}, {5., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{8., 1.}, {6., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{8., 1.}, {8., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{8., 1.}, {9., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{2., 1.}, {0., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{2., 1.}, {1., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{2., 1.}, {2., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 1.}, {3., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 1.}, {5., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 1.}, {8., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 1.}, {2., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 1.}, {7., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{7., 1.}, {4., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{7., 1.}, {9., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{7., 1.}, {7., 0.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 2.}, {3., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 2.}, {5., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 2.}, {8., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 2.}, {2., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 2.}, {6., 1.}}, 0.061894273127753294`], 
            ArrowBox[{{6., 2.}, {7., 1.}}, 0.061894273127753294`]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
             {RGBColor[1, 0, 0], DiskBox[{0., 0.}, 0.061894273127753294`]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"27\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.061894273127753294`, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{3., 0.}, 0.061894273127753294`]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0618942731277534`, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{4., 0.}, 0.061894273127753294`]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.061894273127753, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0618942731277534`, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{6., 0.}, 0.061894273127753294`]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.061894273127753, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{1., 0.}, 0.061894273127753294`]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"27\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                  "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0618942731277532`, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{5., 0.}, 0.061894273127753294`]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.061894273127753, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.061894273127753, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{8., 0.}, 0.061894273127753294`]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {8.061894273127754, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{9., 0.}, 0.061894273127753294`]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {9.061894273127754, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{8., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {8.061894273127754, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{2., 0.}, 0.061894273127753294`]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"27\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0618942731277534`, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"27\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0618942731277534`, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{7., 0.}, 0.061894273127753294`]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.061894273127753, 0.061894273127753294`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["10", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.061894273127753, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7., 1.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.061894273127753, 1.0618942731277532`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 2.}, 0.061894273127753294`], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.061894273127753, 2.0618942731277534`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{1120., Automatic},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQm4VMXVNtr/6eHM5zDPoyAcZBBRERUQBxREEGUQUeGgiKCIhEFRZJ4E
kXlSUQQZFQUVwQCKYpSoUYxR0ZhPVPKJJkYT4xd+zb1P3/PWqlW79u61qzd+
5/7Jvc+XJy2nu3dXrVrrXUOtWlXVe9iEkTffPmzCqJuGNbls3LCxI0fdNL7J
pXeMq/go/r9isUR5LPa/rmwSw9/pWIz/k674f/A/w/EfPPA/X/3PV/JXddU/
uQ2OHTs25uGlSzfefd11H/du0WL7hH79Jq2cN6/D22+/HRtZSc/c8n+wr383
mq8jdtdR/xQM2b5+/YdjWrVKP1MhnPeU9sbSH1W89sRix6Y1aDB3yd13F/7w
ww83/7/6+PB/J2L+vzzUa0m4tdU/8bXTbrrpr4+VlqZ/rLDLKXwRi/+4P5V6
bsIVV6R+/PHH2E2V/NyN/6J+/93HMYjEUose77PnmWe+WVm9unowTz++J5Wa
snLmTPXEsEp+rvxf1O+/+ziuIbHUpMerfvvtt+/f1Lq1kmIBPf7phKZNW370
0UfqiaGV/NyQf1G//+7jGOgTS5eDBw9+vaBWLfWgfhxmEA7ObrbSnhvyL+r3
330cfrHgY+WN7McrPBNiDrvZSntuyL+o33/3cfjFAleUfjvw+Nex2Cs3de1q
N1tpzw35F/X77z4Ov1iGbF6//qfNyaTv8UOx2PI5o0fbzYY9t+P2QTdcu+vl
38WK1H+T96zZdnDuA4/t55f6tI+7jV2j+l/ntZHAz2Lxi19/9z/Uz/DqVTnE
/sufG1LJ7fll2enQoUNfzqlb1378p8eSyelzF66EXGJxsDahmNz246Nf9Q/9
WQI/67d9+/Y+L/76oy2/mP9kybMjZ2yOxdff+cCOqn/7+z/UD3u7fz5485Zt
Q5/ef3j77XO26Z/fP/+Rvamf/vl/qR9e4SZ6xNp1j9+x/plfE9Gx5K2bdr0J
yvnV5a33P4/FMYwKx80k4XWVu93bVz24buLa7b/idoc/8cLbdrudDh85xu0W
/uPET1HbBbds2VXac0MquT0/ZjAL2Dume/f0sYoH89XjqfQPsdjhkWecMeGh
rS/OWvr4i9vumPfkyzfcta6YpAi+9fvlrz60QSA0k4tm3hl1xhkIq/AUuAlu
AxCxImpL8Zk5HN5WKthWrW/++gMgrZtBk/joZJvBMPBbPbJV01fumr5s4wEl
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
UpWqqyQ2P0ky3ytTJC3XSGmGIrfMB0dspnOlylzK42VJc+cLMpe2BLRxyzxf
kHkDmcNS4XAbh1xdxYVtI7KZ5sex/TJF4SWyUq4sVObXRGzmwkqVeVKQeZZ0
r3RDjbRdtJ1b5tKNNPVlDks7zto55Oo6jf30iGx+imT+kkyRVMgkpberuWXe
P2Izl56MzAuyyRxPQeCUZCsIDdYrvrWFLF0NQ3IvcJ0dbgs45PQE6XQCarlQ
lGE6ZEnpjIjspLRI7GWZGimVL60a1HTL9qqIzfT6b+vz4StvX+2Pz326O//+
R/c9NmnRjm5vvnf0LIGADpl6OmfR+v2bxy3Y3uSPX39XV+bSmaEt5bJs0Ony
Wat3418jI+k0dYktVFQSOyj3XkdoRVpKreOWUZ+IzfQ9aRm91e+Oh8L0j6ph
cvEn8mLzFj62L0P3JGUj1uVi/Hh+8ioajE/hasj8OrsSpSUxiJJTsV/JvUtL
vdISc5YFhV4RmxkQTVpUQVRou76slrNE8H05bncpuUZp/TLH7S5LZdZKV41W
lumUePsMCfp1mRrpMkCpsKeRW9A9IjYzOJqg9azZF+Mkws2pEBILx46Eyttx
u4FP3im3vENK7s8VWq/MUEhiM2UrY7+WKZJKl6SyqaZumXeP2MzQaDK/XpB5
XjSZJwSZF7hlLk1zpWXhArfMQ4o2zxdar8wpj8Tm50jmb8oU1RBakaphm7tl
flHEZoZHk/kgQeY0f3WGxEX/deJHFnSJW85SCqu1IGdqJjQsDrKzi9BsZeYx
JJ5Scjr2G1nAUsGuVDvc0i3gCyI2MyqagPsLAq7iV+pZSza89H6vUSs3VPw8
s7IpVLBSPlpau6/mKTBW1v7j4puW4HBunDgLHnQVmqnMJKTEu+dJkO/IgpRu
05Q2AGS5EL1zxGbGRBNkX0GQxItC2+xGDMdCpSqtLLUMlWpBkHdh6ivZ48pc
XpAYS+sKsXdlKUv7YaRdOW3dUj43YjPjo0n5ilB19TvXZDS/XOwWtrRYLFVp
VJVZmGVDRqdQ71Y5y4gSm+mK4Nh7MsFVhFakTaXt3TLvGLGZSdFk3kOQeakg
84JoMs+SfpbKJZoJMq8iszBLOCZNmiuzQEBiM60lxd6XCZZ2vEo7Ss50y1ya
1UvNTIkm80sEmUsT5dJoMi90y1xacJcqeEImzFkqi6W8S2UW+Ehs/iXJ/EOZ
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\
\>"]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.76261213498522*^9, 3.7626143892365646`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", "=", 
      RowBox[{"ReadGrof", "[", "8", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"full", "=", 
        RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"DrawAugmented", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"AugmentedFormula", "[", 
               RowBox[{
                RowBox[{"FindFullFormula", "[", 
                 RowBox[{"EdgeContract", "[", 
                  RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                "full"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", 
                RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}], 
           "]"}], ",", 
          RowBox[{"VertexStyle", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"v", "\[Rule]", "Red"}], ",", 
             RowBox[{"{", 
              RowBox[{"v", ",", 
               RowBox[{"AlmostSinks", "[", 
                RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}]}], 
              "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
  "Column"}]], "Input",
 CellChangeTimes->{
  3.762634141732096*^9, {3.7626341785783653`*^9, 3.76263418197639*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v147x26x3x5, $CellContext`v147x2x3x5x6, \
$CellContext`v14x26x3x5x7, $CellContext`v14x2x3x5x6x7, \
$CellContext`v16x24x3x5x7, $CellContext`v16x2x3x47x5, \
$CellContext`v16x2x3x4x5x7, $CellContext`v17x24x3x5x6, \
$CellContext`v17x26x3x4x5, $CellContext`v17x2x3x4x5x6, \
$CellContext`v1x24x3x5x6x7, $CellContext`v1x26x3x47x5, \
$CellContext`v1x26x3x4x5x7, $CellContext`v1x2x3x47x5x6, \
$CellContext`v1x2x3x4x5x6x7}, {{{2, 1}, {3, 1}, {9, 1}, {12, 1}, {4, 2}, {10, 
           2}, {14, 2}, {4, 3}, {13, 3}, {15, 4}, {7, 5}, {11, 5}, {7, 6}, {
           14, 6}, {15, 7}, {10, 8}, {11, 8}, {10, 9}, {13, 9}, {15, 10}, {15,
            11}, {13, 12}, {14, 12}, {15, 13}, {15, 14}}, Null}, {
          GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 600, 
           VertexLabels -> {$CellContext`v1x24x3x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v147x26x3x5 -> Rotate[
               Row[{"147", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "26", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v17x24x3x5x6 -> Rotate[
               Row[{"17", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v1x26x3x4x5x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "26", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v17x2x3x4x5x6 -> Rotate[
               Row[{"17", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v1x26x3x47x5 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "26", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
               Pi], $CellContext`v147x2x3x5x6 -> Rotate[
               Row[{"147", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v14x26x3x5x7 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "26", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x47x5x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x47x5 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
               Pi], $CellContext`v17x26x3x4x5 -> Rotate[
               Row[{"17", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "26", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5"}], Rational[1, 6] Pi]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
            0.021167650531286893`], 
            ArrowBox[{{-1., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{2., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{0., 2.}, {-1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{0., 2.}, {2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-4., 2.}, {-4., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-4., 2.}, {-3., 1.}}, 0.04847715736040609], 
            ArrowBox[{{1., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 2.}, {-2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 2.}, {1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-3., 2.}, {-4., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-3., 2.}, {-2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{0., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{1., 2.}, {2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{1., 2.}, {1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{1., 2.}, {0., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-2., 2.}, {-1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-2., 2.}, {-3., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-2., 2.}, {0., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {0., 2.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {-4., 2.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {-1., 2.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {-3., 2.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {1., 2.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {-2., 2.}}, 0.04847715736040609]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
            0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"147\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-1., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"147\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-0.9515228426395939, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-4., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-3.951522842639594, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-3., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-2.951522842639594, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-4., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-3.951522842639594, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-2., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], Offset[{2, 2}, 
              {-1.9515228426395939`, 1.0484771573604061`}], ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-1., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-0.9515228426395939, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-3., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-2.951522842639594, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-2., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], Offset[{2, 2}, 
              {-1.9515228426395939`, 2.048477157360406}], ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-1., 3.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-0.9515228426395939, 3.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->600,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzdvQuYVsWxLvzt+eY+zAwXBQQEBBUUEQQRUOQmKOCNxKgYo6JBxTveCYig
KCgiqKhoBFEE8YLiXaMmokZRo2CM12iCShKMGkmy3eEkOeeZw9vVb3et9dVa
Q/Y+//Pvc/Jk5Jtv1qqurnq7uru6qvrwky+afOo5J190xg9P7nrIBSdPmXzG
Dy/sevB5F2z7qvhvhULZhELh347sWsDnpkKB/2na9n/5z/fxH3z93/mLE93n
YqdNmzYV/J8L/0P9/Xj3uary73//+7k/XrL0o2EjR388/ujj8e+ca669ru7b
b78tbC15vnjXRZf86NsLZsxvuueJNwtl7r/Fv0+bc9vjp04+G7QKf1PvCD/F
I5586qmvTztvunu63L9z6eybZyy44Ub3xH+UvrN68pnnNM277SH9TtOS1S+v
H3f4+Kx31o0/6pim2+77mXu6Qt75aNwRR7X65ptv3BPflr6z5OJLpzXNvnFF
op1tNEArq53e77zzzmcTTjxdvVOJ/k29cfHds25a8cJJDz+/4cBfvPtZ26//
/O1fS16vG/PSmx+fd8edK397zPGTmmbOX9Y05+b78O+m4085a+nF067s994n
f+j90cYvVp1/7YOFsscmX3FvoQKf51x/1/PHPbH2V/h7q7/8+98Kf1K0J7jP
DXjvxqtue2rabfe/hG96fPjhh4suu3zWw6edcS7+7ffWW2/hezwDVgev/2DT
3Zdcv6bSNVPE1440iH2pyIssKtAjkMbTq8+5+v5Om7/6S6Ho/lYDcgFp237A
Jp87Z/njr91x2U2PFcqlnSXTb3wUtNyzX6l2vicSrvvb1n9AinjXi6Bq0gPP
vKXp77Lpiy34C571PFSQN/ysvHDeQw+eM4fvF39yymX3LJu6YM2gDR9sKnyt
2jxK2oTGIAr3tH/HieYf//yf7okyee6on/z8ffzV0ZF2W0AO4JVtP3HarJWv
HHvR0ucnTlsO1YFX8Ab54j0t2u/4gbqNxHXXLn3WNezFBKSELvvmgQL81Ymj
XL7DZzbtWa9+97Azbnlu4vTlTjxeXJqFLxQL3xUyPX676auLl6z++ZOnzlxB
CeDxFAvlkAh7i78LF1UADgWIH5A57+5HXzvi+XUfek7L01z8oUQPFQe9+vZv
brj69qdJBlz51yuIKf64zvm/HfHT1z7k94uuvPVJPFuospv9XUnnXbPgFr+h
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
VJN7GE3uYzS5j9HkPjb5GxT5ngb5fgb5fgb5fjb5BYp8D4N8f4N8f4N8f5v8
fEV+d4P8vgb5fQ3y+9rk5ynyuxnkBxjkBxjkB9jkr1HkdzXI72eQ388gv59N
fo4i390gP9AgP9AgP9Amf5Ui380gP8ggP8ggP8gmf6Uiv4tBfrBBfrBBfrBN
fpYi39Ugv79Bfn+D/P42+csV+S4G+QMM8gcY5A+wyV+myHc2yA8xyA8xyA+x
yU9T5Hc2yB9okD/QIH+gTX6qIt/JID/UID/UID/UJn+JIt/RID/MID/MID/M
Jn+RIt/BID/cID/cID/cJn+BIr+TQX6EQX6EQX6ETX6KIt/eID/SID/SID/S
Jn+uIt/OIH+QQf4gg/xBNvmzFfm2BvlRBvlRBvlRNvkzFfkdDfKjDfKjDfKj
bfKTFfkdDPIHG+QPNsgfbJM/TZFvY5A/xCB/iEH+EJv8JEW+tUF+jEF+jEF+
jE3+FEW+lUF+rEF+rEF+rE1+oiLf0iA/ziA/ziA/ziYvgWA8KE3Eg403vvvO
dj5XZnB6aOR01TlX3Km/M1y1SXoZwKzOZNEfEuRHsB22Hc8cvt10avKeCZI4
NEnv4wOHj9oy7JDvJuiN8/S8VAa+/cFnmW1njKnidrA9Xkuq+di9Q7fzucP+
z9B747sTJl6w9KGXt5ueQv1bhx9zyt/On35doWg8J2aiKi0xfMs2zPckNsW7
VpoPWxy7nc+N+6/T+8cl/zV6fzrt3OznUmbvsZPOnf3NqedOrzAePSIhoWaD
NMdu53Pj/u+g9+TESWfkPpcUT7PxqGO287mx/4/QOzwhnmZDb8du53Pj/h+h
l0SPEWVcxHDHcNbNN/vcuP/D9PjcRxu/GPPcC6/gWWo78ZxadR3/wKPPfX7s
CaeZz3l6iPM8/OnnXsqkd0Ri2j/uoYfXWBHU82fPuc5PKNWTVtx7v/XMVfPm
L0Qkn18dTL5rxX3WY/OuvmZ+c6TmXjNvAUjJ8sXFXyN+EwsBBm4ikhRTVhbH
aMavfhBaiJkKYd4IKC1zMeDVWDRlvX3F/AU3yAqhARJEyPCZK594g6HEoAL+
svjH636VIM7GaoaMrzh3yoUMGQdP6BL4E7XW4SMaQoPWK3gKIeEuVlZUXId+
ME7Wegd/xwzkIix9OwwFh0iy2nFRxtukzn0xIKe1UOHCWFukI8gtcpgEwSKC
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
gHtPQ+O+XaiLqQsMMuJOHG1DaFa2VI9fb96YRnU/A9S+qA/0hOkM5i9UXPVm
kcf+PETQNZrwN4Db7qYTqrVh9gnusIBYb8WoXp8DBpKsIMD9Yiiq4X3THAfO
a+adB9sV054D53iwF7McWsTmiDIOd1a/cROB1CMq13Gn6EZvA8xVmWCuY6Gs
sOZrKg1FTZ9mczC53/ZKdsFGM0wkOqPyPupg89GSVUXgzDt++sCnu13WP6i3
ykBxr0wU1wDF2ExwRsW3dpaVLN1hk9cPuGY4Mr6J3gGZJrnIlY9bjfjuwNJA
BxiY6SJO33nyjXXf7HjpzsnuOKF1MzohvkRXeoE1zLShpW+dHmjONyx45Q0w
cMoqJP+ZEPbqbNjGsIuYLiawrddhlhxFXEdxr5wRfFoM7kL8ZtWTrMlcdbi6
WmyXNSjwOStQlTy5ONU9kv0xMex6pvfVOjGPAVyfdr1i19dGXn38ismLr0YN
JHKcwO1ehsr92knTZ3hKLEI7v+/zo24d/ZvdZvV+bOK8eb/qM3e/Uc99+NNB
Bk6FXAtdRwmCZqgdcArSf+hweadfDL3qmDsuuOPG93pd09tyKsel5C4G33KM
U48xpV3mrAoEnln/KTpXtmxxm3qxq1W6z+lY9UJOsDr0ETityAZrDIWLqbbO
1SWHrFXpGjWJGFOVtxbWYFYFyToDmQ3kU+UTS5u1VEKoUNMUs+KxpGDK2u5J
3lPAlAbqeLCODkCjyy5ctAyJwUsn3XsGixcIAlDLUapSJ6qQlxkg7W0oWxyE
DXTKT5v7k3lvHHDtIZjyUSbj7T7X9aF9YmfQERbC3dcAqu+CriiIMXTvWTfc
fPmi+56/4fyHLtUedCk4bHjQo4PAOtTxJUO5GMMwoH2guUYrggDZdDJYGugU
g1qzXRHqXpaQb3DY5oAzBhM3JD/FkFIW8qI1gyzAfZE2O9YppFc9Ac36TGiG
uFO9QSotXxOcl1g+4We3FKtJVEp7dWD11z2u6rV55x/1RGkNl3Hh2Wd6JVSo
/G1J35eFyr0N5QoPDT9Y+cb9X+84rcO/N17c9qQH17prznRWFRe2XK3DNmJq
tKZ5XyDurX2vGwz2Xx96zZF0HNC7r6s/eU4ZW58CZBeDZ8lSqWYQQNiBN8ks
z8pFqbhf+s/F9WzFnRcTcecq7Sk4yHOwGFMyWqYU7IJDmyt2kygmZAGxMROI
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
+tDLfB/cfTJk2Ci8X/ftt9/mHdeKD7mG/R749gefWWyATNZ5rXDhbg6acfPK
n56/+PY78Npnh46f8JsDhh6E11tt+fNfKNblWqrFuy665EffXjBjftM9T7xZ
KHP/Lf5j2tW3vfmdYyZC4oVD5bkXvj/xjL+df9l1+rm/T5tz21tHHnNSxz98
+Q2fgzxf+d7xp4FmoeieqyS9A99457eacX//3E9OnHT2386frklXgfTjp04+
u91Xf/pzicwOiXBc993vn6qb4nsZTT026Yzztk6ZPi/di1eOOf6HEH3hHhGO
t+hHPPnUU1+fdt5092C5f/zS2TfPWHCD+BnHbudz47Kf++clVy567rhJFzpA
ZdMrB72fHXPy+ZRCTtP/2D6SSRaXJ3q+evKZ5zTNu+0h/XjTktUvrx93+Hjd
82afG/ffnF6y2+vGH3VM0233/cw9WCGPfzTuiKNaffPNN+6JMdv53Nj/5vTu
TnR7ycWXTmuafeOKhJS2vf7OIYd+xxk/N6MVij1+u+mrYOwPyn8XLGiNNfvc
2P+f6CUR0Pudd975bMKJp+uhh3GD8XPUT37+/upzrr6/8rHJV9xbKK46/9oH
MXW4uWpY5uuVeP2E+x58+MyVT7ipBM9jLjgk85UiW9Qdafa5cdv5nIRpVjCK
AOZ15vzb7v/82BNOI1YSzycmjKrjHnp4zW+POX5S08z5y5rm3Hwf/t10/Cln
XTF/wQ1cWHTa/NVfrrt26bNOThUiLTQTsDPMz9V5tPx6CFa8TAi5oNptBh16
ACDdZCAwrM4i9eOpl10FModuB/eHCSno56w777o36zlpsRyDYcxLb36MjgEG
RcdkDVc4uS2tEJH6nV+PDz/8cNFll89ace6UC/Fvv7feeosbImLOERc5FBEc
c8KjP/0lxOzXZjYNla2dVsets255ApFG7glf2MGiAaDefcn1a056+PkNoONR
FtpbffpZ54X2RMg14GvWTSteQJv4xuTNLwoxKMCR4q0G3+nlrfn+ShGhD4/R
iMPPj25/4GW3KEY/C0UXhANpRfyH1axrs1ykgl6Gln3cAyZc/BVSgL79Qgdf
h6oCMkRdDSrAgVy4v4+JzUEoujkoNzS3WjrUIan3i5es/jnjYtED9AR9wg97
5eOutSjx8+gZV96LAS7MuRp3eIt/xsAChr15AYTRJzWNVOB3WDm+4hQzNoIK
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
HrsRwuo0S+4/2+30KPzb/wbzpkVO\
\>"]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v147x26x3x5, $CellContext`v147x2x3x5x6, \
$CellContext`v14x26x3x5x7, $CellContext`v14x2x3x5x6x7, \
$CellContext`v16x24x3x5x7, $CellContext`v16x2x3x47x5, \
$CellContext`v16x2x3x4x5x7, $CellContext`v17x24x3x5x6, \
$CellContext`v17x26x3x4x5, $CellContext`v17x2x3x4x5x6, \
$CellContext`v1x24x3x5x6x7, $CellContext`v1x26x3x47x5, \
$CellContext`v1x26x3x4x5x7, $CellContext`v1x2x3x47x5x6, \
$CellContext`v1x2x3x4x5x6x7}, {{{2, 1}, {3, 1}, {9, 1}, {12, 1}, {4, 2}, {10, 
           2}, {14, 2}, {4, 3}, {13, 3}, {15, 4}, {7, 5}, {11, 5}, {7, 6}, {
           14, 6}, {15, 7}, {10, 8}, {11, 8}, {10, 9}, {13, 9}, {15, 10}, {15,
            11}, {13, 12}, {14, 12}, {15, 13}, {15, 14}}, Null}, {
          GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 650, 
           VertexLabels -> {$CellContext`v1x24x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v147x26x3x5 -> Rotate[
               Labeled[
                Row[{"147", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "26", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], 
                Style[1, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v17x24x3x5x6 -> Rotate[
               Labeled[
                Row[{"17", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[15, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x26x3x4x5x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "26", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x26x3x47x5 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "26", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v17x2x3x4x5x6 -> Rotate[
               Labeled[
                Row[{"17", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v147x2x3x5x6 -> Rotate[
               Labeled[
                Row[{"147", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x26x3x5x7 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "26", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x47x5x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v17x26x3x4x5 -> Rotate[
               Labeled[
                Row[{"17", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "26", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x47x5 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] Pi]}, 
           VertexStyle -> {$CellContext`v147x2x3x5x6 -> 
             RGBColor[1, 0, 0], $CellContext`v1x26x3x47x5 -> 
             RGBColor[1, 0, 0], $CellContext`v17x26x3x4x5 -> 
             RGBColor[1, 0, 0], $CellContext`v14x26x3x5x7 -> 
             RGBColor[1, 0, 0]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
            0.021167650531286893`], 
            ArrowBox[{{-1., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{2., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{0., 2.}, {-1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{0., 2.}, {2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-4., 2.}, {-4., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-4., 2.}, {-3., 1.}}, 0.04847715736040609], 
            ArrowBox[{{1., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 2.}, {-2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 2.}, {1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-3., 2.}, {-4., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-3., 2.}, {-2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{0., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{1., 2.}, {2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{1., 2.}, {1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{1., 2.}, {0., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-2., 2.}, {-1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-2., 2.}, {-3., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-2., 2.}, {0., 1.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {0., 2.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {-4., 2.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {-1., 2.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {-3., 2.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {1., 2.}}, 0.04847715736040609], 
            ArrowBox[{{-1., 3.}, {-2., 2.}}, 0.04847715736040609]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
            0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"147\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"26\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                  "RowDefault"],StyleBox["1", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{-1., 1.}, 0.04847715736040609]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"147\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-0.9515228426395939, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{2., 1.}, 0.04847715736040609]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"26\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-4., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-3.951522842639594, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-3., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                  "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-2.951522842639594, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-4., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-3.951522842639594, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-2., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"17\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-1.9515228426395939`, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.04847715736040609]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"17\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"26\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-1., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"17\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], Offset[{2, 2}, 
              {-0.9515228426395939, 2.048477157360406}], ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-3., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-2.951522842639594, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{0., 1.}, 0.04847715736040609]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"26\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"26\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-2., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-1.9515228426395939`, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-1., 3.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["15", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-0.9515228426395939, 3.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->650,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvQe0VUW2LrzvOftEOIEgoJJECQYUDIgoQYkiUUUwIYogJkRFxICgIggG
1FbRFkUbBFQURAQziNrYKmBGTKhoo7ZXuvv2u3a4/93vfFXzqzXXPnMtzn2/
Y7zxj/H36CM7rF01a6aaNWuGwWdPnjDu4rMnnz/27Nb9Lzt70oTzx17eut8l
l9V8VPhvmUzB3Ezm3y5vncHrXCbD/+Rq/u//cyv+g4//P/XBVPe6qN7f/va3
rhs3bjx1yZIl3Tds2NDg559/9g9UqYevdK9LOr7//vsbR5521h9Hj5uUu+CK
m34YM+HyzSNOHd17/fr1/sFK9aMp7nXhPl9++eW2k08dk7tv2SuZwtyi1e/U
/HfB8tcwSPTDito/fOGM0efk7nx4jftJNvrh5uEnnwqw/cP11Q+v8D9s8sMP
P3w6ePhI95Ni/0PMhnW6J9zD9Wr/8NBNmzbtOP2cC/UP/znhsutPWr58eeoP
Ac4n/QYO0T/8etTo84Aw+4eyxlk3z7nlH1fPui+2xtsfXPXc2ePOP/TDT3fU
XuOUaMaXzxgzDj8WrJblbrxz8aaTR53ZfMeOHb1//+4XqyZcv+TOmfetueSR
p98csOGdz9p/ueNPfpCSWkuo2GfH97uuvu+xDXvv/OFPgGpbz+P6Ygmf9O43
cMEVV17d9Icf/3TFguWvd9y2/fuuW7buWH7xTY9lspgik51128Mvnfv4c5u6
v/3h1813/ukvbtwCNcfl7nW23n/+8k88h18NefnNTwrdx2UnPvPcuuJ//OMf
GWFTDI9HAE63zR9/s/TSOU9kit1UhZgW00RYlSku8/yMYfE81178z3/9V8bP
U3jLnAdfAAjunQevCHPgWYx76cIVv3/oqjtWyrLcXEBLNNe/qQknCc989Pkf
751xz2r3kwL33xJ8xsU4wtdMim+wMAGmGANjAnyOvxqglz9x8azH/BDZ1eNn
PLpqwg1LTl29/gP8vNb0E/30QPeMuxav8xD7/2JNYXq/zkLgDN8C/ZmsJzlJ
wb9nx01f/MbIyQ++Mnrqw3jf+tsfdmH+Bdfc+TThyPy3guEi4UVFVo27Jj/9
+W/+Cf9f8CHpIjAUNvjLf/znI1NuW6HQV461fzjo/HveH3zBvfieKMyH5b8U
KBdH1MhHx1lPvbQloMODksUwXDaGEmjAPfxYoCkEtDffuvBFxUlFFjSZf9ai
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
RbdS5t/+Nwla3jw=\
\>"]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7626341427849298`*^9, 3.7626341840499477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", "=", 
      RowBox[{"ReadGrof", "[", "9", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"full", "=", 
        RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"DrawAugmented", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"AugmentedFormula", "[", 
               RowBox[{
                RowBox[{"FindFullFormula", "[", 
                 RowBox[{"EdgeContract", "[", 
                  RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                "full"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", 
                RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}], 
           "]"}], ",", 
          RowBox[{"VertexStyle", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"v", "\[Rule]", "Red"}], ",", 
             RowBox[{"{", 
              RowBox[{"v", ",", 
               RowBox[{"AlmostSinks", "[", 
                RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}]}], 
              "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
  "Column"}]], "Input",
 CellChangeTimes->{3.7626342053126116`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v147x2x3x5x6, $CellContext`v14x2x3x57x6, \
$CellContext`v14x2x3x5x6x7, $CellContext`v16x24x3x57, \
$CellContext`v16x24x3x5x7, $CellContext`v16x2x3x47x5, \
$CellContext`v16x2x3x4x57, $CellContext`v16x2x3x4x5x7, \
$CellContext`v17x24x3x5x6, $CellContext`v17x2x3x4x5x6, \
$CellContext`v1x24x3x57x6, $CellContext`v1x24x3x5x6x7, \
$CellContext`v1x2x3x47x5x6, $CellContext`v1x2x3x4x57x6, \
$CellContext`v1x2x3x4x5x6x7}, {{{3, 1}, {10, 1}, {13, 1}, {3, 2}, {14, 2}, {
           15, 3}, {5, 4}, {7, 4}, {11, 4}, {8, 5}, {12, 5}, {8, 6}, {13, 
           6}, {8, 7}, {14, 7}, {15, 8}, {10, 9}, {12, 9}, {15, 10}, {12, 
           11}, {14, 11}, {15, 12}, {15, 13}, {15, 14}}, Null}, {
          GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 600, 
           VertexLabels -> {$CellContext`v1x24x3x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x57x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "57", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x57 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "57"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v17x24x3x5x6 -> Rotate[
               Row[{"17", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x57 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "57"}], Rational[1, 6] 
               Pi], $CellContext`v17x2x3x4x5x6 -> Rotate[
               Row[{"17", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v147x2x3x5x6 -> Rotate[
               Row[{"147", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x57x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "57", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x57x6 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "57", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x47x5x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x47x5 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5"}], Rational[1, 6] Pi]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
            0.021167650531286893`], 
            ArrowBox[{{0., 2.}, {0., 1.}}, 0.04847715736040609], 
            ArrowBox[{{0., 2.}, {1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{5., 1.}, {5., 0.}}, 0.04847715736040609], 
            ArrowBox[{{3., 1.}, {5., 0.}}, 0.04847715736040609], 
            ArrowBox[{{3., 2.}, {5., 1.}}, 0.04847715736040609], 
            ArrowBox[{{3., 2.}, {2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{3., 2.}, {3., 1.}}, 0.04847715736040609], 
            ArrowBox[{{2., 2.}, {0., 1.}}, 0.04847715736040609], 
            ArrowBox[{{2., 2.}, {4., 1.}}, 0.04847715736040609], 
            ArrowBox[{{6., 1.}, {5., 0.}}, 0.04847715736040609], 
            ArrowBox[{{5., 2.}, {5., 1.}}, 0.04847715736040609], 
            ArrowBox[{{5., 2.}, {4., 1.}}, 0.04847715736040609], 
            ArrowBox[{{5., 2.}, {6., 1.}}, 0.04847715736040609], 
            ArrowBox[{{1., 2.}, {0., 1.}}, 0.04847715736040609], 
            ArrowBox[{{1., 2.}, {2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{4., 2.}, {1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{4., 2.}, {3., 1.}}, 0.04847715736040609], 
            ArrowBox[{{4., 2.}, {6., 1.}}, 0.04847715736040609], 
            ArrowBox[{{2., 3.}, {0., 2.}}, 0.04847715736040609], 
            ArrowBox[{{2., 3.}, {3., 2.}}, 0.04847715736040609], 
            ArrowBox[{{2., 3.}, {2., 2.}}, 0.04847715736040609], 
            ArrowBox[{{2., 3.}, {5., 2.}}, 0.04847715736040609], 
            ArrowBox[{{2., 3.}, {1., 2.}}, 0.04847715736040609], 
            ArrowBox[{{2., 3.}, {4., 2.}}, 0.04847715736040609]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
            0.7]}], {DiskBox[{0., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"147\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.048477157360406, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.048477157360406, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 3.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 3.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->600,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
JIEuP3QXk9x2hhjn7e51SBVjl/kNdnGt5hsHrWQH5dtv4aqhXYleY6x2yJDq
9qlSXYY+gG0QNp1BId70srRcpkieU3Yi/CBDU6hmBAsZTalFQSVX9vibmt0k
Ml3NdQsdcmnbC86T4PcXtLXoA3xM4d7VEG5v2iQ3EB2FfIAe0OU0yMMSIdxQ
McGESXH69oiku4zd0Pvfju/OTZVHT+moYPCTVj9+P7YyTcwN+a4luubaplH8
MJiJmWHqqCrS3fyISrteQEyyC7Sh/vIlD12l1x7Sjp6DakwdY3Q3Y312yBDt
Tqmi3Wzu1hm4eos6ltUUCXZK2O6ukWDrXVUtGVF6lGQRm/lNUjCpijsLNKQg
4FxXiKJ/++3IHsszL7uYTIs9Fqugpb97VYNRRsTcBrQbcmEDmoYfI8ZoO6U4
gaKIae8RMNcwPryJ2RRkDuP5fD9xO4xd2dUsT0r4oBd+vnn6pPvWKckOy5dY
/KsfzCzgxEIHShflOX+4Xz6ujpKeUp/F0N22lz8ocIm5Q0/1qo0RR1bAUUOG
5O9kSL6sbVuc1Zvc0I5qwqRWRTJ6Xcd1j/YSW4lSPI+Pnk6xsQvJ/Qm3fvRz
BKwJOkpZHIlywVoPvn6IOQ7UGVczJyxYhw+++6UirSieYspZhRkbOhYCEsLi
LSme/+6BfD5knQHKeA8sR29Aay90dG24XwfHrZVl1095/OdnXr9w6Orn33Fq
XJpkASrW5cpHwyWUYvPO2BkT73tu9ZUTlmcx0LuKGX/qKitlxB5xkQv5zEoK
3tUQTVmmpe4kJBOhuK8BvRpMSj+bjpnzyCuoBpyophLrmV/06uQodXSqzo0C
k8AUcAOiBlqKL6+MZQpwmzmJ4VRvCdsM28ttfrQQCkWqMDAhbIx303vL1L5R
rac8Sw8p/WCPVV1RAJQM28WFyIgINY0kUqDswE0ffPHchbc+/PhVUoQ64Z9j
YS4Hyi/6YlZWAh8Ufx7y5Pp3uxsMEsxq6dbjpGYlnoJxTDx1y4eaDNnrlip7
Vck0WlAewz6ZoOspzewv0RXxnj167V0rhz/05L91M3omSrhSJzqhNa56qVSc
T8o3FUuM8UfOgTfBa12Ipv+wG5khcUWmfz8WqXjpOKZ3CdggMZQaBeKmD59O
7g7T+M6luNCieqv+Ac47GFMgemlE8KDFvJ0AHHV9CFAR18QmCPvcPAokaf16
uoFmoQqRby2UNI1ac/N3M7e4qJKyZK9oHuxmiIDo/yqGfLEZbnckg4VUPmtw
2FZkyPjuqTLebL/YrVD8ZMrjaslj7ZClLZ6zNo1TfDH6zG5jbNfrfCnIGXU9
NBpinKjGQh6HnwecT0gVCgs7n/74V05VrOinNFEoSVwkir46feykLwfj18Tl
VsfUYBq0GMZ6I1nH1uqSQilGdLTVWh+JbqjT5k9CwG8dlEDFBiKDWFAx3CfH
3C2DpSoZf1rEM4LhHvRfPjJZnJUQ0bic2XuwokBb/EYvnQWa4h7wTcQWk9ZA
8gYtOqurTWP+5oY1jTXtfWfHs/Lm9zIGkecpewn1S7uNMQrWJjSzs7I663hq
2WA+mBLKD23AFmOqijiXxOuO7lpZW0dFs3lYwHgx0SlG+BQL4q9KHxTpDsD4
tZponuJOWVYFI7TOTVzHuxRvYIdAQZ/nqKNEwmhQm80YdVxFMUmHyt2fEW1s
NhbxFRaoeLgodwvYEuoB2Q2gDyXppme3U5ISYyNhd0NMhLLbAIyOX6J6AQUZ
pyJ69NtvGUtFVWENg57GKPBMhDEczFs//mObEX5a0Qljof5MMhA9ir7c1eic
33yNnXXvxYah0Vl5ZDzRC++CP8ysVOsZs8hmMm0gYwCkb9zEr/l1Gus3wIiL
3DehChJFFBxr5hlK8RluHygo690GwAV8aKdQDMHPBnprmq5zvTWN79Y4kJm+
Km0cYAAwKgfNlnA+Wj5U78WzqgYNi7Unzj9dd0WdFxRkfo9UmS9lGYq4/79a
Ry1BxGE6QmO+ccABB94+Ze4jMW2vToYJcu55xeJbLAkj6trNXlVp6Wtv7T/1
4GY9cszZxeiHT/WHwgpTid9gTea00dmezGnzKW2MysIHJnpUQL0FiQQZ4m3t
p1ek6vda9CRY6mq+xXeue5qF+KaE80eFsH15VwYPUZ6Te9B6CYdr6Cd4cpAh
z2IANHMdQp6vmzHzHpU9XKWVtA7+QRr/4xdNvwtp/NGJCXHh3dNgujeCdWEK
kEKnFEvC0ebNkDoq5w3HnnwRM6u9b9/Szs7uDBN+o/hvrRS3AS9s3Lj4+tmL
UcEooK+SPKyqrXVQLXQK4kpL89zEqV1L7ccFY4uyADKk0wp+skqjiPVQpzeS
dAEkK/SWIVoYSCnelKgSRQcKqLCUwslAOmp1CCj3M3hyABTU/oaAioG7TZrC
DUUKG2VTecYNj419/bg7h/6lbmRrZFjr/U+66EF1y6rYK1VIm3nqVU2TssdP
Pe30X/bc/xCqU5QXiOqnO1Mv+H8sLStMqdbJbmgCPXml/8RLIZfoCbWr7HM5
n2/8gJnIit7J6IiwppIhWNQTZnab2mMILfh9xh+TBEAsY/tM+XQptuJQa4xr
dTQhxKrjdoaxCQ2hghsDf+mbS8nNiKoGyI5Z2GaG0KIpD57uCfxioUvGsWJY
WzIsQtRKy/Ci6+Yt+LjL+N3uHLd65h+3v3lnosF9N+1ZhwakhzxnCW4Pg9/q
wKvLlz214T/rW7edOH7ynHf23nvvsGfg+cz53f06wJBQIXg997ZHTl+38D9a
jdwO5QldJJHaY2ZCN/CllnPSnw/07WxgKxFBpXSG0CES9sKiNDUKFxoRR2CL
gu+5N8JUkuALKU2XRyvevy71WhXnRNY/4qax1EveupUl8DzV8TOMihShjFK7
/djQeeC5EqfDCwwRFB21eDHMHrIWbAhLFEs0ZUFfjVPJPjzoxvP+T35E4aM9
x/QZOeuZpbdM+skUhhSIJo9VqczHyuVY/oq9DUYbnulZI8dMQlF3LhcwI4Ta
eNYE73EGsdYOmTpma9WNNVCQ1t5AcDCqqihRPeskdY0CqhV6j9rKN1OEDpsF
IpdVmcHzjRKHHmVKxt3pGWrSStGyakrKuzVmxaNGiQTBqOfuIXfNUtKLo8rr
YhaV6q3cKIfWnQShq52hg5BKazElJkpDsilgOPP6laPf2X/i4e8cOvbMBTct
WIz5vt0f/vQNnNTa7Y4xbanEngZH/b6DtcpnVgITOqhmdXaFTyOMy6J0oVWz
YGEjpQxPsoABvbk84CChIjsZ2MukXrBSxOh8wGQRRo5s0dWawe+NUQEL8Erq
n4hOdZN1hlK0DgFobVyTxUwZ4zFAWJ5yEsXS2cmejgSy1VPG9RxgQLFh7sI4
62WIU0ocr6iVCs6+rww85/qfHzVg8MtHH3fCq4f17kP7wJKifQw+lDXXYGER
7WEAXFAGnjfcynG/ehmSlIK9rKbKeOwP/kJggDWMzMht1NHA1fvJ4AAMhZJP
FIAYRCyjB8Jy0i6ks769weZt0sUBrA8x2h3t3kXo78YJ7ssvQ62xwwwmp7iQ
/UmjaPOauQsWW0sFciLG4X0NqmUV5vTnetP5TTXu+nmIwdVMdJ1TOriBI9m3
gh9lPBR0eEhwXZ4kzwNSWPFWpPNxB4NnVt1472cDSxgGi76Kcio082C6KRXo
+yP86F3l8JViEs2KfNhnA9UkHYRpC0ByU4ybWDatxUC/nuP6na5BR0aPYLKg
gY1gqQ7GcwfOBfa1N9gn4l1ghRS0i5cc80+KcOKEzLPOvLbJKFJkHsdisDFe
aDxxLhN36/0KOFbuXAZhwVUNaqI9zioPLPdbcAAZSnIaOwXPDx390KgFj70K
hgifCkf8YtOW1VdNeBSVfpKZbPRvuShV3zzuzxs75+nl101eaTUfao5HbNjB
YIP3Q3G6d0rx5Ehph9VuBtktElsjyncUmIyZ+8grsaFyeXwIjZu9bD1qlLl7
/qgQVKCfNWHBs/bJ6mVatq9d8sQGnJSLHp4Yh4zLOATQyXLkILeSBKakd3k7
o3uWHbBvaCAlNvQSGWGW6ogl5LvHKrWiThv+fopLPag71sUB6c3rQd8udKOd
Qaep6XSylKi1iOwZGkgJHLggY7ZMzIfpMfWpm3VZuUilRo/7ZmITU5dRdPB2
BqBp6aTb1iCT5dWMAsNT0prOtS+XG6Rra5CuSMnnzhmkswooHZuJTYx0kZvf
Sjy7O510lglm7cbtGRpIyWM9K9NWiZFuW4N0ldmka59BOqu031GZ2MRIt23o
mVWid3o66azDRazwlt1DAylRKafbl2sN0m1jkK4mm3RtM0hnFVE4PBObGOm2
CT2zym3PSCedtebralyLYn5Ttm1Pti83GKRrY5CuPpt0rTJIZ+XqH5aJTYx0
0baHlRo9M510rdLIZJEzqyTWQPtyG4N0rQ3SFSmPmxVEavX44ExsYqSL4uit
8zNmpZPO8nPtnjaI1TzUDKt+9uW2BulaGaQrcpp6VliVpd0PzMQmRrqooLZ1
Hs496aSrT5sSrKlDGdDNsEqZ07Y3SNdgkK5dNulKMkhnma37ZWITI120xWON
/NnppLOc/j3SDBbljGmG1ZH25Q4G6eoN0skUWqFJN33ifc/htOiHR057nHSy
3Ac9M1tuvh+pIyxjgOakk8k6SqancS2qMJJyPHBv+/KOBpnqDDJJpyooQo83
LTPn3zbn6YdvmLZaS5pFpr0yW26+KaZsgjiguelksrY09zWuRTF9KWd5pyjc
nQ0y1RpkysoaLHJoj7W03j0Tm+YbOK5nlvVybzrpqg0y7W9ci45w6WpjdYB9
uYtBuppUHZa1DChSFTze426Z2DQPbtEHrsUAzUsnnRUOcqBxLVr87mZjtY99
ubtBumqDdFm2bIvM4HiPd83Epnk0m076iQGan066SoNMvYxr0QpuTxurFO2y
h0G6KoN0WSf7tsomnWXcp5wlv4dBumjzz1qpLUgnnRUid4hxLVqG7G1jlSKM
PQzSVRqkyzpetkgZf8tC7ZSJTfOMU9czq1b4femks44QOsy4FtnS+2apkZRx
HCedFbqXlWLbPpt0lpnVPhOb5hk7ytcTB3R/OumsuOM+xrXIIEyZD1KGiBVI
UW6QLisFtHM26dIPzk7DpvlmojroOw5oYTrprFLDRxjXIuunl41VigVsxaBa
0c5Zi88u2aSzJsaU48mtHf1oA8GqGL0onXRWusdRxrVoCj/Uxmp7+/IhBukK
BumqMki3ezbpLO2eEppkbXYWQs+sasUPpJMub5DpGONaNA/1sbFK4XNvg3TW
fn9WTuHe2aSzVFRKsk5vg3TRRrjlgV/cjHSzb5suu8ZW5t1xxjVP4g6ff/65
+xbedY2mLEwrjJdS6jMdYZDYtzl2xgNPJRzsNomLFCSyxqPVrWwMY2T3r1+5
ZOULrqqDomismSXCAFEtlWU//PDD8PsWLvrkkN5HfX1k31M/PPyoYyfeNXlq
589+/4dAcF/ukkxo//s/foN38OxHg04fwneqv/vuO9k2P8ZG29d/Zpvm+ylF
lCTrp5I86frJ538giD8e0/+0T3sdemQChM2Xg7P5IhJbSYLVfPdf3/99mIaT
1Q56Z/OnBPHlcQPP+OKAgw8nCM2XBzVb8ktuGHnzd9eNmdb48No3cyXu3/xf
b5k4/6OjTxgM8uf6R+NiU79Thv7XtbdOzeXluR+annvrpDPOP/eJ5zf6+L1y
a5+Qbfj3yvHe05cMuwrsafb8cdGYQHvfR+1V6PcsmvfJJrmS0XcGnHbBj8UI
Lbw18IwLvx8xeop/rxTv/eys8y4ZM2fZi7j/kNDWr5VOfObZZ7++9JrR8qyn
7U13zBkzfaa4a/tFz/35kuHx50aq5xKbiYtH3Hr3ny8dProgL/x15PjZG04a
chUR7qugXhqDWvihqfXHL7n65pikihyZ6SxnrXx8zTdNmOVCU3fMaVlTrqPj
pk0Xl36cLquGXXF145T5j+vHGxeuenVj/4GDNF2KPudl86fnDL3Eeu5Xx/Qd
2BJ4m486boDetCUl3j924GA8X/jxIAOK8Z5vGHTqGY3zH31JuCGPf9j/xFNb
ffPNN4rTxZ/r998c3oOxbi+88aZbGu+YtTRGpabXAUY3X/S5/v/N4cW5vdem
TZs+HXzeZfpx6IPLH3joUReH0S/7OQwrjWbR51oKzz/nRvDz61/Hs+Ri7Lk+
kS6GLeJme6nklIfuhZZw5miJ+ze//NrJKy9+eOWzqfAe0lNP3VmPr17zyRlD
Lm4cO21x48Q5j+Lv50MuvPL2Jq0B1KCkoIygbNAohiWGqeylVKS9PmHKtBl4
7ARRa1mt5PwzQ5evWJn6jKj/um6ffP4nFgRBd58advsj4+5Zuh5NZbUhVmIe
j+IVfHIF928Vrjk5aHoiC8RSIZv4fQvdPvjgg9m33jZu6fAR1+Pvvm+99Za2
aO8dN3etg593/5biNwx26HuQUJZXFSaYpjugNiaaEzJa8zFBrutNjDl/9Qtv
W8/5aIQOX/7pP0g5xFVJ712kUjA/mz5mS34tCCqtuGbSStUvJ22J6B0b22VC
vm0jYQYWihFOmAMqx0WTAO6C1+iB0COvqxT6cVna+41ffQpBxQc0OT5CGtO1
bikYzPgcH59uHIib7l7j+6elI7da+pDY3HQPlsjjz1wydum5T7z0jhrgBT6D
D/qIvnPwEzv9PGSctMHHdbZfRLdFt8x4QrMgRgwZlqlZ3ngWb5FtT0qPxD9T
jjfY6ooRd63E2IeAqFWBKzy06uo7V/A5QIJQ9404g8uuk4oFNy5c9ZomVOh0
xIJyLqxR+W/tpeOWEbxb7xybbVb65RA4G1j2lHROnBIVp/7ktfcBEezAFWCq
O+iRBYeCilDIomFF4Tw7BLHjNQ5F0CdXKu+GAOPo3Qp2FB/CxdPoVLSmKLaa
DGKJj+/rDhEX8Kb75SMak/09NpIoNKAlCo+F/npvBhiBu05hHJPe39Bs9G5p
sr88uL2JUU608OuI7D6/JP1T5W5DI3m7f9J2AbJJfr507qglg9e+8ktqF4w0
3sOrcrlMBuWCdShERxnEtZTeFAycemf35pVYb/TJ8izIlOyNL4NBTQYdA4Ad
f/fV116qXLwue4OPI22l0YQsigtoAuA5KYJSjLaJPd/D7veOxqNFThfsbryy
ICa5SOQINZEqbFrIZF4GtUBlj8tf7LjLbjgdwDOe5kFMjXq3UCxv1PsISA43
CzYJBkgN0ConJBRm2tOmSOcIeij5VsRb7vesYvXRFmi9FQrIuRScapsifvAA
bXxDbP6z/QcMpEfnqGioJ1Ub1FhghVcsSCsIx/n2ijRKsBW8nRNTbX7HJNSa
xK89bDL5jXXWhXW/OmaTSYX3h7zc+2JkQk5LyBettckk0YXleBtJQ4iZp5Or
y8df/U4XJ4vVahVvtysTR/q9fO5Ni6kb/EYF07Q1idBUKBO3n0FKsSUqdJ1E
fJBIoOsX7GpT0lckQTJAEOdQ0EhODInVu9smm8r+LABkMOgzApBI6nKao7Pa
mIrJsC3pRg3Pe+CZvkyyJd8oVUw8qrT55HcXkJiBroEQSD3xeez7bfzte//e
+qZ2E8asvR3JqUyeZikh93YJzOFcYfePPvsjZzNAV85dl9HCEgcUB7pVwcug
hvY1+OYo6cqE5ip0HUCOfdCPRXF3zmJeKVGgCPjSa0zgB9+Yk41UdVdMoaEl
fHTHQoN2LMIXZFLOBhVxd3VR8mgpVPDyPN0uGqYQLpc05oWLletYMdQJX43N
TB/rwwJOLPOrihI823/BwOkTFj2Bp1m0EhnHuOd3HHALQLWawmgHRJevWBpp
6ZAvuI/Bt20jbFiHPKoLWsClUJizESVGevZkxlGSfV0ivcOKhRz1rFunSmmV
shgDxiI6WSRixAcHUjA4AfhiU0ij5YGouMJSJfgbSk3OirEREh2qxqkqxSHb
s8RNWeXUQqb+KLdZLNq+DmTQpYN4agcE7bNOt+/4/ElTL8ffZLWqw9J5DIUR
sow9j2Nlcj3jWGlbF4Nk1cEY/4UaVfo8TnwwRCDEpAYVlgdPaeSxMq7GxXa2
XHSjDGzejOxUKScibGOVW4Jicjvp7aq/FUlG8Bu/+jBNgkfGPkSL9UcpEbgb
WBiXCijoMNV7SWXxbbASf1uikFIsNQnTaoidstkYL/sEIfl1lzu7fld7Y+t+
z/3K2fmxonpN2Km4m6SAMINO2pdZKFb+tVHqyvHMD1Yz4OGCGCldDTmRFXEt
KzQTFJPCWRIUMgJO6zOHqFMBHixRM28zYdkt6kWCDTX6PCKA0OcR4RqLNkHA
MByKpE4JDRtYCJkdYmUUfNfln1iZSNd3wrs+r0LMtXLmxhNiSxRfypzvdUjy
pB98P/+hf13+ddtRHdecvOg0Xe0OioHJ6SqqLYhIZTTPs6i6qJ0mPRcKoX7/
LXikSweyfA6PnetiiEfHaG4MqshXNcQrumgaz/HB33CMXCtbHCS9ztVSclM8
NCfMLRZk4VkquIdpDjUlFl56+dXX37/ixSTD/TFXLCujTwpnHWSU92BhMRa4
dbPn3ZrLZeCwVpZUY2IPFpJazF1NWagcFM36ILEu54XbH3e/7QBYA2o65kl4
oaTTgQanJfqjnum3YIsuXg5xZMFeiCMLvXIAOIHb1WCzj5ZjlSQYU9AA4QQD
KeHE4n5BxzbK+UiOj/U2p8WmDIWJWJKfSw4WJgJx3KsT71m6Zbd9Dnv+pLOb
ptDOO6PCHVP0YAywLGNUCN/ZCBzZ+ECVc4kSioVM1Yx2VcG1tmupCsKMgWFQ
ZTP9gKivtDMhdTzZDtp/1riFj9EVxIIR0ury5alcFxOqgWck65J0rHHNklqQ
dGIdneGydas71N5gfOdoegz52V4v83VWfdZHwIBYPN5FpoWtvvRuMwEQotTx
9DseOeROx9tt4p4v9Z1xlh7Rm/bq0cMVsmvCBGzynkSManBE1/hhcdConmZB
1/hBfzTvJVIwdrSYpXZYchKvo8I3jA8gk8Jzfzydrj6n677oAB9MfBhVTP7l
2eC0knjYZU9DBGQhFDsVhSVjaAmhU1FJP0GeyqSjwXqxBmr1ySf4zoq8kGAw
ixKGYYWJyElsuc1rmZzKWR3ovb0nHPz+/rcNfPSS2ZNCNriqXBcWMJ57LODO
2pJOZYsTLBxLg+uhEHs+siqCH+puze16VmgGqDS9wykfvIH6D9NAim6XXrq1
4a0TJk0me121MOPkEXyn9POYqL1TWdzAU0QIInm6CIcgC3yDH+g8S47sYLDa
Zy/wlFNWWvUKlOW/SRtIPPoPevAgOjqfbY4XSxVDEZXoOGcpNs/S6/o8U/SZ
pdfVCVPVbtR4Xc1aJZRJwML4ZA2UnBRX8R7ackvv8Bw/dopTKHVOilfNn1JG
lwmH9r/X19eLmpVjPxzkkmjKArXRSagFi+9iIoVzvLmYYZFoZ3GEs8979UI/
gSxoavFaLO1ytEaNrUvdqcMUXD2NQFo5cc555Ztt2xyUzWVx5bsDvGl7avc2
5yZaYLTQWOTZoSTO7Bqema65rZ1pYA+kHVYcvntm+6P6eHQWmB1qgKo6YS1S
OCl2u8xj1egUZhi4nVGjCrdYDxc0R4dY4i6nDsVgh1jCNCYCPvdBlyRLog9j
IRQOy3J9tjFkYo+ou4CLZxMHI1fTOUizCLyeMnnxs+sHTLn4FwfefQjagM5w
6qjIicD+rBoWiuJZeJQNltpmrdmSaCyGU6+9ycelOZgXefYK+An9B34CaSfE
QdfIcUlkiKvrNk7EZLe/Xx05HLNsgBKnlGqoFYbPfnl+VKRXKoZCNlhmjiun
HoY4+Nw1FsIUEFIcl2jqIxx4Mg9Pb2Q6dEwExA6v1JoUBB2yYvUzbit6wqIn
Ptl5/K7aVxo7KLlIbHVNNBOHKj2qYDx7DaljUWqMDYB2BpePeoS9Frwcfi6F
+NBNpY9YIoM9tvjJmT43VvO7XpcI/NGKKcUI8LY+vsK8efHouccKeNHa4Asn
A55nwD0SdkinxSd4X4ln6GIE77nrAUstuC2U44GExPV6g/0yYuuhOoEG2Pjh
nvseuvSKUXfjO+iolw48YZmnsjg9tke2CIjnpw6guDjkCew8LAj3aL6C1aAG
7RYvARibEFI1Jpt5GnhuAv6yUHXuNs3yKkDHbPn36J6U6V8s/fqOv/v6a+zK
wFmjz2sBiQCVgx66CX1Dy9wqoqfW4HgZZj6tLSmwUsW/nOcSAHwzV2qdwXGP
7o3T75kPTv+iz3Gnvttzn/2o3yGUtAnwV3clHAvbPZvj3jHMY7gxjEABP26B
HcY6oWLW5G4ROOwZjktJ/zHrw9LhEM4IbxSHg5Mvz/Dd/0HNU29zWwZMxaEb
frMRHlus3bkHB/LTpepn59hhAt0NJoulVgsMda1tXfGexYl57ksoWF+bOp4L
2lI7/qVX31BnyFTpgvcY18mC9/R4FsnVktiNcn08MH3LoYyvjwzBgAvlhn3o
DH4nzK7y6Kz2yLNA9wsqkj831vN2b1ul4AkWw89SKSkbdTIVFvZ8/4uPsVMD
P1wQKmUN0SWjXaqQZW1xOax3MfgtDrW6ZMV4/KbbQvs4IROYlVj7vjx1Bm+2
AvPZOsmq8VL+3kl4Gasb40ke+Ihh1ymb8xL3UmB1Ym7kuPK0TBLxZ9GCPtFh
KrEz6EAu94oIRC3XtPQ38FkgyRmM+hPMdEbvLTF5SCocHjhXTOPU2fKwT8S/
kBokHakHEvSL8dAYjnOOAJpgHL9UDfpAkqRc6FNb9ZF5ybPAIcmQQ+5slxly
sY8tF36nioWI6ebyyhk/6RmG8LFQKfeVd8gWDVFx5UCPAxw6PFg2biC7aapA
D2hsoEuUVynESdsIHjmeKQiq8BAoIAckwdObRRp6/p2aKUUMBFxtTAz8gOGm
ACvyUqWCVa4Zb4lRftknSwJkVJUnj0zlQZ7O7eGxNnZd4qzvabNelikVNJJ5
pJc+wROD2s9d0JohnKdIpr2YgPWsHo5f+M5tMboiOenS609xd9d9ApB2KdOb
GxwUpdHkEeJ9ZPfei/s/TSulmPeiaVprYcCcAGRYlJblV8FogKMSw+/kuUWW
IHRu3hFwR3WkmsshHvdN4417W+/sO/mgt3pNOlat0JoJQ13U+RT/aTm0C1io
99qTh1jG4sSKxHT4OEpgzR2tKMagnLtJXB7Rhy1KA3d8YCPdFRbK0DiQQIzG
6DzQv211k62K3+KCpknQnPQc9A8qrhSTQnpcltQdPGRPrWPoTudZe2AjkYQ+
MGcNcdXXYSpEpwEW3mYeyoO7DLcYNf2ZxbNvfvBe+v/QZkoUp4QI1YPzVHDQ
rmAZLSjakDwAmCFoYTAXCeLwEWWx4AVl48vZ1dHpDdxS4k6KT3mo5JYOOsyj
UcTnGx0sSa8F0IMx5IyAGNf/MbWVsipU7rzAeZ9tC1brI+x5Uh4F352Xks7u
esi19nRHLqtNa9DD6+Y856LUNbqghtMgu9k8lyVbAVSgYmX9fvpb6AzlaE9G
qhWpvyrxF5X0HuAXHVWAAgR5zgUzWrTDN9LXFfTMEhFqPZ4qFGPu369tUhaA
VuG9PEdMZGOHSAdvveE3KMXTgMhAGFZO9tqnMrwS94E6A/6o7t15hOc+MOyr
7UfvmCtxA6OUQ4V6vZvNb7Hj6rmhr4vi66g1veBORq0VqzTmS8HR74q/6qwn
4EcaAQMWi0df8VscvfWwrHgoIKcg7t2RfURQuymciElwGCO4/25l08oWhD1S
BaGWAsA4LrrNeBo7F1sYaozX0GW5gwCIPV2bjB/D/D7xruUr8D15JiGjCnyt
lWacly3fNqBzKBTf2DwkjU5ejlV05cKHX11tVvKWvdiq5LHwZAxXLdyoKXED
O69DrP0qsA6qV8eBA5XoYDLR6nohxAgNz2qRuToem5ipZBplLQkNyijzlBWA
VaY0T4Vp7Cx54QLXCBnTsj7EO8TFtzO4LpJVBTRgxelD8kBS7TUF13exGS2X
a5IBZWQIgizePPiu4/6z/sa2iD4hM4+NG1mxPaGwSIxvs2hDKy1OXqKx6rhb
jUc5P3F0oCmeN4inYWxglGChe5XmbymnHEOn8Pw4EpjuVsheg83e3Qz2+s0+
jBBoJqLiF1sAGnZMtjM46Iv1cFHGmYnHSHl8uQcNOwLQQUcICF2+HWzGdo2E
HAR4rffMoxZdtWgCR+UbB03ts/aE+wYCCmZN+iUgiiClZFKmbp8ATxcEEA+M
d4Ltl+cYSvQ3R2e9Veiz3kA47TuAiXql8FDSuSvTlAWl3SknT+8QxIFPChet
Msze10F6Qlbx3UONndplcVEEo1Vsad0YuYx5Why4qk9bo0YBZcPEuoPNS5me
6/F11NzV6/7c9qad/lZ6XdmtU59aNPCZTc9x55gSzWkQYMMhbj411tohYexP
Mk4+tn8jQ9Md1wv20RfMXU6mlYjdv4XHpjEyxv26Qlgr+UX1pu5oFIsS0Uec
d/QGFlp3ayBLeaSsrrqlsjyPwNCwLe75HYL+IgPAjptvMGTBi1dMFvwcAGJy
NyKcGObhc5Qxjl8Z1HZQfUpgrIx5szpKuz98+43EG7tpvyYcLebFlWcygVnM
zOF06ga6EJxRZu41Xy7A2oOhb8sKsg/uclEUDTr6DUpDowa1pH0XULE80A6o
Ob9fhFro0UUiajJNVTJHjEk41GZakyVzfJwqS5nqrTr4Kr0tKCFhfY3uAD5p
kfY85LHOkKxuhmR57xN6hrmGCWl+7UKBQQv4YJyFzd86W4CK7Ob48nE8ZNEZ
aC2MWfOyYmzoVOoNHSuwXi326sA9HmSID34DJjdz6Q8E9wCHG78xeajXDjiM
OdpbSUUIqM0UYcqKr0uqmikwPYkdV3TLDK2HWOK6JQ9WNkZNJIJMOSONOW/S
ScFwe/QwLEKrbaHYNVsoxLVRHov3a2xZQJs/LTst+J6bOtGp3osXhz0Uz0qw
jietxk7AahSjHgqFCgu0BE0ZU08t4TPWecoVpAM0zDdXZYCg98OCKktZ/Vln
jYhQNIvCpwxyFZIZhW9JhJWA4Td/QRTMdXK0tHQLcNgthuXTNglh+ZW2ROyS
LREyM7rsMR0xlBboZsW5eZbwvOB40H6FDtqn65lbPJjP/du8RbH0W9sM0AFw
WmSW6+JCkQ4faUBgbhD/GM3VxhaNXQzR8ORmqD5Fwm1qywSjI/Vp+LhQe0si
rFyNukgPh6lKzdkcuakh+ymx20UqGggN6mJHsHmoLQlz8+VaioXxi2LbvLkk
6mNIshcQdRADyCW387RDA60yQ1o7NICBl4UBP05hMS3b2ZgpKsI6yckXnQox
RY0Sr895gckGXLCDpBB9NBXli8dlYRdDFiTmqh7aheTTfpBkDL/2g+C3C+71
5bRCHRR8dswWhh0oDGKT4FdW4Bv3cNE7sM+XkjS3pBoleQHWKDnMgGsvFDos
kkIBxiez6Wij0SFEyxKsJCbnaaFI0VVlWlcxuxgIlMBj0NqWiZ0MmZDJOZyF
TnuLSiAZ4I+mgGtMl1QYgrGzIRg+/VtH/EcOlCod8a+PKb33qmtuQFBzvM5H
qhj4YAaOHysajpk2sGoZDUfb3RdaYr4WDEGa9mr9ifEfVnO+OhpGKdN0Gc7E
ZS19r5i32C/M0vgrJ8/5Omy1WYoIxMZ8S1soxKVvY/PbOgivOpqsUgP7G2W1
HG0S5hm04n6VG+zeyWC3eDVqMZqSvpYQDNQo+5HU+1Mm3//s79p36FhsrEtz
VVq16kA4rnjoz/K9iJ0Q78sNMcRcuBUdCKqUfdgJ8kWq6NR0mkSWdwUqNggv
F660xfE7ZIufI9yWCpr1adqGbhaa9sCcjk40IWZ9tAkedpRTVpY7pkpCs/h+
FcRbw+N7SRwmXHNiTcb5lxiSYSX4SdWYVFfN6U888wJcNXNHT1sKCQAB6Uig
m9d01RSpsNKleY+DpR3yvocOTSb26Dg7umto1voC2BATEIrLMR8qEpLr3C9p
3UwFkGCSBn3oOjcXuMoA6BCy2yiB8tGJ9n/eEuUE5wEieFPkiMHcqYIDlwTO
81Xi/i3lpjVXIok9a4dgit/TOqVUHm3FMBmILtOb6WJJq2ZANRkEyBIeabOa
KgNTwx3jJkwGbdiOhDh8/61VaCUkDxQ5+qQHJ0bRD9w65VYo7hYNtvPeCQYz
uXWSjxVxeUKs/tEYTx7IJbIHnIAeS+UTHWyfk72sKuKjPf0M3wI+VIdxUQgx
TJFwNtvdBiTuboN4KYZFR0MMxJ9RCX3LfjJMBN+NYgVlLFYADHCdYrCjIQV+
JzG5YMCaPTLCfe5wo2zV6VwC0xddmy0REuTlUu04qDGUOBtbsXegp46980FE
GAdM4Q2nrxfJK+Bc51jj45hjp96HvFNxkIjcCxroPfMroXBjglDPxQttfXaG
+gB/uT7gEipsc6csQ61jnnkGqi9SxjRgwbGaXpSs8ixBL3QyJEKarLTKO2IQ
o2cYyG556n0wyXwDvQEYcteqsqVCUhpKWdQOkhH1qrIlcXjMK4OmhPYCYfBJ
eFQy8w78kgPTF9gIdlIucR+E5JIDrMRf7oJCZr1AnCZQME71rj9EMYm0tuDo
Dt7WloX2hiyIdqhnLAJb0qkHuuaBTj0IQmDlj/tjguwqkW6DHwwiadKyEZL1
V4qczSZFtmoxRWjboUWRdd4NxNWoI4b3tFu1DghPMhLcyyWqNBXEiyEk9HxA
7LTngxaB4FkF6IxEsTbF6ThRKfJh0yFlOrCOtZdH64L7qlEKHUAbJXMP8PxD
19/1CDdlwLXtDV6n7Gr6I4B07kGIAxEDqUaXXqEzBXohjcFHcC5rQeycqu5F
ZeqZXBttpkb+HfpjdZYBxDP4d+TdSj5LYeLzgMOYjJxatATbQkKoc/6Qbnv3
vIzzPkUXFgtsi7Y2g7c3GCzmVD13AOhISCYRAPc93//w42/bbNeBjoRQLWY7
g8vb21z2k4kuvxJlElRp7wha+cWBvQ6Zceukee/v32cgqriEisxC3JbEzpG4
YAzD7VnKltGI8RoGsZQB+mgobhjofhuRMzbzLuiu4MhUezh5bU7FWVuBx60t
dBoTDkIJJpl2NlfbpXK1yipYoD0pa04+9bTN+x7a12PJQl3u17YGU9vZTPUF
RUAQtGTlCJy4buNro+Y+vO5/l5YWFl03fgE4eeAbb70NM0i4UY7HUwPgvJUU
c+DIur42K/gfOghr+mgbylf3kDYL3CjUnohcifNDFsJSrFFWbY4ycnx57mwZ
f2l71flI6Qb3y/Y297ZL5V6tjhMDHbXn5Zd77tXjt9326iXi3vQfN5UttqUU
3ZNld3CdvnjMnH4rz7332seunLoYj6w5/eyhrx7Wuw+dGYxnErJn1keIFZMT
M7dGR+BrrwF9Jrp6EcjtmzFX/b4ZXcCIo0o28fIscaatiyTp2xqk9zkrGOqX
3r9oycbefd02Jot8WdRta1NXHq1Mm5twN3hiS9zGRF5vReROivoYSHmiYAfy
MuoaH5byEBLknROLr3iySFHWAp4moUMUcSebPNsa5PHXIAogj7PnLO2/bZbE
FTlZKh92aSIyhCBzDn73zCCDROp5vf/snj8lRgu9HxjyMjvbtNjGoMU2UUuv
H3pYb4gKtJkbhdsYNEmpZtgmmyZ+h43FY4Ew5oKTost0bWANLRQpZRFdXAav
/NNcwoHzeNrTQ3azQhVqR7KdbTq0SaVDHlXVnznn6judQFv9b2P3v3V2//2B
NLFiDqKE81x4KTnPx9ZA/jkIfNBIXoFPtvvX2uif6nPwjlqFUVrb/Svir3JS
67eOptpItTKQam0g1dpAKiU0rEgtZIfUBYLU3TZSDQZSrQykrPohDTZS9S1A
6mJBaoaNVL2BlBWY12AglVJzsK4FSF0mSM2ykaozkKo3kLJKbaQEZhXxeDmk
fHjlbBupWgMpK2jAqgZRayNVJJHPIXW1IDXXRqrGQKrWQMoqYlBjI1XdAqR8
HsA8GynrEPoaA6kaA6mUEKoirimH1PWC1AIbKet492oDqWoDqZTaikWy7xxS
IwWp+22krIPTqwykqgykUkKLKlqAlM/gXmQjZR1JbkVEVBpIVdhIFXErOaRu
FaQW20hZh31bu/EVBlIpITdFMukcUr6S0YM2UtYx2taesVVPosxGqtACpMYL
Ug/bSFkHVJcZSFnFDAo2UqUtQOpOQWqZjZR19HPBQKpgIFVqI1WkELVD6i5B
armNlHWocqmBVKmBVEpBxiLJeg4pXxB1hY1UiYFU3kDKKkjgNxisjYH0RRXu
TheUVsoQSqKEqxofheLyq29/QDVdiKHTqEOcStzXQjoOvmL841G/iEOuRLQ1
3uEpwb8+/Eh38C3Pzh3w4oZfsmEVV1V2yk9ffy+VE3OkSfE2lOkmcaDH66cN
uRTnxsrxr1U4KHfTgFPO2fdXv/4ckO5venTCjAdfMCHLzJh7MurMU+cPvwPH
pvqzEsv+NnL87I/6DLyIx87FXvdnzshpW6nnjn7U5+h+Ef0Wxd4pemine2dh
7J2iJ14a7RQ9flK/87Row8xTGmV3RJ5fK0Jln16Ie/7Uaffd/XP2/8MLcpqW
y8gJW5Hu/tzYfV2wKHb/ZblvnN9TYBQla2NIeDTu+UL4L8pzWCljTcu9ehWP
7GoSsqKPrkkouyRqlMsZZ/FzTfyQZgkflV8Z6tux5I8DdXcMVOz4DPG+Stk0
BgAytA+3uEuXMwAZycNVdG7Cc8g+wSuG3/DB05tfgmW0gzlFYL7q/tQFF1hj
VAQK13RKOu7BAwA/EIsv6AlEQNXryoTJyke6theLJ4G0US4Q7viCqa9FLGNV
NOaxAL4K+Q+5D/gFdktYl4L1ujyno5SCCPmZK/hilchxm4WVRWXjDPduF7hv
yHMgB6s2wH2gdvDLGWtAJzx+h1AH2RnUsOqBB91RzEWgSOA97gdwJwt9ivbi
cWdsDB5gwcXFwhR0XdH9SxYzKgD3oo1DBe9NoRPzH3SYPzcV4KTWVX2Fz5vX
SSSPgvWu+1Mb4gY8PvTIQm545IPIjmyBSYQTrozWcEoZ9M+/3sKA35xJuE5j
NmkFl7sE/jgwvmjXJmEV80DRLFjFMAfHKm91xbyCkoMpMOQU01i93pBJp4r+
YAAyXFYl37HoDzgiLmzc86u1DwU9biBCOSLwk4E/boT53QVWhOGBJ+Lcx1vX
aVilOlssQsXtGOstL4abUMhkMOPOtTFwLP4FCgMtFazAfRM69fWpDPJdgfu1
EBmylTiDJex/AzVuB1GXyP63BiQRgAW9xwqhkq07iYtjNE7EyRH63VIGa3Bv
12/jccxIAsPgwVSF4AR0mYN0lYZUp1MKmLpGsnD3hXU1wRjMOKCoBvWpdEgX
iArBjh4zTrgYJZhpqDmYz6pSGEOEqPZ+SWx9BVO/9WEyGNigXyIbO6pI0wyM
CxJmNY0oW18iehhQxkAy/m0Opg7qNEybjVHGF3cAGTyocylkhm76cVEMFDRh
SAtsjBd0wHeAgfAz74oxlxrU1xFHo/JvsjHLiQkyo0vLYLiyDJIDdb6A+rOI
Gad+KB+Vwc4QYk5p4ArPPgGDtYNXIFWRSRwZestXjk+IZU2Hes1BDnzsudi+
DRQbffZDVsYsg13wjNt8N8JPXTNiJ+f+S0gJFEAiJloytp6hA6CNTrbkkNag
5NjaekotGaxPjEqm6XFUM+Ul1xyeC4VFr7hD5I0tZnLgdQZ86tQuHuLgIPrw
GjkduI40J1Y6M4g6FpgyQod2nQb1V4ISO0uraab/k+vEiCIIHeVA+e2Kvwko
SCszwHWugk4BYBwZcxXQEwdqkAaVZwyVjobXlQOg1jB30ZgGZlHIF/6VTaWc
nN/bhsKkk+J1DDRTc2VGiSpfAg9qmyjpEHckx1e++2JJ3AVkMT6W0RRLWyJX
GAaQjKIVQH2bAc2Hwx7cL/nXisZkzBN1QDN4Yp9W8+RNKAJqMYbHMp4Q1JHQ
HyPb0f17XDPAYT3hDHA/cevDc3QFofhpQ0lMxdlZqTPKGG2hc1vl3IGo8Tj/
j24OMFn0XIfEJJYCeZbjtwH6spOMCdHxGaQhGvOwwL5owkjCUhkTDMQMkuZJ
q1NumwPwu5nNLUr9kOwpFSDjemUg4dr4dqx62G/LJbdvmz3n9xmxTIr0Jf49
Rj304xb+uX/5vzjrl2g=\
\>"]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v147x2x3x5x6, $CellContext`v14x2x3x57x6, \
$CellContext`v14x2x3x5x6x7, $CellContext`v16x24x3x5x7, \
$CellContext`v16x2x3x47x5, $CellContext`v16x2x3x4x57, \
$CellContext`v16x2x3x4x5x7, $CellContext`v17x24x3x5x6, \
$CellContext`v17x2x3x4x5x6, $CellContext`v1x24x3x57x6, \
$CellContext`v1x24x3x5x6x7, $CellContext`v1x2x3x47x5x6, \
$CellContext`v1x2x3x4x57x6, $CellContext`v1x2x3x4x5x6x7}, {{{3, 1}, {9, 1}, {
           12, 1}, {3, 2}, {13, 2}, {14, 3}, {7, 4}, {11, 4}, {7, 5}, {12, 
           5}, {7, 6}, {13, 6}, {14, 7}, {9, 8}, {11, 8}, {14, 9}, {11, 10}, {
           13, 10}, {14, 11}, {14, 12}, {14, 13}}, Null}, {
          GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 650, 
           VertexLabels -> {$CellContext`v1x24x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x57x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "57", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x57 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "57"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v17x24x3x5x6 -> Rotate[
               Labeled[
                Row[{"17", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[15, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v17x2x3x4x5x6 -> Rotate[
               Labeled[
                Row[{"17", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v147x2x3x5x6 -> Rotate[
               Labeled[
                Row[{"147", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[6, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x57x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "57", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x57x6 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "57", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x47x5x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x47x5 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] Pi]}, 
           VertexStyle -> {$CellContext`v1x24x3x57x6 -> 
             RGBColor[1, 0, 0], $CellContext`v16x2x3x4x57 -> 
             RGBColor[1, 0, 0], $CellContext`v16x24x3x5x7 -> 
             RGBColor[1, 0, 0]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
            0.021167650531286893`], 
            ArrowBox[{{0., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{0., 1.}, {1., 0.}}, 0.04847715736040609], 
            ArrowBox[{{3., 1.}, {5., 0.}}, 0.04847715736040609], 
            ArrowBox[{{3., 1.}, {2., 0.}}, 0.04847715736040609], 
            ArrowBox[{{3., 1.}, {3., 0.}}, 0.04847715736040609], 
            ArrowBox[{{2., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{2., 1.}, {4., 0.}}, 0.04847715736040609], 
            ArrowBox[{{5., 1.}, {5., 0.}}, 0.04847715736040609], 
            ArrowBox[{{5., 1.}, {4., 0.}}, 0.04847715736040609], 
            ArrowBox[{{5., 1.}, {6., 0.}}, 0.04847715736040609], 
            ArrowBox[{{1., 1.}, {0., 0.}}, 0.04847715736040609], 
            ArrowBox[{{1., 1.}, {2., 0.}}, 0.04847715736040609], 
            ArrowBox[{{4., 1.}, {1., 0.}}, 0.04847715736040609], 
            ArrowBox[{{4., 1.}, {3., 0.}}, 0.04847715736040609], 
            ArrowBox[{{4., 1.}, {6., 0.}}, 0.04847715736040609], 
            ArrowBox[{{2., 2.}, {0., 1.}}, 0.04847715736040609], 
            ArrowBox[{{2., 2.}, {3., 1.}}, 0.04847715736040609], 
            ArrowBox[{{2., 2.}, {2., 1.}}, 0.04847715736040609], 
            ArrowBox[{{2., 2.}, {5., 1.}}, 0.04847715736040609], 
            ArrowBox[{{2., 2.}, {1., 1.}}, 0.04847715736040609], 
            ArrowBox[{{2., 2.}, {4., 1.}}, 0.04847715736040609]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
            0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"147\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["6", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"57\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{5., 0.}, 0.04847715736040609]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                  "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{3., 0.}, 0.04847715736040609]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"57\""},
                   "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 0.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"17\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"17\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], DiskBox[{6., 0.}, 0.04847715736040609]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"57\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.048477157360406, 0.04847715736040609}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4., 1.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"57\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.048477157360406, 1.0484771573604061`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2., 2.}, 0.04847715736040609], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["15", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->650,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvXmcVEXSNlpvV3X1Xt0sArJII6sKijgoI4qoqLggOIDiBrjg4I7igguy
KCIKKjqKjCAuCCIoCiKIKIgLMy7gjugoKiqijoyO38s47723vnoy8smT53Sc
0z3vO7/73T+uP5vuqjqVGRnxZERkZGTkgLOuGD3q4rOuOP+cs2qPufysMaPP
P2ds7dGXXl54K/0fqVTRranUfzSvTeHvfCrFf/KF/+Wf6fgHb/9/9I2c+VVc
8csvv/TasGHDqQsWLDh0/fr1jX788cfU0P/mZyf/v9zmqTKUKvOrpNu77767
4ZTTRnwzfNSY/AVXTtkxcvTYjUNPHX7kunXrUoP/Tc8M8Z45v1evb6bsvnt+
QSq149ZmzTaev//+R65fs+Zf7iuunYb0NUxYUGl+pdt99tlnW4acOjJ/32Mv
ptL5R555s/DvnCUvgwTT7Un/5ud+5z13SadO+R8LkyANggr//pJKgWRD5n+n
36T2GtrvKSH2rD5j+Nn5mQ8+azrOBN1vPGnIqQBYatC/+Tk7nNXnH3VUfptR
D6nCc47Mjefsv/9/q9/62mtovzK5UhXyeLMdO3Z8POCkU0zHWekeksG8M0+c
+G9+bqD33DkdOxoCs0ImJPg/6jepvYb2OzTEnh5vvfXWttPPvtDv/p+jL580
eMmSJX73/7bnBnrPTWjd2ifznw8WF/+P+k1qr6H9htkDQH109HEn+t1/MWz4
76G+/O7jnvvd8lVr2237dmd9z7n2BnrPDevc2Sfzi2v22KOh/arPJbXX0H6H
hnTPzbdMu+3Xa2++z5vbxfnb5y5bddao809Zsfadblu2fpv953/9XyRDeT6D
55ePGn1R1y2ffX3vxHueSS8bPWlBqvihq2YsvXnGg2v4c+lDT/8pVXTqM+ve
K2D8h7/9krKWP3VEbNNpNp399ddfqT5uvvOaa35dk82G1MdnqdTyK044wTw3
QGwzyAb5g5975cO7r584BW0XBle3XRlaBlI+8rW3P517/ehL0H6x0rQ8Wgzy
e23avK3/+jc/ue22K6/G4ynt+ZNDzIZsVo84+zxDidiZ8vyNM+dvHHzKmZ0+
+cvWQ994/4slF09ZBP7NvOm+Z8ExdNH5s23fHxc0se604ed4TWTRxBsnnzq8
9bZt2/AUBj7iyTWbSo0c0uc+vuotx+sjg2bWDzvzbK+ZNJvp/u6HW2jJDMWX
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\
\>"]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7626342074523444`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", "=", 
      RowBox[{"ReadGrof", "[", "10", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"full", "=", 
        RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"DrawAugmented", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"AugmentedFormula", "[", 
               RowBox[{
                RowBox[{"FindFullFormula", "[", 
                 RowBox[{"EdgeContract", "[", 
                  RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                "full"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", 
                RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}], 
           "]"}], ",", 
          RowBox[{"VertexStyle", "\[Rule]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"v", "\[Rule]", "Red"}], ",", 
             RowBox[{"{", 
              RowBox[{"v", ",", 
               RowBox[{"AlmostSinks", "[", 
                RowBox[{"FormulaGraphReverse2", "[", "full", "]"}], "]"}]}], 
              "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
  "Column"}]], "Input",
 CellChangeTimes->{{3.76263423298339*^9, 3.7626342332882013`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v14x28x3x5x67, $CellContext`v14x28x3x5x6x7, \
$CellContext`v14x2x3x5x67x8, $CellContext`v14x2x3x5x6x78, \
$CellContext`v14x2x3x5x6x7x8, $CellContext`v15x24x3x67x8, \
$CellContext`v15x24x3x6x78, $CellContext`v15x24x3x6x7x8, \
$CellContext`v15x28x34x67, $CellContext`v15x28x34x6x7, \
$CellContext`v15x28x3x47x6, $CellContext`v15x28x3x4x67, \
$CellContext`v15x28x3x4x6x7, $CellContext`v15x2x34x67x8, \
$CellContext`v15x2x34x6x78, $CellContext`v15x2x34x6x7x8, \
$CellContext`v15x2x3x47x6x8, $CellContext`v15x2x3x4x67x8, \
$CellContext`v15x2x3x4x6x78, $CellContext`v15x2x3x4x6x7x8, \
$CellContext`v16x24x3x5x78, $CellContext`v16x24x3x5x7x8, \
$CellContext`v16x28x34x5x7, $CellContext`v16x28x3x47x5, \
$CellContext`v16x28x3x4x5x7, $CellContext`v16x2x34x5x78, \
$CellContext`v16x2x34x5x7x8, $CellContext`v16x2x3x47x5x8, \
$CellContext`v16x2x3x4x5x78, $CellContext`v16x2x3x4x5x7x8, \
$CellContext`v18x24x3x5x67, $CellContext`v18x24x3x5x6x7, \
$CellContext`v18x2x34x5x67, $CellContext`v18x2x34x5x6x7, \
$CellContext`v18x2x3x47x5x6, $CellContext`v18x2x3x4x5x67, \
$CellContext`v18x2x3x4x5x6x7, $CellContext`v1x24x3x5x67x8, \
$CellContext`v1x24x3x5x6x78, $CellContext`v1x24x3x5x6x7x8, \
$CellContext`v1x28x34x5x67, $CellContext`v1x28x34x5x6x7, \
$CellContext`v1x28x3x47x5x6, $CellContext`v1x28x3x4x5x67, \
$CellContext`v1x28x3x4x5x6x7, $CellContext`v1x2x34x5x67x8, \
$CellContext`v1x2x34x5x6x78, $CellContext`v1x2x34x5x6x7x8, \
$CellContext`v1x2x3x47x5x6x8, $CellContext`v1x2x3x4x5x67x8, \
$CellContext`v1x2x3x4x5x6x78, $CellContext`v1x2x3x4x5x6x7x8}, {{{2, 1}, {3, 
           1}, {44, 1}, {5, 2}, {45, 2}, {5, 3}, {50, 3}, {5, 4}, {51, 4}, {
           52, 5}, {8, 6}, {18, 6}, {38, 6}, {8, 7}, {19, 7}, {39, 7}, {20, 
           8}, {40, 8}, {10, 9}, {12, 9}, {14, 9}, {41, 9}, {13, 10}, {16, 
           10}, {42, 10}, {13, 11}, {17, 11}, {43, 11}, {13, 12}, {18, 12}, {
           44, 12}, {20, 13}, {45, 13}, {16, 14}, {18, 14}, {46, 14}, {16, 
           15}, {19, 15}, {47, 15}, {20, 16}, {48, 16}, {20, 17}, {49, 17}, {
           20, 18}, {50, 18}, {20, 19}, {51, 19}, {52, 20}, {22, 21}, {29, 
           21}, {39, 21}, {30, 22}, {40, 22}, {25, 23}, {27, 23}, {42, 23}, {
           25, 24}, {28, 24}, {43, 24}, {30, 25}, {45, 25}, {27, 26}, {29, 
           26}, {47, 26}, {30, 27}, {48, 27}, {30, 28}, {49, 28}, {30, 29}, {
           51, 29}, {52, 30}, {32, 31}, {36, 31}, {38, 31}, {37, 32}, {40, 
           32}, {34, 33}, {36, 33}, {46, 33}, {37, 34}, {48, 34}, {37, 35}, {
           49, 35}, {37, 36}, {50, 36}, {52, 37}, {40, 38}, {50, 38}, {40, 
           39}, {51, 39}, {52, 40}, {42, 41}, {44, 41}, {46, 41}, {45, 42}, {
           48, 42}, {45, 43}, {49, 43}, {45, 44}, {50, 44}, {52, 45}, {48, 
           46}, {50, 46}, {48, 47}, {51, 47}, {52, 48}, {52, 49}, {52, 50}, {
           52, 51}}, Null}, {
          GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 600, 
           VertexLabels -> {$CellContext`v15x24x3x6x7x8 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v18x2x34x5x67 -> Rotate[
               Row[{"18", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x7x8 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x78 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "78"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x67x8 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v15x2x34x6x78 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "78"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x47x5x8 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x78 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "78"}], Rational[1, 6] 
               Pi], $CellContext`v18x24x3x5x67 -> Rotate[
               Row[{"18", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x6x7x8 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x47x5x6x8 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x67x8 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x34x5x7x8 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x34x5x6x7x8 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v16x28x3x47x5 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7x8 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x34x5x6x78 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "78"}], Rational[1, 6] 
               Pi], $CellContext`v15x24x3x6x78 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "78"}], Rational[1, 6] 
               Pi], $CellContext`v15x28x34x6x7 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v18x2x34x5x6x7 -> Rotate[
               Row[{"18", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v18x2x3x4x5x67 -> Rotate[
               Row[{"18", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v15x24x3x67x8 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v15x28x3x4x67 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v15x2x34x6x7x8 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v14x28x3x5x67 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v1x28x3x4x5x67 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v14x28x3x5x6x7 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v18x2x3x4x5x6x7 -> Rotate[
               Row[{"18", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x47x6x8 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x4x6x78 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "78"}], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x4x6x7x8 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v1x28x3x47x5x6 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v15x28x3x4x6x7 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v15x28x34x67 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v1x28x34x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x78 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "78"}], Rational[1, 6] 
               Pi], $CellContext`v18x24x3x5x6x7 -> Rotate[
               Row[{"18", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x67x8 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v1x28x34x5x67 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x34x5x78 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "78"}], Rational[1, 6] 
               Pi], $CellContext`v1x28x3x4x5x6x7 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x6x78 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "24", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "78"}], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x4x67x8 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v15x2x34x67x8 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7x8 -> Rotate[
               Row[{"14", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v15x28x3x47x6 -> Rotate[
               Row[{"15", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v18x2x3x47x5x6 -> Rotate[
               Row[{"18", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "47", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7x8 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x78 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "6", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "78"}], Rational[1, 6] 
               Pi], $CellContext`v16x28x34x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v16x28x3x4x5x7 -> Rotate[
               Row[{"16", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "28", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "3", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "4", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
               Pi], $CellContext`v1x2x34x5x67x8 -> Rotate[
               Row[{"1", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "2", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "34", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "5", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "67", 
                 Style["\[Earth]", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12], "8"}], Rational[1, 6] Pi]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
            0.011533434075862447`], 
            ArrowBox[{{-2.0000000000363514`, 2.}, {0., 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{1.1908696251339279`*^-11, 2.}, {0., 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{-0.42295260581047955`, 3.}, {-2.0000000000363514`, 
             2.}}, 0.09694960212571618], 
            ArrowBox[{{-0.42295260581047955`, 3.}, {1.1908696251339279`*^-11, 
             2.}}, 0.09694960212571618], 
            ArrowBox[{{-0.42295260581047955`, 3.}, {-1.000000000190198, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{8.000000000819796, 2.}, {9.00000000241593, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{8.000000000819796, 2.}, {7.000000000788617, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{3.000000000017195, 1.}, {4.158906574234635, 0.}}, 
             0.09694960212571618], 
            ArrowBox[{{2.0000000001348894`, 1.}, {4.158906574234635, 0.}}, 
             0.09694960212571618], 
            ArrowBox[{{0.9999999998260307, 2.}, {3.000000000017195, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{0.9999999998260307, 2.}, {-4.999999999904958, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{0.9999999998260307, 2.}, {2.0000000001348894`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{8.000000002346411, 1.}, {4.158906574234635, 0.}}, 
             0.09694960212571618], 
            ArrowBox[{{5.999999999875968, 2.}, {3.000000000017195, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{5.999999999875968, 2.}, {8.000000002346411, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{5.999999999875968, 2.}, {6.00000000058634, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{-4.999999999881737, 2.}, {-4.999999999904958, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.000000000238572, 2.}, {9.00000000241593, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.000000000238572, 2.}, {2.0000000001348894`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.000000000238572, 2.}, {8.000000002346411, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{4.999999999835865, 2.}, {7.000000000788617, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{4.999999999835865, 2.}, {6.00000000058634, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{6.000000000258211, 3.}, {8.000000000819796, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{6.000000000258211, 3.}, {0.9999999998260307, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{6.000000000258211, 3.}, {5.999999999875968, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{6.000000000258211, 3.}, {-4.999999999881737, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{6.000000000258211, 3.}, {7.000000000238572, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{6.000000000258211, 3.}, {4.999999999835865, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{11.000000001827829`, 2.}, {11.000000001589086`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{1.999999999825036, 2.}, {4.000000000127386, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{1.999999999825036, 2.}, {-3.9999999999058105`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{9.000000001307654, 2.}, {4.000000000127386, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{9.000000001307654, 2.}, {10.000000001359354`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{-3.9999999999893134`, 2.}, {-3.9999999999058105`, 1.}},
              0.09694960212571618], 
            ArrowBox[{{10.000000002147914`, 2.}, {11.000000001589086`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{10.000000002147914`, 2.}, {10.000000001359354`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.2412386206826795`, 3.}, {11.000000001827829`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.2412386206826795`, 3.}, {1.999999999825036, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.2412386206826795`, 3.}, {9.000000001307654, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.2412386206826795`, 3.}, {-3.9999999999893134`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.2412386206826795`, 3.}, {10.000000002147914`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{18.00000000268895, 2.}, {16.463553802662943`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{17.000000002706543`, 2.}, {15.463553802819291`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{16.000000002675307`, 2.}, {16.463553802662943`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{16.000000002675307`, 2.}, {15.463553802819291`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{16.000000002665104`, 3.}, {18.00000000268895, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{16.000000002665104`, 3.}, {17.000000002706543`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{16.000000002665104`, 3.}, {-3.000000000091319, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{16.000000002665104`, 3.}, {16.000000002675307`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{15.000000002571255`, 2.}, {9.00000000241593, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{15.000000002571255`, 2.}, {16.463553802662943`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{13.000000002613689`, 2.}, {7.000000000788617, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{13.000000002613689`, 2.}, {11.000000001589086`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{12.081684445621988`, 3.}, {8.000000000819796, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{12.081684445621988`, 3.}, {11.000000001827829`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{12.081684445621988`, 3.}, {18.00000000268895, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{12.081684445621988`, 3.}, {15.000000002571255`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{12.081684445621988`, 3.}, {13.000000002613689`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{5.0000000004581295`, 1.}, {4.158906574234635, 0.}}, 
             0.09694960212571618], 
            ArrowBox[{{4.000000000038909, 2.}, {3.000000000017195, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{4.000000000038909, 2.}, {4.000000000127386, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{4.000000000038909, 2.}, {5.0000000004581295`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{-5.999999999940627, 2.}, {-4.999999999904958, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{-5.999999999940627, 2.}, {-3.9999999999058105`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{2.999999999675964, 2.}, {0., 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{2.999999999675964, 2.}, {2.0000000001348894`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{2.999999999675964, 2.}, {5.0000000004581295`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{1.999999999729937, 3.}, {-2.0000000000363514`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{1.999999999729937, 3.}, {0.9999999998260307, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{1.999999999729937, 3.}, {1.999999999825036, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{1.999999999729937, 3.}, {4.000000000038909, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{1.999999999729937, 3.}, {-5.999999999940627, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{1.999999999729937, 3.}, {2.999999999675964, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{14.000000002407091`, 2.}, {8.000000002346411, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{14.000000002407091`, 2.}, {15.463553802819291`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{14.000000002407091`, 2.}, {5.0000000004581295`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{12.000000002178353`, 2.}, {6.00000000058634, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{12.000000002178353`, 2.}, {10.000000001359354`, 1.}}, 
             0.09694960212571618], 
            ArrowBox[{{10.241238620766865`, 3.}, {5.999999999875968, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{10.241238620766865`, 3.}, {9.000000001307654, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{10.241238620766865`, 3.}, {17.000000002706543`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{10.241238620766865`, 3.}, {4.000000000038909, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{10.241238620766865`, 3.}, {14.000000002407091`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{10.241238620766865`, 3.}, {12.000000002178353`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{-3.999999999952763, 3.}, {-4.999999999881737, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{-3.999999999952763, 3.}, {-3.9999999999893134`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{-3.999999999952763, 3.}, {-3.000000000091319, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{-3.999999999952763, 3.}, {-5.999999999940627, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{9.241238620604179, 3.}, {1.1908696251339279`*^-11, 
             2.}}, 0.09694960212571618], 
            ArrowBox[{{9.241238620604179, 3.}, {7.000000000238572, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{9.241238620604179, 3.}, {16.000000002675307`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{9.241238620604179, 3.}, {15.000000002571255`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{9.241238620604179, 3.}, {2.999999999675964, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{9.241238620604179, 3.}, {14.000000002407091`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{8.241238620567088, 3.}, {-1.000000000190198, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{8.241238620567088, 3.}, {4.999999999835865, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{8.241238620567088, 3.}, {10.000000002147914`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{8.241238620567088, 3.}, {13.000000002613689`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{8.241238620567088, 3.}, {12.000000002178353`, 2.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.653151223242276, 4.}, {-0.42295260581047955`, 3.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.653151223242276, 4.}, {6.000000000258211, 3.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.653151223242276, 4.}, {7.2412386206826795`, 3.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.653151223242276, 4.}, {16.000000002665104`, 3.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.653151223242276, 4.}, {12.081684445621988`, 3.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.653151223242276, 4.}, {1.999999999729937, 3.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.653151223242276, 4.}, {10.241238620766865`, 3.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.653151223242276, 4.}, {-3.999999999952763, 3.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.653151223242276, 4.}, {9.241238620604179, 3.}}, 
             0.09694960212571618], 
            ArrowBox[{{7.653151223242276, 4.}, {8.241238620567088, 3.}}, 
             0.09694960212571618]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
            0.7]}], {DiskBox[{0., 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.09694960212571618, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-2.0000000000363514`, 2.}, 0.09694960212571618], 
             InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-1.9030503979106352`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1.1908696251339279`*^-11, 2.}, 0.09694960212571618], 
             InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.09694960213762488, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-1.000000000190198, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"78\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-0.903050398064482, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-0.42295260581047955`, 3.}, 0.09694960212571618], 
             InsetBox[
              RotationBox[
               TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-0.32600300368476337`, 3.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{9.00000000241593, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {9.096949604541647, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7.000000000788617, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"78\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.096949602914333, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{8.000000000819796, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {8.096949602945513, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4.158906574234635, 0.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.255856176360351, 0.09694960212571618}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3.000000000017195, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0969496021429115`, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-4.999999999904958, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-4.903050397779242, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2.0000000001348894`, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.096949602260606, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{0.9999999998260307, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0969496019517468`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{8.000000002346411, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {8.096949604472128, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6.00000000058634, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"78\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.096949602712056, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5.999999999875968, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.096949602001684, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-4.999999999881737, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-4.903050397756021, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7.000000000238572, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.096949602364288, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4.999999999835865, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"78\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.0969496019615805`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6.000000000258211, 3.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.096949602383927, 3.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{11.000000001589086`, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"78\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {11.096949603714803`, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{11.000000001827829`, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {11.096949603953545`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4.000000000127386, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.096949602253102, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-3.9999999999058105`, 1.}, 0.09694960212571618], 
             InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-3.903050397780094, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1.999999999825036, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0969496019507523`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{10.000000001359354`, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"78\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {10.09694960348507, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{9.000000001307654, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {9.096949603433371, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-3.9999999999893134`, 2.}, 0.09694960212571618], 
             InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-3.903050397863597, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{10.000000002147914`, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"78\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {10.09694960427363, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7.2412386206826795`, 3.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.3381882228083954`, 3.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{16.463553802662943`, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {16.56050340478866, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{18.00000000268895, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {18.096949604814665`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{15.463553802819291`, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {15.560503404945008`, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{17.000000002706543`, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {17.096949604832258`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-3.000000000091319, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-2.9030503979656026`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{16.000000002675307`, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {16.096949604801022`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{16.000000002665104`, 3.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {16.09694960479082, 3.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{15.000000002571255`, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {15.096949604696972`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{13.000000002613689`, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"78\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {13.096949604739406`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{12.081684445621988`, 3.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {12.178634047747705`, 3.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5.0000000004581295`, 1.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.096949602583845, 1.0969496021257161`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4.000000000038909, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], Offset[{2, 2}, 
              {4.096949602164625, 2.0969496021257163`}], ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-5.999999999940627, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-5.903050397814911, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2.999999999675964, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.0969496018016804`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1.999999999729937, 3.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"28\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0969496018556533`, 3.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{14.000000002407091`, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {14.096949604532808`, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{12.000000002178353`, 2.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"78\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {12.09694960430407, 2.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{10.241238620766865`, 3.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {10.338188222892581`, 3.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-3.999999999952763, 3.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-3.9030503978270468`, 3.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{9.241238620604179, 3.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {9.338188222729896, 3.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{8.241238620567088, 3.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"78\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {8.338188222692805, 3.0969496021257163`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7.653151223242276, 4.}, 0.09694960212571618], InsetBox[
              RotationBox[
               TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
                 StyleBox["\"\[Earth]\"", 
                  RGBColor[0, 
                   Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
                "RowDefault"],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.7501008253679915`, 4.096949602125716}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->600,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
bZxBm8/vPdXbz+9cj5n+XAF1ZrDHqk0uSxaTEfjSZrSNIIlv0L4gKSQQj55p
41V7BzZlWNsW9DvxU1NagWXwR3aP7BzmqxKzSpxvurgFfnBh+GgfxmYpn9VM
ORA33D8p7nRvv9nARpOvRK9FW5KmRsferRpc7SuwFZKoAWNIExvgYD/pLAFs
cuONkp1leM4pddO2TISlERzIq3TcXLM1nY5XeAK/bz180auWTmG3u46Lxhso
qSJfEKcKTwXpGg0cMA29D3/3uICU1y2GhtGxk77dkntgidDZX1mP8C3WId5E
FBS+w3sq91ubWLENQ672mDFThpROMeIAPeqw0Pn3nJ55fi7hWeVtUa8y+NNx
cs1YlXaaKZgyZNbsOehH8JNRyambBcQ6V59fVQmmiMgT7JrLjUJao9yQPE8V
FYnfZOttN6yetMvtrnOSfjKYRkCr3CtuvmpN5upaKcrNhFsnzlvfIsPAdSWk
p7lSviZvjwyfieaynJ6KX5iIqkzPNSbl+N4h206dEYcZDWC8l67dyTjwiLt1
m3XUOE+eXU6uflRBXGnS2p4uCXAwEa20Nut1+NwdeEf7Y3dPagIvLwcinVw4
LPrSrPAOUZoYU6X/vEqdFph2z8tXrkG1jyZaxZ6XCGQWk8dGQkz8cHENrgbz
u4nlBmWy7NWGp+q41oTPaSqndhRX5JY1Hm4Z0PzSHfmB6YP3dJVb6714m1I9
rERPI7ejGKIkgoMUp1PepbPtshmNLR2da9tTgpg65VdynzP0ddOuv/vWiXOT
UaueV63XJtpnXhR9JkmkPtnJYdCjarUaP6tco2FG256jLDWzkHu6xarib8mK
0wd+JE4vdEnEgNabNOFCWVRLLE06jajyG4cMH0tFivhTFnp5eZ9v2rxlRuPm
rV9VrtcOun7UYXS4ei1G/AHWRkZw393n08U/g89KypUIV96tZltTKwvi40uN
GjehQoUcZRzWgAfGSL2Oct3Zkh2JZNHVuvf4NZ/PWhKb2OTyjfvKlWdtujqm
jZwwk3eUm7XHuk6lWtMqC6aiui/VmWhH34FDjVnEn9WSOxqIPK1QufrJDva9
8Kh6xCZsCVqctP9mk9l9fs3rWehiiwVdyEqmkmBewM75ABQ/OT4IZcBg/pUj
xQ7FmxSSPrv2HX1euUbj90Vtyl9p031k6Ow5Sh4/YlJqma7XDqpzo4l/T+5I
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
qPbErrzdwxJlXP70SPejsOYvr0rhd4MiOgD72ttr/IJVsQsmTM9YvXBS1rrl
rPf6IWMWY3+drxLRBOacf4yNTR6W9PI90CNt5V++sc3/Me1izRhvlelY8YX1
CNtz4ZltHhV3LKHtb1fO1/HwyPCM8fPGC3xEKfhLSEzGEiEVyx4/26BLOm3b
cRjZ39iEL61GWD+1S3UYMWP/QsrpkQJp2V9nb2uztJ0ajVIqnjyozmJdEQ0I
Lt75p8qVK/Ms/MjH9qPsCWjSyuKZzUibRf039l/Uf0P/sVl7cqqfungNpEbW
tHU75YxxVwlIK0iPjVt3MUZdQwZLQSUK9Fm0LAoLDaJEa7TMHQoMn0INK6pa
GuHM59HtXCPtc/mr0HgbtLQxgR2G0GnDxs3CA/hl02YtIOTD5Rs9acYCRFex
/yo8XVETeGRScqeqlp9/Fr8TtfLS0tKSvyEhGdmhyLmRSjObfPtBarKlV5RI
0ekJWQlSH7S/UaNGSFI0IX7KXVdXV1E7ndeeWvuX4yilvc+cIVuHSI6S53yk
rS2kMFS0NXISX1PmyohLNRkqCAt1WtQ35U0WDoqN0/v7EjvGcmPCoFziGRKr
5ZZAkqkn5o3lLZGlyBx47xRDRH1uM8YoPX8xfJhFQ4/i3/bqLUDu/VPlsZXT
sqdlS2CSsyF+Ne+WMf7L8XKPv4uXLH61dO3S70xsTVpv+2abfoxSHc/97ztH
OIvvyjhUTNW3ysKzx9hHPCdm49aND51SnC779vU9GZYVJmpRmMnZh5ABU+S7
ICN3k4DupGdvh72HzxOGE+QTzdHRIc+Ku3hfCWvQDUYtKlKOR05qhT7Ki57d
hvq4+84ZLkqRsJYGYSwFtIQqXEbZiNYI84N169Unkctkf9VpgtJl/Yr/2OD1
XZf1gw2YyVS4ltSblS9gANa+cLVlaw9ZuGwNqWmUOCeAF+RlDzSY3fyn6jkN
+f6SX4yfWFj0MJiXOCqbwUV+9/sxQsS72/bvc7NslXr33UsF3Hfp4nGjTIPg
d6ZOZgA1D3QaM1URoC6ppcGpUn5z1W9sBVLlend9d4uWbXSBLW8FKp2wNRmB
TDkgKCg2nfgE4F3F6UUAELAE4sPvUOBzRmROBqqTMWPLZpzbtXEz51IdsmVw
zorH+S4W+BL88xrHLp9SgywqNFt9fFlOrOy5uAVLVm7o3LUniWqYGa74lw2G
GOhqQIWw15Y2Dk9cSpX/vXbbxLe2JUrdLR/REb16ol5WD4rRz1TJrnOuyjhl
Gs8GNwjmXOBfUyW7s+vANDgB0EX3S3p43/UqU/6thY3De1Nz61MNYoZhL+Fu
kIFIWrB7J00JAW+u6LN6oAqems5xR76t7Rs38nKFqvXgMj3Yadjs36qOav+n
T0pYXqte8djQu9vG97pZKs3vlVU320tBvatjDSLyoQIAsHCxUmY0phLOXMsv
Dxze16JdV8yBK+HRfS5Vieqwt+e4+S9tkkocap016omjs8dDT//K97yGlL/l
M7TcP0b9jQet2pXne/XBTdA+AKjI+9/3SAkipnmjTKQSbsrJnrX6hl9QFcYJ
eT/sKWcrZ9c6W6VmFGGL+x4BZZ/ZdnF8ahdQ/OfKrcLJwG/sTShkRHEaAGxv
t7AbR4YMftKCdbu+btKywx/5O3dX5/6p39dr1mne6NxtlJ7eCO3R/bWtk8fL
kv41XjnU8X3tUM/vw2dWRnerdBpxu2bvce/sYgPeW8Q7P/WIq/ncaXjAa+sE
p1e2FVxOtxoy/3jb+DlPXbyDFKKf7gnT1/RdNBIvc0vbmLaIsKM1a+f7CH1K
3vQK8/7To7ov5gmsJE/tRtofqzGtLmOjbJLQyv6eafN5V0y1tf2Hj7saXL1J
1A9nfwewz25DPCH+NnRY2QGV+84kySRzwj6Flmh50pzld0qlVWDepC25QJzF
l0FZIJa5l6JeD108hkmVuHD3LhoeAkJ5Z5poIWqa0zNqyu5FiCxTgzslu1w0
NhoZiS5N68XvU/WY1q9Qa+CGZC9AtX4w9LiVwhikMHpQD6vGIlCB/uoY2IpI
yE0xMR2kOFQFLLXsRBf5v5xKOIszozQYzb+XRLqZQvQt3zMNqrxzEeFuUIpq
BADX9p6Liwu3QuWKcH9lkWJxy3OsJ0NW2G3LTy5/tObsmgxfFCbyUkO3Ij6J
bHAbRoYdFX78+HFGtqz3ut4sJBkuRnbXdbTrLc9xnry50nhTU9+uqv0haQgZ
qXqszQtjIvlTQY2/GtZwVKDps1fsIWvT5ODxX9mejAanG23OtbJuCM1pGetm
MQJeqsHXF75BiCJ8NXAsl7KbmCth+xVCElGQEu9kkIcip0bec4lzYQsJMEM8
YB5x22Oox7Fq9aqhh2B+X9R/cH/Bu7BsBU1TiplJJOaZzTCbqUnzkhgCc6uF
1WUTqg2YV83Pqz+m/hO7lnYq9nlqpaZ7zu8R9Iw2whBhBgBsihbiHImXi5mC
+yLnitHDqXcuvG5LpZ98/udofre75YIYAS9TtXHfLa3MkxLJpY41GhP3Sb7V
D2o6hdkrAI59MDQWhQxMEsy3fNPCL5cbXeNPjwwf4etQz2WAOO6SlkVJc8n4
zC9HC2AIS40iEDU2k1xyW+txrfGUiPGJsqZkitKpe271S40dO3Vi+oTNE34r
26qsSicxozFnRsCZUlSGNfJ97ekNsfaJqUt3EUPrDaWqc3en6SPQ5ziBOFVg
qshaQTBDEFl6Awuf2IKBgwYROyf8SLtAYYAlyYYup/PGC5tkp/M10ro98Eqq
fDV4ZJO35onW702HW/5eM3HA6TrpfX+MmNgGirXl/WKH5Q4ZmnAoMjKSPStb
X138XWLu3PL09FRoyuLj4xf3Hzh4WtqYyeuGTVl9uNHkLg9dR5Y62iYt+0yL
wfOfBncc9d5smN0rm/qu9z0ig/K6JubiW+MvKZDymYs2nqod3Wlzz8Gjntra
2SnMmAkJiSDcwSkn53658a5bhndes+k9ZKauhKQ1IUuBUv0tpGYkNjSvjH04
dNmePKK7L2yTnf92bu45dULu2sdOcZ5/uzeqeKZm206vLRPtz0SNHPLSPsHr
266jFkyesvzrzDmbduWbMU7XyqVH/Baa0fCtqZnZ1vadukv8gpPOITkflFX+
h1oxkQuSFk59azHQ7pmbf/hfpQdG3QhObE250IZ8hcq0t/nq6K9728zqdz0g
vfq/RrEmF2r2HHizcsM+T509AyGF/q5jykK6DDxwSXe/417Os8KvN64eiUiJ
WN8xtmP87NzZLG+j/Rf2cwBhduGdKdYTT2V9p+VdHpZwdsFfV9hAhkxc/3Od
zF7P7ZJdnhTv7HatbGTtc/WGpP1jXMv8XkB44z/9u9e9Xj4lmsD8mVqZXSkK
pjfP7eChMVCyfsgf44PAtjEQzT9w8w7gntjRr6ySHAAXvrTxLnGs1eCJf7t1
DLrnVbvihepNur+2jnd6VK5Pn9e2wzy+6jZ29pqkzzfPGzNv+6N8BX2o/oxW
xG4e5I/xcFT9aNAGKpu4SvrDqfiq4YKG/Rf9sAj6t+xxW2e9tEq2zVeo5nRE
b7vj1NfSSFm6CovP1GTf1wfgYhK4MdubMV6sOLpBvkGkmLHzhq3N+DUop8Ib
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
J9Z4bhPqcKpOnz733Ef5ftWmU49/+hhk398V6kTDmqJUXZcKqIRdc6tUiv8v
FXPC0aeS/xQW51LX/74uclfqX9mbM4cNG6Yrk7DWN+JY33FVR2BBII2Q/iJU
KIaalrgjUWS3yHXOB/U7ermuBk7V86RwHeb7w5pStRaiQ0oVhCMAK51mSICr
hBOAJnaaL+5CmOmJY7IHtoQgM4EIYJ1jSxJHH7Liy2/Yk5IbSps+a967Vh37
FIgaSysbzh5jkk5nRgavT0SBNGjVUwZKmL2wHC1WSJAiIgxET4pnZIefS8X2
ufKfl2epkev8/MghzQFVhBRFqYLhFvQw49EcTYQeu6nqiZsnyDjdd850ZqdJ
wI+iB3GnEJ4U1SLPI44cOcKQNN1cSvnHBjkncGbViaxeXQwcvBFBRgmfuhot
LK60FApsUuFD9tz1ynQu3/7D1ZpRdYk0L02cv1CArS9tHZxnZM/fDVL0ZqnS
vkQOC5rVaA2opTkK8yehZZHshpBIBJ6O0NvvbNGqxcE6fesg2AUWpif72tJ2
etvLvum+f7hnut919VAg8bUP/3ZYVK5YH0KiwjT/4e7lfslvlJ/cS8+LzTK9
tPS35DQcrNO+DlVcMRs3b5QKcBVG/0hhBcUrE1zZb7Vq19VP0W9RDZtIwesP
DSb0JIgJuCL89KXr4mYLbk87OGIA8/oFoCxVadmLPmZYhkiHCoPmd4Y4ropb
51oMGwX0oG4nK+mAMyN54xhyvm/co3z0Q37rHepH7FYt73Wj12b2pHmb4Nm/
5enteTZ4RLC4qMyYlO+73n1094VVrNXx8OnhbHspKRcaNte7T+/yloNzN+Xu
bNG2BbMnbcE0gk9D+XohI9Fd6hb56f+sL/9gaKsIfFLaKrJMXKsmPlbPOBLR
MEK2j2R9NB5RSNLIKwsp623v0X758tD0H+dId/1UvSpdJfD/yuJoSQ+mRPY6
cBBEK3S0V3zHB0QfOHOSKPMXgxZmvfaM8tU/4mUZv3L0Pmb0l31b+CqumwpR
GSEtLLhnzshpI7EdQf+QCh0/dsLk7R369MefuRbeoo7+ng9CqlSn9ORkWHjY
kYhhESyjzCKChLPI7L01tTK9XqpNqa8b5TZlKm57lSq9qdf0kW/d63y0Y955
+fotS5u2eWO33oOvlinvJ86LZBfEetvUfnj7f4wGGQkJJDt8c4d+3U6FTY64
Fdqspv6eT8qFVBm8dO3OU1XCww/WTYiSgy8gDU4CK/bWtJ3pLc9kTzG9mPe4
uXvnSlWtisFV8TbSmuqmVxmv66XGlBJ1x2epTmfD72sxqOu/nw387Frpcb4T
szbPPdqyTXv9uO6EVY9EptF6jv2KON3fqGmjozUza8o8CqpM1Luw6SIg+LxU
dEiqk5LN/HXz7r7q5Coppz0SMSeC9CWpXqnVEXNTRDgnAkGHWpdOCvxOVdWV
gmBlyMyalFXAZ6VyF1jKNXpJISqeOWm948wurWrRGXwlZgXhlJwpq3bRWQnO
VMjYgFLsGjB2zZlGLTt98CrtL3P0vLijk5xWMYWlglZxOlWdYiFSSx8CLUIg
yuEsQiA66AViXv159VkCpuuhU4YThY8SHl/Wu3fvrxs0aCBymgpnA0LJUTx6
vlAB7N7bHmM9qJvk9ifDpocRtNjSdnlbcWhJNvOWRFophsYlLoIrkk1Q4yMN
LBlvbsJSIiWl7pUpEg0szT8/wUCmNX3a2j4z5p/oDp0+jJ+1+p+2PQdcL9u5
PBpPOn/jht0MDI3c1GdYlvgCWrzPYfOgqbmwrh9pMzpLGCRgHqQ6h7oIgiJw
ZNNZRF9+Kph+LUYTeejKoea7zu2Skcm+OlhnZB0Cn48c+jv84Z7mfibk8xBR
xry0KrdUqSzpZmmOKh2SNesUjbG/0dxGL6zKWV0M6BTwl2MPR6kkZ/uyN0Tj
iMhtv2379gedew1mZp5275+QNG/+ApQfs0L45VzNtO4AMmmihF7GuqTAV5DS
sNrBxzry8+lzihUUGP91TRZBe465uPJiR4gyUlIkWshIX9usMbQot3ASGSF2
5SOnziXeNu3YVZZz0dBxwwmrCTDsl4jmfX6u3aSbvpKx2snz5yIPXTwktXpM
Bp7wbY8hHsz/gxKxJV5ZJFowqMG5R3L1bSLfmZQwWdV9VXd216d7eZkWeMQf
1AQu+1fI6iR2wE8cBqViUTNMqG5X37SgqkK6nV329fVd06VLl3abN29mm2eM
Xzqe43u0ZkbN80H1gphOJP3Z4JBgg6FuIwFBwZ9I8oKJ+7dRTEcm7t82Pfsf
bdizBTyHRspQjXuuWLGiIKuj41nNGL9/PLcTECH7GFceQxsXiBQkj9jZJqbN
26ZtlHV53bFn3PWy5cqrPEeqBMGSALYlBeki+6iSvePW3u1q6V6ln9l42jx0
GuA0dszeMQcajGgox/Z9u54D39s0VqA52u3kOAnbLHM6IT0z/UEJnxLs/T/c
a7s/tw62hs99Xa/MQXKrNx16D35r36D4qdDJoQaWWuOPAnKa4GBLLuk/Nvap
3VCH+64jPN6YdbN4Y55oub1jbuy3DZKi5Zbv2vcc9N7Gy16xXrSZY3hYMTI8
NGHG+Jzxd9w6u7Hjbngneb+0HFLAxytdH7mabaSyzKv3ErglhI65I5csJQAC
9eeV4DZNXljH2f3hMcrjtVUDa1lcjjKzzz0keKhtUxc2h+wzVaOpHFQ8GwKo
Xc2bN+fz7IS5cclxCkN4vjvFKqNtL/tO8B2w8PuFEsXDEZ6SvCNZO1gSgEvL
zs5WCEjKly8fN3fuXLyuCek709m+tzyreHKgXlnUsFBqe/NPy3/lkPRBNUop
LWqatQZGAt4TNBsmXPakdRtwsx66ppZGDPwaNroFSMndA8euETpLhfwqX0J3
3rhx47sSzq4fksbMeN6mU9+ndnZ2krwUw5hnClHCf9UvZhJHYCmlvS9Gp/Q6
zh+4KCwRdkUJSfF7RUgCc8Qv1rFeOqKUn9ra2qKYGZh0HJDQAzYS7GciZCen
7EqRoZ0N/jz4jtsYN0NLNzuGdbV06dKSQuQ4KigonQuvJyITB6Kaqq191EGx
xSQ2LClf7sI2Zt0lbi2T8CmKMy0nXj8vL29r3yEDO6/dutbszZs3Ys9JqKTv
8pVrdrZu19FIbIWnfwoZlxRl0R4S1n2hbwSVSCQFvaUqdsdDbfuNEY5ksiEk
7kRjzB++agIZD0AsGzov60kAUWkrdeHyBbYeir3j+m/WG/aAKSUpE0eNGiWK
XRcbtdbzkvC+YgCrWP3hw1nIQ5F1IpXAtwY6eOjk5CTaUBi8xe2DkfN6aOWq
zGm3L774QrumBBlabJfgX+6cYzOJGwsrFYVEeNnEj6DsEBoqaCh+CxkXQWJn
f7M5HZUSCud0F8MmMZZdr5OMpvpiPF5VxxBgXlQFuPhMEgvqtXzz8vWxw+O5
jjVWCfG8eQNQndd9A8oLXxAt0iEKxEID6ASbG3YHUdzwkz/9jOCckD4mPStz
oYJVlxZBTfcc3CNhk2c2oTbbWo9uLZUMIqXYsexc1VR2lIXToyqk6TUb+X+p
WlTauCluujfBqgnp6ek8KStzRiYTwahYzwuBgYGvLEpb3Pao6HHbo6aSFdKX
pa/p8kUXoTCU+KKKiu9X6pfITvVb7tix45Kfv/+3rXokkHuekZEzf2v7jl0N
ZXbm+uJvRsfZ55anK06tKPgTOeQSAuWtFYhpYnLqhbLlguYMGTLEIACDimpF
DMvOZV9/X3EdpyalJTXd890edWus6rS1/aKuCbNmzSH1kjNy7siXlp0sMXMN
KZt9Y5AGkltjOMfDB4azGEw0fVH3tBnQi+ztnp7ZM2k1N3rcrHGrhiUks31u
eCd7/1hlVBWVJOHZI4M2seRypIa4E9Cmn41o0uNKxYbNTkTHJ6q9G5VN4Zg4
bdo0hpgxftH4N2aOZiA4BBdYFJ3vybD4MIbIxmU7zRg+ebjBnHDZFx0dDa+i
hGMQG9LONGPGli3E/7Goqau+4TMmEKLUPz2q+FLDyOenJo1OQsQgDBkW/Ebs
J+386TvNiJbX1rSAn0t6X0oB6NrOnTvDUTE7PjFeVBTqCusD7w1nEHsOy0U1
VNVuAFoNrvhg3JbI+I6WLVtyfhYMzB0oPI0ckKZ7ftjz1Laq7ZUyjcus65Te
6VMSXzwmNYjmsL3rgFQCab9WrdtaelzCBpidvW717JQ1n8OPR0Z76JyDC1Qh
e+nbHS2XKvQBTJrG5KhwWVYKrUwGt/bhw4c1S47plxb2fP+plvAfRck0WcX8
6NNgRgbybKZWKU7UjhwbQPCz3EagYTo1X5Q4dWQJJcxA/nlJ3759WTKWOGbj
zxvfGycao75FnJ4NnhK8u9niZhLCYYj8q8LE1K4CbHh2z8WAgADuZaS8s8Xg
3LxcVj3g4rWL6vlQI/hy/DTV7q++u8G+UE+Q5s8URbUmN2GMamhfkYLmquTS
jFDN5+GsKoerCKI33kWriFZ4bbVZXzIgNj4jZ8os1AKxV6KBsV/sPSwoBUAe
tFi8FZBS+72JiSnJQmm4oW6x4r8Hliu/vnO3XuhEaF6l/p4n8jZQ44hpjE0n
RtTcuMw4xL8SrFRPgy0GCbyHMjwx8tTQ6aYZRyI6fRQ6VewiDY2g9wD5knFg
maJ/Fw5elyRN+shH3iyTUZGI+IGYcROKGfq+ag0gcAwL/GYVAmcp2qSgzlub
d35mkRWooplBlRdQued/3XN1ddXWxQVNJUeFPggnqteKZFRk1E7XatRxY/zE
tdIchZgBWDP25x/u5d1Dzlw6w14AhM2o1MruH/YY+lsbF/g5yuFRhyNdgFVV
/r8XI+aMXDySFIQyXM3wkgW85FfPD3QequaaT2UfKTSXIiIdSiUQKxooR1FR
RUQfz4j+6sAhmAxgsv7Dr0INiiclqrii59qeSBORGOHHbxzHbyI2JtxH+sgn
7ydHn7k4ViOi7vyEtAmFI5/DZxyaIceFo0Lt7jsTB5N2m3dsVvdkBK+R/yi7
57aJjufKdy6vNDhXVFWTsKZ7TuzhlZkCKThXJZhaJ3LHbYTbvuiR0XTxOdkw
Jl4aVG6KWdaFe1z2TfDtuWLrCk7tkYjPI1TKqWWtM7M2ZAk1NMPne1jo8bTA
CdOPbmHqxMXb+6bOhaeC10YTgA8A0CG78mRYjTBK5ZgeplvP/Cu4lHPlM8of
iRgRoSqnbdu0HCTMDemTpszE0J8yYdaaP719KxC8mpO+YtEdj9HeU1K3jpaZ
A+txsO6c+k9th9tWPXH+hJGhAZkDu40cpd6uVfGxLx99U695vRveZbxnDksZ
hoEhnrq4PewojetS31UZmU0VktSy4EizGdCHol61sxBy5swZBIEhw0O1jcrG
KIwdhDfOB/UJul4qwIeCLUCGs1LXTL2Zb0BgyOPi0o0NQPb50HFRQD21ZmTG
Qsuja66hxB4EbVPQnEzb7wUwzKJCXupZtcXcEy9URJCef0nEjux55X6a2EFY
iqtZIAQ19cK4JM0o5oOcZcar4ZaQJPGzZ89GXCwYOHCg+Jd8BGM3321zZigt
d5zbQaiagBVoLemBpwXueAPEMSKeEd01CEArRvXW1Nn0vnMH51OhLUJTJs+Y
XNBn9oOBsSz8I63J7hDqDYNBbvkp6jM5p4rI0NKYUvctYscQWfw0/Zpw0Aih
iPiNEiUXp62ocUjint//5VTWCW5Kye1pFtp9V3fv637lKiHwD7XolvRXSZ9A
Gnm9sEl2eGuaaP7GPMnytcUIS+D+0uAaHOLZiqMrc07U6bbl5N728PBQIMsa
0mLc6JWj1cDmlJrXfHr5SGDzSET9CF2rJmM9n6V2SOyZaCkD4N6iPMSbksJs
2YgSetkfvSBa615r6O1gfz2oaoMT0Z0TwVhcrFC5Fg2elJ5GtWfWw/xcOGDD
QCnQFuwKW1Ox6NS1M1WxomoyjfnXbW0XEfdiPYqJw2cnpY5OvetaxXXU5A1z
6OcJEwe4Utqv3vGuGfTCupn9C+tE28N16jdMmzxFwb0Pm/nlTASQZoCKFpGT
8xEOU5Nz+roJfY7t/yonvOYzxofrNOEkCNltrYe0fmobbfvafKj5qdCwUN6e
kR2rNrPap+rFCRpCaCihYQGeUeZ/Pqh8hceOLu55bXok0u97Tvz6pCd2o+xI
bxKEpEJRElDck3sTKiN7rqU1JM3BAYDgPq9+/fq0omNxN3Qe1lsf08TruVJm
Qpm4uUfmSkxzZY+5PX4rG66y5mp9FcZM3DXjUqVRTcdOXbX+oVN3J+rGNrVf
3F7Iam96jfMCZiIKTJ0aNfDOzD6zSbS5GBQa+lPdZt0JvBC+lE4W8wfNGPTc
OkGpFycDrGZ8ji+nSoGTw5Qyflrj0ZUDm5YDuqdpt6anqrSu1mPV12tEOCAA
aGhzz6WcyxO7ODvcc+n4cyZkagjVIYxRBI8Kez06n+9fWiZZHoqsF4kUJDkm
HQ45Gu/MzC1/CavVCOwiDNlb23ZsjxnP/WQeWYaO60+tF0TQ1KTNSRcCBwaK
PNSW24alvuHt7S1RPbWAdq0SBrjs29B3ddd5XdlShF+nJKdobS/Kc7pRwsRS
RL3oG0OT0XxtnmI+bOahmbwimRXkfWFIJueFIZ0NDg7GT+cMhp86exFZMHz+
vk3QII6cv+VrfPN3pg3M8yX6Z/s7DR7PNEDn8MBllDvJXjzYqqcvXy6KwlL6
sUhHepE+RoqQtyiMwBQGTwELa5WpaDQ2mM6oNZHqFxXY+fKRiqAyltOqnHRN
iSAJhDtHLxoFCi1RABmcZBZ13bQV2mGFGvDQoUPPra2tN3To0EGdxIWNgU1T
uYSNSkHFa/MRCoEJi4Jtzf1Vqe8oOHqOCt4tZrTEioGx3nNJcdkY0zHmnYmZ
yUOnPk5CMsYbbmq/oj2FS3xfVa9o7bkbh6Vgg2liTHxToSxjqg3Al3W9lNiT
+oJ2knjhoBmCfioUpSjKNO7L7woaYajVZ0hGKTz5X1jTdO6vaQEvpGYHKQrC
SFH51kcipkbw6JkJW1JpZbms3+q4/Hm3ISRwoNHMtsLmBMhUAwK6HogZNIHe
KQqdYq+4zG0duw+AG/eXipXDFwyenAjFY4/VezaxIKC0X5sPNr/h3d/7z5Lx
JfWuoz7MV0BBqflW+lipROalGEsqoyQ2KupbarzUt1Z/hywAjAsaR7NVrSnQ
wJ79pWZ6Zxzf1/k/56YvWo0sAlg6O2HDqIKOreoG88N6l1Mktqo+CSGxW0Ex
SthxW+tFrVd1X91dqhFErRFTuhTQtiwFl89sGxTf3mtqzo2yg+s+KFm29KWy
FSpf8/UvS5PDvAYNGwqtmpDwKLSTijKx02P8/38KCT9dHF5cP4vHw3uEP3Io
53Dbo7uHFIdj6vLYoorD2fiK2aKl60QiIGgI6u1p1rwFjNXrunzeEyqzBQkr
Jm+KWd6BEPTfxUcVJxxNLlgdyiDeUZ+e5zb6kOOm9u3bH6hXv/7VCvWiqcjt
tOHHbSKx4ZNBceAYS8hRmmLLAuK0nGyQGQtjBAuOy/baPMH8ufVg633Rs6LZ
kFD/7GyxtAXfSxBe4VLSrv/DZ1TwsIV7lfo04aVhQ4uDvr9RdqMndoPtHtsn
2ndfdVwpEp8fu2HwV01atKVB0FP74iWmpGdNod79U5kcUuQSmAi4eOviE7ua
dhSeH4pMj2R+LgTmBBJi5XquA4MpY8QQgJ4NNhAQJpCow+ku7czFKVQTtAP6
nwmZFCIcRoXZJqlLEbPPsIsiCqo8P6iBqsG5ubkYosisSanzU0Vc8re2W/Zs
eWpb3xYO3iMRgxRnWzI6hyJnRi7qv7y/ZHRAYIn/mJm1P4vsAjoAncA1LAs7
EhLRFvsOHYWEBM40ZBZlhxTW0btE6TABz9q4NctI5eJ0EBq+49bV/S/HYEfh
y2EKsTFErt72GO2hF+1CfKXpXj4mYsyQX1R0rh4JaminoDojmu4tiO0ajp6l
CHE1kPSxUOd3ilA3+7SA5DM8nkkTWN0nBaSGbdYrGM6X6Dk+C5U0C8FYCFhR
7sv3B+vk1iEpz8JquS1hu2YbEWsQfx0iVNWhrFSJ2/9UObmyOrQxJXGY2bqs
s8QFwlQFHKQ6c4KHk0GzUoJrLMyAVlAhrDGg6fGeBgY0Y1aqgJZU1yWiYF7M
ZF5Ur1l+X7h/doGS1ZZ4XmxsLMvLRBgwYzbC58DX5nYr2qVM/mYyA6mfdzGP
KaakSwS0gXq7ZNfVq9dA+wD6CTJHalWktIe0Ber4kVMvjzOR3fqBonpm39YF
lczflsUvmQR2DBw++SBpzE6PUun7qW1hfXmzEuBX5wgZIpG0IudI3cMl9fuT
a06Hfh6G8p88ZuMcFOnBJlN6CucyDQyk2yCKVqBTBUGjDypjjsrmdu0aG0l9
tFfhgJ0gFPnd+aDJQdIbtnDl9DuTSJNZCaNS6dr4uLhjiT89fQKgnM7rMCzr
octIr6mZ63KRBQxBcqwFDADqDHkXVRbIJBYuC1RNQ3WK9NXcMuF8L9Vk7PmI
I+ePcOSulOlY5rn1QGtEtoTtDFSnxhKuVhNwytl0KuxM5zWe3fZy+cwI6J7J
5uAqSuWg7HTRotwPixbJowNPhf0ant4eGknyhj+HTg2Fv0uiimhANICE7UQT
sWpDlm/Yv7dX1vwX+drX7umr50U1yz4ePiOcV+f4nwmpGPLGzMfskUMlh8tl
08Pmpi9ZebLqtHADiYLaf0WCYPpG3LwDdC3wiB1pOW7E+YpVamzs2Knr6YoV
K4rZJaE9DbUuaRa8SEJ2Ukcie54DzO1ZEQ43Fh/dE96a9jGjtOWvkiP8IQI/
HZZdJ3HuvrVYbaWuX7++MSYmRixBQ8LBRtJ9zNw39ebVIzbL7VkVZhGHhtEh
jnRW2ICFCxey9dVioIJ8uHoYLRnv4NyFuWjLvxxLOqrI/PE+4gHpiHadeDDL
gw01b/CmIYqWcx/tmTFj+7rfyo+v+sY82erfzxKN3pkmWGL0YAWTyaKLiZCr
g62+GBgYqG0NZ733xnzK8rNTeT4FMLAWy/K9tOxiWRRd5EcyWuvEWxi4KSVb
yonSAJ8FlQiK2lMnWk9gxGnTw6IQ8CKYpXG2Wt2gONHmIiFEKkuVpV7YFRGN
tpf+DJJkxrjkepq3ocGgvRMehqlJSUnSFFeJQqvSxIxjd8O7o/eRiMYR3Eua
DRqRCipmzmuhGK6UGacIBXj0FWABwwlVNWN51bLmbXkLfdhLoClSeSoFRJgI
IkQKvFI1w8pP/42DTLireBncT3Uu/IT3Qn8bcWa5XJ4uJZuEQiiKIv8hUpLV
kLJgRASGuiQPuS/3YTj6Mj6pJKVWCySheF5anluMtbWdczo/tU2yJWB2Njii
Ikca5/aXkJwqAK+IwGRPWr2Jqkmq2MhE3QwcGYkmxVhUg7XFRU0pJHDbT+SR
fiTJpI9p6Xt4iovCCAsIv9QZqyEdsPSUFXqGD7X/tBpIZ8aOV69RixgcZroU
5zEqhooXfqt0QIjig0+cuYKmvahSTvtd18ySheNvQtFJSTontagq6C1tM9qC
xoHmnB4vxAxQN7/7dwkgMH0uJDscrjMgkPjMCzPmbv2m+bTeEAzxbIUcWz2x
NQpX7UnwSoCMsmMQ2lL6nFe/SX2SdhJ21Y+N1ec+tzy7eWZmTcviHrhq54Oq
BxWu0Jbg2/mgoKCtbdq0+bjSQuXfYqPPi90cmy8JP3vkmOZ6tEFO98X91w1m
LSak70kXHS9jRDazJoA+AFYpdHfqlmsNDfWO3pOm9/ri+83ML/6JPkAIG0xR
AcLjNWvXv1HaN/CrJjntP9Uym9zuM5ueNvdcXF3Ssndn72ozr8epiEYx67qO
7CtuqLqPVDS/yincvLFU/2RM2DdZiWkkzVj7c7WJjWk4wP2Zc06kSNXC8Tp9
9Tp/w8YqXCUSs+XHPWBm5oxcNRtyxrxO4yZf8+8aeqN0fCD2FE0O9NS3+jF+
U69ePcaANFCnMViaCLAtr5YeXxpXb0L6l+kq0u78Hngq+QzTKNtJkqO8Cn1g
EQaC4tVvQT4PWQ4uT/9FSxeJKwedMlt7d6t5nWEkh0KItKZCteo2otwL22Qn
jID9racP5Ai23/v9meV9Vw++7D8+UAfgsaDsRGrphEdDei2w9bTUDJ4wznVB
Kk5nybIzZOfPHzQl34FPdJedUFii6zvvot8K1OR/4H4sDKIW+vbGjQV4ze/x
H3WVtwUQD41+T6SwSHXxoj4l4VlPJkHTL/JRvTksnu1/E5eqtHSQSwjiUKeH
py+dighEQEBMIIQKBqCsSC3BEBlIle1RDXfcPN1oIq86Xb8rThcWMtPKaPK9
oha3PSI96BTA0kQeOnpIScx8pG8thMr5U4xfBXVHqrMvFFYFnapy6zJ2Xcbb
tDDfmD4RWQDpMayIhUgFcUD1IzA0ojHVMyhIGbPWEEg5ODZ8i859YZVqhbTC
LpYTL+lfvbugGxL1zLqSSke9//d9jbE1HjkMcrjvPNJZmLMkVAg5Il1QEPD6
UCHqnviUCjVyFF2n0Dnm6zrwBYCTFN5BDVAMIQ5JyxljVyjkrMR8WuZ9f07t
RNCidesdu/eqe/CjImdRD3r6Cm3JZMIERKZeXaX2DyfP0GOXTooEldTq+PkL
73mmlgcEcS5sbBMG8tB5lBsDwdOGGmfQwu+WSAa8cE0z+cf3xsbGWZmZmerx
//nnvxx7ObK5GOEtzzGegHEwX1GoNB4kYMWzid0xCQI6k/jd1OTtKf+thE+V
B8rxVkx0aR0r10ggXTL0vZZvXE755dngicGqB0Zir3JI4bprQ6cKwE6VKmnu
ghPPFIOU8eA5YiojNLb2mfb55YBxwT1WHV8jeXMpD9UHEEFd6CCn1cilkzkj
Y035lAQCqTfUBwJ5p1LXb13nXoG/X76GJHe5/+Ahikckz3801s5/wrny1cs/
swmwZT1ptjB3yJCh6ROmTpCdI7XrMsYhc3NzF8WmjLjlkxFEuwyMI2xNfSN1
ZEi/xYsXC8pCH5v7pcLwCsgkxQ1V39GV+cBGxT69WTqzPP2vHpVI8ZyTtnIe
2Lehud8u5TMvrOKtmu3+dre6ZVXvPmXy3smS9Zd1kVi5DjpfQd8UgOIhogTM
4y8VJlcQ6jlhpK19+PhhFXSm3k9KeAnuiWjiNKFB2YecgSv+Q8q/NXO1wKb+
Jmb8WJpawDaFm7mn7fR+j4qPKPHMJtWOcmvi5TyLFr/sFynd1buA6rBLS8Nb
/TD4l2WZnJKSwvIibMVWQ9x8qgJamBtBaCVM/2K6XopOSt2eKrCRwmJUq9y1
kbJRYSoWvYnXjj0ltPdSbqjJIkGLiIkls/ex8DbRP5U7aeoDaSVciYYSCVUd
SAZI2Zs64GMh9eEg0vBMyJQQqB+ZZ9xWgrC3PcZ5sJcYMNYMlozgXrAbDN1j
HfXdm7CDUdqSz0N0PSiRWYJoC2TPPO4vxxGOJGNV7Zxbt/uqvasMoT3F0S4w
PSqoGlf9x+xTfF4aCgYHpaCcUJtNreuuJd+zGSqePndaYNf6snBlztT7mBf4
1x8ki/Yf1GL/x1Cc9BXcMpR+i39YTBRGINuEgginqxXlI8zQvqr3P2sM+1lM
Mz00tjDS5kjE7AjC7p+KKwIHrHj65mnOwKnQeqHPrUtZU+0YP/vb2Uv7pPTR
wQE/iuaqkttcijkYFi0LSatQ5YR7p6VOTZDAqmqOiD7QpmeymhG2oYwZzbxy
6Lw5fESoiX4JzqkMjQOKEc9UBKQGjdPjtkVfSMdpDiWbTZFfWtMEcZj5yff6
3Xs45L+Vn1iJKukZY1Yux1qHXYlBrY2fvHDF0NlzZTjo5zOVQquMmDp9pkAv
mXiaNsqJpA0GZdKyvh/H6ZSycQGtCW4Ff/xUndG9lL49FSaE5TsHQbwxt9R2
KqdJn7rHn9He0lrcsfQJsyfcdR3k+mfJ9JJP7PraPbFLttNXV+v6VxsXVFkb
LH1bfZAuM2tr1v5GQxshXTnlGNBwZzxySvFInr1vpRCjabPq8lEBoaZV5sZt
jtvSdnm71YnTNgK9iDhy9ciBqHlRIKXogvjWtKHpov5r+6v4PrXGDF4mZlkC
dtpOLkzzFfzLuXN4vrd9qlV4ZtvC7rey3cu+Ni9h/pdjU0c1DPXokfRiwQhi
ASET/7Jd10HEJ3kkiBBlBjXMGdMrIPPtrZJaTUpdk8q0HYhqHPXW1MP0hVWU
9dfNZnVR2hHYJjlLEmLIwq3rKv5yS2terXAAvjGLNfuxypQqJ8Nywh6UaFti
UurKVL3LJTaA6FdtFstJaJCfkBO1D185TBkzts87k2SljBlfY2WP2B7IVBL7
FB1I/5GbPr6BJC2lWS6MAH+XSHXf33ZqPAUJ7PGeazfvmjBmwaTj4dOrsbKA
osKP/3ScHXQ+aHDQM5t+NgDHCjPXqnXgx7doMk+pByGQIfk+pntKcnIy74c3
jZ0qcGXeWyQ0O4PdK/JR23z8SMr8QuD4QBGPs4Z+MbRw7PEjfVoEUQPfF6Cc
8//LVy9cpi9GQuozam7D6ATzo6FGPhLeH1THV7STCO8Cg1w7nh8lYotQJDKB
euD1R+RHmiIpLLH5W2GOSvFhBfFCtnlK8s5kMRo5RmgBZox6ebDnhmSiMW9d
0PBY83E5CrjJMkyG+NKyv+XZ4NHB6zoN7vRb2bFlLwRGBKp0xGp2haEqcjVY
1bgh6ug4pXpAid4sZ2uwbmwVMTXFpDZSuK+MH9un2JOg0DmyjmpYUwOY6KxT
gYsxEiZf3zmQhUJRiPnG7wvUFkpBXVsRfXJLobCURjsyQikcuuSX7UcSG39X
u9afA88aVD1x4wRvhdgKuHjxIn9lWBQvM0QpgtGjcKiDlhJK0J16kw7RLQyO
xClUdsRzJwCw0k/vnUk1k8JwwUI05a68Z1FTJ7BeIf9UrVW1SPl3/4kBFK2j
b296jymDDpboMUY4+hmNpSG57OZlTF+PLKSUAipEegHOTRo1ES03fuzOyU/s
Rtrri+pueAd7N9qft189pb6FU0PCgSYBRX2A8pKffwAO+ve16zYUpny6CuGj
gYg+VbtxJzqUEIUjPh+z+9Dx98YDjBt/deag4FqKiv4VIM/VMZWUquShS/bu
zpy9aY8wLYO1YRrw5eknSOZQuGwK19WJEDsf1ChIduuE9DHpKZPXTNYY1OC1
YuYFHlh00M9Lgn5UCJPEE1OOyAg0B8BgmYm8lp0HzR88JJ7RSJiU0UmzcElN
02JdQ+OY/hAxrYGceoTITa8hXuRX9XFJ2g0eadS6h8wUcpV7GqJ/FTgr8IVv
7zU8Z2vHbv2l0BZ2hu2t2rcS0yB2/oKFe1u06bAwY+ZWCqYBMN11dS1ZuNO3
cMg9dEpzGjT/wHy9suSzd9xLed516+J5LjS8Ni1rD7SZMPKWj3+53W2mdmO/
Fc71cK7/s6VZf3V2/rq2sseAHvyZj1GRyfAb7d+/H3IgEQfsP9ZQD8X5udLw
StIBgBgUe2ZB/Bfp+f6307hpG7dRyX6nlF8FcAv0r/y7hIv7Hc9SfjBn50U3
a8PnO2w5sfdTjI1siPp53+UhKtizKpFKj+B+i7cvZprwTQ5EdYj6VAJI2sYz
ZXrlScU3U8mK9li5cqUg/JkamKHpvqNvQ1+UVEUnGBDOdeuSTBGxipCP2bhx
o3AjMY8i+AuDG/U11cq51OgnJN6sAk1V9cj3jFuYOFF1IlK1IjsTYd+HRxDw
+f8g9Tl7cljEyC6qnloJb2klHZ9SSjI0vWQtjLvUhmpaMB5N6usqIKy5H69K
xhMyBQwVTCowzuKWI77ItwlMWF+kI8UfCAK0BGzHjxySHAhNSx6FhMcLKysr
VXUXq2xwqCTgVMjSsiiqNO+xfaT9nyUblTRQ6NkWJiHhFqLw9eBXQb+pRZL8
RjMDiuhNYSJOnjRW1mJeRVXiURxJDYYk4aS1sXhKXM7kMiYmkT1vYLZWKYQM
YyrmDMUJe5WzSUdIfawT1QxLgpA5snCnQiuHPrZ3tT8ePiVcxiUbhDOheF4a
jZvec9JX3kiHkaJqkAXBr+G7b3t6eiFKENT09pHCXElNzx67aCvqi5DzW4tW
1k/ty5YgLo7S0JxyS5ApS/uvjr/sNz4Asm7xtiQ8qBuGm7wKx0+SZQJb42/0
IlUJkn/6lRroP7xG+j12bO+KmmYcPzTM6gt2avTs9fuUWP32/d/zed/rt+9J
DkhD4BVPmDln3pKBcQl8jjaKB1p3Hy4hbPosre6zNEHgX4LUeW0eb9591der
GIvO9VeKnogjifhWzGBNtCBu9DFA/paVuSzzrWlJU6nfZdp7rshboZMhpt/W
bxD9e0jVusx30tRp03R53UB9N2y+CDs/LJHu/O9nCZ8JZJ/9DoOjPvT6zMbG
ZkHG9E1lL9+4KzJEtJko9sjvjh6jv++Eacv3V/j14hWxLrkPKozrhGzlarnK
kecqhtVsuft03qTUOanZaVPSJEYkbbFljJhdV8qMLoMLu7tlUvvZKaM/R/nT
/GFbjyFjfw1OCn9UvIrjj2HTwtUyhuaVJqRvTwcT8J8ZH6XmtuLp06cFyivI
RvmXISMdgPvyL5rtRNU2VVf2GN6DO7C0RFzY1gCMjjRs0eVQk/a9rpZPr/uP
cYIprG+ETQBXkX8lrALk4cumzVpwPxFmp0JDQw1JGhUmafA+7QliIjTemTQ0
ueta3fVjnsZ7+bsmweKO2yg3zC2GvqVt57aSAhLgbeEcEJqAV5QAui4yp0h3
kbF8DgIEnGkRQoJZ1QkhM571W9mUslRCNN/11S4RpNqfJechscijNWvWNMBa
LP4b/hFdp5E5cqXQBxkyFgYprZ0WqhGeW8dY3/Qa66XPPeroB0zEqPhYXlsg
SPQDkSy7wJjMDGJRak6EeVMvnvViEZ0qPLIGsWgt6hx6Oil9Yb8J1xPvCcTj
cO3atYXMEkgOt5dkOYtWP+9E3vmg7KDxGWszdCla1g3YIFIwWK9BHfX9gRDt
stJ6wGV22qo0ZuxA1JSoey7uLtTDiauDvlZ8YiVOacVr0X9eGIr1ayNmihJh
VFSciaBABDWjKQkBsRTw/n0w+PqfAvvgJVCzKJ4425iX4Qs2KfYYMwioRQSY
AHQEXi0wOe43KXV3KjauukOs1MR9rerQsDx0au5Em+B3JiVNDkTFRUmbDANV
jnH48ePHoeg0iN8i2BfF1RKKNOmPze8lMy1D0xcmFxTLaqhmCW9IcaxmCUhW
dkry1uTah48dnjNk45AHJbyckTmglmN2/nAUFi+4qq75jqkAlvqFzQh7WtI9
ckku87drst9ThxRXOtlLn1pNBXsTxYM+hL5jgEgZ/vqOfToeD28bPjh3R66h
GODloyMR2REvrIZbFZDptlnannJ7YqfcTWLsZHyh4cP7EN57xpcya89qevcq
mXNV06o9pNQ23sye+EvUR4PSueOR4QOx5pbBOStoSTtr7JKNC4YvmfinW6wn
SDO9pmXGiXuwepLJ0jaRD6vO7/k8mo5ngb3gc8K/iJa67RHsgfyUBM3BOnXq
UCUbu2rT179VrtUYq0CVn58uoiafcM0n3lcKrw1yqFKDr7/++o25ucUDl5Ie
SID7zs7OomhliCOn5y5/bWFpfaBB4+YG8oBvvz0bXDl4X+OYZjdL+fvBbEWx
CJrnWPUW1YmbIS2u+YzweeiU6IRgEswIwxo8/9AyDCNIuzcOmj77q07jcl5Y
d7R/7FDc6VDdqAaH8l+TqcALv+MW6PbeuInxP0aDjd4b91ZqLwCIsVnVcHNJ
fcSQyy4EVgt8ZlPW5rta9Wq137J1B/CD3wPLlv/TPcT7vXEvk3+Me5o8tR9Q
4q3ZQKuH7iOCqFmD04h+kF+2at9doRNcsmKtwOmNyPESNVRDqypyQzGc7CmP
RY6yMPA+iVUvgR6pqu61/MDy0xXTKjKDz61LWM+LXRErSlMN+yZYv7AaYPWP
UTz9MfLfdHD+m6YWcJILkX/hTE/ylGlT/nJ0doScU6BExVSiUEX54Da9Njc3
x0VSH+ct8deiulsv7bOqz/mgnkF4WjKjWFzcioA20RpeU6I1/4sAFcGnChUl
64IBqnOpzPUSnMQmQ7rrmuQ6IX1MOlw5+eajsziVvBuPlr0oPYQKy3QBzXG1
DIk9I2QdehaHwsJS/PPCclysJuk4qziymqYVbsZJqampHGmmSEXgqzlgRIla
KJ2crOfNtSrMmysPhHztmc0wm5Nh7cN4QS0mwHuy23RdcBXHvoCmUs1nFaui
ng02BK8mLNvq8VXxm1wGa/ori/IW0BGL388yJEz/drq+e53oCa7b3SynGa9r
YJyzlJ7b0pGQl/iPdq1mhj0sTRFlSBLQlwhlMSNDEY/CWisQExFNPBsbQ8oX
kYq6JiCWUnYnWG5uJwMqSH+qU2om5qJQXqzpMrCLoRrBrtnu3bs54zRRZre9
tLS0hMdEXAU5TML6hVGsY6zlrmwqxUvURicwzaIKlwuKqrQembwl08Wm15uj
UjGzrPfs3m/M3Myo0qEKX3Witw+nQqoAoax5rVLXwFTzHPKC4jW333v4DBIQ
FDS9xyB1gG1z2+CJq6lxgK0Gjxlo5wvrJPulcQuVWgfi3JRXwXpb9vIfYiiV
NVQbz5gh8Ud2IqFa0uHoU1rG7285qyee8HX/jCp459LbjOJKYuk72nXqSS0F
arqowrw1XVd15x0Acr20GmErib8t/ZKn5ny+cDtjTJsyc/7sYQnJUrJjCNsG
ctbZUHyxslS9q4RXhuLqebEbYunrfCZkfMj+Ru0bcRzlvPPZeYPjhoyeszoP
HTg2a08OUls2mewIRU3nWzdvzMIsmBLMAXjf5AScDQ4JuedRyn/SyLR0dDHm
gICjY7Zs30MXmQXJY2aeCQmpqI9J3vZK9nlvbG9606912AvrCraX/Xr7C8/c
K4s4i8ysVVmMETn0dYN5Dent/MhxpPPxyElt4Gm84Zde5Yl9qtO+ZrntFPB5
/n3/cmziODUpNel3f39/thzXso2Z/jtuA906bDi6QYJ1KuNTTnkOl2AB9kc3
aYbHCqAwacHundfLpJd/Z+pq/sC9sf87Mz+rv51TfOjmR8PoBy6p7udC2lcl
p7G1fUyn3c0WNpP4zsaYzjGMh63PnIlcLiow+UP15Op6Z0nysPxOM92FRVEK
qsB00F2A11vVfVj3gmVSiLnH+2F9IcLhk31mM8Tmq4bzGxoAj06ywZldRsiK
FubO3d1sbrMdLce2VLVbz7roa9U+GDRIQpB6xJFUXStJLSOlbtK5sBwVaBW/
k0o/xgJpZGFRz71E1ItNopRDFXqeKgiV/3sSodbjWkSUIrBAzd1zSXN5UCKy
hAodU2Ezen9M3Sljxkgg4FOyXjiNdKLeWH0/DW1p+rEA1Yt3YYcQ8a7XN4UE
qFNRApSx00mBuWRn8c6i/ooixpVyB/EC5YTJHPEMfDOK2pgLQtZYAZ9K6ggF
bYCqrKsbLEE95pPA20tLd0sx1VTcmrJ+5npWKLFxCmDQxgatLIqTp4ki/Ig4
TC0Fs5JV0QcY+Fl2iChhLeYnnpIsuK4azZIzIlAgqW4rDAUS3cuhwZQRPxcT
yZD3sxPnh/gZ0hlibfamSGeaGDJrWOh61kRzg56V/DCX6I3CAru3qFo1jZpL
KlXl93ddK7m+NbUzJRUpNXmC0FvUf33/gIu3L3L09QAW3aTpAW4Fp0QDRUn7
RH5CnQ1acnDtTe90n9cW/SyPRMW2mJU6bjpBSGlIqGae3WDRg4qZX1/zDaxA
WhaN13XLd4cUZ3z7iTw0rmoqz6zOBDFRTn8/e8pjBDaj73V4MSyt3emI0V35
eU76sqXFjADTFjMmI17r+MXzugq/Mi137837JbhiZXhLVsemTD4XVruJxKZx
wAVeHXXw0BEJqmGv4QKEnLl8RoJq7AGmB2jPxYDkgPfGfYzHjc4abUjfGVAg
xHQPNc0esLvt3N4ECQwV10qC3evm37dfWcfav85/BKKdM89tSPWwvY5GRjVU
tafawEZhms+fgvWDxszY0zyu7SW/un6gdtGGSYu3f0M/wCXDF09b06N3f4a9
rfWc1r9UaFMBo+vLJtObvLIYavFjeHZEau62Xbu7Tsm875ESpHAQ+Y4rd6zG
9EjcSAl76UueQfE/tnewF+ce3TE7fmQ8yKO3pnGmK/rOj2XqMJJALv1Yq1OL
V5bDbTCQ/ixdNmxtXPpcBcW+Yud3pBhGTt+zfGZSSvpje3t7qLH2N5rfiNYF
21vNbfXIIcXhL8e+itzS15Sw6w5FDomU+hHN4kaUiogW61+F3WaWPRMyNEQq
IpWAl+aF6xtaI2B4xGtzP/OHTm5OMRtPbhTtilC665rp+od7d3cA2PQdpf+o
nBdRR1JVJS1atKF9itMWR+aSXx2/jwJemkD6/yBQLEj96dtfafexFW1XWEbq
5bMMX8DNWhLHTrQoP8HG+aFYz2LUeOiFooSzeQfGz+7VQtt6F08av/I4NQao
5lLl8R8pUSNlIAatKeJQ76mJOFTkv6oPLLnsQFRUFBYGTpFEHSUPriuXNpaW
5zq+WmNhRlTmzwhSa1i2VKtAEi5aJFmWVKJX/nql6Kh32BnoiartqnKkJZJ5
0yvLCzD24NwlucLi9NQ21RarTTXPVG4LTSdKs1XRlwKrZEwFVF9GBqR2Uf0U
i0tcg4v/G2CHRRRTjfYaGPYFBFbavURfCMWqDEgP1BGWSjFdEGUsDA6Ewj+l
ZeQJ81B1SoERBTL9Fy1apPb1WtAIfBWF8yRvQVTzPbukgBZRy6Azr4X1lxga
+pJmNidjkHbXWnm3HGGm4rJvF1+Uur78DqxlyJkLZ+47N3XGP3lnMtQk4siZ
I+pmNXAOFJdQl4G5XcWl6jMIspllnOHHrx6/75zsjOxQxKpGzoJTNXlUZlb0
gSMn/3Rz96TNgkIXWW9KW1JnFyuMrbVl4OSFJ6IzEu95jaiIFsTXJUSNZlSj
00FCzsoX73Qm5POKfH8oalY0Errfhq+OH2k0uQdEWFBu7u47cuH6/kk50rBi
d5sOPR46lXDGzxE9T02KgKB39h0576W1rcOJyEbtpmbm5C6OHTpiRZ/VA9lS
SPMrZcLKgK2+5DfWD4n92L6V/cWAjgGvzR3Nf6g+uaAOSZUH1l3X/LgWzb08
deYmCB8K11pTEvVjtZp1galoRznqnour60trG3uh/mQFEmflLmJGlsatyEQ5
/WPU0ehvx0HOzNypiKyYZQNXJt/Ll+g8ut/iTYtnDU0bSlFop12Hfz5aLz3m
vUk/07fm7paHG47qCCEffTpEHMfPPjybnajS0q/rZeh1nJfDPSH0PFwnquGS
uMRMsVF+q9gl6pVVB4ezkR37Eo2AxAUlKZ7+U7t4+4Z5Jw/qyVT1obx+i7ct
Xt21X1eJTM4ctn7YU9tE233R3aL7LP1uqeZ4OYq4Vp2MlLIF5OIfPo56ivnN
iZUQ44MSqSW2te7ammVS/ZiS+lbUAlGhOupYtSHVpKwZ0/e+c7pCFjE5ZVMK
/tZ74+HGmErchXsYaCuLSs9YfYq+lr/ec+niQgMyQ/foTzAfWhVmPhRRThQY
6ntRVeoBs/lfEYwsB0JD62UlQDK9bOVykYdA5qHF1svD72oNr4WCp5KJFXlj
ZmamBFW16VGtU0UV2YpbKLJaCLlkVfWV1dLATgufF9U8zFqu18tqlRn0Y1mt
xM51YOPCVcH8jnpb8kOCxhC3UMxDmQf+JlXE6uU2IhoDL1y4QCyYCL8aUbj9
s140io2iZkWNxehTvnxVJas29CspOV99UbUe9kI4hD3GkYJXHFaNnyrnVC5M
HiU0lJIvFx9al4GXihsGzHwL4MfA6WUnvuqnRiOVEWxIycfyVC1vqTfNDLU6
VlKRJ13IuIM8XNqyGgrBTeQhfMFOq0UegCrLkVLrCFOspDiOoiLlqOkGwgwI
PvJ/qFjWY/y13VJKau0+VTNtIOF8pJz280FZQY/th9oXLl8QHnDp4Pm/EBzK
uHh2wMXrSi8KCcwIqYmO9tSqcIxNWA2J3pJFxYeEAV7VqE5CiynoYlpDQBZE
BRK/4+/jczYvI5fcb8033yDead4K+jlz6rw1dzy8fHIzpq1ZPzBligrGNjRe
KGZ/3ae0b/et+5UaX0BAFEHT2f1URHz7N+Zxlk/sU4rvajW0w77GTZs33/Xz
rlXd13QH+BM/++Bs7YUa6YEVYOBgWfrTI92PkVF7KfWDkd/9fiwvpv9otovU
+r03NjGJzjt0bHxGRsbE9PRM4reEpxNmfjMPji9w1ej7iTnL19LNiQn/PSA7
gHrlWamrp6PYCLvvjZmajI0wePE3G7GfeqzctVKlhVbdLCaaulYm+FqZrECU
4XObZg6ghJanTt1EDcxL6yQHYOsr4tOmAE+HZLTrhq17/nSr6bGzxfwWeqXG
PTnVbIYb3qO8D9ZpUUe4DdXAT/5eVrSja1G5Fda8sLslbNVcReKe0y9o5sAL
dy6ISyfZSX2QsoAKVidB9e1SRUdJJyVhDWSPvzeOVzq7YYZe9u3rq5pGTkJw
JJciByDD+VSSpSiG2gJCpv/KY2hZmMdQXwhcwMivlbcyi/9NDBcqbxXwYRFy
zyB0HVS5N8bnZFgthRWQNpWSnUTuzYtdE8sU62lThAhKeQ9lLQqQujIe1VGS
VzcUc3HrQvKPARkC55YiG/SCWI851M2InXBjqMaEGt4XeScCnZ8lGCvyTsvK
6kUdBSnsXiaS6UFMycnWszt+BLzV1GRN1ReV/Ky0EOSjYiWqTbZa1ey1/PBy
Qi3YJj1XHFwhjg/gcFWX161rpBRK2VY98fMJ4ULVt62WpRectwRGdU1WjIXf
T/1J+b+ZKBapcZaDqekdobjk4QW2rHa7gjJnxQ1T514C1/rhSTJBnesZM1Ce
rAvDY5IZlhYj/8iA+qA2tNZ3wUFEgHXAyON4U5NBFT01HTkjd42kDNfgD35c
aqtpGxmhvu+3foTCyq7hDAQrILeRMjcVO6/81vlTNcr8Na/+rPpfN4hrIIXD
AMl3tOzbUmoPpNfp3sZtG+fVb1hfaMK19bH6X0kQtRCM6FLxh2THCb+h4olr
JhPnYfbQrcOgEaBqidgvpY6k3/CbKAn6tllMP7KigKHueflVXJU0SVWXxcyh
pFqQvGTOzNErlo+bvfpgyuJN3y1On7VjyuQlX2lFTg7guOipvL9F+54PnZt4
PHRJ9YSy6Gj0+H44zn94p5d94pDqdCFoQsXhc7cuC/rtziU9WsJIgYsrwPEf
q06tCSkDiqr2kStHeQcaCIJnYlf+6ebh+cTBsQTxjSYHfviFUcct/2p3Vs7W
xTwSz3Nl35VDgy/c/ONg/ZnNKXbCy31nmmi+bPii6Sj8EdP3LxDNAyEEAfW7
bple63ouHj51woot3GPbgJzFeV3HzIJD+Z1JotmqgYtGw8T10rK21VM7X/s3
Zs5m9LsVbcbYkFiC5zobHBaMRyxeNQYCG2B8xpcZurSW4qdw7mHr7bz2yFpx
jcT/kCAgPwthvMEZsxDiK0OjO7Wkh35+f7h3cv9/pX15YFXV1X1+eUNGMpEA
YQpjRBCoWkEBUaCAVYNlsKj8wIKkCsokyAwqIIpBQASsWFQoVoqA4lCHUhWp
RawtttVatFackIJWLVSsbb98rrPPOnffk/teot8f6Evy7r3nnmGfffZea20/
CEivnKZJgoDi1zb365fi+U4r0G6Fz52z6pwN424a99V6yEDJIbwfc+7g/oGV
j/tgxZMSxYXFbVMhQxooY5ibVsawVjKtAbA67tQM7T8B1CR0Xo4WEXitVWdm
JLSrYtBtAYomoaH8dLEtgbVc4w6jLDbO5xhgCFoCgcw6MG92qOwAxWouW9Z8
hi4oE1CcCGyjzmViS1RZooQmaHttLNJtrM9s474w2wB6hc12uHiLhezwjEy3
hz5K6ISROo+Wz1I+bLKfCtH3x/XtZNftw71JJVttdBBT+3je5DzAMj5o3r05
OqbPnt/t4ZmItTSwWhkk0fEg02WqshATwSzBzrfBZ6dJkeAbqhrUFu1JSBop
WToCgN95MiIxxvGDd8qU4vF4oJftNiFozihKlGqcGjcI7Jg4g0KAG4UHUCkP
swyykCBcSFFpIX1QjdJ0iCusqhplXVUSQvA9QgG5e0cVH3D1DSP5ZoUo0oek
FKhpKCeE243e9NNNkpe8pRPpcL8+64qzoG8OjDheVXFK8hqii8h8MruQvJxg
DKQgR46OxtE0UgiRhUN5E10Aghy9EAnOvqTU1hF9fQp2t/rg8EdAG0MNBOIW
P79ozWghBs3vCD0simDY3XbIH3ot/P4fe9ww5InLb7zz87yphccLWzV7/Yyq
i4+0vu50sD6Otph58p6qG677W4vOnf4ba5L4n8yy2Dsnf6/fspp7foFNH8+A
yCb9HGRFcSoGGhpx7Auffm7f/p59z0MVuGOFJU3m3Lp85dsdO5/6YauOJ3/U
9NLWn5Vc1+K3Zy397hfZ1+V+XDarxbsd5/RC8ca/l84pn3D/z3/93ed+88bb
7W84+eUzlw1AYcdPi2c1xdkaEC6EzrGdPjjqrquhoP1h+ZQWHzUeWLqvR4+e
ckQIDmm0cg+OGD0CtQiJVeL8Iy6TTIab5j40FykMCH7DksKs7Ouxqgd4adD3
t3lpVnu786qbr/q0sHUhskFRETtUsBfNnemtP2p8UWMsjagmYj2zKSibunPI
94fUF000QdmIYKLz4JXSoK2whFkD/g9UV4+UTSpbPWnVJPwF4riQu4HCEDEp
WCLTVqxewZotxB6ZiJ85L2cT0OHrH5JC0dDWWTeG85lRMxZdZgekQs2IfcPq
smU5CZnCgsI/GBmJk6au1kyZFd9Inf/4448j5Q0o9rDt27ejUa9079UdjQCO
HqOMoB2qR6EPsMChrMRFS2tu84MYZGr4Y16yGAmDCyY1YCma+Exp/CDc6xt2
6KE88ADuRySTroCXyobazamASuCsrsjkr+Y7R9l0S3nBrTgn/fwKgat0hvCq
IXh1hWzD/cXs/u7UEaeCPgtRTfoVkjkOhD8cwsVm3n1ZEu13cYumJQ0Jf8gR
yChwwfQbixCjOyC4DfW9OLdvKhHEgsvdJmnDIS4WrzbO2659+Fq8zqtdbu3C
yltQtgVRB/4u/RJkPqRub8y1AP8s3IgeJOuqYN+krITH8TV2I4rjW2DKXO37
676/NbmuydHSqaWvdb6+M9r23DlrzkEel5MLRVq/yGqVhREMeMdFrCRIA5ZK
z5BVQHVFULTbxl24LUbF1ygdpUVaWW0z11yeTcuNu3MANG0tBWtNhu2s7q8d
PIgDLPbKHSN/VA1Y8vzb7v7pr/vffAkiw292XdDvT2dfd9UrF1Qvf6PX1Ilf
5F7d+L+Z5fGPOk6ser9H9cwTBVNb/vm8K9e8d/p3J3xw0ukDfzr1ps040V74
7EsHam7Z8PTUe7bt/uu3TutxvENl57d6nzv4d1VX3vbS8OnrPm0yvcMf+86q
3nPpjA0/v3zRmq+OmiUHT5p35ud5M4r/UTyjBbQEcQoGKOrlnreee6TJ3HIc
tt/s2PckzRlgimPVlAVTPi6ZWIKfd/e9o++/4xPjoA0qJGFYlt1q0ILthMrE
ULOy32uBvQ6aCMwnQAcfgsJauw4rQPQAgkAg47gYc6hRccpBAPqTouoinrVA
qUSRJdM2u3zYLpm3QRgQ94IoM4rw6jAgHSxSPXMDvzZ5qPy0cjjraNdvT7vt
NOzXkH7JNJPT1Nx9cMTqEeC/2W5wSq0N1Iql7bGkcqnOJxJHGj9AQ6r0hOIE
sHDHl6WYo0O0sFi6bKPD69lbsHAGT3QWQahzLjQJ0FXcPGrzKLQC2tTUWESt
Q8pfgHKIx4ZlA12LONpaVcCVXbYt4vmSay6LvSr9oSG72kBp+8SJrOxnSA6W
mx+PnEGSy40KoWI2ThVllsheY5RF6yVxFENbUZxw60FPvfZUgK/MxcmbzAzc
hPJn3IUw/6EvKtnhBCFg6BF81Zwx7BI0wm6eqx9SxUoEOww3nQxF0XGH9Bi7
I7wRxoO9DAlgc8a3v9M6XfQLCX/EyxK/h2bACkDEGXUPoEAJjwAqrrgemWFm
SVFIAdhZOzi+OIXwkYwr1yiUk7fTSvPFfPigMQDSGwaz4woh2pGlQ8SVvL76
tmoSsg5WnFQBpx9/a3r46GEhhZmttUDmqehOYbx8sVlCy1nGle6EC0OIzVP0
l0b1hb7o4GPRIqBtJoTiasVCLFvry+J9iYTmBpCK/OtIYzLUZ6cLeGHJHm7a
tSn65ZXuNd2B5D1U3qLFllH3jP8yOT1r96DlI39y9doVf+oxZvjxonbN/5VX
1PQfbU8f8o/TRiw9durwm14dMGzC/4ydOKf2J4+9XDv7pnWfn9yz6oNvXT0W
CcWjzWa3Wzn/J3dCLuA/senxqif3v3DfD+4f/9e2S9rS4DOzAkuETeTf8dL4
0dLupcB0PlK1oornCISQ0FFcHX8+qctJ2iRzDqAygYqKnErrDrG9Y/lj8wmP
x1EHv0ctGXCYIJnIc8sP73ryrqcG3TqI40/CH/pr0+ifjoY4IPw1HJWooHrx
1t9uRRtFN0mWEeK2jMjoNu4YeslQmlMYcWicISWBpSX3nF+KefudXzz/Cx2W
c9oGtbV+WC6mzyrczPF9LHt9EECQhhMS16+cus4Bwo/lt8wftv3X2+W7e/cG
bX/zWdQUjEpW4DtKbyHBEyzbovT5srSKD/5R4sr4yvZglA6fQp15WkVCklTy
Iycdbo8JFYJHsevh+YoaU4LrAbaAysZf2t/Uft2EByfgma92WdYF7fq4ZH4J
w6YYb74DdQp4kLO5GN0cXUYZU18fmpI0J2LZVAoux7eMuoqLs4z2IES8Lo94
eDTJvWihOUDZkXJS4HY0lJxrvlYATWcd4XMEugFZ2EbJb6ET5Kxjc723xrTM
Kivcbxk5ciSQX3p+rJqycYpBEX5lm1C7CGtN8E/iX1FQ26X87O6It3UOr92P
oqtyJrWIonSqqFnajZK+lbpTMpVmlX04I0mmQXKbNqGt3i5eDhUaw+5FuUQW
zsOCodGgB04MPQrTY+IDMQ3OqAyH8MG0CCCHX0WaRakqiFpG0MHiDMqQDiYT
tCnezNdWRQsZ+T9a2qaUWzC9RiH6/ngFYziMI/B6vJXiEzWiUo2Ox+Gz3sZ0
vU3T1NTRrkY8K2N2wlTRbcBCQm9FsWp5bQgoVRvUC44i/JqKZwqbHhHbagc5
RpjZD5qf3fyX/ef0J5MOXY86F5jeuMf66vurcVbaPuzHw1ZOnWUqlQAHtOXq
SdNql67ZYrbbex/e+8eBgy9gbUNN890ycuNIfEYNSGxxnHGEVEhz2qM7Jq59
cC2Rcfg/uomeO2W7GHjBUH+ZaJmA3BYm1tHSAaV/6Hp5V05UMoHxfaStSZbS
iSn65UFVN0CM+xZSywlWld2NaYXXA/FKkO5SheujxjMbr6++sVq3maESPOOf
ue1yXz590em49m9NLmzydpvz21AvFc9GxI7Lnqey91pOa6lDclgl6UJyjFfo
2L+zpzZ/hOmFvoG9QAmB/8QaO+9uX4/zesBLxWctlEMdG5fXUNOYYT20i0W+
aKMjJf6cJy5HS0ZA7daiJVl8iAvxK5zNjP8aJ9SaQcL5NMYlVb1iVeGZPWtv
0xx7LWYFSrYDpoFmIPeL6xFsJxeARoc2DJ9JpKG0MBc2AxIk+apmheoUJ7hW
5cSrXIEcbRYZdNdm0ZyCk9xuZAGowS+gpcagotPRRHxm73JTp6UmPtrNJ6XE
nRmYIwKycXueCWka/VLEprmy7WQMDJxIBichcyjMGXOwLPlHo5JGuwasHFBx
8O8HMQjAyHxcMrdEbn1LJ3QsIXEaaMZoBYv6KGPsCfy5WByRqYnAbdQ1RdT0
yE5FE2MOwN6Cmmy0HYKyDrdEaVmZjVFYYgubIkSkEVe65hqGDZMfdbDAKaRa
D/0wUSN+81lIO9NzxRio3UzvIA1iiVk2l4ZLiVmVMPpTgwYPeqPjpI5/6Lq4
6/G8Znnfe+iXD6GHRm55agvMtXXHnOy8ugVaqklVeDtsQioRnM2ynLyOan+M
nkiQpREu4STUaCvH26oNNFKwVkzrbQy7Po6YBgVHpPpz8JbDt+3chj30eF7v
vHdaD2qN5z5/9h1n/6X9kvb6FaET9NSgNYPUPXNGPPTww5+OGF1du/j2zcdH
jZ8yfd2dP9I1guU8b2KRyYcv2nARZKdx7OPCQpdYZw/uBJc1FTDQo8O2P7l9
/N1P3H3f5fMun1Gzskas1cdvo5nI65G19VlBh4Jf9p/eHwOIyLs+nekKnqjB
vGzmozPxWaKKZkc6FfN4wK4Xd32e09EE7hhm52vQHdOKTbj+ycETBwPDTeYT
9ge2Ed8Bd4VCbgiroqIp2o7Ajz6haSbyp4WjCzGJsUaIteT+5KuZ0ns3Xa6q
dvI7KFiAvnm/xeQWoza/sPlvTVo3ue3ae6+li37GSy+9RLmbQNpfDjAFKDYo
2GVpCDfK+sT57KIVmekgQqVx9BqZgimM9zeYM1m0jfSi1VC8VIgUY9ZsJTVd
qom+yaopD03B95BZlPIE0+N3XrX1KofNsyYTS9Fm8zCEYzY+tVFX7yJXhlMA
t8Zb65rDecHGpzm22kSxEFiaxVlAi0lyqW8xtU4/mkKvxa5tXAqHiMI7VJek
9dSOjTZNaHJTvdeVY0rzBIE7oXQv7ra77zl9Py4ZUyKBwp9VY0o/cd7686DM
j+0AqBbOEM22ZTCICDHZO6XV6QJyZD+xug8sJw9hTGuxQ3y6l1aU4jS0iCKi
bHVtYxL9/ebobZsKfGT7BmCaBBQQIL+FFrqaPfYNUdUR9E7Id0LGE2GrI2Xz
y7iGmgWFuB3fi4+1EEOf74XbE7CL+StXN9PyyiilCWV39PvqSTdPwu8Plf+w
/JGqi6o+aN68ORSvcWQAlVCCMEG2m9aaCAE8JiB55/iVNImHbGYraRqrlhVY
ecTSFAslhy6vttZc7S5KkqQzWD+ni5aNfFesG7m8kn6keBMSc8YjGS57/Pw1
51ccPHpQluvMTuhM0rmwLkSn+8r2h7pUdX+31dhWu/ve3hcSq5qC61cVfnDE
fSPwCnTZoT15++TJk2Wmir8s9rLrrgHzBwBMIv7TTd8iZIGu7daLN1y8etK1
k/54yhmnvN7p+2ZvwqNRV4moVhIfaGexMOGActlz/yL77sERNSN4bnqrXbt2
6KJHL1xwYSpZJEzpf8enxcV9d1LnxVpEb9nMBTPRxvdantcSf8W1SH74hyRR
tNu//6PG/RpvHrVmVIYK9+Fe+nzIVJ1egTaa4pcZRhAeCCVse18mqkwWFD39
XsuWLUG4hiiej+wIkPi3nYkKDKC9qMxvbjrhPA1xs1QGojfSAUGCSKI5c8d0
lTEb7ipsCHqOI0GAgCteYzXJGN2sPHDkAEYBMXomVwDMAgcC3985ZMgQ8DTR
Gp7YeQq2HM0ifEYymTF+3JvC4mSKsIpwVJvS2rWEXzNYDslSaFEHRBmdZDpe
5QJzohi1bKHLJNvjKuYy3tb4GrFoa0Z/I2TN7P5oUhsZJYzm6SSB1sjbOeTH
Q2DxORFwe1h/5AG1EoXyhMll/FoKeXbjJ5wDzTGQ6dqAB8Qe0ZJ9hrLl6zgx
NGLCSJnBacPXcaojhGf3ZmxJ4zZs2ABDDMVdhpWQoEKSZtqK51aQpwVXDH0h
EbdNI4OMfAqaVramaYXlLcWeZtFBSE2UfbHnwJ4QC0RAGdIZuBSDt756VjUa
pZSANODA4Z5s7CZK5C6AOxgBVDdrbddS4kaddBxmW1twHv74CE1UJWkoIGol
NFFLHOVwaV3niCvKbN1gVh7PDvt6XNnjUPn8cvz8w7seuEsUdp9buXz6I9Mx
IiaDpOAHcTwboxjmz7bS/FmGcniYh4tEP5+kXn3OuWXWwllo+u2TF0+ms32o
fGE59xH0GjmruA4rApOLg4OZzuSAnKeeWwnYdaYTY8nI09V/iW7kMfx3p447
deOY9WN47rBH2bY0XZ/nTM9B++hScJ/SnFod7kKfITvpo/N5rly0YMeC1zuN
7aSjcFr/kwVx9LHeQRCDGZZMVQQ4MyBYZ0PAHuOBTdHIF9YGYYdg7udBLfCv
ba9qC/RRVKaiXp26RHCW8oEo3GCCxKRUueDsjUCiaO6BBsixoFswg+Q4IEum
KB0BFTJJxAvBWsHssuZFGLxUzBAaWnH75B2TOXZ+iyQt+fbbMJ5skct/WU+W
XjItm25SFAOVTbJQUUEN1tW99zmwOhTgIjNK9QfXm7BLCnvGM5SKRTt7Via7
oBSRa+Lw92r3k1ad+OQ/semxl0+/7XTg4gCmwogvWPT0IrQWBVSLPjn2CRUW
tbsQJEUbplMnsYOEzrozVpSRincVFl+y4lHU3+a7am26qECb0qZrrM/yeAFi
DeYtWbIElCN8nrP0F0txPGZDUGYSluv33ZZ3A/AJySazcrMCjzgV9gQzBHt9
oPAbx1LQgZf6yVbF9CiwBCBOCduM4UA/Ch97WnvGq8Dd0cpDTi4rFrh39FRN
0QrjQsZoNs2mmC/DqjdIvJA2147z7SgqqUmlqfhT6Pyg6ESWTpjSlHmk0sF+
1CrAA61c+ave83qjiZCy3zJy7khxRG4/UyMLCC7kkpu0es/qVAV56cESgYbn
4iiOiii0aT32vbUPPjeCp/pEhHZIoe7398OFShdZAwaD30UNDFlwskjhawDZ
CGo5spJAdQKr/EKvm3sxfoWZoETAu6CI17ut5rfCT5gR85Y8soT+C99TdmQJ
bGNRHyk7u8zXnOMJF21DrUK0F7OUbdRnJowTAivkML7Z4eQOwDbRcnJ7Yd+6
BJWdPhGs6XZ+bUqd6sdYkPeAcZi5bNkyZiaZ8YBrj7EB9omr4fVOS1y5a51u
SCdCFxUGtMmqdGAUGDosfSZsWEY2SFiGoYPWljLPGYVFYeVHe4ss7KQOt2Ht
qQfVa50KqgfkFXxr7IM3Lly4kL33SVFpEc9Yw7e9tA3l6/2IEf07nUtir2Im
GmEiMffYWhkclSa+/XZDWarhWqpxH14ihjNbG05dvZvTzm6ePCSgraTPGgkc
6Uo9ATEE9INUGiJGWRdjmu0x8wJxYnwdOxAH0TOI7pAHcdKfj/wZ8++D5v2a
Y83BkrO2ZyaGUSx0QUN07PBNuAboaUYWZTvK40G6IaSqNBJNbb6pfJ1sw8LP
YYxbJsYDP/hr28VtJ6791Vp0C6hEeBUMBgL/8ENYecEoaH49ShV6g3RuAti/
HqUqM/De/l5cXIz+2TZ8+HCaGBy4eLgB/+CzgtkFNJkYMtMfdgiJU8FPOrDH
xc1+xbDRr8JuaD1qLAruCPRh9Y4gM0KC86QqwUVLwz5lGUGC1jWUJBVzyuqI
aeIU1Nh29+3fd/OoqaNAxEBrQEI4+/k/PQ+uGPYm7FMT1z60lj2vcimlQrIK
mqbrC5Oi/Zf27dtLHZdePQ5WTKhAR24fdu+wvxfPLYaj+kjVj6vondvBR58u
WvDzBTxLYJyI2EATUQ6XqYI9fS7vg0d5h65SkRs7uBdaIgwBkC9MHVQyoyBR
LIiBJZ38RCSNtXFZM4rx8bXO/Ts/OGLJCJ8iy5gatPv4RhCRlZykOoDZAx/X
AjiYwNlQyZNLkZALrcZMiJmYY/ldBJSjtYTTzz0Xsv0A3OEzl7OkROYUgiaD
Mk4ouA7UKL0KXdab75dOvI7bIdqVBl1CzhoLDdSHLsH/A3RJiV/nnfh2zDcm
9inRng5dksbooBoY4Jwoi03i1m++fcG3eUo7WDG0Arl7pkxwD1OMS8YzSvyc
hz68OFuoqdM8AitTHdk0HiBJOa/PHmKsAj5FHh1Y/NPkV0wtpjBoqdPsIikt
IVMc7BlmYHA/TLsS2V4vFBPk69jB3kK/CwEbhlzxHV8+iSZGq1OgwwG2w3mX
wnb8m1a2Yw1fdrxW3LELKZvHTZ9YFcYghuhcKVSdvomqnc1D4AVg/HANfI0P
mt/QHJ8RDUS6F6gKBl95bmbBDRYOxeygNi5sMF5eCu7W4XhFiRQXok2cXbiW
BVH5HqLz8oM2OqLmUAV2FmMGMnbK2CsV+zBoJBFzkKW4yF7mH5NMR6eJrLmR
wLticHOc85WRxXenjAe5XMG7pyZzFeuwHoP/msyFzgJxQzr3uZVvdpjbAXAW
SrkppF07Qh00bIVVwbWrjf8DMI6OQ1ACn7XiHMw10LFOZKy2LvUUVuqNjks6
/is5LsnjAVF6VvPXLfNaiZRNWr1uNUT+gPpZPn3hdPYpLkP5rbfazWqnEWY2
67BxzBVjDjcd05RxPvQY1uHGMfePwZPp5ODSLxPjE3AviIMOWmPwP5/n5Of4
uQP6SkHsW5CY3MMyhFBbhE2ENYqg8qyRGyjza0oU1iI3u7UaLircvCcH/2gw
1VlsiLY+nU/bAswsh5ySFhRg3hHJp09wNJU+dgT7ksKOEAzMHAGx37SwqbAj
GAqFXmHRdbZg/uKfL+bJAiXpjpZOLMXTdWDILjQSYHQLglITYZEVeecYkVKS
lTY9Epd1GIigR5kXtYvwUOoTWGW2Ct4+yBrv3YsmWGQDz37asqTLLTjLUiy7
UJW4SL4q3MGKxRW3zHp0FlqElyO8DLcZvWnTJnAWKMvXZ8/LezDbgThAcAJv
B4QJXCstukbYFO5BspU97WM3ryc+lsMNiU3ELQPA3969PtcqhQRSfuClfR1d
uCYYAx0J1LpwPI/iZ3gQsFjoAQK+JBW+8quzVTyOekl4XYR1gjKLdbifNqSJ
F+EyxmeVl20gz6oVFYdYZJ4vQawACOSQbPCxAhSqQ9lAVF7GPeCdk9FEP1Lj
zXgUYxSHaGe/09Sem5MuFkaMFMeVexvvp1hPWdof5kx36rU2y56OjeWUL6wG
WroA2H2X33r5v+PJ+IWPPvko+gDFzV/t0q0LTz3V6/euF5G/8ee92qVHF/QL
Ydaa+asSoDqEiS45+/m3nofRRh7jV71X9/5V7zt6i8/3wp2s74Mm/vGUqad8
mSgz4dMvE+0SqLgq3SIGAo/d3XdkXyEamt8ZgCR+3jnk0iHrqydWw0Bwlt08
+97ZXyamJDQYyLgyDnI8/DxUWVUhToNEwM/j737kbhbLgmU446XXX9o1YN0A
WALoEoAeCQsBLBpPRBhSyHejPdK8fDbvwRE/GLF51NhRDL8smXffPNTjYmwO
SuVwFJSQh4OQ298xbKjePkbWt9mc7JkAg4zVCrQweh4e+PzFTy/GSKDlSJLI
0gTDwLgMSRCT32s5vaWvpBkL9gWXy4nRRwtX6LC/5lcJALY2gZsw1f4ygziM
K4Jiq1Myb8k7aDJFvSA52fuMPdetoCHmAjmRXZgdFe3Bd1CIFpUHeMaRxSlM
MKkBtn+/WoixUOw0gv4edE5Mg+d8nqnG7vk66CzIkk6sE5sqAtk8d7iKVS5g
VleahpioVDbQy1mkt4GSjsq4KJitjs9o1xZuhVugZigqteL2+Lxp9JjRm0et
MwUKkMLAmQ9rCzNQF0tBiiCIHBTwyKi5V5ofFhUwC0L4US3MYc36b0i9qmyI
oly6mB7QH0xucENEG3myltBUs2aLFixYQGftn7m5ucAJ4Z5R9CvFEKCCuTpo
10u9MlEjW1qOdd3xT2eHcd2h8mnlG8csH8N5hcdTsAXzGWon+Lx8+gPT9T4Y
EpSzrkFGppm52TqYhzUTzZt1Us10hTRZjfEBivfqgFkqlipXtkZHs7sIToni
YjlIeupoWaftwy4edqh8RDmkBe6/7ObL0BVoD54LvgjmPUZ/86h7zHpALc6/
tD+pPZcd2uQDZqKq0T444t4RNBFAlNONd4cva9UqD7x9AG3kASNK08MuX8yG
/8SKYnjcPWPvGwuFBGBfyYcUYMom07yNYyaMASwBXUtsBva+QLHCQFl/e9oV
px0tHVaK3v9L+4Htj+Wfk3/ho799lAAt7FvsXRg6GktxeKSKsd1p0YJ/xyvi
aB3ysP+OF8V3DrlliGCbpfbCxjE/HHPJA488gJbY3VKDprQrTcAun6gOrHlS
eGDqVH0tdyOQsIBMxC4LnydDBH+yYdde7LmqJ5/D64jkN7kN2QHzKIKjXcOU
MnEuTym1l2m9PFQcVrEPZsHvFJglj8Fbkgr4nShwHl2oEDovnq4pJnD0TL+a
fsfy2+QH4c83n0VSHpkl3B5sY6gmYeY+UjWqikZGcz7xWcY8K+SX1AZhE6mJ
Ysx0dshM20kfwUBtiMg613WE0GcjnmsxI7lz1EuKtWWsokxgVD4jygRmiA2M
hbQDJFuaMVxuz1MTfsLGgQ0EyoHoBVQXQ5NYxwDmBwdmoGigz5QhtVQaMbjM
f9zQUnG2tNoUBpN1GAOAdzabRF0nTdFSsUCfoWXjK19Xe64Jwm7IT9HXoTYi
B5nZF1ZpOFBZWYlVQKJW391v7cZ0pZGlDl1WsI36oESu0SjJYC9GXUg2rKTv
ppa+03pBa7pkz/Rb209L4TFBtbvvqr5HS1uV0j3zsQq6cDjqykNzSZ5drzKd
DUExkI07YUkzCBbFhKXziFvZzddnkfk1E5ksIH7FbJ7C/SrEApJQ3dRvfVLU
r+hA5SWVeMSePqv7AIHqP1o0e5rHg81aDtOFHOCo6rDinGz4Hs5LENBhj6Ms
llLqztKyZjwh4pwA6j+3Rzrne8/sbcTB++7+1W7UzMRzMQWjYPWYFUN2Pr6T
55iAyVKCS358xaoreO5/pXvf7q93Gt0JtyHwjyLj7APUl1yw6NFFgrUTSpeF
1NHbfGrQ+YMw13rse3nfl4niBCvI+rUXGA7V0lbvtO7VWoWxsnEtk4r0f+ir
B2fgLD3ddYVZsRHo+ow4UkRgViDcdPHW/VvttOQuyTOhN9FnLrt/GWMlrJyq
G8e0lRhVwZTRAcoKNkh+BV3OkLgGn6ShGNYH1JMDg1weImDLss9FizGp8EYb
xq0f969k5yRjAsiiQ4XAoZvEkuV/VjCpAJoWbIquFaurb1G+z3ZIOuprcEao
wzjVeGGiwekQOcMma7aASXba0FRkVzqiBAfbfTXKXqE5mr7v2SsunJzQjhfS
Y6oN8mgIEH1aONPI0yOhIceuW8wRDCkYhEo4fxwj1vYDGsZjvvIbNGlLgtRB
JhZT0MwfRVugLFNDiFpal0k0vE1AskgPD4dFhwKjJOs0V0+aXsRFBRlBOFaP
n3/++XA58DgofyHEBWolDqXAE+A0d8ZL774UJmrlNISopUn+LoAgvZLFnDIN
1rQVP1khQYoTn9joYM5Nc7fOxX0PVJ5f+UKvIb329ejZ40R2v2zGfnyC1cYx
G8dsGj12NAeLS6IhYnUJOnkffuhCa3awomix7GCNqrC2QVdAVNxTzdFiYInc
U3SOXN0PY81YE3QVGLjhPrJ60s8m4WcAav/QdUJX3OI/sXIT19B8PAB/OEMh
/62rH+K7pEWgSQBOc4PGDjBtxYoV4lUJNgm/Q6fAB794646tH5cMKwHdEqK9
b7e5rg0NA70fHMTuGTt+7Gude3fePGrlKNwXosMw8z7GHmBVvPPfmvygybQV
O1coCGVjLR9w8+xVs6E7AaeAKw6/hxPB5Bw5hujOd1t1anW0dHqpS6RYWg3d
HRxlYRj+0LVPVxxnZTNZe+6KaYumYfdjJTBRmj1x4sERE0Z8nnNVzhsdb+wI
TgfysrgXYq1sI2OLBBs6fIXsOhWMedJaCLtVHCItWo5vH8vPz6c+CiMXTIuh
nZALQv3s+y9bd9kjVUOrNIMgSoDOuvQxkgzVWswhnkTjQWhNHCXWrmWnZx3s
hjn14Ug0YR996xKQ8vyOBP+wjvkz/b7Tj8RwWrln+q3uhzk6c9m2ZZ8VTCyA
53+k7OKyGTW7atA+OvfcRj9sNuirMenQhiIA3BS0Ih4tLyF9IW0ZezyOUiYn
cfDrEFLRBla95vk2HTeWaCTTFlvFlNWmvc2oQdR/u1WOkFGIUFNqRFccvQ7r
ARlCBk/REiTc7xn7wFhNrSWmkvG2r0Powh5qOzmdilIq/laUjNI3VZezKAiY
ZAjtY36CTLBg0aJFeBtI62ArZIEX3ATUcYo7YavEI+wRN4qyVVc7OOYw52Y/
NP9trymoPiMWtzhS1rYMT3yn9bzWTMkR9I3ZTyuu4QlPD1w+kBhWjfdtoI5c
YVTcy6fF4nV11UBXzFAJrddH2sIzKN1JSJRN7LAJjC2xR+mtvdP6stbvtlrQ
6lj+uPyDFe0rkKLGxnPtbc/dhseOv/vFu/l4nDkweEBeIY3Hw2uASwmkzanV
BPftwkcffZQkO8q60BBiCBCyrZkxewaAAdC24aHyWP6sfK5E8i7ZTUCBARVm
kzU8iVCj6emBKwceqPxuJW7JR8FOkLPPSK/Ww/4ia2aWxsdbQXM8HQIN2BJZ
Dsle0lyrxEUFwR64ZN4luuwAJwC+O3rTLzbB6GHCQgIAKxWnFwwsQb4MqkYF
DxtY/FV2FlHZR3kCNIVWlp4H5z5e5f0WC1scKr+i/F/JqiQzgVEVEbVB0Rxg
Ygg1toXILo1tyQxcfOagbBguCjEXo9Oq2TWh6g0WEwOnA6ZBaYjlMUO3bfjc
4X9rMqeJuP7jTc0glnV1FseadJ6XjpRNLnvivAvPw8jzdObzY/3uiCKj1gek
k7UQJqOiX6yfgFVN9U6+sub7i9K8ItgzOavakET7fXMWlGpNpiL52/3v++Z/
xZpR4kJQX33u9vsPfg96IQKh4EMAuinB7yecCG3aoktevogr1qdspZQwsrFh
3T68l1ZP0nQtrZ4ky/Kre0lHfW3lN/MMuxNiUmEvRwc7oYev/gKVAUhf4Nnd
Xzn0CiL4wEbgZ5QFRJ+lp2VlpUOlsEu0o8O0XIjEKL8r03xV3pdz8K1249u9
0n1O9+N5LfLQJMwRpJjxykg4ND38yWEe1bS7wgw9hkjzZn3mql4roYinrZWm
419RXNq45tLiAan7LC0ZC9+nu2CTq5rFynOcNS3NuG3iJyyhP3Sd0fV4Xuu8
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
9ZrMAO5Tfzf/uewb/yLj//0v2cVzzA==\
\>"]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{$CellContext`v14x28x3x5x67, $CellContext`v14x28x3x5x6x7, \
$CellContext`v14x2x3x5x67x8, $CellContext`v14x2x3x5x6x78, \
$CellContext`v14x2x3x5x6x7x8, $CellContext`v15x24x3x67x8, \
$CellContext`v15x24x3x6x78, $CellContext`v15x24x3x6x7x8, \
$CellContext`v15x28x34x6x7, $CellContext`v15x28x3x47x6, \
$CellContext`v15x28x3x4x67, $CellContext`v15x28x3x4x6x7, \
$CellContext`v15x2x34x67x8, $CellContext`v15x2x34x6x78, \
$CellContext`v15x2x34x6x7x8, $CellContext`v15x2x3x47x6x8, \
$CellContext`v15x2x3x4x67x8, $CellContext`v15x2x3x4x6x78, \
$CellContext`v15x2x3x4x6x7x8, $CellContext`v16x24x3x5x78, \
$CellContext`v16x24x3x5x7x8, $CellContext`v16x28x34x5x7, \
$CellContext`v16x28x3x47x5, $CellContext`v16x28x3x4x5x7, \
$CellContext`v16x2x34x5x78, $CellContext`v16x2x34x5x7x8, \
$CellContext`v16x2x3x47x5x8, $CellContext`v16x2x3x4x5x78, \
$CellContext`v16x2x3x4x5x7x8, $CellContext`v18x24x3x5x67, \
$CellContext`v18x24x3x5x6x7, $CellContext`v18x2x34x5x67, \
$CellContext`v18x2x34x5x6x7, $CellContext`v18x2x3x47x5x6, \
$CellContext`v18x2x3x4x5x67, $CellContext`v18x2x3x4x5x6x7, \
$CellContext`v1x24x3x5x67x8, $CellContext`v1x24x3x5x6x78, \
$CellContext`v1x24x3x5x6x7x8, $CellContext`v1x28x34x5x67, \
$CellContext`v1x28x34x5x6x7, $CellContext`v1x28x3x47x5x6, \
$CellContext`v1x28x3x4x5x67, $CellContext`v1x28x3x4x5x6x7, \
$CellContext`v1x2x34x5x67x8, $CellContext`v1x2x34x5x6x78, \
$CellContext`v1x2x34x5x6x7x8, $CellContext`v1x2x3x47x5x6x8, \
$CellContext`v1x2x3x4x5x67x8, $CellContext`v1x2x3x4x5x6x78, \
$CellContext`v1x2x3x4x5x6x7x8}, {{{2, 1}, {3, 1}, {43, 1}, {5, 2}, {44, 2}, {
           5, 3}, {49, 3}, {5, 4}, {50, 4}, {51, 5}, {8, 6}, {17, 6}, {37, 
           6}, {8, 7}, {18, 7}, {38, 7}, {19, 8}, {39, 8}, {12, 9}, {15, 9}, {
           41, 9}, {12, 10}, {16, 10}, {42, 10}, {12, 11}, {17, 11}, {43, 
           11}, {19, 12}, {44, 12}, {15, 13}, {17, 13}, {45, 13}, {15, 14}, {
           18, 14}, {46, 14}, {19, 15}, {47, 15}, {19, 16}, {48, 16}, {19, 
           17}, {49, 17}, {19, 18}, {50, 18}, {51, 19}, {21, 20}, {28, 20}, {
           38, 20}, {29, 21}, {39, 21}, {24, 22}, {26, 22}, {41, 22}, {24, 
           23}, {27, 23}, {42, 23}, {29, 24}, {44, 24}, {26, 25}, {28, 25}, {
           46, 25}, {29, 26}, {47, 26}, {29, 27}, {48, 27}, {29, 28}, {50, 
           28}, {51, 29}, {31, 30}, {35, 30}, {37, 30}, {36, 31}, {39, 31}, {
           33, 32}, {35, 32}, {45, 32}, {36, 33}, {47, 33}, {36, 34}, {48, 
           34}, {36, 35}, {49, 35}, {51, 36}, {39, 37}, {49, 37}, {39, 38}, {
           50, 38}, {51, 39}, {41, 40}, {43, 40}, {45, 40}, {44, 41}, {47, 
           41}, {44, 42}, {48, 42}, {44, 43}, {49, 43}, {51, 44}, {47, 45}, {
           49, 45}, {47, 46}, {50, 46}, {51, 47}, {51, 48}, {51, 49}, {51, 
           50}}, Null}, {
          GraphLayout -> {
            "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
           ImageSize -> 650, 
           VertexLabels -> {$CellContext`v16x24x3x5x7x8 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v18x2x34x5x67 -> Rotate[
               Labeled[
                Row[{"18", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x24x3x6x7x8 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x67x8 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[12, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x78 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "78"}], 
                Style[8, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x2x34x6x78 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "78"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x47x5x8 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[10, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x24x3x5x78 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "78"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v18x24x3x5x67 -> Rotate[
               Labeled[
                Row[{"18", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x6x7x8 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[14, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x67x8 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x47x5x6x8 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[16, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x34x5x6x7x8 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[12, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x34x5x7x8 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x28x3x47x5 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x7x8 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[18, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x34x5x6x78 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "78"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x24x3x6x78 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "78"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v18x2x3x4x5x67 -> Rotate[
               Labeled[
                Row[{"18", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[8, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v18x2x34x5x6x7 -> Rotate[
               Labeled[
                Row[{"18", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x28x34x6x7 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x24x3x67x8 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x28x3x4x67 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x2x34x6x7x8 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[7, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x28x3x5x67 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x28x3x4x5x67 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[7, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x28x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[10, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v18x2x3x4x5x6x7 -> Rotate[
               Labeled[
                Row[{"18", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[16, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x47x6x8 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[11, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x4x6x78 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "78"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x4x6x7x8 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[12, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x28x3x47x5x6 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[8, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x28x3x4x6x7 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[7, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x28x34x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[7, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x78 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "78"}], 
                Style[12, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v18x24x3x5x6x7 -> Rotate[
               Labeled[
                Row[{"18", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[10, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x28x34x5x67 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x67x8 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[10, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x34x5x78 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "78"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x28x3x4x5x6x7 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[12, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x24x3x5x6x78 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "78"}], 
                Style[8, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x2x3x4x67x8 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[7, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v14x2x3x5x6x7x8 -> Rotate[
               Labeled[
                Row[{"14", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[18, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x2x34x67x8 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[3, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v15x28x3x47x6 -> Rotate[
               Labeled[
                Row[{"15", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[4, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x2x3x4x5x7x8 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[14, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v18x2x3x47x5x6 -> Rotate[
               Labeled[
                Row[{"18", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "47", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], 
                Style[12, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x3x4x5x6x78 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "6", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "78"}], 
                Style[14, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x28x3x4x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[9, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v16x28x34x5x7 -> Rotate[
               Labeled[
                Row[{"16", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "28", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "7"}], 
                Style[5, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] 
               Pi], $CellContext`v1x2x34x5x67x8 -> Rotate[
               Labeled[
                Row[{"1", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "67", 
                  Style["\[Earth]", 
                   RGBColor[0, 
                    Rational[4, 9], 0], 12], "8"}], 
                Style[7, 
                 RGBColor[1, 0, 0]]], Rational[1, 6] Pi]}, 
           VertexStyle -> {$CellContext`v1x28x34x5x67 -> 
             RGBColor[1, 0, 0], $CellContext`v15x2x34x67x8 -> 
             RGBColor[1, 0, 0], $CellContext`v15x28x3x4x67 -> 
             RGBColor[1, 0, 0], $CellContext`v15x28x34x6x7 -> 
             RGBColor[1, 0, 0]}}]]}, 
        TagBox[GraphicsGroupBox[{
           {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
            0.011533434076146522`], 
            ArrowBox[{{-2.000000000233115, 1.}, {0., 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.863771442207508*^-10, 1.}, {0., 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{-0.4240975840089334, 2.}, {-2.000000000233115, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{-0.4240975840089334, 2.}, {2.863771442207508*^-10, 
             1.}}, 0.09694960212338216], 
            ArrowBox[{{-0.4240975840089334, 2.}, {-1.0000000000970033`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{8.000000000489194, 1.}, {9.000000000108315, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{8.000000000489194, 1.}, {7.000000000049994, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{1.0000000002677893`, 1.}, {3.000000000041638, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{1.0000000002677893`, 1.}, {-5.000000000335149, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{1.0000000002677893`, 1.}, {1.999999999848086, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{6.000000000035669, 1.}, {3.000000000041638, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{6.000000000035669, 1.}, {7.9999999999302815`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{6.000000000035669, 1.}, {5.999999999967997, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{-5.0000000003614105`, 1.}, {-5.000000000335149, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.000000000516792, 1.}, {9.000000000108315, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.000000000516792, 1.}, {1.999999999848086, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.000000000516792, 1.}, {7.9999999999302815`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{4.99999999987017, 1.}, {7.000000000049994, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{4.99999999987017, 1.}, {5.999999999967997, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{5.999999999878156, 2.}, {8.000000000489194, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{5.999999999878156, 2.}, {1.0000000002677893`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{5.999999999878156, 2.}, {6.000000000035669, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{5.999999999878156, 2.}, {-5.0000000003614105`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{5.999999999878156, 2.}, {7.000000000516792, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{5.999999999878156, 2.}, {4.99999999987017, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{11.00000000049883, 1.}, {11.000000000266198`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.000000000089244, 1.}, {3.999999999970669, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.000000000089244, 1.}, {-4.000000000216801, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{9.000000000473193, 1.}, {3.999999999970669, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{9.000000000473193, 1.}, {10.000000000809877`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{-4.000000000207081, 1.}, {-4.000000000216801, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{10.000000000468162`, 1.}, {11.000000000266198`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{10.000000000468162`, 1.}, {10.000000000809877`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.235725593670537, 2.}, {11.00000000049883, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.235725593670537, 2.}, {2.000000000089244, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.235725593670537, 2.}, {9.000000000473193, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.235725593670537, 2.}, {-4.000000000207081, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.235725593670537, 2.}, {10.000000000468162`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{18.000000000566814`, 1.}, {16.462297615559493`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{17.000000000502467`, 1.}, {15.462297615424745`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{16.000000000585743`, 1.}, {16.462297615559493`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{16.000000000585743`, 1.}, {15.462297615424745`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{16.00000000069079, 2.}, {18.000000000566814`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{16.00000000069079, 2.}, {17.000000000502467`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{16.00000000069079, 2.}, {-3.0000000001458886`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{16.00000000069079, 2.}, {16.000000000585743`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{15.000000000704603`, 1.}, {9.000000000108315, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{15.000000000704603`, 1.}, {16.462297615559493`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{13.000000000780545`, 1.}, {7.000000000049994, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{13.000000000780545`, 1.}, {11.000000000266198`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{12.080924463906342`, 2.}, {8.000000000489194, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{12.080924463906342`, 2.}, {11.00000000049883, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{12.080924463906342`, 2.}, {18.000000000566814`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{12.080924463906342`, 2.}, {15.000000000704603`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{12.080924463906342`, 2.}, {13.000000000780545`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{4.000000000059231, 1.}, {3.000000000041638, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{4.000000000059231, 1.}, {3.999999999970669, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{4.000000000059231, 1.}, {5.000000000085038, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{-6.0000000004041, 1.}, {-5.000000000335149, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{-6.0000000004041, 1.}, {-4.000000000216801, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.9999999999943157`, 1.}, {0., 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.9999999999943157`, 1.}, {1.999999999848086, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.9999999999943157`, 1.}, {5.000000000085038, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.000000000060396, 2.}, {-2.000000000233115, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.000000000060396, 2.}, {1.0000000002677893`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.000000000060396, 2.}, {2.000000000089244, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.000000000060396, 2.}, {4.000000000059231, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.000000000060396, 2.}, {-6.0000000004041, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{2.000000000060396, 2.}, {2.9999999999943157`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{14.000000000656541`, 1.}, {7.9999999999302815`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{14.000000000656541`, 1.}, {15.462297615424745`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{14.000000000656541`, 1.}, {5.000000000085038, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{12.000000000680899`, 1.}, {5.999999999967997, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{12.000000000680899`, 1.}, {10.000000000809877`, 0.}}, 
             0.09694960212338216], 
            ArrowBox[{{10.235725593653143`, 2.}, {6.000000000035669, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{10.235725593653143`, 2.}, {9.000000000473193, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{10.235725593653143`, 2.}, {17.000000000502467`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{10.235725593653143`, 2.}, {4.000000000059231, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{10.235725593653143`, 2.}, {14.000000000656541`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{10.235725593653143`, 2.}, {12.000000000680899`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{-4.000000000223906, 2.}, {-5.0000000003614105`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{-4.000000000223906, 2.}, {-4.000000000207081, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{-4.000000000223906, 2.}, {-3.0000000001458886`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{-4.000000000223906, 2.}, {-6.0000000004041, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{9.235725593592178, 2.}, {2.863771442207508*^-10, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{9.235725593592178, 2.}, {7.000000000516792, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{9.235725593592178, 2.}, {16.000000000585743`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{9.235725593592178, 2.}, {15.000000000704603`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{9.235725593592178, 2.}, {2.9999999999943157`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{9.235725593592178, 2.}, {14.000000000656541`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{8.235725593720161, 2.}, {-1.0000000000970033`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{8.235725593720161, 2.}, {4.99999999987017, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{8.235725593720161, 2.}, {10.000000000468162`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{8.235725593720161, 2.}, {13.000000000780545`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{8.235725593720161, 2.}, {12.000000000680899`, 1.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.649210823563351, 3.}, {-0.4240975840089334, 2.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.649210823563351, 3.}, {5.999999999878156, 2.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.649210823563351, 3.}, {7.235725593670537, 2.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.649210823563351, 3.}, {16.00000000069079, 2.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.649210823563351, 3.}, {12.080924463906342`, 2.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.649210823563351, 3.}, {2.000000000060396, 2.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.649210823563351, 3.}, {10.235725593653143`, 2.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.649210823563351, 3.}, {-4.000000000223906, 2.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.649210823563351, 3.}, {9.235725593592178, 2.}}, 
             0.09694960212338216], 
            ArrowBox[{{7.649210823563351, 3.}, {8.235725593720161, 2.}}, 
             0.09694960212338216]}, 
           {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
            0.7]}], {DiskBox[{0., 0.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.09694960212338216, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-2.000000000233115, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["10", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-1.9030503981097326`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2.863771442207508*^-10, 1.}, 0.09694960212338216], 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["10", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {0.0969496024097593, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-1.0000000000970033`, 1.}, 0.09694960212338216], 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"78\""},
                   "RowDefault"],StyleBox["12", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], Offset[{2, 2}, 
              {-0.9030503979736211, 1.0969496021233822`}], ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-0.4240975840089334, 2.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"14\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["18", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-0.3271479818855512, 2.096949602123382}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{9.000000000108315, 0.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {9.096949602231698, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7.000000000049994, 0.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"78\""},
                   "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.096949602173376, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{8.000000000489194, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {8.096949602612577, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], 
              DiskBox[{3.000000000041638, 0.}, 0.09694960212338216]}, InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.09694960216502, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-5.000000000335149, 0.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-4.903050398211767, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], 
              DiskBox[{1.999999999848086, 0.}, 0.09694960212338216]}, InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.096949601971468, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{1.0000000002677893`, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["7", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {1.0969496023911716`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], 
              DiskBox[{7.9999999999302815`, 0.}, 0.09694960212338216]}, 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {8.096949602053664, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5.999999999967997, 0.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"78\""},
                   "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.096949602091379, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{6.000000000035669, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["7", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.096949602159051, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-5.0000000003614105`, 1.}, 0.09694960212338216], 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-4.903050398238029, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7.000000000516792, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["7", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.096949602640174, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4.99999999987017, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"78\""},
                   "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.096949601993551, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{5.999999999878156, 2.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"15\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["12", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {6.096949602001538, 2.096949602123382}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{11.000000000266198`, 0.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"78\""},
                   "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {11.09694960238958, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{11.00000000049883, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {11.096949602622212`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{3.999999999970669, 0.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["5", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.096949602094051, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-4.000000000216801, 0.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                  "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-3.9030503980934186`, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2.000000000089244, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0969496022126264`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{10.000000000809877`, 0.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"78\""},
                   "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {10.09694960293326, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{9.000000000473193, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {9.096949602596576, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-4.000000000207081, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["10", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-3.9030503980836984`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{10.000000000468162`, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"78\""},
                   "RowDefault"],StyleBox["8", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {10.096949602591545`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7.235725593670537, 2.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"16\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["14", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.332675195793919, 2.096949602123382}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{16.462297615559493`, 0.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"18\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {16.559247217682874`, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{18.000000000566814`, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"18\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["10", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {18.096949602690195`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{15.462297615424745`, 0.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"18\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["4", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {15.559247217548128`, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{17.000000000502467`, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"18\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["11", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {17.09694960262585, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-3.0000000001458886`, 1.}, 0.09694960212338216], 
             InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"18\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["12", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-2.9030503980225064`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{16.000000000585743`, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"18\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["8", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {16.096949602709124`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{16.00000000069079, 2.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"18\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["16", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {16.09694960281417, 2.096949602123382}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{15.000000000704603`, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {15.096949602827985`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{13.000000000780545`, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"78\""},
                   "RowDefault"],StyleBox["8", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {13.096949602903928`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{12.080924463906342`, 2.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["14", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {12.177874066029725`, 2.096949602123382}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             {RGBColor[1, 0, 0], 
              DiskBox[{5.000000000085038, 0.}, 0.09694960212338216]}, InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["3", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {5.0969496022084195`, 0.09694960212338216}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{4.000000000059231, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["7", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {4.096949602182613, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-6.0000000004041, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
                  "RowDefault"],StyleBox["8", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-5.903050398280718, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2.9999999999943157`, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""},
                   "RowDefault"],StyleBox["7", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {3.096949602117698, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{2.000000000060396, 2.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"28\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
                  "RowDefault"],StyleBox["12", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {2.0969496021837783`, 2.096949602123382}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{14.000000000656541`, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["7", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {14.096949602779924`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{12.000000000680899`, 1.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"78\""},
                   "RowDefault"],StyleBox["9", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {12.096949602804282`, 1.0969496021233822`}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{10.235725593653143`, 2.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["12", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {10.332675195776526`, 2.096949602123382}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{-4.000000000223906, 2.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["16", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {-3.903050398100524, 2.096949602123382}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{9.235725593592178, 2.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["12", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {9.332675195715561, 2.096949602123382}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{8.235725593720161, 2.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"78\""},
                   "RowDefault"],StyleBox["14", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {8.332675195843544, 2.096949602123382}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}, {
             DiskBox[{7.649210823563351, 3.}, 0.09694960212338216], InsetBox[
              RotationBox[
               TemplateBox[{TemplateBox[{"\"1\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\"", 
                   StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"8\""}, 
                  "RowDefault"],StyleBox["18", 
                  RGBColor[1, 0, 0], StripOnInput -> False]},
                "Labeled",
                DisplayFunction->(FormBox[
                  GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], TraditionalForm]& ),
                InterpretationFunction->(RowBox[{"Labeled", "[", 
                   RowBox[{#, ",", #2}], "]"}]& )],
               BoxRotation->0.5235987755982988], 
              Offset[{2, 2}, {7.746160425686733, 3.096949602123382}], 
              ImageScaled[{0, 0}],
              BaseStyle->"Graphics"]}}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{1226., Automatic},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfXd8VNXW9nyZmfSEEHovIkVEKYpI751QQiD0DqH3TuiCBAi9hhBCL6H3
3ruEIggIUkRBFOV6LVy9933nm2fvvc7Z52SfySSvr98/nz+HTDlnl7XXelbZ
a6/TrNuImF4Du43o26Nb4QbDug2J6dtjeOH6g4e5v7L/H5vNccVm+z+2wja8
d9ls9I/L/b/5n1T8gwv+/0///6cM/9SA/XEG/frrr5UuXrzYbuPGjdXOnDmT
9aeffrKV9PDbHg+/tclkm6X+F+7732gzs/ddyOR9KXyp6rM/fuWvXbt2sW37
Ls879xri6jfyk5ddY4anRrXrXOfUqVO24l5cs8uLa1pL1/StVOn5J3nyuDba
bC/jcuZM7VuuXJ0zx44Z+rK6pkQGx/w/aefv7MsbOnvTzrm/qJ1tnEXqsT/2
Mrdu3XrUpkNP1/LNJ2x217p9n7n/XZVyFreyy4t5ed0OL69rJV03okgR109u
ZWXHgNz//mqzgcyMtMW8vO7tTMzjr2jv/1W/3q6Ht+2d+Yvb22pgr9NR0R1d
S9YfYRc69MtTW7ZuBwCzveXlddu9vK6luK5H9equl8wMcltIOrlTe5QrZ+g3
veuKZXAef1V7/6/69XY9vG3v9F/c3hbOXnX55fmfPXv2oEVUB3ahL78cnAi9
yK4o4uV127y8rrl0Xd9ixRihfTm5IcnKfj1dVzQT8/DUnp+wDX5/82eZ+4+/
a3jmswft9p36PPLwuS9sOb3s668eU2ba+yvGd/Ivbm+zgfWgY5916N5fvvzP
mGFTIlNSuBHm4P9m/fmX37EUtBw+WA+bffLC9SeLPPvuNbsou5dNOvl1uI+a
tIn2em49dK3fhn1X2BWrvWyvuXTdpPz55RX8c43TqV0XKCj04oefMZ00Y/Z0
b1Evx5KxPgIMfbhfoEW1q7efghojV6WcmzF3zTGbc0/MlI2cXnSd17QWy0eS
hFedCze+EuQet3zLmRKPnv3ALsqRoSYtlw/DTtOeJ9KKIfr++e//UHsggWgS
zVW6fvdZJoboj1WgJoEdaLHLjmPX0Sa687Y5bxf/5F/cnlFU4RndbxwRKV/+
NLpznw5bdx/FQtp8wC3+nFnYFyZmsWqg4tWrqYzYrAGbfdX4BbvRCmvJl7fH
VpnaS/TcHowrWTDZdZ2LF5c4wPlsdIECQ5cn70K/tCw2B+vfN2XgJ1uof7yW
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
KL5H62jTxMcpTxbvjfb3RCT0x4erfHWqbR5pIsEe5SLzCF0uxKE5BM5WiZDV
DvH7eUZ+vUC0hWiAbGIIBPkd72EcAoJ2xHmXdxq54s2V24/5KbPMVBrdr/5l
F62WK+i7GH3pIxNZ4tcPq8gQ8KGKTQctHH2P2Y+BI9fN/KVgt1JK+d/ZuHvK
jyWvq/Zd6Qo3fVK52u30pGGksZKsrOssgSZnl0v0uo55r68/vQmpmXBnnLut
b72LpQeU0X0lPCthhAHf3kK9SqFMEl6W/RYtOZhX2XDjpPhknESkv9iVzzT8
fQ1UFSbHUUCB37t8ZrWUitnywloaTBffLIpOhKju5PkZCJoAEwoumpeTcrVX
Mb/mQXIqrieklk4Tyaq/JPYsROOX6Z2Shl4pVLjIuhcavERerfrHmSPhupHq
sPuJHjjYPq3TfHKWOJuw/sljLSbjcDNywcFC2SeyUfJcG7JzaeR+vURgtDvi
YB/Ls0PF0kV4uWMhvJR+yRtAZ0u6jF4FgsNNEEfKYpZ4THVmhNcVrG1oLOL4
UJb4PtOW7QXMNV9pz4KX0JtIAd7Xlbs99lPxbpX92NyKtmPmkj0uVw3yTHYW
xSwmOcWT2VHZqln9jjBO5uXW9+NGzNxGhQ867MpdjUbi3/b9fS7L288IdXU3
pc0rPFPPTyNS3YBv3CoogrjmPKtfN3+L7gW3GGe0MRvz5+cOg1Px9JPj6Q6r
D928tBruL28zJr31feXViAALKR17Ddel/OiBvk0OPTKi0ZhBi+fQQpFCz5TW
y9u6R/ntj10zg8Q2SzYd+aDem8P+nTN3wrm6zSdcqN18Mnv8n1wdC25tMmj6
mkbTW18q0a/0D4X7FI2OM/otXOQT0T1inY2ycElNPn7O4tHwIeBAYSycY/cA
EqnVHD8xR8J0poCi+pZbVNTjRExeP6mTL6wn6mTIuyVdDMIlOURZNVemJhoa
JLsS5Mp8c+XKx7cNrEN6Ot/LX8qC9xuXsuyrG6rexXUMWxbniiVn+Y3yWYzV
5JGdq7WHkhOYJd9bAm8b8FWAkdcDMCwYTNBhlazWmq59a+hSEJp8UggOKexQ
tmTjTYSM8UOG7omsOPHOVh16h/WYmwxLE4IcPnLayssly93IU418cbvGTvMW
bvvNn3x5ORZOs8csYV7Txc1315781E+Fe5XgsnNz+k5Yvfrbkv1LN1h1fDU7
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
yx7tmtr/ao+5SK6MAl650sVi2VC98muyY24bmBS/QidM7zl0OvEjXU6lnEg7
80JErGNw9bWeJFLazmwm84CqYso8GZ0BFvnSvQpZxZ1kuPDcReQqIBP44ioU
CHGZ77JKD5c5YMglYc6iRXGFfG/OOTSfFoovr37PZIO2Wbh9D12p4d7a9/TQ
DpEtC+IFQxU58pId88qM9Uvq5dPk54SNah794MNI2oD4mh+duUC8kUfCGjLn
ra4DnSMrRzQx7uzeE9ehJi1qiJHNkyc9IGZvLIdeF8zxSun0UqhJ1YsRAPZP
Cvn++Gghz8zooMtw+B6eFyEA2ZNS12aV3B1UgXGUCPANJSSvEQGOgDWWk81P
jox2srlzo1JPRvHE3qOfpEs9l6UweVjYPDCdwVsyZfC0zcee7zCD9pB/q1K3
yxcPNxmz/Y2kmbQ2HDciZTOdqLh/VCUR69jYauCS6QOmbOSY0zTHbk1O/km6
hdJopX4kEaIYv/gVP86VobBEpCqCjQgyRRFeo/JXNu49CVIlr0PeMi8CHpTa
BYl7pktqtjHDpqzAk9hxasrc5S++9JK7HxoAJ5S/gCR256udJ6kkSJxwnhua
LYkktg3uqk9eaMhTn2nYpP/ICTMghgizJq+XIOI7BsBK+Nk2ftBbh6Dpmh0f
peH+Fc+n4X7FAmLVL/0ZbvmsoeBmLVh1dsGTWQHVsvvZvKaLm39btnflA/dP
rqXIuep3fC3GDBTd8j1qbJhLM+oyYeLkGe279Pn05lvv3dGgeS9lHosuVXn7
pkLa0tCZyv7g/pdNV9zmE01qcscV3aGf4PWHHxrZAPZBGslSnXdVO0UbqzIN
OCVPOI8O0qqxoc/gyveS6mFxrENz0ejDIzVkuAIfPUaPGeskbQSUY0iJ/w8w
CQ+SJ1lTzdIwAsshp4Au5mNu45kiKN6y0Js9ySaOHfGWlXPg//sffoJ3+Uqx
UhUCX3+q9ZOFC5E9KGB2XywoixsXA9olRi2uya4g9d0kq7oHistfd7VVytuz
+Jnzbqqxt/nOsbIgtKNC2tmlTzQuLat3K4xP2HsMy8xoTN2E0z9YlqIsC6j9
3VDUHsYKEfPfDJOa9r3aYw7RFxr7xIw2Ouewgp2eWzGePZ7avf+4WW916sUY
jViNFTFzkSFWzyR4GE2ppTt+nL81y+JIllSSxP8p7G6yYsNeP0ZJY7uGGw6/
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
cJ+igco+E4qpRKC55Mi1H+CoZSv88XCrIPwk+6RO8oTxidg361n05lU0A0WO
ir5HG8MkXtl1IAa/pl1wpncj/PK7VoRTsXbwQ87VqtsQ0ZhzdRs23tm999P/
SO6bzGLGYDlf1yk3XZ8bHD5uYONQiNYdTdGIWWzi5s7LB7zcZFFH7DRoNxHM
fqXDhDkgx8O9CW1DQJs+f9z8baxv6r3uhYN8Bh5t5TxsQgC/nowSIWL7Rqgw
eDncGvyZJmvHZ6xawKuMNNjLbZzf+m3v9XRfI3eKpREiS1oke23Ir5FJDOJ4
kUkowgeVwadlyt57tHb9JmMWrD1AosOsuCLEJkGu6RNrym9dRW/l3q1whYK3
F7jc3glev7/yQ6dr121wx8WLF7WJ02Exgt+/LTim8KJxz+26evvQih9XHdER
ZlPutt5aA+aWyMbICiDjBVjyQMOrraO52sRlSWwuSSJWH4ZiMPeeG5+a5Fvn
LLcmOJef3HxSo3mtOc9ueJby9vTKg3tIIYnT8UnlUS1mTl60DUApRovM2CRa
yR1UrUUS9jZa2OifhWoX+/6+alUut+7U42qVR2p+X6Zehfs+OPuxE8CVQEkw
TppPyqZVxjN+Kle14tctO3S7WKtuI8o43m9PZE4ScULEL91doeY7jToOA+Ht
P3LmKVT+7PlL+K1VXdZ0+St/rcI/ln+o0tetOna/UrXWoz+WrHsPHkVfXsw2
hMWDBEiGpThSq059nULFqt5IGZhy4/b6d12u+khNrObvdz9437HGHZrXO3Di
gLGZ1r6FU63tKjVzW3R0pvQPZTM3yCwOHw4iJswUm61FcIHFTvMQa6tMN7Qf
S9x192eP1K5/rWmrTr9l3Puxlndc/PKi3MzjQlLeyF5lxWGDs6A5bNgITnHY
8JGhOGwI60FMwahHI/42sJ380hNLOqFLyaTZ618Bk8SBDpNmvvnEmAnfFR5R
Ct+/0HHJs4Dfbe7YtRcAfgfqN3wMY5AeAyTW4rU4wV/h4GS82L1PhkUanqVF
wnA520CeoSSHuz89OP8MNkeFBgINphx8HHgcfJVscbIkzFJrUgGnJjmI0WEC
RxsduiKZjE6ADxBNrwM6TYEv6HrZggg39828uBxXhI2QezH1P6KtQqXCmRnC
4DEJMiF4yrgxELeMO4mIKHCbLXmm/+BvChUusrlzjwGAIH51+x0lEe/yFK0E
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\
\>"]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.76263423709134*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GatherBy", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
     RowBox[{"Last", "[", "#1", "]"}]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7626948134735456`*^9, 3.76269484361224*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "2"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.762694836010004*^9, 3.7626948445116463`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"First", ",", "#"}], "]"}], "&"}], ",", 
   RowBox[{"Gather", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"ReadGrof", "[", "10", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"full", "=", 
           RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"e", "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"VertexContract", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                   ",", "e", ",", "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", 
                RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"e", "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{
                RowBox[{"AugmentedFormula", "[", 
                 RowBox[{
                  RowBox[{"FindFullFormula", "[", 
                   RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                  "full"}], "]"}], ",", "CompareSymbolsNew"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
       RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7626946556608853`*^9, 3.7626947935263605`*^9}, {
  3.762694859112547*^9, 3.762694927585147*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", "\[UndirectedEdge]", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "\[UndirectedEdge]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "\[UndirectedEdge]", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "\[UndirectedEdge]", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", "\[UndirectedEdge]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", "\[UndirectedEdge]", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", "\[UndirectedEdge]", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "\[UndirectedEdge]", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "\[UndirectedEdge]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "\[UndirectedEdge]", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "\[UndirectedEdge]", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", "\[UndirectedEdge]", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", "\[UndirectedEdge]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", "\[UndirectedEdge]", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", "\[UndirectedEdge]", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7626946776104136`*^9, 3.7626947016926193`*^9}, 
   3.7626947532269945`*^9, 3.762694796693804*^9, {3.762694862568787*^9, 
   3.762694887758953*^9}, 3.7626949309931984`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"First", ",", "#"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Gather", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"ReadGrof", "[", "10", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"full", "=", 
           RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"e", ",", "Blue"}], "]"}], "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"VertexContract", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                   ",", "e", ",", "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", 
                RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"e", "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                   "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
       RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.7626953558824863`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    StyleBox[
     RowBox[{"1", "\[UndirectedEdge]", "5"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"1", "\[UndirectedEdge]", "6"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"1", "\[UndirectedEdge]", "8"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"1", "\[UndirectedEdge]", "4"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"2", "\[UndirectedEdge]", "8"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"2", "\[UndirectedEdge]", "4"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"3", "\[UndirectedEdge]", "4"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"7", "\[UndirectedEdge]", "6"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"7", "\[UndirectedEdge]", "8"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"7", "\[UndirectedEdge]", "4"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "\[UndirectedEdge]", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "\[UndirectedEdge]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "\[UndirectedEdge]", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "\[UndirectedEdge]", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", "\[UndirectedEdge]", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", "\[UndirectedEdge]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", "\[UndirectedEdge]", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", "\[UndirectedEdge]", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.762695358935607*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"First", ",", "#"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Gather", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"MinimalGraph", "[", "5", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"full", "=", 
           RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"e", ",", "Blue"}], "]"}], "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"VertexContract", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                   ",", "e", ",", "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", 
                RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"e", "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                   "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
       RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7626949475894833`*^9, 3.7626950238117666`*^9}, {
  3.762695064345836*^9, 3.762695069214822*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     StyleBox[
      RowBox[{"3", "\[UndirectedEdge]", "5"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], ",", 
     StyleBox[
      RowBox[{"4", "\[UndirectedEdge]", "6"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"3", "\[UndirectedEdge]", "6"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "6"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7626949405165925`*^9, 3.7626950258612385`*^9}, 
   3.7626950712863398`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MinimalGraph", "[", "5", "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {
      Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2, 5}, {
       4, 5}, {1, 6}, {2, 6}, {5, 6}}}, {
      GraphLayout -> "PlanarEmbedding", VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {5., 0.}}, 0.043048128342245986`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {1., 1.}}, 0.043048128342245986`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {1., 2.}}, 0.043048128342245986`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {1., 3.}}, 0.043048128342245986`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {0., 5.}}, 0.043048128342245986`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5., 0.}, {1., 1.}}, 0.043048128342245986`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5., 0.}, {1., 2.}}, 0.043048128342245986`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5., 0.}, {1., 3.}}, 0.043048128342245986`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{5., 0.}, {0., 5.}}, 0.043048128342245986`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1., 1.}, {1., 2.}}, 0.043048128342245986`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1., 2.}, {1., 3.}}, 0.043048128342245986`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1., 3.}, {0., 5.}}, 0.043048128342245986`]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.043048128342245986`], 
         InsetBox["1", 
          Offset[{2, 2}, {0.043048128342245986`, 0.043048128342245986`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., 0.}, 0.043048128342245986`], 
         InsetBox["2", 
          Offset[{2, 2}, {5.043048128342246, 0.043048128342245986`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.043048128342245986`], 
         InsetBox["3", Offset[{2, 2}, {1.043048128342246, 1.043048128342246}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.043048128342245986`], 
         InsetBox["4", Offset[{2, 2}, {1.043048128342246, 2.043048128342246}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 3.}, 0.043048128342245986`], 
         InsetBox["5", Offset[{2, 2}, {1.043048128342246, 3.043048128342246}],
           ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 5.}, 0.043048128342245986`], 
         InsetBox["6", 
          Offset[{2, 2}, {0.043048128342245986`, 5.043048128342246}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]]]], "Output",
 CellChangeTimes->{3.7626950329762115`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"First", ",", "#"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Gather", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"JacobsThalGraph", "[", "5", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"full", "=", 
           RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"e", ",", "Blue"}], "]"}], "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"VertexContract", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                   ",", "e", ",", "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", 
                RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"e", "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                   "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
       RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7626950937723303`*^9, 3.76269509698289*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"JacobsThalGraph", "[", "5", "]"}], ",", 
   RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76269529839729*^9, 3.76269531573953*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 9, 6, 7, 8}, {
      Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 2}, {6, 3}, {
       5, 4}, {5, 3}, {7, 5}, {7, 3}, {7, 4}, {8, 7}, {8, 3}, {8, 4}, {9, 
       8}, {9, 3}, {9, 4}, {6, 9}, {6, 4}}}, {
      GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], ArrowBox[{{0., 0.}, {8., 0.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{0., 0.}, {5., 1.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{0., 0.}, {0., 8.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{0., 0.}, {1., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{8., 0.}, {5., 1.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{8., 0.}, {0., 8.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{8., 0.}, {5., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{5., 1.}, {1., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{5., 1.}, {5., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{5., 1.}, {2., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{5., 1.}, {3., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{5., 1.}, {4., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{0., 8.}, {1., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{0., 8.}, {5., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{0., 8.}, {2., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{0., 8.}, {3., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{0., 8.}, {4., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{1., 2.}, {2., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{5., 2.}, {4., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], ArrowBox[{{2., 2.}, {3., 2.}}, 0.05783410138248847]}, 
        {Arrowheads[0.], 
         ArrowBox[{{3., 2.}, {4., 2.}}, 0.05783410138248847]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.05783410138248847], 
         InsetBox["1", 
          Offset[{2, 2}, {0.05783410138248847, 0.05783410138248847}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{8., 0.}, 0.05783410138248847], 
         InsetBox["2", 
          Offset[{2, 2}, {8.057834101382488, 0.05783410138248847}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., 1.}, 0.05783410138248847], 
         InsetBox["3", 
          Offset[{2, 2}, {5.057834101382489, 1.0578341013824886`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 8.}, 0.05783410138248847], 
         InsetBox["4", 
          Offset[{2, 2}, {0.05783410138248847, 8.057834101382488}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.05783410138248847], 
         InsetBox["5", 
          Offset[{2, 2}, {1.0578341013824886`, 2.0578341013824883`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., 2.}, 0.05783410138248847], 
         InsetBox["9", 
          Offset[{2, 2}, {5.057834101382489, 2.0578341013824883`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.05783410138248847], 
         InsetBox["6", 
          Offset[{2, 2}, {2.0578341013824883`, 2.0578341013824883`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.05783410138248847], 
         InsetBox["7", 
          Offset[{2, 2}, {3.0578341013824883`, 2.0578341013824883`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 2.}, 0.05783410138248847], 
         InsetBox["8", 
          Offset[{2, 2}, {4.057834101382489, 2.0578341013824883`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]]]], "Output",
 CellChangeTimes->{
  3.7626951345288687`*^9, {3.7626952937448845`*^9, 3.762695316641938*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"JacobsThalGraph", "[", "5", "]"}]}], ",", 
      RowBox[{"e", "=", 
       RowBox[{"2", "\[UndirectedEdge]", "4"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"full", "=", 
        RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AugmentedFormula", "[", 
       RowBox[{
        RowBox[{"FindFullFormula", "[", 
         RowBox[{"EdgeContract", "[", 
          RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", "full"}], 
       "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
  "//", "FormulaGraphReverse2"}]], "Input",
 CellChangeTimes->{{3.762695213495626*^9, 3.762695225435487*^9}, 
   3.7626952671950965`*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`v168x2x3x4x579, $CellContext`v168x2x3x4x57x9, \
$CellContext`v168x2x3x4x59x7, $CellContext`v168x2x3x4x5x79, \
$CellContext`v168x2x3x4x5x7x9, $CellContext`v169x2x3x4x57x8, \
$CellContext`v169x2x3x4x58x7, $CellContext`v169x2x3x4x5x7x8, \
$CellContext`v16x2x3x4x579x8, $CellContext`v16x2x3x4x57x8x9, \
$CellContext`v16x2x3x4x58x79, $CellContext`v16x2x3x4x58x7x9, \
$CellContext`v16x2x3x4x59x7x8, $CellContext`v16x2x3x4x5x79x8, \
$CellContext`v16x2x3x4x5x7x8x9, $CellContext`v179x2x3x4x58x6, \
$CellContext`v179x2x3x4x5x68, $CellContext`v179x2x3x4x5x6x8, \
$CellContext`v17x2x3x4x58x69, $CellContext`v17x2x3x4x58x6x9, \
$CellContext`v17x2x3x4x59x68, $CellContext`v17x2x3x4x59x6x8, \
$CellContext`v17x2x3x4x5x68x9, $CellContext`v17x2x3x4x5x69x8, \
$CellContext`v17x2x3x4x5x6x8x9, $CellContext`v18x2x3x4x579x6, \
$CellContext`v18x2x3x4x57x69, $CellContext`v18x2x3x4x57x6x9, \
$CellContext`v18x2x3x4x59x6x7, $CellContext`v18x2x3x4x5x69x7, \
$CellContext`v18x2x3x4x5x6x79, $CellContext`v18x2x3x4x5x6x7x9, \
$CellContext`v19x2x3x4x57x68, $CellContext`v19x2x3x4x57x6x8, \
$CellContext`v19x2x3x4x58x6x7, $CellContext`v19x2x3x4x5x68x7, \
$CellContext`v19x2x3x4x5x6x7x8, $CellContext`v1x2x3x4x579x68, \
$CellContext`v1x2x3x4x579x6x8, $CellContext`v1x2x3x4x57x68x9, \
$CellContext`v1x2x3x4x57x69x8, $CellContext`v1x2x3x4x57x6x8x9, \
$CellContext`v1x2x3x4x58x69x7, $CellContext`v1x2x3x4x58x6x79, \
$CellContext`v1x2x3x4x58x6x7x9, $CellContext`v1x2x3x4x59x68x7, \
$CellContext`v1x2x3x4x59x6x7x8, $CellContext`v1x2x3x4x5x68x79, \
$CellContext`v1x2x3x4x5x68x7x9, $CellContext`v1x2x3x4x5x69x7x8, \
$CellContext`v1x2x3x4x5x6x79x8, $CellContext`v1x2x3x4x5x6x7x8x9}, {{{2, 1}, {
       3, 1}, {4, 1}, {9, 1}, {26, 1}, {38, 1}, {5, 2}, {10, 2}, {28, 2}, {40,
        2}, {5, 3}, {13, 3}, {29, 3}, {46, 3}, {5, 4}, {14, 4}, {31, 4}, {48, 
       4}, {15, 5}, {32, 5}, {49, 5}, {8, 6}, {10, 6}, {34, 6}, {41, 6}, {8, 
       7}, {12, 7}, {35, 7}, {43, 7}, {15, 8}, {37, 8}, {50, 8}, {10, 9}, {13,
        9}, {14, 9}, {39, 9}, {15, 10}, {42, 10}, {12, 11}, {14, 11}, {44, 
       11}, {15, 12}, {45, 12}, {15, 13}, {47, 13}, {15, 14}, {51, 14}, {52, 
       15}, {18, 16}, {20, 16}, {35, 16}, {44, 16}, {18, 17}, {23, 17}, {36, 
       17}, {48, 17}, {25, 18}, {37, 18}, {51, 18}, {20, 19}, {24, 19}, {43, 
       19}, {25, 20}, {45, 20}, {22, 21}, {23, 21}, {46, 21}, {25, 22}, {47, 
       22}, {25, 23}, {49, 23}, {25, 24}, {50, 24}, {52, 25}, {28, 26}, {29, 
       26}, {31, 26}, {39, 26}, {28, 27}, {30, 27}, {41, 27}, {32, 28}, {42, 
       28}, {32, 29}, {47, 29}, {32, 30}, {50, 30}, {32, 31}, {51, 31}, {52, 
       32}, {34, 33}, {36, 33}, {40, 33}, {37, 34}, {42, 34}, {37, 35}, {45, 
       35}, {37, 36}, {49, 36}, {52, 37}, {39, 38}, {40, 38}, {46, 38}, {48, 
       38}, {42, 39}, {47, 39}, {51, 39}, {42, 40}, {49, 40}, {42, 41}, {50, 
       41}, {52, 42}, {45, 43}, {50, 43}, {45, 44}, {51, 44}, {52, 45}, {47, 
       46}, {49, 46}, {52, 47}, {49, 48}, {51, 48}, {52, 49}, {52, 50}, {52, 
       51}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {$CellContext`v17x2x3x4x58x69 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x68x79 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x5x69x8 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x59x7x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x59x6x7x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v19x2x3x4x5x68x7 -> Rotate[
           Row[{"19", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x5x6x8x9 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v19x2x3x4x5x6x7x8 -> Rotate[
           Row[{"19", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x57x69 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x59x6x7 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x68x7x9 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x58x6x79 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x5x69x7 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v179x2x3x4x5x6x8 -> Rotate[
           Row[{"179", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v169x2x3x4x58x7 -> Rotate[
           Row[{"169", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v168x2x3x4x5x7x9 -> Rotate[
           Row[{"168", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x58x7x9 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v19x2x3x4x57x68 -> Rotate[
           Row[{"19", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x579x6x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "579", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x5x6x7x9 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v169x2x3x4x5x7x8 -> Rotate[
           Row[{"169", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x5x68x9 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v168x2x3x4x579 -> Rotate[
           Row[{"168", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "579"}], Rational[1, 6] 
           Pi], $CellContext`v168x2x3x4x5x79 -> Rotate[
           Row[{"168", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79"}], Rational[1, 6] 
           Pi], $CellContext`v169x2x3x4x57x8 -> Rotate[
           Row[{"169", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x5x7x8x9 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x57x69x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v19x2x3x4x57x6x8 -> Rotate[
           Row[{"19", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x5x6x79 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x59x68x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x58x79 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x579x6 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "579", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x5x79x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x69x7x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x58x69x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x57x68x9 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v179x2x3x4x58x6 -> Rotate[
           Row[{"179", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x57x8x9 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x58x6x7x9 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x579x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "579", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x6x7x8x9 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v168x2x3x4x59x7 -> Rotate[
           Row[{"168", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x57x6x8x9 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x59x68 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x59x6x8 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x579x68 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "579", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v19x2x3x4x58x6x7 -> Rotate[
           Row[{"19", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v179x2x3x4x5x68 -> Rotate[
           Row[{"179", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x6x79x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x57x6x9 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v168x2x3x4x57x9 -> Rotate[
           Row[{"168", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x58x6x9 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.011533434076174992`], 
        ArrowBox[{{-0.43366488148126336`, 1.}, {0., 0.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.5663351188823071`, 1.}, {0., 0.}}, 0.09694960212314824], 
        ArrowBox[{{-3.4336648819589755`, 1.}, {0., 0.}}, 0.09694960212314824],
         ArrowBox[{{-0.43366488056824437`, 2.}, {-0.43366488148126336`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-0.43366488056824437`, 2.}, {1.5663351188823071`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-0.43366488056824437`, 2.}, {-3.4336648819589755`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-13.433664880864399`, 2.}, {-10.001174593188352`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-13.433664880864399`, 2.}, {-15.172039308926514`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-2.433664881686582, 1.}, {0., 0.}}, 0.09694960212314824], 
        ArrowBox[{{-4.433664880621222, 2.}, {-0.43366488148126336`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880621222, 2.}, {-10.001174593188352`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880621222, 2.}, {-2.433664881686582, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-14.433664880888728`, 2.}, {-15.172039308926514`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-14.433664880888728`, 2.}, {-12.433664880768106`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.5663351194629058, 2.}, {1.5663351188823071`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.5663351194629058, 2.}, {-2.433664881686582, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.43366488068159, 2.}, {-3.4336648819589755`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.43366488068159, 2.}, {-2.433664881686582, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.43366488068159, 2.}, {-12.433664880768106`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {-0.43366488056824437`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {-13.433664880864399`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {-4.433664880621222, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {-14.433664880888728`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {0.5663351194629058, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {-6.43366488068159, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-11.433664880821993`, 2.}, {-13.872152803752783`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-11.433664880821993`, 2.}, {-8.692025679655444, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-16.43366488097695, 2.}, {-13.872152803752783`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-16.43366488097695, 2.}, {-16.433664880844844`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-2.433664880616334, 2.}, {-1.4336648816205297`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.433664880727065, 2.}, {-8.692025679655444, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.433664880727065, 2.}, {-1.4336648816205297`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.433664880929769`, 2.}, {-16.433664880844844`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.932060765212896, 3.}, {-11.433664880821993`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.932060765212896, 3.}, {-16.43366488097695, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.932060765212896, 3.}, {-2.433664880616334, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.932060765212896, 3.}, {-5.433664880727065, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.932060765212896, 3.}, {-15.433664880929769`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{2.566335120282247, 1.}, {0., 0.}}, 0.09694960212314824], 
        ArrowBox[{{3.5663351194829147`, 2.}, {-0.43366488148126336`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{3.5663351194829147`, 2.}, {2.566335120282247, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{3.5663351194829147`, 2.}, {-6.692025679116682, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{5.566335119664245, 2.}, {1.5663351188823071`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{5.566335119664245, 2.}, {2.566335120282247, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-7.433664880704214, 2.}, {-6.692025679116682, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.5663351194481265`, 2.}, {-3.4336648819589755`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.5663351194481265`, 2.}, {2.566335120282247, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.17000670712889132`, 3.}, {-0.43366488056824437`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.17000670712889132`, 3.}, {3.5663351194829147`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.17000670712889132`, 3.}, {5.566335119664245, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.17000670712889132`, 3.}, {-7.433664880704214, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.17000670712889132`, 3.}, {1.5663351194481265`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-9.433664880717402, 2.}, {-10.001174593188352`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-9.433664880717402, 2.}, {-7.692025679494009, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-17.433664880999913`, 2.}, {-15.172039308926514`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-17.433664880999913`, 2.}, {-13.872152803752783`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.433664880727292, 2.}, {-8.692025679655444, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.433664880727292, 2.}, {-7.692025679494009, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.526083865160558`, 3.}, {-13.433664880864399`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.526083865160558`, 3.}, {-11.433664880821993`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.526083865160558`, 3.}, {-9.433664880717402, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.526083865160558`, 3.}, {-17.433664880999913`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.526083865160558`, 3.}, {-8.433664880727292, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.566335118736788, 1.}, {0., 0.}}, 0.09694960212314824], 
        ArrowBox[{{2.5663351195094037`, 2.}, {-2.433664881686582, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{2.5663351195094037`, 2.}, {2.566335120282247, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{2.5663351195094037`, 2.}, {0.566335118736788, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-1.4336648806414587`, 2.}, {-0.43366488148126336`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-1.4336648806414587`, 2.}, {-7.692025679494009, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-1.4336648806414587`, 2.}, {0.566335118736788, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.433664880740025`, 2.}, {-10.001174593188352`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.433664880740025`, 2.}, {-6.692025679116682, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {-4.433664880621222, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {3.5663351194829147`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {-9.433664880717402, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {2.5663351195094037`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {-1.4336648806414587`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {-10.433664880740025`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-18.43366488114043, 2.}, {-15.172039308926514`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-18.43366488114043, 2.}, {-16.433664880844844`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.43366488084314, 2.}, {-12.433664880768106`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.43366488084314, 2.}, {-13.872152803752783`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.250450545042213`, 3.}, {-14.433664880888728`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.250450545042213`, 3.}, {-16.43366488097695, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.250450545042213`, 3.}, {-17.433664880999913`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.250450545042213`, 3.}, {-18.43366488114043, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.250450545042213`, 3.}, {-12.43366488084314, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{4.566335119661517, 2.}, {1.5663351188823071`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{4.566335119661517, 2.}, {-1.4336648816205297`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{4.566335119661517, 2.}, {0.566335118736788, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.7378348059560267`, 3.}, {0.5663351194629058, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.7378348059560267`, 3.}, {-2.433664880616334, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.7378348059560267`, 3.}, {5.566335119664245, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.7378348059560267`, 3.}, {2.5663351195094037`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.7378348059560267`, 3.}, {4.566335119661517, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.4336648806531684`, 2.}, {-3.4336648819589755`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.4336648806531684`, 2.}, {-8.692025679655444, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.4336648806531684`, 2.}, {0.566335118736788, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {-0.43366488056824437`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {-5.433664880727065, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {-8.433664880727292, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {-1.4336648806414587`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {4.566335119661517, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {-3.4336648806531684`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.131652476391423`, 3.}, {-13.433664880864399`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.131652476391423`, 3.}, {-15.433664880929769`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.131652476391423`, 3.}, {-7.433664880704214, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.131652476391423`, 3.}, {-10.433664880740025`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.131652476391423`, 3.}, {-18.43366488114043, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {-6.43366488068159, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {-11.433664880821993`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {1.5663351194481265`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {2.5663351195094037`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {-12.43366488084314, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {-3.4336648806531684`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-6.433664880983315, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-8.932060765212896, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {0.17000670712889132`, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-10.526083865160558`, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-4.433664880410106, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-15.250450545042213`, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {1.7378348059560267`, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-3.433664879738899, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-12.131652476391423`, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-5.4336648808016434`, 3.}}, 
         0.09694960212314824]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"168\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"579\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.09694960212314824, 0.09694960212314824}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.43366488148126336`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"168\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.3367152793581151, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5663351188823071`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"168\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.6632847210054553`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.4336648819589755`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"168\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.3367152798358273`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.43366488056824437`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"168\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.33671527844509613`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-10.001174593188352`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"169\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-9.904224991065204, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-15.172039308926514`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"169\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-15.075089706803366`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-13.433664880864399`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"169\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-13.33671527874125, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.433664881686582, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"579\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.3367152795634336`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.433664880621222, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-4.336715278498074, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-12.433664880768106`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-12.336715278644958`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-14.433664880888728`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-14.33671527876558, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5663351194629058, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.663284721586054, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.43366488068159, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.336715278558442, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.433664880983315, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.336715278860167, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-13.872152803752783`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"179\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-13.775203201629635`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-8.692025679655444, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"179\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-8.595076077532296, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-11.433664880821993`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"179\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-11.336715278698845`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-16.433664880844844`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-16.336715278721694`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-16.43366488097695, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-16.3367152788538, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.4336648816205297`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.3367152794973816`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.433664880616334, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.3367152784931857`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-5.433664880727065, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-5.336715278603917, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-15.433664880929769`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-15.33671527880662, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-8.932060765212896, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-8.835111163089747, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.566335120282247, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"579\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.663284722405395, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.692025679116682, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.595076076993534, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5663351194829147`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.663284721606063, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.566335119664245, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.663284721787393, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.433664880704214, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-7.336715278581066, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5663351194481265`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.6632847215712747`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.17000670712889132`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.26695630925203956`, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.692025679494009, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"19\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-7.5950760773708605`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-9.433664880717402, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"19\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-9.336715278594253, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-17.433664880999913`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"19\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-17.336715278876763`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-8.433664880727292, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"19\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-8.336715278604144, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-10.526083865160558`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"19\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-10.42913426303741, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.566335118736788, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"579\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.6632847208599362, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.5663351195094037`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"579\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.663284721632552, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.4336648806414587`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.3367152785183105`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-10.433664880740025`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-10.336715278616877`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.433664880410106, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-4.336715278286958, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-18.43366488114043, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-18.33671527901728, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-12.43366488084314, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-12.336715278719991`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-15.250450545042213`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-15.153500942919065`, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.566335119661517, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.663284721784665, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.7378348059560267`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.8347844080791749`, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.4336648806531684`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.3367152785300203`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.433664879738899, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.3367152776157507`, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-12.131652476391423`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-12.034702874268275`, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-5.4336648808016434`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-5.336715278678495, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.0120729008010585`, 4.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-5.91512329867791, 4.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1140., Automatic}]], "Output",
 CellChangeTimes->{3.76269522691644*^9, 
  3.7626952698522224`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
HTfcXJOKUk+fO3+x7ZY9x4Ubru3SN+3sM7XrIbOgkx2vW7fu+i79Rqm6bqZV
stx9iDIAGT12d3pOSVW5peXodO2oF4LZdkkv37Sz4301AZya8xYtVGm3TDhj
/ILtx599/kWBsFLWjCG1/dYj7/9X3sH5VfkIx02yvT9KJptk48ZZIKaBoBBg
vsvn8kO7OoGVxRPHGS7pPWiMhPhaNjTlCZQVisIo5ejEXiuZJFp7jxPPNe9g
Q0rhN5IpQzPEQ198/d2Y6Uu2ffrYU88Ls+BfSdk3pQYlIUjqIkhCkFUNzWHk
Gh4FFBgNwkKsRPsFbAjd0lIbksJ7LhNEPDH7qUrIsAhjUU/oaSVt0jrVgmJz
E+pNjCvuRJsJEGd+uP3QFdPGz99ysUat50ShAygG3LAZ4CMkQpkvH3DuiNGX
xZfRZtfxjzpmbjvw8ePVa8MXQasvHipfSc5eMwGXfDCaOhmrypTDLDTI7/a3
kBFNVAzO4trd0aRJU0EMZvipWPHiXTbsOX+g5eTB/xM7IH7MlI2KTpL9jRRa
4+xXZ/kXIUl0euPOKyziAWN/e+99D8+csEjN+f299yv3rEoz67a2z41yE8tL
pTJIsj0u56pDuQrk5qEetGTzKeJDKYawbNis7cJpC0bGabV1NNkGns1hid3C
NREUoIWCrDir5cIT3Qfbnbn+POIYrnUAWglJpu2RufsCoQrk4YBM+zqNWE1h
9O8efvzZr59+dQgZigc6pC5f33vUEpa37O0VaZCSBsevqtrFQ+dv2ftTieF3
CdwUPLUtoFhoS18Sw/9ez7Hrrr/UfS7ZoYx/uWaDlkcbv9aDHlcIC6Ls8iuU
aGiw2LumjFu76vOHxj3KvWJ8adiitHxzL5WzXEkEydQ8CBdc/UmFxx4XHgUR
EU0RfmlBMQbNw5Hdi7i0yQ5i1mL+3RBO2KYeZlcq7BTCKrV6EO1Anz2tu6T+
LX/+AgTg2Q5mShdxoETTE4Vm9wAg7tvDRvWNyo8V0XZD2OZ2xMvjderUgQS/
vnHrzg+frPWilayXe9ZrrEMbNP0rqEp/v9b2rRV9hk4FczHc91qyciN3bEWf
xVP/kZCSwN0RkUfuEGfI5xHmJRfMmYNqjhdVP5iDajknW2VuXkMPrT54DvM0
IeBSJVYYrqCH6PHwG1HV+FwJitEfPJFeKyoe4Q4dWFH70M6FMhm+LBVfhFp4
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
nQpFZwlnn5lR72aFMU9x4vZ5y3I1i1MdhnlE/STE2owOu7L7suH/jBsQ33n9
4ROshlaKX1ap/ert8lWf+6146XIXG3camz5txUEi5o3eGSt3nvvPv0Z0EEwQ
5zmwA6n3v/jii3sbNWnWYdPuU9rG5sbfePqDIZqUzH55bSYaUOQ3SNe0ui2I
y1h8vFHRiqGoqkR8Jq5qhXj69gfWpUJFnTQt4yA5rpLDJEdoQsbEi+M3MoK/
4LFIFPBZaXHJrbz0xLQncyJo2p5WbFXXZYMRs5xLbtTTuQMzx/4zdkD82n4z
VgCQWe+kDAHu3Nhj9Z57vsvabYfDWoat6nUSphVZt9jCYrO/+Xjai/temdNx
dYdV3eb12fSOSJ5n6kxriPiFcRmD/K3yj9W48myzHt/cX67yiecbNn99+/4z
XAkTF5/NoBz6VOUpCfrqkHmQihtg0Fd0iz8VHV58aa+VQ289MKrirrZT0/jl
F+VHPjlr2Jq5/nhoPxcu4mo5wnUBn3gHxc9u0hfQaOxwIhgvCp3SN0xpOWbE
CYy+mjY389ialCmbVX2P7qPXkd5vl1SzGbHZ1I6mzZpTfom0OfE/IE6I5Vh8
lMpzHq2uW4zYffQiHdphle7I0b6sJYBk0c2Z7YPKUysDIjxYqTN2K6WY6GYw
c0T61NnARBiCUrTzRcaec6mfv1az51rB7NmEUkvqkTgEpV2zxWTYPfVSzrYe
uFQxCRMiyZn9NX9qgauPT3xmS+cZkz56dtAANIVzT0+vV+TPf/urka3YlUQG
SU0iI4DECw/zVyA2pYbt5BUAY+Va5QNXRSgG2H6DNe9FD3LDZWOlQpZ0bCvu
1VS9HV+UDmcXQILGcKq8FhOuhKOKUgVRAcCr+49V1V+NDhfv74wKL3VT8FQG
ZN/luw/9udiQ0v9IGJh3UUrGrF5LDm8cl7ZnpATyiLgKGAWduc5qidqD63hr
lw6b9R7Z7OKtNfknTsMXh0VHu/FQsexDTNQqOkFdjNK2R1m2Cmj+lZoi4n2W
PDfxCojNgnGEedu1cgRv9YXWMq+DC+ZYpg5+bxjmYn4XhAuW8yJGiJH6M7GF
yCFCedjfiPTds4nsVAZA/bv8YkBkz9Q3WNHjnVFrQreCYPhv6naYTobt5CnL
D1K51eHBhiBCWFgPyrFQO+YCurw2x8pRSt4IHM8KRFXpz3YtYSQ3O/Nayn/k
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
d/eT+k1bpyv7Zz4vaUza5KZZkqvvEp5yp0XPtrxXwJS9Y6IMc1PEpZvFar55
vWuvwdazarcf123YkhvmrqGf8T+xy+KQhGva/fjc9fULeDZ9ISEdO+CZHtOv
TtNNTu6t7ArQitna3bmkzI+8z91Glcl4yB9fqv+yeo3y15tAN6FhKfOmaSog
I4wVu2jLqY9qDnsttVxUFWV+AkulYRyjCWVLrVqzDtvxZeW6Hf8VkDvfqolT
o1WCk6kYZMrSSFS/dfMcOaURq/ed+abCwBqOIfqtCk1NOvi6HiFHamD95t++
8lqzJ6XKVf2mSPHSE1en7GHG7goMSTUgsSiJ/QU5IF2az/cZMNwiIV+1WzUC
mzyVe6NfBdXJ5rhGg53tN2jEU6+qHtjEfWRXevaTPZMk4+3+4kp9bamPrS6u
NrX4c3mkxjGixT5Ppi2XyMdJ0e+0bNtR4LP2zmsQLgHfMm0pO4RyQlKkGJtc
szikbIyJARUU9H7zDr2cIxe1R/aUB6L/78kTKXWIbOMKi53JbSJIqu7BbGUo
eAs4utOuaz9Pd8owSdurLj4UpiOZ9goLWjWcGEqxAWN49ISOLvXsN9TT0AYE
YbRjX10RsLuOj/yvhIabqed64Yuvf5y6bs8VYiAd6kKqDtRwB47SH4hbynP0
JE3V1czcFkIyDgc7BI7NpvACZZ7IdMUYbro9ioWHJuL0BV07Y/nhg2NjdjwJ
bNLZhTBlNpCCuuGaMHNKURtXwgRFsoGS8CIEbehZmkPKjZajc4VHuDSJ17vZ
Y+Laj5oPW/pb1brtPO2TDuX1FRhEgf7zAyM3fvdqo06eHkkPe6536d4zdc3O
82bV6t+H7Tp1z/vjjz/K+hTvUNUVTVaDgDiplalOuoDHF3rbL+Sz9rskk0KX
6Jy9XWVye55cdnmXLU+k5LSjIpOXxsPSUdDGXM+an8orVqa9PBCsHMrR3sOn
HBg4LvrJC5VqTVu4bK3EJkKNdn1pLoVU8szx7FUIt5BViNBQZejMKrgvDjxi
nPdSjyd9q1Afd17WLFmV58BX9QKUzQCwm2n5avlhz0gAHFdJHZP2U3tza8VK
yoxMhI67ODl5exb9ev8fAus1bnn69GmegFp5vZRIk0VzdEaTscPlMzg5r3Sk
qjchL5zXZgRURrtZv2m7g/3HRN2qU7+pHJ2Y7bmiTzVEzPk8Y5rKo7IekX2s
iVvpmZrTv8vXKbAkINeZ15hT8rgk7NguPCqBbaoCeqUq1Z3nmn4EP6c8khGs
JHj5s7LIZc+YeHvseXMPm9X+5N1LySPHjD/StedANpou9pRoEeLlejsOMq9z
eAj+QbNWnXi3cKlX6zb5qFmrdp+VKlWKkJG0U8omtWph9pyRhGhKFnghN7PU
SCaA1z2uW7/xvWrVqmkuTjbnM+pHFUivwdxt06GrtZcftO3YzbGX2vTqLZkB
Nzt26eHpo1YGolwhaF2sFnbcstNN+mx6MVGudpMtWJGJYuRXiWZFMsEP4ASI
dyxGOdPTwsOmrTpmTDaqFjqaCxDIHJCjzakckF0FCHAtJgkEvzZJmMsiZWXc
syN34wcwPqBPOBkzyCgfRokSzVD8xBojxkXx7SqY9nwbnkt4nPS1ElkvhCrF
GyQwQdyRJhVFzB98CZoX66CYWiWPlp/f6tC5hwdGzReGFjyTxmSU2cabZi2w
cUpSfV2v30K+SBJ40GZk4pnBUZtpZzl3yaZzJDASg0XJBZcb4W57RAyID9K1
ohUzwRcHEUKMHKOzxIhCtQIGzOllZ5uARTiwgJg0H+X7hM2H3/gqsGFrS9K4
o5xsUhVLLKTS00I0GG3w9BbO0vD6w7sQjOZh2QUySi8SeFe92/c/53A+aNKy
o8fRteDyBpqIXOCA9Q3wchTHcO6d141OXYMyJMHR6dBb8pTwaalzlm21XV08
DiUjjVhEds2I09XpzO/xcS8ef7Nzt54KnZlneY3jvhbI+FlWoC57djcC4BnP
vtuyXZekGYmHs/jpZ99oPyD808q1W3z+QoUqopFI3W2xDrutu+2fue1hbmaa
jnKAzsMIsNNZnuqjmqoVUYnqksQdRwOFDIYW57oZWtxH6ktDKl+xg8NG+flY
/zFDeJ2P802/l6vw0sD9p9/ibmRznpND0fe81+px5JWUSNTb7fd9sTKVf8+V
tyC1oXn4WV0dVWHyjEeBd0kYoZkkd9sBZ59BEDyuCMhLF5sVvqDf5GbRJvBK
YAJSQGCDo2RLqg6aer9eg8aM6TAFmtPR2rQeT6S1PZ5D4bEkI5fL5XMORVO+
hMXvGjthsvMo/Rn2UcM2zYnHu94yZhgP0zP4fp0WvakG803J8jX42Yzu6ITx
rGtcq16zr18oW85qjpzNta8qdAz3k8A5q3GpoEMdIJXFa/PE0KkuQ/ilVqkR
+K/cefKIAzszxcAKZXze7L/6RJlMfs7QD5zZsf9+TrVJ9tr1jFXoqI92kOBP
4ZaT+b4udN0yMskIXJmQeGGN6y3H+6W0+1yZnJ9B1jwn6EUYmWuEugT9sU3b
+m0eAO1l0XfGm+vDZZVj8PE4lB/DAD7kVNzkvfjYeS/T4k4tcDeULM3dUCYg
RyrBZ+QzZDpP+QyNpIeWXU7Nmxuu2hFmMLy+dLns7qCuoeXuuoPynSzh7OCc
LF73OgavvtK97wh39KG3SUsBQZR2KAo3SeI0BFtDH6xW6dzi3U1biWOF3upf
32MjZm2lGChfi+LWnTzTd/DYjM/US3rtKdJzqQgml9muCMbfVbC8OVPOl9/T
sx63NwnMfKvbhCS+sviof32v9J68nhdRJxMEtjPY82vSW5eq3bt377PeA0fZ
TirccTgaVYrC2JidjPG40aDFnMqHLYYt86ZZWBavO53HrSYS30oJc/c6X16H
U5vLXP/We8SevqlEjFq6z9awBariqGT3KBiTL+PXMTs+YTc88tFEyuERSSWO
XbHjKRme1+NrfXgt7nCEGUU+H7YemZjFRxFirs8DO4WmbVmWGx2GxEgSHAQm
5l5pb2nXCudnf4/D+dmr4EvqLXO5s+ileEN/uElFPlnKmY8756Gzz/SsWdxs
tBusncr66WgVc+/Alfoz6//RtFsXcZPZ583IhLpRiv+DlsOXv9th7Kqsisiy
3ewespYpXe0zOTntWpwgA15810gkYxwR4474F00rL7H+ETJB9Zcvy0yr9nbN
qYE/dOjVT8wW/+s5KPjjChUqoJ7xxkG7L1z4oPrM5t8Xm1KZ3rkUUTbC20du
jERsqG3xTDbZ5HwR8tNX7biI6kRvX1YEzejXBvwekKcgNZoF8kkvN47btVul
RJkaz4pX40vX3nRHVnLOTFMZPzXlex0dGb1t/JbDb9hOYzdT95Z3SGqFgWmw
LgfQMM4dV3+HMoob8hq0fe+REx279eH1EtnQd3TIOy+Pq8kKae2jjHrZ3IDe
bE7e4+CWehXeUjNIZm5Q09+9R40/2yqytSLMtIehlLMde42go9DZfpOW/e2X
zR84a7T/m62jJj2sGl2fylln2i7r2W/flYtiXpOyCW72Jtcflau98nHZsmVl
pp66wootTqKAs7tZkCXglLEn3YJ8/i5WovTNuvUaCrlnpnqaMVZJn4sW5y9d
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
E/POix37Tvg2jXYeV3mt4/9l9fL5M3fhcveaB4XCIu/XmtnxlwKTS19tN3vi
1rErFr1bM7bh375hfgui9i4QDmJiDdCMHJzCQ5j/swxhmp/ngcKhHiQSN1xa
NHNOkFiPffsPne4+KPTX4pXqv9m8y9CpK1MO0oNZcoH0xvmKm1RwnuQhqOuc
9dloT8NYJtPg8uXLTAZhxdY5Gqik0llSt1mADTE5JurlnIDnqHWPcE/vgp9t
BgPGNr966wMmoJuNaagn2VW85sVPvvweOtgaGr/7YuvO/XYOGhnS79Drd8PW
bD78VckyFQiSh1egrl9r1r432zF/9u7V3+efVjB+2v4YaZQtHamk0jW77gA8
mhXmfR74x5ZzFwkYlcNX9G1yBNkwB41a6YgkahJxgu6ckXlMzIECHaVuA58R
4tIU4Y/kwrJwqWnL9vderdv4lzz5C31SJbCV0OLSKVFz1g8fOaaMe1h3s2nH
gSSAucI6E9coaEnSlsRPreJOdHlsH+lIThgTSV4qFNyoqgwlB05dTGqzuyYd
vvD4yY9iM6H6JwGqy0ImhXFIBr9gHFBdsp376QfLUqYLw4ntflImHj2PNJSq
8c7j923zqlDts1JdTHAK5OlIKzPtTtmZFePGTeDjNFIHzQP27rxSqw7syBij
XTveSeoGsV1soskxt2M8+bJgTB477EE5GqKX7b7doFWQTFyIk8XVv/3eZxAl
xCLBnSbp185YZN2mICSn6eBxWnHO5w4DUr6Kz7oLXkLWot8DCDEJiatP3/qi
sBs79014n7S1l87bZAk9KTqjxG+5puQ703fOgkt9p6aIOD85dPoWDFJvdx6/
5mb3iWvBg7sGjgjpdOLsFbVZRjoA4KQfrJhYGFNaBguYEfbGsYpyKGYfKhVT
Uw7bF8GTUvmKJGGWvbdXvyHYCpxViktBIVCEcvem6gZHVxo2biZXDeiPt5Ed
JYOBOsAk2iGASJSHJN6sl9B8zLbj11yDd6mghKUUH+/cRSmn32jUsguNSzhb
rboW5EcOicdEd2QlOybEpLxTvcYrYKs7rwY2eL9qjVo3GrXqLrztYrfhs+gW
6daI5udR3hbmarLLGwcPHQ6hPKxeu/H79TuOoojdnY6jlvydLUfui+16DIM4
HtaK7P5jwalliNSiwiIBlCx31aQtsTNW7rgoQeZcASWivNwIX03DOaAiVykq
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
GpQ6IK/wTk2g8mAAWValGle12WHMAKQBd4qAFXWkTJK7bVwRHCzcDrfHD37H
e/LnKhYI+R1Yk02uCcFjWo+BFKmzqmJ8iWyWWKdt++3fYcXI61ZfuOL2uz5q
t3+nNf3OGwzf+KSHHnqIXzdGkLEmn4rQoCh8YU/GV4iF0SpHyACzNrgf5COA
wuT4jvdggxguCUcB5/MxYQMveP0Zs0Z8vuf4fblLJVxRAWcXFQmsrYHEY0RY
kzv69+//VaNGjVghYw8jbBVsG66wC6qifLh8EBb2WKZ7QA/ymaOOOurtjh07
QidYH5rxdGcrDUrQR7AlydOCZUPsYC3aOjhMeJ+JQPIjU9RYIGYRX5a/Fucz
y1/L2Afrt4XYSfhi2Eua3nUazwSeCzwkE6Y9Mo+U4VQ+tWE5QuwlP1JnogxJ
io55F2NXRKAfM3Vao4G3Xzz88MMxMtBYfrzPPvuQfkUWWagNCvGm4hJsLorJ
8yyWZl3BCG5b7Q+3ClV1gviKX7FpBWOuuLzYn7LaCJvjaUmvZpRhIc0ApQF/
nVLXAA1zP5A/ZnPT0lW0fSZdlS8FM8tWaL+d19Gqdn8BuiPCt6P+wu6CNxpY
T6WYORtoHHJEMAqNwXpPOCFmSX8i35il6WHHUiQxupqOZ0yH0N9I51VtDGYT
gZZMEjIWuk5Kn23rPSjvq+9dVSPnfRIlGApen9lqETyotMwU1kBHagNPeprc
g0UVVy1asoKx5MVD7piKM/XGE2YNmD1rxWMgukO6+Oaxi1aD/uGuQTePI9E1
vjNr9JrJ29pPT21lxl3hq4fCrijDAhLI5xd351/GTlkx5b+Fgwsnj5szjg7+
Ox1mdHi/3QXtvm44rGH7bR9tKwzNgyviZA+W6oj+AVwVZ//05FYbPzPd36TI
qRj78lyBnxePPPr4PzVu0iQsXlmEYW3nDwkxyJjq3Iwi2qXt233qW/RxCewI
GftwG9gM6Gt1kZO4SMnijD1PseYkExEokldJuCI+xsrgZl9+9Q3ugJ1w0Ntb
34PFGjlz5sx/lpaWGpiDYy5EJJsuNQaN7ayGhEUisqPl/yyIs1kP7usnjzvu
uO8rKyttFhBSDkV706WrL588967Hpl6/8olPW03aCx4kltCpfy1FxS7p/fiT
T0FEHz3vimnP9D5tIJ5BL/9pq1atok1eBZYAJSkT9e8f7Nb2qBrRTHW4bhgt
ZinE7wW7qBLzl+rq6i+bNGnijuV6GxYPMJYOU0rN5NdNcIyNmdniSUgmVsI/
RIwtvuyKIbPGTJgOsRh/4+2P/7HVvvtbbhZbXOacY7HLDUg+S70/f+jwkTyr
bO00rcvG42edwzoX9M9BhRZwIjMn3buYGx+brklQ9bk4otmemZqWZ8GmQeFC
BwaFK5DwtX369MEiYQbhIpAThzTzVC2WmZ1akYf8NF5on1MxwRTNCWIdIR8W
foAFIF+3RBqDb8TuLgU5Mp6WP7owOmqnEgzXSpL6Fzt59/mm/Y0r2KQnDHnS
MuddzW4R8mGsdi7iaCgp26WFnoFokTqJ5romN43R7lnuCHCknvUZ6hJ7gZmz
WS1W+BGnQUYkndB4xbKhHk4jLs3ObJVbiYpXLtP4Q6j142SLZrCQziDPO3jt
SnJFS+cixGTva0sN4qgZdXz4LpaX5xgRmAqsBfQBli1AkHat8lmJ85ISYYEG
KK8iaNXRPteBV3LTCowbHyOLD04DGAsUEVghnu857/hYe6SKTb3GXwXvBU2E
figbXvfjdhMOGXXjQ6sto/iG444/3jQXzOpIrihtZgso2pqXWttnSR+EbZ/t
uaAnvjl07oa5f6nu70DCLx4+4/C3Dup/kK2N5wbjHBEaKMrH8VZZtg3LW2U1
OjgMawsjmtyCDSNm8aCIN1jO6Mrq/oOHvtrz52eSK4hz1fCbb7+HPCnVypzh
I4Y/cMr4U76vvLDyvf0udhy1N16x8orNBx50ICt+6QhQbkiNQRHUoArujEQA
uSPYvkDmpNImyeK+NZNkdD1iSbIsNm2lDOGD4WtQF8ZIN8bX8T48ySmTps+1
6g4rtaXTgE6P9R7Se8SshbMYrCKPCpUyH9WTNKtcwwhjlI4kTYsTsF9ZowbB
orpi7SvmHNKzql+/fh+0bdtWNQcu+/TRC49e/4sFp7969JSz/9h8fEvSk9FX
cNZOFDscoGXDJi76ssXe7Z/qdeIZA++4624e4XDHOD0Aifn0bqRiGzvliSnx
DUgbgbs3CJsFO4CpGrmK07qs3cVN/9ygQQMWgJK24/vKUZX973j1DoZhsNqM
Dru8kgzIp8K+rxpV/eneE1v/qemY5htOvG4wnf+15/56HDiSIb4nP/7Ma+8e
0KFjXA6pvyRI1TCOqZl8/bKHP9+r9f6/7XvxRLBoYldgR1w37u5FuB3gsjj/
MJyJy/paQeXQyEXbjVU3jkydOIlpPHElk9sggshSxc/uaW8ccsghd5577rmv
H3rooazKffjEJSf+t7B54ZZOUzrhMTb2+GWPoMFS7F5pLrtHvL1t5RfYPMTo
kUyCwqSOHdwYTDvLtAnU4u5yR22J95amWTsLLaiNASZYuip8jFZuV8C2spJZ
6SliMuhaWAibL1JPSU9pBXOuDp7YfDYa6jt6GuHINlOuBAtPA21inZ8kji1M
hvEma3F+aof1ZJmZiPMjZqbgchFiRmLpEEAg8ZoYHjwrk+i5SsvVb2UlK7Ma
NpyYVkreftsft2WCMmG8Hj/x/DvdMOplg0erIn0kc07YnrQHhGsmkeNqKQ8G
C7/ClinvdgG6xut2qdhcTJNHkfIHk8whQ07paWAb+ObfanGh4lUlUIcGOrSC
UqKT/lFRWQ+k/ow+gxqzoPDD/SYfWFB06+CVQ4BP/GfpcAfv1RJ4ioWpoa0n
2a+/fkub9K/iYcVPHXPmMZzwD9tc3IaiQzyP7WslxO9RFnfROHskxerTyB7G
TJ02LS0oyiNTEumMxnP2hKTDH0B5N4ozMEtgOtvRcp/9cG/cB8UYm7rO6frS
T/v+dG2fE/tIzGHDjH+UtSqD0yVA/HnzICA8HqcxlDjFLTJbYqG1bBiFcJbk
6SpzZcbi8kcSZpIWRHiLJG3RCNfBNfHzWpdu3b9t0LgZWtxZApqvGp3YaOng
VYMhlx+26duGuo5xahpNd3qXFWRYJJgfJ3ByVmqOB7e+GXNErFWEWBEbT2fp
xe7ze2xvObrdH/Ye3x4QoCHznp3HXjFUje7eNXJIwkPKnO0N0eGUwnN3VU16
Ww8nVo+VYmIpi/FIpPZkh+8tnWY7iz11zKNjuP/wGbv/oBdgbsQt8lTbNHD4
s6P/cjvCwehCmC+wpvxQZ0QdOqw3XrHmCsK5YANprjkah1mUOa6tA5tF38HL
p0/L/BUmhhYgLreka8ecyxw32B3ITt8HH90wbcyYcZBHGj9pylzEqEwuLh7N
zLISgBAGclVjBXORvEtIcg8b98UPxo5Fgx1BPHJjjx49Bi9duhRy+GWTYU2+
arRHI3wG8/Rd1T5V39bbv97YKY9NoSXE7eKWkJ2imF82Tllpmgns8soHr6jX
VNczIKj+otyLE6e4bHU3Q+PjvPh4IpzwSrqFocftXhIE2uIZIhDoWGoNe8jq
qpypNUOVz/YLNONkk8EzMBMY727ajMO8+27rw+w2q5mWc+VKs8VXkIzAfjqc
kygu1hC62uef71uB7fyBs4ZHzaeYXkv4yKMi52N3sSLrNucolteojY2UMsiF
32mZIhVHhe5AkaGCMpa5iuEE/GCOAsu5OAEMmPF+eBQ8kgykkrX1nIv8i+uV
Mnf3iuplQYowWMs66kqTZQFLGL7DyrDXBraYRKPqsdSTD84jF1QhgkDv7T+9
4/LLbhvHgNGTJ8+55MOO43oi6oWiXe0THqeac6kw6TjQMN66/oXuc7r/q/iy
YszLrBGrR/yluk+1pOm+3/5jycCStX0W9uHnIc7YER7wIgqvKoku83cdux7/
xFmXTgG/zcrBV1x7w4hxM/CZw1/++FWycOk8ctMx+CsglhbEn3BC3unQsRNG
hDusP23W0P9khhYjcQksFRqs/36vyXshD8NDJ4SGNTW5mFjcSES/leAJcf14
txBN+CZm8WokSWyFisgRMvSIWDUjEyNeMbuLCAaMpWdXrxGs0rl3vnTnEycs
PmFLp1mdGP+KBJlqAi0ru0+qV454k+/7LT5gs/iBkoV3eOK3Dppz0G0XLx+D
R5kwZe2c9/abuR/EHMEZOCM8CxNPyYMAJpcNZORc4UlzENhjPxE8jsh3C4sr
tqxNacTWnFu4RjQRfda+u5ZuIp6Ik4YR2i2lGbw2MDlcJ+jvgLCPUrQ8ccLN
J3zeYmILOET/Kh5evNfvv/k9OVGJIMXnoGhxH5oyy75OgHOutvQKUWGCGD+h
E5Vn/k+jDJIlrrJtR3YF7iMx2DJPIVoTWvvEWYYs47ynetGyKKyhTSnuSpsA
Cb/VY+CVmTGqWwjYnxqf2XhVv0v64fUd/a/q/3K3y7tBUHc0Hd/0s5aTWpqW
qDRl7Gsj4ZtiXNn2mTDFCRlrztIaBmh4yxcEGeXnEMQucFViW9FDJLCpIMJa
gJGLICi/tgLlSRhkcnQR95EGOff9PUXAuGttKZtnAzKBIcoBxq7LzaaVdrm5
XsTs8RKs62eeSy9hWeDITGrlO4knJuqelKWlG/ER0rwVGJPC7sOY2jLrK3nK
PqkPdyMrFz+hdr4CBVrxvBlPO+ZFTZAJU8WdEXDpjkeCOX8qHDwxZt1jmcvo
gjzwgANvRPJUZVZbY3p4fKdL4mb7/xDDgXpOfInHDXVYZST1DYCnl16iMJBS
hcTpJHflVjRB1VobMr7cbV63AmlsUxxn7YNBKxDavmL8bmt7XZtSbYiT0ATN
xRUxcitOv158x+KvGvVrhADIiFn3zBI1smnFp606t5o8buk4fI7bSDc3ceDu
lXZVcV7E0GHDQbx305AREy+56+GX8Giftr/2iG8aj9j709bjDpo+7Z7bllx5
x4TfHrewN2yxZyeK8eFCSQTu8Lq4+6BlLy0HRB35jw/3n9D1jaPGn/9GjxP6
vnh035Pf7XjRoR+1adOW62xobKCR4jQ2zmchZkf71pB3n31rioJEQhqtEs+3
QYNqvVJGwPF9DA4SiXWaNPve32gzSIf/+eUj6x/5oc5ldba179F+/KSbJlHn
JKXp6d0xcK/rAj/RBUDdtLn/70GbAxFkvQH+ctnNT9+Ocnw0R8Hktt/2p21w
NuB0fLzP1H3oXtGjY0yWQXJi/E3WM9LVBv86b19M0B7MkCbxizNMie119m/e
+M2PJdeUYGo3dZ3Xlc5BfOsRGxDZerKqraAAbBc9OgSWFwfTtnTwPYP/WneU
E7CtB8w6IJRAivbd84uvv3admoaMmnrHxUPGg+rq71X1G7/wi3OGkHyfEGrI
c11aDTkAU4+ZYn4uYtc3fvf+PWffOhA0lti4QDktGblkhW7sEpJvWMgjfHPt
78tFYSCTDx5hX1KhwCR4TEOLIJOsw8PfaYXFcDmZLElrDNGIGnL7dsZXQ8a/
Hvy1fqueWLWj6cFN3zx4yMF/q+hUMX7S3En46+O9lvT6ssm4JsQEWS1E98J4
TYxQ4iFtSWdthk0q4eUpLduhZ/6TBhjeUNcE5CCF2nmUojOLIWBpREt5tZJo
Qe8nAKL9Y9bEcO2mTM2HDbSZIZ4Ba2XTiM5BdMvlqkjxkuoighI2qog2nGqN
jxBfdpojJpYNuR238a6Q2zk3wngsSUApWhm6lIRyc2GdqVD/aaj7p8p2ErKX
qY3oQalOItnAXeF0EPtQykQERsd+R/i7yRQXe39blad7TFGKLs3kk2x6f8b5
uZctVzkW2cnN/ylSCAlJlGLJcCvcHA+KpfOnmwy94RALwwPLYb2CrNAWrZnW
dZOPEGm7WRoMkCU0cwxzGooirb1tIFhgOghWkB6WRp5uJ4/bLLwxyrXy0kUb
Fn1X1aSK38FDWaQtT3HkDDccMplIGFevh/uBJBHAss9ajd8XkHi0O4BFBTMu
mv7Gj/Ga2HOW3vcjrEnPpJ6xZtNjt1847Mo/Nzpmj3suHjn32dMGTXj47EtH
oicCTvIXL3l+GclmbP2Ti/0oDUy8XxH9JpkH8eJ4rhZHObmthal9ioslDxrQ
FMxZvvqzCYPR7MmWw1tbh8dGVMaQ7ZcR5IAhMDjPsNWCq4Zec9PYuavUAa3P
aBr2Jdij4cS81mPaaZcufvZW8vXhnjddsvoSXPeDttPbMjqOZXd6wrcZknoY
vOr66utvwoxD9myXIltzFWNcr0sCKsa8cN/J4x4bR2DMh22mtSFHB7ZYyg5r
EDSNPwvJHRrSg2AsG3cYdv0z1yMX/t4B0zu922la50/3Hd/h873G7L/h3Ak3
MM2FNj+bDzmsm+Og/v6vf3PulZI2YqWmjpsw6Z6zzx0I0gHBM939MNp4Qlg2
9xx9wd/rDq8PxrFLVq5z5ZqgfR4749EbCmIEVLYPHxEN0g+dysxUPGkuAysI
ZcYGj7RNST0weJ1I4k1yLPX4Hlbm3f1/uf+/i44tYsHWq53ndsb3oWnf6TC2
w48lV5fQmscMDD1QA7fy9eppfS6cQCs3BF0kmw3y3riuuK+a0hWvCOolzieV
Vx8M7YJKdD1j4XQUmD0yKHgfzm0Z1Hk8x4ZbWotCaE+iRTFeYHwxC0wSlbkx
XDfJKjQPi5BG7JfWfsJ5Yzm8hCQSvywvQX2VEfKVfMgRQoGoYUdoGZUbGvYc
PAeVlucgjprGe5Y42eeolG6BDikBZzwtyWgqbRG6JTJnhJKzSAYOdxtNfObL
i0BfiTRFEtzJkxOhJMKJUCPePfSesqnallN00iwKKcbXWMfCATnn3O6eyESo
R9wdmHLBT3bjVEemoMXRaT0cy9lcjTgZEKi+2PO63v8qubr093tPavNVozFN
5ox4aLTG4PutemzVN/UPrs9tDInCVD/bc0zPrQeMPoA0cpgIuFjQSNgMCgWL
J+JIRIVBjpm6fhriLgjdD1iz/jW0Xrzrqim3pbHKaZFaUTzOJ6zIDXnQ4Z8G
LVu+/KtGjZv8z0+u/MmKKyfOx8A/bTPmsC2HTT/qmwbXNr5m7pOLSE9I38IL
lZi2SP9ERh4wo+Kjexg3ZS61i4aROeUEa3brpcsnbuh146kUMqa9+B0IXdMd
3+/guW7slOVT2ACIgCUrid/Vb9j0s5Z7tmKmWdyOenh6uAZwC+j20mtimNAF
wW55+ZZv6o+uz1ATLtFj48aNmvNG2ANlWZyIQfes33THgJUXJDL7KJw5jYRq
weVrHOne2x1nd+SOxMwcuHnzZt0Y5Ta2ah1k4mbJEiSuQSU6QvZ9+KUXIC6b
es48+fdtxx72z/Jh9V7+2dSBm7tMOf7tg6f/9Ne3PvUggGm4laPdUmSHZxr2
nk0gNyAkIRuWVdB8V5E7vZ96421sLp4Fktp1xGUxKKiStM6Fmg6FS+hHYTS9
x0yqps+n9YYFIvtFkMx6vXhQG/+SavO7qtFVCy6/38Fh3+54csd/F11Y9H3l
kEpwb7CMwORwvBHSDiF2vWvrmxEACmXMltDHsZhfziULbrwjXBPOYiSoIhyb
zryiSLNoonJ120iiicL9dQ3TwNG6hmz0bNfQSgJ5XDC6OEVTUr6MetmondSk
aFIbbk9jaOQnqQeGpTKszdNIYiZMY1TCvWPUdHR4dps7QR9jt9kPRCiqWWpM
obDbj21qOUzew5d9aHkzlhBTmYu5HZ9kSJuhcXV48iFRsHz8LC/cRRIFxi95
7DYxpiqLNGAFrBVKPBq3ChYWM4B7qW9hqUdy9a+N8zFouwSSrjlYquCyq9mb
kkqY+IR1pw+8anvzI/dC14g/Nxzd+JgXtm6ZMmHy9LvO6X/O95UHVN4+YMwA
Omysd8TtfP/MxsETa5qLsok5DHLYY+8l8eDHyRw9r5AImM8SQiBDlrARPQPK
BpPWG3vM7vFpq5+3evjEISe+02GmgxBNmnPvvTCEgBCBFh/MmqDeQWtkjlFi
LpE2UGwmiaeWu+bV2gM7hFwxWKwgalXISOBgTm830PtFRQ2z+9QxE4/5e/m+
5SH1VGZBQ/AVtx502OEsEPKpYq1cgExgijGtriJNNwWZXSyRqUXnyq1cieMr
Xbp0QSkZECfAdr1++NG9YePTuHs8m5W4PY3Z1qk2RihKNHiCrpo/f75IvvbM
ULUR6AdF5FlB5hZBNuEBVrpsW1YEl9afNO8CFId+vVPkAbyPE/zgCrA6Cy6/
/HJ2DcJ7mFraSVoFunK437b9pnX4ouW4fe66YOnwfFE5AgmqgtbGwtsGJHE+
KbxH8hTymewjwhCpz1Lrzo8SmLqrjUT4XdalCMJf9iH5DPh9FRSWcYdeEsOb
jZt8y2TwuH5T/4T6fy8fXk6ZZTWk57JSBZ5XYxBVf3g0XCOg0KpY5ey2xc63
Q+ljyEtR+dLSYpIVfZrUNyQX/xOtj6xDhl2tja9SZJcsZmmY8vHMAjXZrEuJ
7T9UhTD2hWthEMxKxk1FnOovgWoplelP9xjrroy7UESyPmrlQikZTPIWIpRs
6rSMdP/sFoODRsx2h4GhJLgqtkgEgTvpHvbvH5h7oTmhdqZyJwEEk8IYu+Wk
J6LM9K73wHldudrYG/CaTWPFrkiLKxMqzMXeoHeGhPqjjkh4NZuqUKFRsWIx
sd84j8w+c45NANS32DWZgGKiF13xtbJAcPUjNBDasxSbs9Pb77wDRYjWNQ+c
OXAQKEn+UX5N5YvHzjhrS9dJv8BhFbQkH7fv2IWHxof6nnPh2Dk3Lne4y3Ub
nldqkjQ+Jp8/qhEseJyPScShgSU5jDMLWZJDfI6qn2k3hojDmaU+roz+Enii
3+07ad+Q9pZAJ4I8GMCzx/385DsvGTELFmLlkMnLP2ndviOsg/N5FLVNL8Q2
l7pg5cY1ubqU0Pm24mM4PjOPn3b9ZZ/sM7mNTYHT7zBYuqrNB/Y58F/FvYtZ
qoO/09VhifuwefNvZDyarOkaEUcGBh9xvmgRZWH1rzFzRnYaQ+bsUHDptw7t
3O21I449Ec2dcB3chsocC8y2yZbFh/0mnACI49G8to4mtqwFO+zDNm3asFST
eyNO58O9Qd8pROcbW0gw0blYtaSGKC58VxN6nFsGIMLu3GxricA7HTp0ePjE
E0+EdDx/5FHHTp12/VJc65O24w9GuuflPuNG4j5o5vj2oVOORSM45Bjh1uM7
EgStY/u62XJJ3B4roQvFFJnZtI6w2zN71GiRQkmwEDGul6TOJsX0M4QnLkJd
kolEIhTnhkeCObEllpgZ+s14vebUm0/F4on1WjvhD3tO3NMZIx0LQbAiEunG
wzYsMSxxvqFZEf2cQHBiy/xqY5dyml3PubU1NKF+tmRIsAhS/FVk8RdBj7kc
lE8Oqa2pjbUJr5MakLSkERG8mE0O2n7qnOMElr46tXH95Gnbkwj2kmx7sXUs
dp3YQIJBu85GIGmOamwYvMdgP40yG8ARq2Lzez4opbw/uXjfLVkPQUVO8uS5
S9J4C3TfQaHZVifmq5W5+AlYK0cqNQil87C1UxtmniW2POJaxcgQh9VuHlyv
KYOkZrg0BmmEBvrs9Zjx5aakzuq66XebtnTq0emL5ns3f6fDgR3wXH9s3qIl
y1jRRPe5n/U+TTJApVCc73a79qzv6o9oCmW60w+p++xx805GuzwifC1ghUTB
adKis84eZ9zCLu+nJP9xOkPLAXTbFYvn3XfOkkuG3/j47e7mNZIsUQFswhIa
HhLRJuFvFSMr/ucnw37yUeuprZkzI0GL2/QbX3wV7TPgQcCxscQ/eA6EBhTv
aDtaPnrerGnbW4zd+7OWE1tF2p4YweIR2fPuyi4uxWXvG7jgWgpXxLVWgiEI
zc82vLyBKdNQF/HDDwA1w5R6wjRNmaaxK2mGHm4aZpM9qpSBx4oZMQkQM1vS
/V11/YbwVxwnpLMbFbbvaxIxld3oJBLORf8uLsSbbzJU2nTHjh3gQdzUtWtX
VohTOWAHEaaHAR+/4b1nIA9AdT9x0g0D4z0VAMAiftWFerSA26aKmGtGT098
buC9Dz/zRctW+3zZrMVem7v06LWh3yVTfqxTXvmnPfbc95WeJ5yOWUSl3feV
o6r6PvjKBhY+WpeNbpdmuZKonEIzN+k1C5uDzQoxdp6WbOhi288u1jGkhAhf
KCPi/PCvqkA2KqGosQhCJdVOrj+TyAEii7JK8/qCrRIj8reKCysoNtj2PZ99
/9k/Ne7a+D+Zhpl/F9UreuOQ8YdsPrDrgdSquXqI0JyTQcvrhuKgVcmYa8Po
DBRRBjHJnFifAZGjXkmaMTGqyTru7vZ72mFLLQXtGhUw1oR8VYSCmvXzcAYy
IbFNst42sYOH3jYtnUdnyLL6eaxLy/+VuU9V4Jlg6b3/pw7GxPAnj/5qL+9F
quQVnm67KDmvx0WHi5hbwBJikFqHimdkBItBH1y1jfyZEHDWn5M1rLXMAoNT
7IROdiG3eLI5y2yCHA9BpUzciomjZhJK3TM+GohPKG8CVtGyX2B7ERsJa43v
P9a7d28eqchSqwdNOt0IikMljZ6zdil60/9xp91BlJ4d72wKGRHt9FaZJbYy
jxTqeE9ADM2g8y0BHxlgfnfAoUcuHzZ5Cd6fPWby7Jsuv2o4TEha9ubbet3q
fVe1R5Vdj8D7WEbiDNp4mBgMALeEYXMVG0o4G2/qBL3LM6KjSZfpt6uuQpzB
ZRnZ54GMIS15JfLba8PTz3+0/8GHEzpqYHJ1kyh0aF+hEfEdPBI7DGinJNv5
iHW/gHKas2FZXhxDTak+1q3Do0OK8UM2DmWvwISAjw2HWxymESv6b2Zo8R/a
ju62aMzSO2+5fMWkB/ouPZ8s+/KU9fLFJXzcZr+OMyfNXozPzb96xJj1x5/Q
K7AelfNERyVCfKoF2mEL6Vh8R/mawH+OZRNKiwpWPyDJQA/fd3etCdRgbhV1
g7PvHVlD2CXAor4sJNWmzzHVP9Q5ss5DJ519El4f9NY7b/2jrG3ZX6o7VmNZ
5BYl+AoPMGQHwr7VCmJ7OIC/hvHzPQ+nNCw1STwwOgFxGDojsbZniw+Dtqae
F/RcUnsE/UwJ3VCSjPF80i4obh8SMIrb86arnh8nLxIritvK3xILfQVkXGUz
LcxH0w+jgcTf+Dh4SkxYOc33J5+44IiuJFQsBiqGoNiWrHi+xbZ0j+++2yLT
2ZpTSRvwALZ6DoofK0nXick4fIXHulA8UJxY0Luv+1tTrCBXL96TDasM8hva
CDqC8vvnb+Lkh41En9Lm8p1NilGPmRR3cY7GiMXxxohOp6o3YhsDeCdHS1vv
Pvuc80CZj+8++cvTB6DlIM5Mbx0xoR9IZpHng7aDT7z5wNkH7WjarOmzPef3
/OUjrz+Ca2m7LDwubg3XnEc8cozx2KX7xZkA4tZvGz5jJTod4nExVZBO2Tcu
sOrob/FKR5JIICIrVn/exLl3vt656+HMdrhOleqNxLMdttj9tS7Xdcej4H5q
V8sw66w5hBY9ZPPWD0JJtx7TlOkgHz4UEuFwn4sxbG/zFE/06t2nz4aNbyQd
lEFZfv3Yu2/o+8hLL8MuUJYtdwP7DHKT0SruLpUCT6HWnbSUIxrVoOFkYgcG
gixJjLTjUWgZ3L5QjCVm0kYtmWyUbVZEjQ5FB3XtM+GnnOKVmOhC5+ZTF/ho
gHht1QRyUKdyt2Kt/lq3dd0Rs5a78uQ5w9cMR7XSafc/er+HI8ujlNicJ6mp
HTmG6BpWvjMBC5NPNDwjzlQk1DXYkAprtVwZ+FPr6PhZK6jjZycnO3570iaD
AfVknDmJ5ql1suI3Kjai+H3YqSTLbmTVVOrXE4scXYDekREV1LVwNYIsQs2D
4KvpVuAZlXiCnGUUR6eL2wQNwcJoSIIrumwblTc8FxuD4/NiMYoISoIaDsiQ
OjQaoSFI6J+OKxSHwWbVMMqNK3hg4t+4HJAHHpAD/E9A38wX2RYJTGLroatO
rtZs0BtS91v64rF9znry5HMuWXTN+Ou/rd+g0UkbXnzH8yZpFwV7jrIRzle7
XN8VmbinTrjh1B3Nx+y9o8Xo1htPmnTNZ607dH2r63m9txwy8IhtB3Q8iK6o
PhmfKO04oOfA1r///Mu3DuvaY+15l01Ck+8NvfqcCuWj7G8Rph8DqscWIDWa
cw9EGdWHnoORhGtAt5qpFgYOGAZmwAn3gKr/a9U1Ddr+bscXGlioi/eZ28M1
fXWVyiY7RDFirdYgT44HR3KoDWz90VVyVxXWhV975q+GgpHg5T79RwLnPWfa
wnttnta2BYXsYlSQHwWrQIi2dpjZCeRaGMz1Y6fegMHcfuW4BZ+36XQ4zXRS
VbjawmImCRmDdoKqWDUcA4ghhsLTLYPdQ4QPRsYtg00LNS36v5iMnGy65XwU
DQHE9zHJLdtE1Q4xA25HqcLniYOHKlkxAe5dumjVoq8bHtrwt8deeyyqyGeO
HOMyKb4DpSj8YhLkU8LcCOpGlxi7EnpMB830B5cYTy50nOJNq7K3dfx4wnZh
LvAWMxFu/+lg6XHgYfBQztK1zZ4IVkcVxCYpTTdjYPiOt56q2iUdGi0z0xNE
pP5L5LWUmT+G/phJdnpMueIxn94IKbkLJsfWGctMuH6t5DDELOjbrNzEVfC2
BPFLMeu4MemUcUgjRIM3p/8tFwqD8+VbZnAM1mrCqwzXDMmpL9+DJ2kRCK74
TVnGsXNwnoYWu/rmOx7m+duSq8D1sjly53UmkauIUWrgx1ITjWP1fO6dF5/6
2Tk//3zPn+5z9dK71zN4ZGm5bIxcTGd+frpIah0uxPJBF12CHIXt1YTPae4U
I4FylFdhsSB5PPOq64IB4q4G7lrOAgi8IgsKcLrP/3zaYFyWW0qLsfHwToPt
NCp4aNNTOcNAuhPYfOrHVT68AnaaR1w6SwZLtzmNDPbaWXPmsWxFQ9s8vs2Y
cP881Fe9c8jUI0Hmhy7f3zQd3mbF1QtWcN5t/w4nqg3C/oB4Yg1CpVkppICn
SGIF2JuO0s3YsZEkx4MDPU7K73bUZtu3s9wSv2v4gMwuLpYp+sT3d6F2+6zl
z1v+vfyUcuJiSboqnmWGHqPbTqoryPxpOV99s6ik7Wp0BR4FSsE8fMqYWHFN
mtx2waG2vA7tonrO3VdVAeadOWiqxUlByvzj6SUilSLV3ANCkw8bCQHW2B4P
Q7wDL2djE2QLxteu4gQEBvqAfquwTSkZcrA15QzBOHTBYSLarIkUz/ru83FJ
5rJozLnEdAfxu9bPYvNa5LFpUePpEBhpjNMhZHz81mkY9/9m8UgNnoUAmqRI
zRO9evUCIZTdmmnwI+zDsvxcUmUTZ/8WyyaOp5Z4SQZ/hhKUuZCvRCRi5w+p
EkVuGvpOEDtfTZz86Iyth0w6ZtyNqx9d3XfFmUxT4m800ZhvrCliInwST8Jd
ETa4v2WsBNX5MSIfDdj9ju0EqGXvP/3Wvuipuu2AqQf9pd7Ihk/3mT0ozXxg
DlWt7UrlG4LXSHHMv3r1mGOe+WCjPlKdJJG1MHAtvGPCz/00Dp4X85f4im4C
2nF2/cW7tkghwis6Xb6TL5Wv4BFccizjow74OSi6L1n7q4/EeWdIA+9ajLWt
ZCxYk65YbKiREdtnZS2goelS0SvkR+mA03MgbtLjmYaLcg1NKeQYwnozon5t
K2ECldwBXVUJqyIsRhff9TTeKtaMvzDwIV52Qn8F0SMZbmf8K7pFQqB18EkL
K8zzzI7lINFnOLNXxAsoKMa2PMfXIJfuggel0W3S7WIYPENiC2mvQHLj2k2M
r+N9dxl5r949Z97e75FTbxoA2A5wjtzEVI6yg95778iNz7+AW3zY4ZDuOFFH
HTVfs9X2d59+8fG+rdsAHDRq8W+eROeKv1cNb/zKsRMvQJdUjAz1yR/vO7nN
LYNWXSQivducrOp5Mr8cFzXSW7r9HhM1tzsEZleXZ268woHF9gWIt1UIDFbR
+t2psmeTiSlLLDEliy/xeyF0SlcZBZ4Af8MPQ0n4PVfJjgOBfRzZu9Y/41GT
eyeODSPGjMWvuneLGNVnB0lDr2kPKLT2EV7LQ0Xk6NCRu5KMM24t1BvzxAV4
dUAQUsadNDlRl/V3LEKCJbnvVzdMQhLh7YOndQfQ661DZ3WDVB373NY30p29
CgtUt1VzcaC62zsl+Vl3hYswsG8JsOHqCw43g5f4s92R5OOTC8j64YpoIvx6
t1nH2GMvgbH4VJy3cPrYCVNdOEL8qKzueG93PuKEF0761dgVI69bvaNFq9Yg
xMHz3HT5quG2aKHP45ufA1H6WY889ybgA0DROQ2Zm+SvQZAa6QggGZIUqYFa
sQ2vndSoA0gYj3QCEBJz0lrURuE9Q2Y2J8WZ6Q/tUSZdZN4tq7KNyaf1ouX+
cccLOaEWPCfqjEEly6hk2UYYI6SnzP2ju49RHXwdhl7nEYPCzaBeWLnOPLIn
Yegsl8Ac2aZXekDA+OjR2Iodi/th8SK+1klmngdWhPomznzwlrsH3jJk3viV
yxiAEPGoWH9q/ysRCwYq9NWf9jgWkt3rqc2vgj3VUiw4yy+qe9daUhftgpks
Vf85hS9VDq5JfQaT3PBmsKy8Hf0D26us/QfbPyGIA585ef3GN28ZNPgiHAeh
QOlTM/IeP4lJxrt5XDulzUaXt7Z+BCP1WucuXVcOvOAitpX5Ys+xbcG+9nGH
MUf/td7Vzf+0x7X7QlFiZtD8AMRVWEjZbUVMnLMjlyFdgmBZnGJAkQlAg9WQ
PMiR7JETY0lgqQDiJLAFMyjvUb4f5Sokeh+XJwSX2DjhCASUSjjH3DcOpCcf
uqKZ7cPjX1K/RN+5R/exXM/V87Puha6nt2E1AjAtGB0mjcaGcDjWYXoWxMNl
G9pu2GzHEpLoi45moS8lptBVAmc4f+7n0KiXfexzL73x3v4HdBxxw5I7QXsz
ctEDj4CybO1Zc6/R+GDmi71HdwI0+7HT5/86cnKO4LLrhI2ZT4NVuUK6ocTv
tBV6prX8N6wLxz6V+ctAWF3oMuy/DISfjaKoxPEaT+MMqLznkMdkk4F3PHT+
gpvsQcbyTsYPMuxqQKYsvffe1H75ePMdPvz0q12hb9m+x/iW3V/d9j5WIA1K
uE+Q37iAEe3hd6V8QnuehjZ9aZSC18kmJi8BXsU5yJmGSeWd6Jz9eCxKJ/w0
eXtVWEvKCjme1ummM8th2T+8qF4t8pTGHqNuOm7jq2MMAUp0K0nTHqeHMRVM
7cUbmlumWU9K3zmX11we8Xz1kk8fs+A4WFNEo69c/tgT4XxaHKfSguirI5zh
EdVFpsXCNd6VVnwQZXwX1+E5i2IM8waxtQANfD7O4AAxrwy+ujtGm12JS7vQ
nHslfyF/An7wu6ZbcSc8BdOguDsXyFdcukVzkeJ9qIbTTjFYi5X97xyQVD/I
4BMDeKetf2HrcSbKmDd0RVML+UDAIAuZBHkT61tOsSVOlGJr4S0mwWEZ8Eg5
Colk6pcMfUlUXk7lGdH3GQmJWFV73FGNHICJ96BjaiGLrOb2RZwi/eUs0+Iu
TAISmRmJbGTR9QVyNqqyHUUC35Kkb7CZ4Wcg+wMHgQcGjFDd52RyhTpk1BaJ
EY8FSo5dUOUYUEV+Fggfp4nFGTxOQEHxKEY+xs45fXf66nQ+fKGwakvTYDSJ
gaY4zkCTC57njq5qD5PaS2ErULlYQviD3/1oO36H2OM++Iy13qwhYUE1U2W4
roNoyONHOP1Ncg6m2uiWctwK79Gs0yvAZXF73DaEh+sR32QBh2QAHTv18VnA
rm3qPudnb3WefhRG9sCl0+78sfTqCvw+asm9GwuHrljz4s4T9+rHXyfWsTbu
etFyKdidYhsHZFFBQaHzgTO+tDHsVVfFwBSIEUuLZ4DRoFiyLla5Ioj5YEJL
v00WG+wmbAlsXJKZQrBnyv4maMVi1Ag1TiutZFmFxmOLiMKLwkDqEPWOrxEZ
wVabmJZtdmtXslkgc/jsVcMKVabRmMFyikjYuSpzFTLTk2ZymEUuBd1l/1ka
cfZs5BGFO5iftZ48y4+yPHmtBc+FkoI5cRKmgWf6fDAnmpZ3J07ud9sFSyrS
6nOLDnhww1vnPvTU5p2X2JRms23JIbelUwXi0JcSwIRXLT/7zO1P3pIksfAl
eF0MLbFXq4S7GtkCEFhVpKBBNnHX1XPuX3X59bf8s2x4XZxAHup//fhZc259
8j9FQ4t5lk1KTwvQoTIn6KImtPRBiBMS79Aze+YnIbZjgpcQU/7E1c6iazD1
bzzw+orv62V7QJKINXD+ZHKRkpoJFnGwy6Wc8Eo5SOYyiO13WkV30ithO2K8
uFKgeamkK88+rFAEPPAw/8Qoj6/u0jxwvIRPg0Z0Bsh+wzQY66VxKcbmsLdE
XzhOQNatYxGJiY4wqhbiOZNce7lICRv57q5r78I8esplkAQCrYkfp/+bUyLp
72Ejd92y7XP4iDt/3k3yIyfdeOdT181atv76Gbesg8RbY3nE61s/xc1Yh4Td
hJ2olqzkxx9/XH/ORSM/6Hn08R+e0vdc/Pt6n36/rv/tX75jjRAMI+wxL8PC
IGxKuUxjxIps5OymiQvXPtN/5IoHLp2yCk9567XzHvzNsNn3PX/ShGu37zOi
M57klZ7TT3+w38LLwN71xmGzf4pY76auc7uxziNxDiWjlIUSUOlgXwxIBSTF
ouKIFLCBv6Y5ZY2ZHJJos9wtSdYgTE3pdYUIUqAv9ZJLMBoDVGnVz5q/tbQT
bMFH6gRbd5J6LtX8LfYW1Fl0xly7WXwcY4MWI7i8VopYycoXvMX1kApXDCz0
s3EahdYK72AA9qGvET1ByDDx4fQIbHaVZxssnzu8HhokgSyCCT1qMA5IATQs
kT++TWHnqI/Ow4Tx0cnbF/fRA/GWh4kwymJgIk3iMJFxi+5+ZsQtq5+fed2K
J0cvuWfjLTvfXzniujXrBo1biU2LzfvgpZPvfva8kbfePH7h2qG3PvAi/MWl
Y298CLsO14ep03W+bfiIa/82bNx1NSvXvlZQ6P5f58fR029+5pyBgxdOWvjw
FSsfetlWd+BR5at72RjSTRMWPrL6qhn3vn7alUseGzThzmfOG7kCT7TxnGtu
ffjiSXelHT8JNbNHI+Y/MKdw9DDvbN3hC+ik8KUO3ic6lCJrE/I6SvK+Ouul
JZJsBmpTMgyZMY5qJQaiq19lVzLTeqtObdWSshdd+QPE2ZLtWDg/9iAqK1jN
zHBqNwqUkG14ipOa0FUvcHtEk8Kyvwo2izLATFkQH4YMH4MpEhsAEHy97LAM
YTHOQREmdWnzxu3FxJ4tc9MtVpmzjUJNKBvD+LDeTodIHrmSNYV01Dm4JD/Z
0zMKdDcBNVHQgMclAifWDRq/EoYFuwa77YWzhi9/t/fFC189bciSN0++fPHL
fYcue/L80bc/e+7IFfcMmXnvqBsW3/71RVeNKXa7pcG/R0xasOWEMy6eP23J
4zst42uDVq9/Y8xNq565//Kp9zx37ogV7/cavODFflcve+eXlyx6/dQrl8CO
zZ2+9PH46Uzc2jLMnj1RxKNtQozvfBZX0evLW7QUDPFOtgSjG1xbntuttUJU
oX4hXYaAv8z2hLIrbbugkXYZq+DLL2tyl5T55tGyOTIM5boTS6FzqMpYfo9P
YEOQZ5hoayfHsjsyrIi0fSJ4yCQxJ7O1DMA4u/Km3SKus7xnrqoJAQ0qKkvJ
5AFrskuqSM/I7xJMT4PPBoIUXrzGJugcvG5Lza2l2BgQtABRuwzmxBklKDQH
Rw121CkpS3OAmSOT6ReDzWlzP7qp7CFRN1UZlPuScQsehrf21smXLf79sb+a
9/HOn790PnPGV4ceeWLN7JvvL5AdU16z7L6NP7Q76IhPjz5/7gcnDLrx6f6j
VmC37Nw1zyKewRNUg+jJgLnfQqoUAa7SHGM0NAH2ZBDhfZDiWQ9jdcKTko5O
DGkpPAj3tcTWaW0iucokatdWvrb9In4wydjn8Xob1eaRbp+yVSKI2eAhlpKK
AUJiPUQBp8khg3lat+tFUqqoNfhE5L1OS5syghjdOJYAXrze1b8OkZDfv0SU
rRxzhKtUN06Jd9nNxglzUGLbJxA/jRmVGEclxskxMCDECkPL0ECmP4dU6BpW
I+46EgpP8Xd70e3zKNjSpWj1PPbaL08+o+bmVU85IRdRz3xy/C9OafHH7V+6
DytVG4+0RDanOLp4bMKMHXmc+Ir+eKg/slllktLytNrAUMBXYYq5uAlTTE0c
hLaOb52n3ybzEX5321ICBPHGa3ODt+XRW8Y7tglLBiYpaAcFybCjJvNGbNBx
ygUVza3i9sTbd+M1dTKLwWRUaAAm1FIeyoWfYXKd3cXC+pkTRe9AyR40rxoo
Thdo23OS50fRPbV7YwxXkDfZ7YBD5MvLrhk5umbKDXc6GS0SSYXkvnTK6We6
T+ytFzxYt19ZPG1op8H30lQxy52+dHRAtsqZMMEEHmROcDwFxAlmwZafYGU4
tChyNusmotiysRPiimtAOGeLMmHY1x4o4jk6MvFD0pwykXWtYjyb7n+uGm88
Pv7F61estPquqXR3NV4X75oqveTcOTTjC+HwSUkkp4A361jwJpG+MlXz5sER
VxFjsyITSCljTAxfJ6U7FSIp3VVEa3WFWF7EKWUKUoW005YtWz49a8DFVkjh
dp/06GOPBSFFVX2zZnan4hGYoCcrm/XW3HlcsxB5pNbww8uTo9zwXXN6A6FV
nTRsLLZs4NF0pBvMCnIK4khl2xuEwdpZQUg9s2dNMh4v1JWKD85ohS1Fxeql
lKIG52HFChgslVFJbpZjLsk5zYMKhDM42osX49kNFYGvxFBIfS5oI3vTMiDF
Tu/uVZdkf8P20bJMNHhU+lj63Xz8Davw6J4pGvjs+9c88PGZ5w6qmXDdiprp
C1fh38/OveCySdfNna91sZVxS82SL/zOnA0mDzvTe0OmAU1a5J/1XTZU56kh
lMo9LfIvZuXNN02fy+IIRZkuvVKeuNZr8XpVC9wtDNRWGU/ehlczwxxYp8H3
OKwJTeNsvsxpZlmhsrTiPYGtbN9uTrgZZkHcq00ip5JfqEfoqO12RJZYDhvC
RQ4UWmYoVAigGP4sUF8hH1IIjThQiLkle00F94kgVWFwlg7DFnTF6TBY8ASx
75ztjhDAQHeE0Sc8rXVHsIv8mggitrj9tm3bFowdP/HOK4dcjX8Pff3117W+
ryQt8SEORwk9J8wVE9pQeSJBaTyKLI6mjvG12jXpiZiClOi4blkSAnIpWBtm
FFCsmVaRhby6Qgh5OHyT7RnIXR+MZDLilTEM20eFMQwLAuPfeJT3AnNI9nwF
OasgwpkqlJFy2m34ap7K5gXZAIJOq0tyX0w5XRtexkZqSKQrdMlV5ILBVfEx
rk5tALpDw9SyuWZoD5pa+U/uRNn77hRBsmjjuWCyA3Ni1HPB850j3+Zmigb0
i21Anzs90X0SJVzFshnMtYXQ1JZX0Kg+XUhOYFxne7YgidxVW+gPScwI20vC
dpIC1khfmYUaMWTA85I/uBa6bZCR/Xz00W4S5SxcTJYODBXP7yxuIbfdJ59Q
cjGmiJRlfN8W90p2JCP2QfsLs8GIoLS9n62xqVwILd9vQ5Kp5TkLpGvE4cJ6
6ZxTwbufzrvngfhCcZG08tri2hgthqeXoPY2ptqJAh7Nve9gTvnE1bWzLuMW
bgoVb+Xpg4Jsuaiwp+nUqa6NYs1tNJGr8jScCx1V3NO3YpUTr+8LoCdeTCfG
6cRI4FzFWCHbOM6Z8IhcFZH9l3VwqqIhShg4FoQ8IIFFVkCHVNE+qiIVqQ49
hM1F+aCtzouY/bCgYmwtqz4WFhGDpAtg42pJNa1u/g7Oy8Ng713LxpjTw+jr
/t8wqdtj3P/BxFIdpcWU3XfFAlczfop1tl2Oa4t0Oysuh/QirAKugfHheRRH
yUOoaCoqiloC0425KOIZk3Ff4iJRjigssq1TctcUbzUNg0IzzUCULYDh2T4L
gyLBqwa2t2CowJJWVSTkwSPbqsYkmMFTsik+odp58016TkxE4ulwVUwgd4Jw
h5UEJiWB7GEG8ZCyH0riTIHkJ5bpS8b9SOVHJsL3LPToRcLVJMJgcrDUzs4l
0hABdy2en5z99DFs/N36GJBn0b5VEKG4ZyMlb7mbe4n353gruf89X0eOeDPm
pWWQNNuJQ/cqp4MzmRRGLkiKIytYDMrOfj+JUQfX4zHSHeoFsFVNpC6PQpBS
ykg8tmwBI05aRQXVtTOC0A8lFtdBVhqTW1t6/bciqX+Qp4KMh3YoYWvHjY8l
tGAfMQ0TRHhTc+FXMHukGsNKaBwrks7zmJXsGgZ2AMIlnYt4WHBT4Hrn66Yw
jK0+QsaiiPj9XKFe3xnGRETzCTljsTDV7A7nFlLrUNlvEguIJQh+TT5hYw2r
+p4GNaFYlaqZKWKRVGn7igfB1pwZdIU05Qk+SC70AcTAZX5lHaqhXah2cR3O
aV7Z7Q0ilYLidjTE5AC2OcNCJ8EltBOM4lGbXRN0at00AAeJzO3BFttKQ2+W
ZywUQ2Th6aNurCqBzunuC+YRy0CHIAn87J727OBVYQ4JSNLHsN0E4uFdH0BT
FZhHcBkCQC3JI5oKNY+/lock3wAxs7Bk1EgDD9FWWz5fzP+MoMMxh1gt6Aed
A1wRC8l+3XgKhj+8lTgsTCOrIzC4XUklq0TukK/gDgyCWe40em0ud6JInASY
RLGFSUDkbBctbHbPxyJKsVh6xYTwqeloXsJDEfmpGU03kVPrLhB4H3cXmLbC
yCUokKHH41452pbCmPTlIhK3Xa9tUFGz+pW5DnOYA1iwsGGEgpRNRrCpArVr
ti+QFAvWxCg/nobYKcR9zMHI26KZwejbduu5sua0T1p5m1+VbkTSXPuvXJRW
oUv2Sy8xEIZHljhovTjwQPSfUAzgOMF25Ja3hKk+jL5r2LusruIeZ7cPVlfh
k4x7MkvYObgEaZBWOopJLoGUVGcsTECJOsryIibWZbSN2BhLTDm+cV4whYxK
5lX93Szb+ueK8NL9x0h9hFcerTLOniAO2JtvMlyLWWLYm0yrbO5hcSpa4F5F
DBWtr02mE/4SFyHIgixePgli0ZTCB8WlX2fFuNr6+HFKJUZg2D+BEWHfAlMC
UCWklsHV6bAES1AU4gmS2NDYJEGiMayvLRzCo9vcAiZBjzy1AUDT/IeOInm2
vSATOHggPAxL7Z0ObUMLJfsrSsCaiYRhPcyoWTOfs9qL21SoZLmDQ1wjdxBY
90QeYVzm3kXpL16MqROgjEO94S2eaGz0zO7gaHFYkZWMkNErI+GBMLCLsBPT
4olN1K4n54UzkbxwoTOpGdnH69Y5s6YiKnAfzwGZSBmkYzBk7TYQpqbel1/i
VThnlhBBwFZr2FxQb6Jci9gP1Ze2STUOtj4+DTtI8fIh2i75+Ra4S6pvIYHe
YgoMZpdZBP18KY/hEEDadBwAnHYVmc1NfGkC6B6wJmH0KsKa+cOtVVs8uXnt
7gPWBdPGA7F3H1pRYIQil1Oq7XUspAyXcKffWUE64vlzGyvAaLDTTfrKs96J
mOasD+NCc5P49iAqo1+5fxqmmQaqQwzGmoY0dh2nfkUKGpAv3u5R+vns/WQd
oTT+wRiKlY6KpyEQ+aeBYlRNRhAChknxQnEDqtJ8GYZGMd/Wl6HmiwEpnRJs
HZaJiUeCZgieilcV4LWX6zZBeWVzJGaYczFqvyQtnqyOA2aXq8DdnneUu3le
Pg3JYfP2aXxz7h9+wHLZPKvMraSQMVJGzi1vRxKAdWq2HHM03KRMfDDKLfpB
yiNxrTjwMRDvJKaucUmb7bK/k6gkK3X9oOy6v8jaMBEWt2w8MvGkgU/j7jyL
u6cTcJc7QVvILjuuia7JJvmz8VPV9hXUmOwrZzPw2XFL2UiMR7ofOddVk3Aw
7kiJxRANnobyVLiMYxT341FBI0aKHgxTYRQI9/v+omttjR8ZmYO1kPFbjs4I
5aDGNGxnPvykBL+TzqAtaneYckW0NSxCr5xkzZaoNA6XzSIqFf+nisLFPo0M
NdHLtMJFq4H3O4cRUJ/y2EQtnSvr/YCV8CLbedcEyNM6tfPs5oRLBZzICxKF
kEOSisqadBuOdEpCfXXbhDrkYctYhE35ZkcpFoW46TmM5kduHRsJnjjekjIL
FKqija+FniXu/3WJS8Ms4OmhxSlnvgWe2u1A7e/AWjRH7GPA3ZLG7GexRSqn
lfnG1Dlq0wy0ivo0Xz+LO97IOOtimcGRkSZT4WAYntBzZvC3KF5mXdPEi1Eb
Q+1dZBs/+XXNJ/W+JqLK7bnb2jI8bZxjhaqT0VpNcFSzwQQD5taFsZWldlFY
Sc6oMFUvrhOaamZXcdiAqkck6tYnYtc6bvngSgUoVkk4KV6RCIC97ai98Tc8
HotpCwy1Ph/ftVp2b5cmxcW9N+Eyu05za54z7Uyt+hrD82eVlkEY415S3sF0
1fkEVxC8kzZtcXpMOQhUMcRFvU/pqa219GFBTXIEdMLyzsWrLAvPvKuVo+jT
aSW42bOKJBk/keNy3+1R3ycAw0aDA1A6egllXYo31GQBORNEkKEAWU66RJnF
mOIrDKVHMKbtqUdkibnLNKKCl1BFtuc9D/w2OGM7xNiQuC3KseRxNprekiPI
OnBn7IGb880G7+6VUOgVxec7Jfgukxlhf0zF3mYS5lV0bn5NW5PWReFatiUG
t1FSij3pEvdYOXUDpBvo2whiZSwTR9jzHk4iYlpJQJwc7Lc8QNsHHUWHijuF
oW0tMfWJurQefk4v+CpsjX0E4Sy18FACqdiXW5EBxaL+BRvnd7V2O8V3mDDF
pNOvNNHpYgsIhz5y3z+Atlu6T+ViNcMnWQZM5pYYYJYnZu1T4AOrul7xoL8m
7PKN2jNWQdSkUtrk4leUuTNocN+jW7RsrtaTxX6v1RiQgiqkfLPveusIjjQq
tRw9Hj20O8tEUKn6nk11ayjQZZ/onVEv2fOifhX+g0fzazwQK4bdxvSuaibI
HkP1+OGJUkQ9QltnC1QsljSOH8YlWlMnJkSli8L4/M5QqaVA4PPcFYyK2JB7
CleXpYZnXVersB84Rl8yrlSO8Ri/SionO82jECkKXhLOadhmmhJMY/zj1Jk0
kq+YmBWVkmhTvEykKZ6RNS8lncNS18LXb2dotUioKNpSLJFtAEU0q/O41DLY
HqfxhLQkkdNtGNbHZzq7RRVaYosmo8R9HkqrdjGdZA3HfYhI5R5nYFsvgWn2
t9Y4tUUvkqSNcWo8AuYR807jhuE5wVepTCa9KgrU0qNG4ZZmT/uJ01MYO/cR
HWgPEGkx/oJ0xyFClhCR9hqJP7tJVG2ak7pOFzuCV54dLFhqlzBju32ralmw
3Dz2cvjCIqlE/igXSujTE+3W7RMi//iWEshBYZ8O4S6XOGbUbEVj6nolyy9k
A7wHh+2Z3VYnw/1vr1RLWNuCTU3tiQU2QyBrAzY7R0XjDMzlylM4K1YuNk3Q
ZtTi1DGMIOG1ynSc40mD7RBAeKAQKJIXUdsmNCSK0DxJ0LcBA7o2zbg7WYGm
yZ6ImgSGkBmSriWE7HR70+wFwTTo0tqW69anT0L9To1KrfOWjdT6CrVapPag
qNRGeeSjGBK9Es8xuAIZwDBZd8hu+q8oPEuV66E4OnE0T5YtgVW+2OLDwyU4
G566VC/BauVQXxMivXivc7Y59l29fS1iduC6wJDj+YXQwDNORGngZ2aZLfo5
AnqVU1Q1bSHrx6jwGCulgrQRHI/JU/AIcXS4t41T0qK6Z/fHAkFgu+83C9NK
I+AD+1r6tUuBfY2x8TmS4shcptSAfAuquqjbpKT4uQjZ3Ak9W1A8+XUOWaNr
C5k7LPsSpMks8Ps8PZ6Oybk9IvhE4WPbEG/OqCmmw/aMIciGvrVbumFRe03P
gacjPkE8IOwO54VOG2YYNDPiWwyRZaspttCtrT0MT56dqWsCwNrq/CRkLY8O
BFir2cDdcRlb6M8YDFUULmUL/V0gQYS/iLMQ664UD7JDjeFSEeYlSTTWGuvP
NRHsekXYMZ0dAg3TIvW6LjaAwu1IdAEjB2Y75gdZnhHkjp1EYEIt20cuuaP3
TjWHoRBRQZAd/lJb1N2dlnUr/E/Y1bgc482FVGDZxA604j7TJjaggpU79vxB
8gdSGNF/DuAijZ7j1WFBeeMxPI9JTXbYO95rJRb2dkhuyF8tSG4L4MV7GrH2
5ZM1EhQgppnoY2ZSSOPsnrJdULGsW2HsL402yQbcbbcZG/in+5j3DMg1KpKi
z1yxrKC9WQ0v8xraIRwa1zHdruJwaEt+5iN6M6OyxRy+hwtICJkqnmyKVAru
cjGZsEUbeTN73yaS7ob1E1lhsm1ytGk9okkR4Q7JyuXGGaFc+X1QEw0sxymP
tJYWdjtOTk5/LS0yrrBeiwbHWieiwTWETYIbJh3VfBBALcU1Eo7D5DLmILo7
K97O2rM4m5I2Ysk3wq8hZ28panKE4pXsGrNswaZ5waBnJ6+yzXWktaGhBmHR
oF2q2qrfrKBJ1W0V1a4tZLJEDhQSFusTLqE1Tl5b10TjwphsS1mEHW7jwooq
jYe0beMMG9JmaJjFdvp1iwlPAvRaTDjbHEN3aVAaf2b+GtNHILftjYhyMq9y
BLJRWVswHe/bULIzn5q4yzeIb0cc44kqTZv0eDCe5AQe56RRwnxx0FTz5Guf
FUSmtp4rVmSYsRZVuYu0zoLm9qkQ/CzNkuIIa4PpEUurHkDWUSqAa8KA0iiN
wpYPx3+e/lQKa4tw4zWh5LJkErPrTAOWhPstsoBwvJMJhA9+JsQRLmblWCQE
rcyKdJDZeoIP5xap0GVGM9K5QsatCZsI11KIvUe4luyMpsShc02J9ZXZnd63
sRXXJ1cI39LrMYDUIswoY9GxGbU0ZEkzqjVWefYctvIEoVA8Qm1YebyOA8Hh
NNxiBFuaIFYyfs42DMQU0xdgcWKEiUDEujRnqFkDFza6SwCWgpASWzFwk9nv
29CMs4S6L9KQwoFMaud/xJyaVRQtW2a5CODYxfFgTksVuu2RYUDLQFIr03iY
8H1qZ5xAGaR2p9EcXSjiQ8fjZg29ZbBruaL8hG+QH5yHaCUjTuIos7hG1s7b
maNPUVvjDstdwbgAuS52JzbvVLOV3NKwCYkIDhFZx3ZkSQTwOBj9yLDxsqPL
Jdb7YC9PbLpuYWfbOLmPicsRg/aPFZPyrYok7C39ePzLHLzbIxozsMhVmAQD
YSM7gayv6A8mAN3lTWlLNlNSCYnxiP7FJOFhW+3WELUUJT6dlD1+jDg2buNW
uWeGKpuhOTczc6LrHY3Al6SRRnQNhjs7HF6SFg63ciZtoUpsj2AWD8DxGSt/
5nRidDxDuEbq8mfW2uIKTBDgKvpnyhuXnPCvA2gkV6zAR/BjDo4snOGOtwdH
2lP1JUvpGFsl7HvatA4PyaiofUgRKBdL8IX6NaHNRpuwApYWnDwvN8if0/gS
jpA/M2sVj8guy1qJYk/KVCONQ9wzjZO/2QpanxbtKX+zXe8YGJe/SVzQeTLk
yijoSOPyySc+B1YTAqn8nWj2UJUnB0KZ9hJiQ+ON3mXOim3Wwz+SgKZKLPaT
PQ1wCf0qXZnIQ98YrGUWFUCPcEuGAf0tlmfNcqR2G0sry14UDygdJW/jSoyy
4M76NpmJ2K5BSNzKGO2iAwW1QSfQx5RV9nmmYgyoXdgS9ob6NkbK8ApGqm+T
oozPcWP2GCEpPbOvjYvY2XH/+yVHJ6laxouN78oRRvkO163DioXrtEq+cBVd
D7gVrASja0A/nc+Mh2SkMceVT5LVtygS7477skPZN5hDT8hWIx6xg4mKFw9N
4+nWww2axO8o/Ep1GL9nPSE3Drlu1LPimVbch9qu6ooByZnN5+e4aEkY8YHe
x/u1XrWKdAf0Oywkibn/8JAhWhYu1DhlFiDFloXXQ5xrxIhLDq/IBqklkJ56
YWGqqOJU4hWjtzyOMljNswEEEUPEw4QL1Y9fWdmDMJ08wfN0SseNVCbMezNB
LYqdF6qXfOUMn1nwMG79i/msGEOosZbPR5rDhqtVxy9/rnujkaNu2imkmF/8
QHZDtZA4eFxhCzEibI2RaQwaAw43KIvf8QJ5QOxFX58jNE9lUhko6U0mu0lr
G9qz+CvViV/6V6IqfV2ivo2148N7YnY9eBKOz1NxrVf3sHICWdSxsLho1q8w
AMWcSq5nv1AkyFeB6tueAbsmlMvYTCvDh+FCpfErXxwekOEBQkZ5aKaitOgo
SL0cov2VMvFLS4qwysKdqWsZpAkM+eI3Y4DEdoYLFSZfuZzSgIekNBC4jzuw
CWYSNDdc7Cfxq1/i3mhISgtKPaaDmjDCfloTmtBTaWDz4TueWsld+N/xO10l
D0aOHsnGOuEsI9gFY2LMH2PE1WDFJAyIT/wr5aqMbcgr+T/zRS6YoULOQDL/
ddf4MX5RATaVYqDY4mxmRSmUXINTwMWMQEksUHmmc101w2JJhzc36crA9rjl
AQyaEUf5/tCClKtKGKXMB95rBD/OgzUViFSNUoNKP7kgG39LuSpLcyyWicrO
p1cNCDA4+IlXFWaIOgwXkbiAnYoY99ALklEoxwXlPF6MiScdrZfCdISR46qF
KsHnfbWG+8Sf43eY6N6oiAAzawIuA/8yKM+8tXz76/iV5KjnPWhG5dyVDVoZ
Gt4dvVRimSsmvNhd66v4xeUAU8TeTXTtTJqRgU7MD56WofVQDpd44fFBaEn+
SKHFFXlwYRiLoDk6EylXnSLaEgLLUCMDUPSWWJAp4rZ9O08s0ELuGn9MvmgF
8x2UWaoxO7memKHQnTkznjbJi9rn8asL+qwcC846OqooXxZRE5BfhnYiHAAT
LzwtWSad9dByRp5ioIRIu0Jv2IbViQR31/0kfiMJgbg6NNaAY3N4lFhN4HFM
IpBw1/g4+aLVtoDGY21qQqGTDa9nVee7C/0u5crYJ7AXjORw3LZ6maHsrOrl
5CsLp2MlnjGKuMunaDTxihKlyLtGD2tIQJ1c5f3kKxYRVhctoaoTL6GCOYZw
EKfvLrEtfk05t1ZybIlVLvp0mBubtyhIvuICkc/EagR9LIgY9i7jLvg3+WJL
3BslFjdMxl9cKOeXPMdMjcR7eQ7L9aVii00MtLOJyyHZvIztOCJ//SD+yfC/
Uf+bPxX85P8Bd5Mjtw==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"g", "=", 
       RowBox[{"JacobsThalGraph", "[", "5", "]"}]}], ",", 
      RowBox[{"e", "=", 
       RowBox[{"3", "\[UndirectedEdge]", "2"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"full", "=", 
        RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AugmentedFormula", "[", 
       RowBox[{
        RowBox[{"FindFullFormula", "[", 
         RowBox[{"EdgeContract", "[", 
          RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", "full"}], 
       "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
  "//", "FormulaGraphReverse2"}]], "Input",
 CellChangeTimes->{{3.7626952369231205`*^9, 3.762695253931752*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`v168x2x3x4x579, $CellContext`v168x2x3x4x57x9, \
$CellContext`v168x2x3x4x59x7, $CellContext`v168x2x3x4x5x79, \
$CellContext`v168x2x3x4x5x7x9, $CellContext`v169x2x3x4x57x8, \
$CellContext`v169x2x3x4x58x7, $CellContext`v169x2x3x4x5x7x8, \
$CellContext`v16x2x3x4x579x8, $CellContext`v16x2x3x4x57x8x9, \
$CellContext`v16x2x3x4x58x79, $CellContext`v16x2x3x4x58x7x9, \
$CellContext`v16x2x3x4x59x7x8, $CellContext`v16x2x3x4x5x79x8, \
$CellContext`v16x2x3x4x5x7x8x9, $CellContext`v179x2x3x4x58x6, \
$CellContext`v179x2x3x4x5x68, $CellContext`v179x2x3x4x5x6x8, \
$CellContext`v17x2x3x4x58x69, $CellContext`v17x2x3x4x58x6x9, \
$CellContext`v17x2x3x4x59x68, $CellContext`v17x2x3x4x59x6x8, \
$CellContext`v17x2x3x4x5x68x9, $CellContext`v17x2x3x4x5x69x8, \
$CellContext`v17x2x3x4x5x6x8x9, $CellContext`v18x2x3x4x579x6, \
$CellContext`v18x2x3x4x57x69, $CellContext`v18x2x3x4x57x6x9, \
$CellContext`v18x2x3x4x59x6x7, $CellContext`v18x2x3x4x5x69x7, \
$CellContext`v18x2x3x4x5x6x79, $CellContext`v18x2x3x4x5x6x7x9, \
$CellContext`v19x2x3x4x57x68, $CellContext`v19x2x3x4x57x6x8, \
$CellContext`v19x2x3x4x58x6x7, $CellContext`v19x2x3x4x5x68x7, \
$CellContext`v19x2x3x4x5x6x7x8, $CellContext`v1x2x3x4x579x68, \
$CellContext`v1x2x3x4x579x6x8, $CellContext`v1x2x3x4x57x68x9, \
$CellContext`v1x2x3x4x57x69x8, $CellContext`v1x2x3x4x57x6x8x9, \
$CellContext`v1x2x3x4x58x69x7, $CellContext`v1x2x3x4x58x6x79, \
$CellContext`v1x2x3x4x58x6x7x9, $CellContext`v1x2x3x4x59x68x7, \
$CellContext`v1x2x3x4x59x6x7x8, $CellContext`v1x2x3x4x5x68x79, \
$CellContext`v1x2x3x4x5x68x7x9, $CellContext`v1x2x3x4x5x69x7x8, \
$CellContext`v1x2x3x4x5x6x79x8, $CellContext`v1x2x3x4x5x6x7x8x9}, {{{2, 1}, {
       3, 1}, {4, 1}, {9, 1}, {26, 1}, {38, 1}, {5, 2}, {10, 2}, {28, 2}, {40,
        2}, {5, 3}, {13, 3}, {29, 3}, {46, 3}, {5, 4}, {14, 4}, {31, 4}, {48, 
       4}, {15, 5}, {32, 5}, {49, 5}, {8, 6}, {10, 6}, {34, 6}, {41, 6}, {8, 
       7}, {12, 7}, {35, 7}, {43, 7}, {15, 8}, {37, 8}, {50, 8}, {10, 9}, {13,
        9}, {14, 9}, {39, 9}, {15, 10}, {42, 10}, {12, 11}, {14, 11}, {44, 
       11}, {15, 12}, {45, 12}, {15, 13}, {47, 13}, {15, 14}, {51, 14}, {52, 
       15}, {18, 16}, {20, 16}, {35, 16}, {44, 16}, {18, 17}, {23, 17}, {36, 
       17}, {48, 17}, {25, 18}, {37, 18}, {51, 18}, {20, 19}, {24, 19}, {43, 
       19}, {25, 20}, {45, 20}, {22, 21}, {23, 21}, {46, 21}, {25, 22}, {47, 
       22}, {25, 23}, {49, 23}, {25, 24}, {50, 24}, {52, 25}, {28, 26}, {29, 
       26}, {31, 26}, {39, 26}, {28, 27}, {30, 27}, {41, 27}, {32, 28}, {42, 
       28}, {32, 29}, {47, 29}, {32, 30}, {50, 30}, {32, 31}, {51, 31}, {52, 
       32}, {34, 33}, {36, 33}, {40, 33}, {37, 34}, {42, 34}, {37, 35}, {45, 
       35}, {37, 36}, {49, 36}, {52, 37}, {39, 38}, {40, 38}, {46, 38}, {48, 
       38}, {42, 39}, {47, 39}, {51, 39}, {42, 40}, {49, 40}, {42, 41}, {50, 
       41}, {52, 42}, {45, 43}, {50, 43}, {45, 44}, {51, 44}, {52, 45}, {47, 
       46}, {49, 46}, {52, 47}, {49, 48}, {51, 48}, {52, 49}, {52, 50}, {52, 
       51}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {$CellContext`v17x2x3x4x58x69 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x68x79 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x5x69x8 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x59x7x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x59x6x7x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v19x2x3x4x5x68x7 -> Rotate[
           Row[{"19", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x5x6x8x9 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v19x2x3x4x5x6x7x8 -> Rotate[
           Row[{"19", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x57x69 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x59x6x7 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x68x7x9 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x58x6x79 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x5x69x7 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v179x2x3x4x5x6x8 -> Rotate[
           Row[{"179", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v169x2x3x4x58x7 -> Rotate[
           Row[{"169", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v168x2x3x4x5x7x9 -> Rotate[
           Row[{"168", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x58x7x9 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v19x2x3x4x57x68 -> Rotate[
           Row[{"19", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x579x6x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "579", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x5x6x7x9 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v169x2x3x4x5x7x8 -> Rotate[
           Row[{"169", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x5x68x9 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v168x2x3x4x579 -> Rotate[
           Row[{"168", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "579"}], Rational[1, 6] 
           Pi], $CellContext`v168x2x3x4x5x79 -> Rotate[
           Row[{"168", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79"}], Rational[1, 6] 
           Pi], $CellContext`v169x2x3x4x57x8 -> Rotate[
           Row[{"169", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x5x7x8x9 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x57x69x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v19x2x3x4x57x6x8 -> Rotate[
           Row[{"19", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x5x6x79 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x59x68x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x58x79 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x579x6 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "579", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x5x79x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x69x7x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x58x69x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "69", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x57x68x9 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v179x2x3x4x58x6 -> Rotate[
           Row[{"179", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x57x8x9 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x58x6x7x9 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x579x8 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "579", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x6x7x8x9 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v168x2x3x4x59x7 -> Rotate[
           Row[{"168", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x57x6x8x9 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x59x68 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x59x6x8 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "59", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x579x68 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "579", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v19x2x3x4x58x6x7 -> Rotate[
           Row[{"19", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v179x2x3x4x5x68 -> Rotate[
           Row[{"179", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "68"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x6x79x8 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "79", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "8"}], Rational[1, 6] 
           Pi], $CellContext`v18x2x3x4x57x6x9 -> Rotate[
           Row[{"18", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v168x2x3x4x57x9 -> Rotate[
           Row[{"168", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x58x6x9 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "58", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "9"}], Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.011533434076174992`], 
        ArrowBox[{{-0.43366488148126336`, 1.}, {0., 0.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.5663351188823071`, 1.}, {0., 0.}}, 0.09694960212314824], 
        ArrowBox[{{-3.4336648819589755`, 1.}, {0., 0.}}, 0.09694960212314824],
         ArrowBox[{{-0.43366488056824437`, 2.}, {-0.43366488148126336`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-0.43366488056824437`, 2.}, {1.5663351188823071`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-0.43366488056824437`, 2.}, {-3.4336648819589755`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-13.433664880864399`, 2.}, {-10.001174593188352`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-13.433664880864399`, 2.}, {-15.172039308926514`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-2.433664881686582, 1.}, {0., 0.}}, 0.09694960212314824], 
        ArrowBox[{{-4.433664880621222, 2.}, {-0.43366488148126336`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880621222, 2.}, {-10.001174593188352`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880621222, 2.}, {-2.433664881686582, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-14.433664880888728`, 2.}, {-15.172039308926514`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-14.433664880888728`, 2.}, {-12.433664880768106`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.5663351194629058, 2.}, {1.5663351188823071`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.5663351194629058, 2.}, {-2.433664881686582, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.43366488068159, 2.}, {-3.4336648819589755`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.43366488068159, 2.}, {-2.433664881686582, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.43366488068159, 2.}, {-12.433664880768106`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {-0.43366488056824437`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {-13.433664880864399`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {-4.433664880621222, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {-14.433664880888728`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {0.5663351194629058, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.433664880983315, 3.}, {-6.43366488068159, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-11.433664880821993`, 2.}, {-13.872152803752783`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-11.433664880821993`, 2.}, {-8.692025679655444, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-16.43366488097695, 2.}, {-13.872152803752783`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-16.43366488097695, 2.}, {-16.433664880844844`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-2.433664880616334, 2.}, {-1.4336648816205297`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.433664880727065, 2.}, {-8.692025679655444, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.433664880727065, 2.}, {-1.4336648816205297`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.433664880929769`, 2.}, {-16.433664880844844`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.932060765212896, 3.}, {-11.433664880821993`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.932060765212896, 3.}, {-16.43366488097695, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.932060765212896, 3.}, {-2.433664880616334, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.932060765212896, 3.}, {-5.433664880727065, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.932060765212896, 3.}, {-15.433664880929769`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{2.566335120282247, 1.}, {0., 0.}}, 0.09694960212314824], 
        ArrowBox[{{3.5663351194829147`, 2.}, {-0.43366488148126336`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{3.5663351194829147`, 2.}, {2.566335120282247, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{3.5663351194829147`, 2.}, {-6.692025679116682, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{5.566335119664245, 2.}, {1.5663351188823071`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{5.566335119664245, 2.}, {2.566335120282247, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-7.433664880704214, 2.}, {-6.692025679116682, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.5663351194481265`, 2.}, {-3.4336648819589755`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.5663351194481265`, 2.}, {2.566335120282247, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.17000670712889132`, 3.}, {-0.43366488056824437`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.17000670712889132`, 3.}, {3.5663351194829147`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.17000670712889132`, 3.}, {5.566335119664245, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.17000670712889132`, 3.}, {-7.433664880704214, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.17000670712889132`, 3.}, {1.5663351194481265`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-9.433664880717402, 2.}, {-10.001174593188352`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-9.433664880717402, 2.}, {-7.692025679494009, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-17.433664880999913`, 2.}, {-15.172039308926514`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-17.433664880999913`, 2.}, {-13.872152803752783`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.433664880727292, 2.}, {-8.692025679655444, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-8.433664880727292, 2.}, {-7.692025679494009, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.526083865160558`, 3.}, {-13.433664880864399`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.526083865160558`, 3.}, {-11.433664880821993`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.526083865160558`, 3.}, {-9.433664880717402, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.526083865160558`, 3.}, {-17.433664880999913`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.526083865160558`, 3.}, {-8.433664880727292, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{0.566335118736788, 1.}, {0., 0.}}, 0.09694960212314824], 
        ArrowBox[{{2.5663351195094037`, 2.}, {-2.433664881686582, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{2.5663351195094037`, 2.}, {2.566335120282247, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{2.5663351195094037`, 2.}, {0.566335118736788, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-1.4336648806414587`, 2.}, {-0.43366488148126336`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-1.4336648806414587`, 2.}, {-7.692025679494009, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-1.4336648806414587`, 2.}, {0.566335118736788, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.433664880740025`, 2.}, {-10.001174593188352`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-10.433664880740025`, 2.}, {-6.692025679116682, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {-4.433664880621222, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {3.5663351194829147`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {-9.433664880717402, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {2.5663351195094037`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {-1.4336648806414587`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-4.433664880410106, 3.}, {-10.433664880740025`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-18.43366488114043, 2.}, {-15.172039308926514`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-18.43366488114043, 2.}, {-16.433664880844844`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.43366488084314, 2.}, {-12.433664880768106`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.43366488084314, 2.}, {-13.872152803752783`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.250450545042213`, 3.}, {-14.433664880888728`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.250450545042213`, 3.}, {-16.43366488097695, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.250450545042213`, 3.}, {-17.433664880999913`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.250450545042213`, 3.}, {-18.43366488114043, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-15.250450545042213`, 3.}, {-12.43366488084314, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{4.566335119661517, 2.}, {1.5663351188823071`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{4.566335119661517, 2.}, {-1.4336648816205297`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{4.566335119661517, 2.}, {0.566335118736788, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.7378348059560267`, 3.}, {0.5663351194629058, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.7378348059560267`, 3.}, {-2.433664880616334, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.7378348059560267`, 3.}, {5.566335119664245, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.7378348059560267`, 3.}, {2.5663351195094037`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{1.7378348059560267`, 3.}, {4.566335119661517, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.4336648806531684`, 2.}, {-3.4336648819589755`, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.4336648806531684`, 2.}, {-8.692025679655444, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.4336648806531684`, 2.}, {0.566335118736788, 1.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {-0.43366488056824437`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {-5.433664880727065, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {-8.433664880727292, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {-1.4336648806414587`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {4.566335119661517, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-3.433664879738899, 3.}, {-3.4336648806531684`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.131652476391423`, 3.}, {-13.433664880864399`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.131652476391423`, 3.}, {-15.433664880929769`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.131652476391423`, 3.}, {-7.433664880704214, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.131652476391423`, 3.}, {-10.433664880740025`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-12.131652476391423`, 3.}, {-18.43366488114043, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {-6.43366488068159, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {-11.433664880821993`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {1.5663351194481265`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {2.5663351195094037`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {-12.43366488084314, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-5.4336648808016434`, 3.}, {-3.4336648806531684`, 2.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-6.433664880983315, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-8.932060765212896, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {0.17000670712889132`, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-10.526083865160558`, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-4.433664880410106, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-15.250450545042213`, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {1.7378348059560267`, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-3.433664879738899, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-12.131652476391423`, 3.}}, 
         0.09694960212314824], 
        ArrowBox[{{-6.0120729008010585`, 4.}, {-5.4336648808016434`, 3.}}, 
         0.09694960212314824]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"168\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"579\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.09694960212314824, 0.09694960212314824}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.43366488148126336`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"168\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.3367152793581151, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5663351188823071`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"168\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.6632847210054553`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.4336648819589755`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"168\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.3367152798358273`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.43366488056824437`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"168\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.33671527844509613`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-10.001174593188352`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"169\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-9.904224991065204, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-15.172039308926514`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"169\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-15.075089706803366`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-13.433664880864399`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"169\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-13.33671527874125, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.433664881686582, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"579\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.3367152795634336`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.433664880621222, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-4.336715278498074, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-12.433664880768106`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-12.336715278644958`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-14.433664880888728`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-14.33671527876558, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5663351194629058, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.663284721586054, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.43366488068159, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.336715278558442, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.433664880983315, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.336715278860167, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-13.872152803752783`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"179\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-13.775203201629635`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-8.692025679655444, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"179\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-8.595076077532296, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-11.433664880821993`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"179\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-11.336715278698845`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-16.433664880844844`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-16.336715278721694`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-16.43366488097695, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-16.3367152788538, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.4336648816205297`, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.3367152794973816`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.433664880616334, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.3367152784931857`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-5.433664880727065, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-5.336715278603917, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-15.433664880929769`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-15.33671527880662, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-8.932060765212896, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-8.835111163089747, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.566335120282247, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"579\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.663284722405395, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.692025679116682, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.595076076993534, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5663351194829147`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.663284721606063, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.566335119664245, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.663284721787393, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.433664880704214, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-7.336715278581066, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5663351194481265`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.6632847215712747`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.17000670712889132`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"18\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.26695630925203956`, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.692025679494009, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"19\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-7.5950760773708605`, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-9.433664880717402, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"19\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-9.336715278594253, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-17.433664880999913`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"19\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-17.336715278876763`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-8.433664880727292, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"19\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-8.336715278604144, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-10.526083865160558`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"19\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-10.42913426303741, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.566335118736788, 1.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"579\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.6632847208599362, 1.0969496021231482`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.5663351195094037`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"579\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.663284721632552, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.4336648806414587`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.3367152785183105`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-10.433664880740025`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-10.336715278616877`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.433664880410106, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-4.336715278286958, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-18.43366488114043, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-18.33671527901728, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-12.43366488084314, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-12.336715278719991`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-15.250450545042213`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"58\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-15.153500942919065`, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.566335119661517, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.663284721784665, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.7378348059560267`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"59\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.8347844080791749`, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.4336648806531684`, 2.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.3367152785300203`, 2.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.433664879738899, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"68\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.3367152776157507`, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-12.131652476391423`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"69\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-12.034702874268275`, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-5.4336648808016434`, 3.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"79\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-5.336715278678495, 3.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.0120729008010585`, 4.}, 0.09694960212314824], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"8\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"9\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-5.91512329867791, 4.096949602123148}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1268., Automatic}]], "Output",
 CellChangeTimes->{{3.7626952389856157`*^9, 
  3.762695255731531*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
nbyAzn6wwZCJ0E3XmfsWGVUC6YnkFAQpb2OOyMRoNhWsW7QYrRpGjJpLN8Wt
CTakJaFTvWUuCxXeLqXfQfzf5LTbxWLsnXrLv+XtW7jO5rN7pTFg5ttNmqeN
mDTPWyn21PtXzzmlymZn9m0rdmP1VFdvRzrZzh07eM5SIBrJInAE5m3dHQX+
b8xadioZ2xBWqTAkbDK37OiDrRthr4n85LNRg4cOP1CjYTuxmI0c9b2b3C+p
QCsRuWy4siEppLK7Il0pV/HV+d0GTnIuovMrA9fJ7EnSHpnnJGYNnAGoY1QZ
QDOH045IK/vKjpTtC6C/uHdk6V7Tdi1BYB6qPqGZSuStULkh2/dm5GswJEFO
9g3x00fM2o4+3Hnp1vdeeu/8VSUU9TJyIThRJ4RRfBM4Wr/k6VMIJwOn94af
V1D7iPN5XW+A8NJDYx8RfxrFWR9Xbzv9mzLlnl3SdfhcAmjLe01YT+8OdR9m
4DnaWygzQJvJIdx5qV53Hm5mZBRQtK3qfQ2Hj9v+zrjR0wcuXCCQAer3hpez
ppG+Lb6M0ZqMPO22eNNJat8BnGgKcluRXdoP/jVscthDMRB2LR35drQZuoyi
TGSxEtMaDVCT0iPM/iQtGx7NZ+gaUpyL7qMqWqIjE7o67TcnJ/Wn/AMLfllm
6GPvVUivABOlTs1mcbM6de2lPFj60KTYLTFCTUM/wsrHz31hdx3WANS1ePbN
rlGRXu1qfDzeNX9faHCh9P4r0olpI+aJnV95/KX6B2o36ebNSGftKnE01mV8
Nt/BFua3wQCPA3Exg7++e+j9BGBuluxbfmWnKXPOPTW6Mv1YGH5J06bNFAbC
NTXRYE/qMW32wuOvvFaPJUlGkLA34T1R0Yq+Y0VEcvbRRrR0VD03es9bd+xo
494L6Jce+L3w/bpd5x55u89CoCDFvj6d/GIlp7/0lR8+Z3vGBvLSlyOQbfpy
U86yl5smSQgJLbsCYf/I3Tvv3O4Lx9tENqVnn4HKTDCcOajvSoRiOiW8mNaO
xagqYcS0Rk9QTxIRG05eueansTOHz9q2oeOoTGbhMxOMES8GEgCMk2LZbV7m
ziHTluyC2Cl+3/167QZiKsFGgbddugsOgL9087Djrk4lusmWDXKCGoEJXwBv
0A9wh3okFwcWKnwTnEqFPD40I6Ileill2MXC0LPxhYo3RAJ//GYWdsaMQkVK
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
uEhRkfQ0kd04ubuJrsLBcrzwklCLxOtIMVOX2Zvkx7w+CoebsGK0mTsJKWX1
nCeFc9hL403rZiC9pCRoNVKvM8fe9jpbsRm/VDJNwEEXXfvdh3m4crVab27f
d5Jt2SugGTe599yWIw6YfZVnVbFXEGkzTb3ZHLYPiY+FZ8qVGJLnEmGFTrh7
jqxLp6aOytiJ3yVMkqzdm0TEFY/K4iTzRdBvPD7SWdlu0gz6ef3OitOrlda5
eMOxxb3SljHcnpr1W07qP3ScpUMHiy1tSaie1IIGTiYaJraPT0/qHJLDy5xc
mGAzc8pZpWgxMQywcoWftumGAx98W2zw3da0SeGm9cSF7gnVfSxSBUHAbAeK
BcySp6x5/Q1zHcHQodJRXzqfw0lMJi81a/TAJsk3zCXksUKNwXrKHao18Y4j
3KPtRquVx8jtRvphH5KIDyOBTWI0wwp8uLeHhU8YtWzFP1J6F9zZcNwgwlGj
Jy3aTec4Gz45/oAmk+BakE7KbaxLPt2nTJ/F9EeqvFGfzJYF/Sau7rp4yzGi
V9x4K+Rjd5YKST7FItNk4sJrMlO1JvNYGDia/hShShGUoagt9jiAIFLKqbRJ
cvUU7x3NTqzKr7rZVBIxvpwP505poxUHVQSp96I5llG5JN9TlB7pyg1UER7i
GpDP1OEt7g4Kdq0LR+IlQcSu8QdLpqRD9BqhVaQuXagpJlvaM32ldgbq5ktS
gaOIQ2s68XJjtNjpDI8haCIB1fcePPFV6YceF9BIY7zamz/cic3sW23s16Pc
lNRKgzT7iktzBa8/+Ow+GRxX8SuIs1r1ajNN70Llx/i5NXRoSxWwVzj/6XW6
ecwZMn2LFCdJb/tcwTqEF0p2WrRUBqNPSH6tgCxK1zvGSEqHq8gqnmYspaDw
lbn41k/5oRTzg0qj6/yWo3cyHQ/Imr740NhHgI3xrdhxAn6Cwnp+02m5nAKv
yM697b2lzXFv53TR4Fefp2FZSHwmmc3e7UYfFljR78kp+Q/X75R+um63eV8+
3L8K+s2m2vPqej3p3BY9bPSW6SGTbDVryictPXlOAmKSNmyXP4uOGzZxN9zl
zGFqfja3H5GJ59PViHLaiTG2JmtzdKmfMnZOLjkAXHwPtwY0CA+/Mia5Y0+i
qHb7G1t4mVZ16BRymSAUK178cM285WpcMwOZFdS3ksdhM/fYMDAzShqz0xnH
O/vSNgv6cNudtJmSzoz27LLBULIl3PQ+V5HZ6sKWBlO7/JrcJ9fppyY9w93V
AALqNvf6AV7FqczBUskt5nT7eDpi7HvSjQITL1Qp00o/ed14tpDdTl4Ko2ru
P/VpKMWGq9QHjtozWpK0+S1d9nlN3BxeYCVrxos6yY+97KQw0lg7S1LBgbdb
BgACoLS+wwMp6kBmy479uNVQ/OtOF/ucf0DFifZRcWL8aYnXrCdt6Pp0wlc/
FO1bZn3rSRP7zdywk3ucUG2clmXZ0FLxyLSd2PCjTNbazqNh4GsaedhNQrNk
1mixpe7YlBaEMBSjKHlDFEFS2e8GLp3DEHRjFyBXUjk+lKITFcMhwEC2eE2M
HFclCXQibay4AvgNNfol4Siq0gfISffVHg6d8IQblrxdpJF4QvqM3zdRXdtc
sv/DCEAqDtGjTHaItx5XqzpOWxiro5sTwsCskhvs31m+fAVQOlgjrSPc9trd
A8sxE3/Tg8xKufW5zizOr9mtXHXmA7gkNBuJ6YkvVWrLBXBR1n14fpk4pqVE
UN2zplsVzrRvh/3/WPvq+KqOre384oQY7lZooVhL0eIOxd1JcIdACBASYlgI
EgIBQnAJ7u7BvUUKFGuLtsAthXrv7b3fzZdnZp595hz2OTnpff8IRM6eWXvN
muUiEJO84STal6qkZn9ipvbVe/fxPIiWRgnwD8wA/0zXBq4t7Rjc9JYxTHW0
SjzWEpQN9VZK1Vz4XPvDVz+Hvrp00rLlFIlLpiRuBuXDy4vR0euC+g2wFxlw
UZkKNOckFZjsqSIRkHk4BcEE7Xi09Vl3hkdbeqgdd1KSnC0X7vzu7sEjXxQv
XXF3n+GRwzYduIJ8NwzigGv4apOYwb/5h+VDi419QQkJu0ZO23y5RXTIxYYJ
HQyRLkfnGmnFmcdyGQkqqIlGd88b7UamgNuOStt3+eOvvn2R14HUUwm0zhRD
G0QtHYildSat12HRNsfvaZOzNFXfB1VuR3rMnIbWKdyH9w7/c9ouCkCgPOvt
c3C8n1efWxtN0xBgp6UEPygz+dURFsQzuES4NLYNy3G0VCJtu4ybsWwkpdji
UDkrQTU2W+c43XR+e/R249Z6Pw72g1COJR9nt5NqUj7qKejyjrSK051iYyj9
g3Ycvlzty3tPij199twMi/pEKGKxzb7bB9iE0nEH/EJ6B3y2esHWiGgdCo5L
+S0gtNCropMqHG8/ZziVldkT906iFxJGCBgqjQpaRSY1W46SOdz0PpNk3NL/
dfRzfOHVF40OGfcmd558c6Yv2IDMoJu14tqDYV+rOrsWVGegAacT4JzigYQk
vGbb9Cv3KfV48Fr/65x6FzOYYAhcHeycNAwHizk7mCNhJI+4OVYRijunaGSx
yhypaFRygFatmIFFNHoLUjXZDB/FBuzkpKWWWfV908uaGRcwK0OSssZDN9LZ
JYRCw0rXUFUboF0yYtH1WISk3cCTDekotSI30CBeSOqE8l82LcdPUB+Y7yrS
7IOXj31WOuITFLrjZ1bW2bQCeCfbVJbj+LN7CLbAjNcha7fswxtdah4z8sf8
k0qd7DVlEeiHMXa8CTw39jtOGQNzrPrFSMSJ3HYiwtKTyw2AGohQ99pexkt+
k50LWVRHyjSG/DiklhfAqsxZaiR5bLOh8Vv2iYUPh2OJeXxmXWzwZsKPo+47
9jcmYSg11CoEKP1zAckh4yZEzFmwDJf4es36Lc+17DIYg6vnz1ix/1XBiBKo
HmRkQPeLa6mu1utKXGTlGmZkXiMzx7ksyhFqL3NWpa3gW1QBxM3ZuhXUdq1B
dL8f800q9lPuSQW2DVgQh2Guj8uHNzUrf1axu1yOxDs0BGdyVVyyHnntZI8T
a0KTrhlfGsRYMmzljvNQaK53GL30YfNBC9DoBW1PVWnSNxZ2FwCBLxhvhkzs
4Txp/AzSh/CHnMAbbg9OngzT3ejULdPwffEZatasdse54oypIOiySZ1bkVev
hWF7o/2olDO9J65G9hzeoKBF9mNOvb1VRbGIt9VSx5APgt4yXEoWh+SirMf0
y7PNOwRBuQRRX2zYvMPAzXsFC97TbmV7/WXThqXMsHpZWaIv7m0eeg5F7mzs
yk0vik0u90uusCK/5h37wX88Q/x/LTjqkxttxiQe7R+59lqdph3jZy3Ztnjs
hKhMAeKSEBE11TphVno59DnlzOhzkM8RCK57sH2XvoDB9uTwIlu7r+7d7viV
26AfxDSRZoryDqaZ5nlXYqPC+EKP8SuQounAVRDgqE1Xw7P3riJ9x56Yzcot
UMI5aZ3FKrOktK7gAI2KCiluWQsC8SDy6S2PskcqPqYxHqPy13TsiJ/JVQ20
FiMsL6G16WcirVVJI+QbWC2nXbgKavGA2xgWlazevHhRSATlOKDfT+PA1q56
SUcB7EDOeR5s8LMhJHENnAH3y84sS50bnB53kRKGUsSqbFUWPQacati4CS5X
2sjIBa8LFf9AYOL8zQePS0wtgWfR3ght+b6oFd8Mjgf2lhBuBAdOFduutULR
UV2xQIDs7wqiZJ8KHU/wvF6/boYk5YoEgvSh8WID1ZTaKoE1vzXT1nvR0DeP
s9SinKAUTby9U2+tmDIb6VIzxm/5SmSB0hBY14NT9vB6AnU+JgJYqy42Up8l
SeSy5y6eOWX3dEzBgh8IDoStwxIX/u43Ph+UAPhy93RdMtC24NhqfRnbz4nj
YKs53YuqTwIEK9NL3nUvqiLTMmZZHwxFvFMzk2EefsDs7FVD14YhaGwPlk57
DhzruvfIeRbZpnfsH25Wa1zAOYmtcgOdzQRxVHDvZHs2MxtBBiZKOHoUSWZZ
pYSMX7pu7+FWbdpLxW/sWCoOkI+smhiVmr4hOnnz8cxrLlKDjJZBqmYPejUU
CxZpc9oCx/mmjtg0fn5sYlq9s+fOW2qDZbsjM7TYkwCqOUDOlLHrpl+tNbux
vf3AWcE2tbbRf2+/vBbDiFnRywcPHbFq8Iixgl2NWZL8p8/4wLd5Jxbd13tu
1Oaxszdjhnv1q0++AI6EOiOFXx5GFcHkIQWgs6Gy92qDVj1Pdxo89fsKdbq8
Lv7hp4+qNQ9+Xr9v4s1mYRP/yBmW63mJyA+flI766If8kYWhPokJTmaz7L0c
yEWpiubFe9yoWqMu3ls/a13ei+pNxbbRzQzt/dEu3kxgS3WjNKMMMODsOQo2
D1oSgyPD3zEpWm/WxS5TPDLqCejmmxaasNWsEazdI5Pa/TsFQdlaY4bUND50
gFHVYAsnwLJcXV0QW8jhWe+kW2jTnax6numVq5oAtL71Ku0drmBySaN1Ri4T
XUP1JGMOJNR2S0jSm1amnL0t87fhGIPOAIIvYpGQRt2m8gqBlrZ17drtQv3G
n20eFbNceDYP3zmm13+Tf1janiTVMir1PCziUu/bJc8vD70mRMzq8TNWn23c
ot2x5i1aMdCOq8ROKKAfEREoFFV0UWyKGF4KEIQebqZ5qCZ1DOfoJcEKyQbS
rJtgeNPMJdLgtsNtAoeBCa+iW6BAJg3jOOj1Vk3frRwwKtMPL62PFCQvZ+uZ
nCZqgFQw32k6Z4zxlk0g9NYgOAGcBDkmk3cZUcLrahOZrTUAFSqwCkspKjHx
M+ey52fG8723nU9Hyyk9ur8yImlPetDkNfApGpqI6kpDBZVjB9VxcLydBL1l
S9Cw7kVVM5txsSNSNp851XfSmqudQ1KP94tYNzl161n0RW988eYjR15+Vr0b
Aw/l1nn0rc0cuNmqN3ay+5h8HT+zrA26urEsvOSYc24Szs9yCzMzx0nVSJKM
v568sWZ05PwnZcpX/abyp58tik3ejRdH3kJavzUjQlMO7MSE95eqO43WaMiQ
ayqMy9mOwDcutvyoL4gJIhejb2dPnDgJoTeOPrtco0ZN+Lx1HGSRaCex645s
USjJJpvRnGGc9X/eLBfb92AlJlszeWPkymN7vy8RUemHfBGF0U2Z+Qz/9gj1
1BM1paxxFU2ZcwKs9scvYBDfvhkztqzBxJdzHaLi0IhtwbRle3/MP6nY1drx
rW5Ui2/oIuMXwo8IGsIG/B2TK2RenJCMXiyNdxCDyDktPmnV1Vp1G5u9EFVz
oFEUiasUYLZ9yEpuqxbQJrmbBSDv6l++/TUO7n6FuJpffxj9qa5+/KNAZOHW
x69dSwiPjMFN5cmxgt/R1i6uQvZ5mKoLUgv2+tvPT5XqRlkH6obqS8Z8BzYD
YL2t+IwsShWVTPBCMN9BaRp6Rwm9pZmAy6yFqMpQsy26oJDMa1fZMCZ6620T
oBYwow8sEnoe2CS8Z2IglcwLNXGbqY2sMvBUT3J7SdlYhS1NaWODf1M3oR6i
upTY5kAUsZynbbN7A2MqQMmSWkLL0XAnmixutjJsycpLdee0QCzWTANRnV9Y
4WulyskXzMsiHdMGFPYwqWm2W4YmJaIUfsyKQ/tBO0Utt8cYOCNv1DuOL6tJ
h6oEBqAaA4QkfYg++syDwHqqUQyVDFvEMDcVR4FjUjqGVTaGljZspCPIO5Yj
K7e01n3KF8+vmzh3B9rMOVMPIwnNz7benKmcpF6oU3DkIIEQOJejle1Rr5dF
INp6NUo9f/kGlxWe/b3Dpm681nHM0uvtR6UgR7DH/tO3LHnhfraV27YwQf2E
egfVCzAJFUyDyRcLZFUfrA/odXNO3EsSNso30WoS7nrMlcE4bH3OH07RyUob
M7snj3OPyjP0pQMcesbVBtO7YYbqsT4xi//wDcv1U+5JBeHoQko25kjhdSV1
5WETcr0JEHIB5sxYtxUfA1ohrTGjC2h+ULlmE53vWPWlyaI4UV6pvHgcMVWa
S3quDglJ3/b3nL5+2Baqhtm2Wewq8eOO67J6UNoosLRiT988lzlowq9X/v6z
p7/6TfLPqjREZZfkhl8PeRQzo6fOYvgDl5wDqLAeZhKfbZzYDuu9zTehJNIL
9fXQclW5NJhaIXUOwfBz6rkVuLio0UXo62SmoTA3YcUREITsy8ZQuEgeVRlu
UNpEHqxS5OW7utHzLnRNec2cHE9rrXzIR0vY9o/6usy0929Viv9k/NL9e/HZ
o52Cx33RtMvo3cGjp/3pk9MXFWv1L9/4mnFguofgcrEHAhiGqQIhHQ1+jsC3
+2yMVD5Uo9T8r1696rx9+/Y5U6fP7Llx48ZS3377LdsVmiomGbKzm+14VkvM
z3xJyRZFD1XGGQC1kH0ZllpKvajW6B+R33rd9O79Rs+Ii08S66qcXNZx8k2F
IVfQIhb0CLwZfOzggBsoycgPbB6XEJcRIoDzT1gUQtuEiq1gzfkMYnSIWnPf
sFLc2K0TtKsXu8vxAjJig88Y81wz5DB1Sy8TkZRBzxKWdndwMqrWlm4I20b8
Ul7nZmoAZDE1LSZlIiEdEYURKctWUf0HQI1PnDhhe2CSiVhFz/TKXkkm3o6O
CP+bHNHaoKDgueHRM3D30GkJUVL4HclfDX1UGraetlt023PkHKjPz6J461Xe
Vn46VVIDFPXdcei8LaTqEEDTTAkE7cmV/aifAptgVew3AswCUDbdBZ81+oy5
Ap8eFuSca9NnfFJ07HTjFDMsUwYlcwgw89FXvPXNrSPNxzf/Z74WBbd3Du/c
9NixY1An+Sh95ooUs9ewVllqut9breMHtRXUsLNjx463qnzyCSwxgM1mjvpd
YvyeU8JsNakuh8/ebnXq6gNH/htbZyLgZa63u2MwPzt48CCuu9NgqmfNKpb3
Do/biB4/GPSMQvqDg6I3TJ+/9rgBap4smXAueyYPqIsZK9MWrD+Ruc8GpIqg
69K5HmErU6OS9/bbefyG2T5WHFTrTO9I0XIEqlTzAnvuuHTsHwUjigMVoLwp
0w8nYBzl9l6pw5FueL9ibJ09Q6JWnW0XNIE6aPSc5DW1r968j+0lv85ttgWL
dTrtv3pGT08NXrsuLWVs+PRjXQZNRqBjaOqyFZL9mDZmx53Loo2WjzUH2tdv
aGjyhKgEHQgLB/Iy2x8XSHYC+h8AcITo/DqiGT5mn25ajICCIVic35ilq7cM
X7/7jCMVT/qniplunSEbv2DWnn4AjFhDUGFruHVorOJ3GDbsTOExNTJwHPxO
ZPVuO/wFhktd7Tw2FerfoqlLDsjS53ycHwCmNDRt1+n5k6cmXmzfc+jGwSGx
LU+cuULwcA5sXwo56hBTyhnJwSSS8TqnKMpD87VSFO2oGu9SUWE4pSDNh65Y
nXaxdr2GK0eGRkUnpx1fPT559ZsCYWXe5JtUDF5TOM+hY9a49s19nqsZVGCP
YJPZIS1lSGWx5J3sLDlaapoqibLnjp27bnfu3vevYaFxGVMSlmeMmDDj6849
gscsW7GS8sZW44SdYI+PKw3W8bqS2Yu8Oq6L/1lmaTt2j6VEBZ1YWvP16hUt
1GRUGSGVz5DlqzZksZQ3nDpQZeDOZRIYqIQNhBR9gquAvYpAhNSNvfYMHDvt
67adejpArqN+T2I2DLvGW7rty2gbFBOAA7A4oQb/gx2ozCa8MIcfg3pcncCf
t7WiZVuWpYVI8nDCI6fW0LLD74Qj6OsnL//p7ZPzUen3y+EmX61Tt96zpi3b
me4rwwtGsbWVxeDu9LmLw0IW4I958xdCCyRcmO67LopKaO2wONZAPyyz5V83
b9cjbk7iItYfM04M0FxccWTSPW8Uu0k11qvfpi3bfqzXrIMpqK6W0+HB43mp
qPnjXIlVPeuYWAVffBsYGIizBodi7aBEkjff4j9Dx1ntvHzClHjcMemdDrAN
4xiPDRkXw8feNmre9pcChYqcata6C6cuCTU0x99WQ3OuHDJ02PNqNWr/188/
MCN8xhLs87xRUKuXBScVYv4yW5OgA+W6HjJpQlc34XfAXEU47Oxn6Xjq9jBN
J8sETL+UUaNGm0Hys/+EAOasExK2KVKUGGimlcUtTEtHVROGOOPWEBtM8NFr
uP2d5r2Out+aggFEoFk7xiQw3skEEM5ZpYfRGTCczIySd8jX0VJMzF0btCEY
dw8ErV6ESU6gANzg+2XLlj1Xr0HjkNR1u37IX7DwgtgFWx310JGeyrzO7I5b
R5we6DN6xvZe/YZjOyb8602+7Pb4yqIlvafTx+tjCwqKMthH4v8OFKfOJXXI
lqHW55KD54L/2U4RsX1AaIjDbDYlVhMVsoIIihY+rmSWHoqGy5B9OmV9lSUN
wZf1ts6CI+VGcTOnGpYQ6QoLU1Y/a96mq85S3zZp3e1Gy26jxNDrTHxfqz29
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
+eT35aZU/65SRL1DvebOFLtNr/4SbqZktpINF8kiVrtJFuIQ7cG7n34OWdmP
pcpWFgsa9WfzI5GEGjGeE9GUMe9EZc/JvFxt3n3Cf3KG5SJaohvJSzkKSXpu
0M7sxtlCO3t2+PR00oVFgdX1X/+tuCuNoLGJ3Upc7IuZqJDcKb0UH6Gs3z/z
5Mmj0U/09iZ+hIDdMeanT91KXu8ln3WMZvK5PhBKSN2JzQpCHt2Btis78A07
vei7knGlVozYOpHUCKlClKuhTdpjbiN5WFzi4WOj5Pu0w2dsbXq3yS3O+AGb
zx31MwkFyMthIiQyiQdlztyVB+mVG9S2oR6gFSf2BimpEjljTpy10QIVGUAn
sohjE9y7oW5X8J1XZfIHQDi2EciV+8moqStEth+R2GfdRJKa73sUSTwqiKTc
EkGIxKoRyiROwexEquFj1GIZCYqA2NBe9uffvuFJjAlZc5IRWVXrO2azsBch
iIGRDEgFqE/t/M5aLDtNz0mbKdgpfM5nVtVu8ZLfffddx127dh3p0q3H/AkT
Jhx/6aWXEEVYE/3J0mvTtc1umQ76OpxTNiQuA8H27MFAjxbPjh/R5nYXy8iO
lTozzFwYh2yqJgvm2ePfnrTk8Haofh758BsPu83fwseGrxgyc8iu/gMG33no
oYdaHTp0SFtJxr9t0iB5H9sa/7GCDRc6U+HhGMv8k6n9PMS0eihQtBhFbGSj
WXOWbt/Vf8w0oe9cGrNyE6ht/K3zwUuXr9ad38Djps/AO3coUq3S3O43DTYg
LyRYHju3RTQkaXrirO5btmyp/Mknn+hOFfPhv8z85MG7P3zOxns486iGLlPo
G20aP6E9k3iaqqVjYRvoEH+ollQIcH7jdto2bs4OznEy9jnXl8zwVjrIUZXH
u0LtQhrmEmJotW7GJm16v0ZibeJTzoEy2b5unTebb2CgRz2QhW17fdugsfFH
Ow+I+PyRJxuea9NjjGjlqeYp7ckz6LX56nYniZ7D0nQau6RRMgDUQjEgJzKN
3istuk/8qG7z/l89XPP5M217jRWH6JHWyzrTTKddb+3204z09nTXfqNnTpu9
SPU2w51qaW+fkQkf13mp/x+lqtT5sF6LgdvHzVbsCZ89Gtno1+ITquzvPT8e
G5vLIUSu4xe9mmYQyJwGLQ5OekElV0gOfEIhhViLTioZItZ8LgV6bpOjl3WR
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
u3ntxSuuhigGj6lSuuAXHR/vBdiiN+eqlSWuIJQ1m2CSqBBvHoKZODVpsLv5
1BiYQ0geMLbgisjb8fjndrwJ+KenTp1/AcPlAgCwNc62+vWfvnvx6NmnYNjN
F84ejb0YuPylFRgWw6UMi5lyWPyEPDZpnc2S174YSF0OG8VcB4flK59J2ynD
BuFu85B8bV0YiiBd1AWcqWGWeUbwABGGaMSaxSHcIAhmlaNP5AQ7Yn0xNRoY
be2HG1lEZhOj4x+UQrM2ua7iLqrAcXZIKjkJtxs7ZcqUqWPGjGF//zszONP+
0y8/1f0tuGr9VZi6BxqcYT1qDXmq6UkCNCJCNUQKmEAVLjAZT+ACZuzQnkQh
b/z81bs5vhX0GlGJaMYaRchuJ3jVbWen+FYox1Iq4JG/dA1t70B+LBSJjwXS
ELCmYsfOAxiyetNokZUF8H7JhKJ5TZtmnnudGtzUoFKiqZyjOnSlEXWoF4E/
eRSdayMXvfHlER9D2WXaS2Bk1hcwGeid8pumAPSCOKgAJh5CmmZDTS0Yb3hI
UfAM3t8rPQ7rdciO9z7jU2zjhQuuA7DG6qsWzP2u1Yi94Yt5+5DJJ/Ah+O/y
4RX4bhCwxAalhsCBaajFO0bT5DBwJeGgPAlP115123v16nX78OHD9f5tO+qo
o2Ayv23kyJEssIa/GZFpnqKN0RMowejcOj9Iglm0DJLQAEk10cTEYxieGBNn
YhOTtlWFDFFTx02YhM0ti7QWr65DY7q08d8/qm6q+qjT1E739r+v/wc/uPUH
Pim0EWmcYYukjfBh3BOYpK4yUZ8/yTS04BiCsXBiq8ilKm3n3rR22raj5x+H
to+fsvT0F0+eOpQRPdg67dOkh41RtAz6CrmM3WPJuhmwd67cQ04SgO2RdjTh
t6T5+DThuwRHYFrzB/vc0gV1ZbFsXT746hMDvSFu4FYf7DO168ypq9ZgOT/r
OKHLjbdvucOHF8Y8nz7++OPd6Q2MwbhW0YrlncAxioEwxhivd+/eXVf6Do3B
LBgXjiJjNC8EL4x5gVXG3b5ozYvHnnT2o/0G3qjzG/36ua2iQx3ChZJDXT9l
3LjxUyZOna7ji+65dtz8d390WF844FNLQUhxj6KBkWkmNEqBhEu11NFVPL7g
BpitGKzy+1bDWqF/XOL/Kr+x/OOOUzp+03xc839W3lT5XpdpXcZOeXoK+yeU
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
nJ0wa3JQsz5joOYbcQGY1UFzEBgL3NGp+KZ+0lBCU8OqBZreE/EU0bptwGV6
VUwRArX+kDpTzM+3wiSNlLLn72vzo06XmUsrxMMaA4S6slnYxXgjeWFCePGV
IIepjihgDAEJYVdF1cYj3728qGvpZ4iy4sI+R2bAGoFgKzQTZIH3XQSyULIH
n3W6wi2+c+29D7980cNb37pp2YMvTpm76me0Hi0ZP3/zogkLHp0/ZfHjK0fN
2fTQlZPXgtdxSV24edsO9O2HivMGOfnpZ575+pIhw3N3bXqppCy36tHXSir/
Ofi68SPnLVyCIzXljnu3nrLt1Q90jLd5lsudXePDpO+k+THQtL3f8OWbdtLx
2KAJazYNnbz2mUvH3PvUZWNXJbxUnTfkl7/Ehqi6I5WMtmQ1Oz/a0sQ0WQcV
7gv8nWwltXKlhDpvAwZTMhUHY3rNdTylbo7PU5pDFrA5XbXFNF8uugZEui6O
xRJwPEIM1wmVgBOFt45Aa2m5Ufo8kAIxoVs/dqjoRCVauuCPnKROk1AHlGOB
hQq5Ca34ZMANk1nkUFY5SWTnlgRrVErhFZUppwON8Pfswncy0pkWcjPaTCo6
qaNHrnBucz7H8HP+5EWPrbz5jk04eGuGz1i/evjMDdv7jVi+5ZLR9zw2aPzq
zVdMvO/nFwxftnrEzA133LL0iXXDpj2wYvQdmy5Z/+QrO844+4Lc8vUvlJsz
1/IPJ57Rb/Homau064oPbbwMp865Z8t9N8xY//J51y977exrl+7sdvnO/1a8
cu51d64eMWP97FvvfDL0MqyK1CUPsTvDx5/ZIhsSwJXEoYJwtVg/NJCSFfEp
MxCjSvZuR8EMYArVmvaHBrcuT4JzLI2MbHlN7YmCG5c2XrlF4uWKMCWwlF0Q
7XMtUclGhJvQyUbg5YRkIxys2IGqSkWjzwkUgor50gVu7JmqpUjyEyewEthU
qtJC3/ffmyjHkM/u8Hx1wWEJWXWB4+gjgz765F/7Sa4/CmuXknqgkMLrQj0X
a4hdcdeoOQ9BPQOL47p484yrF39yzKVzPjn20js+P2rA7C97nj3y7yed1b/C
nJi6fw4eNm7LOZePXnf9tPVP7rxZPjh+4LxfnzJkwQcnDJz37MU3333/dbc9
eNvtdz3T/+GfvUXrE4Zvxj2JKy/OFJKLhw8aSCZULn7QBenbQOBK2lD9ki+U
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
o//91+78qeR//R/8yKwQ\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"First", ",", "#"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Gather", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"ReadGrof", "[", "4", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"full", "=", 
           RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"e", ",", "Blue"}], "]"}], "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"VertexContract", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                   ",", "e", ",", "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", 
                RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"e", "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                   "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
       RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.7626953737564816`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    StyleBox[
     RowBox[{"1", "\[UndirectedEdge]", "4"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"2", "\[UndirectedEdge]", "5"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"3", "\[UndirectedEdge]", "6"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.762695375370783*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"First", ",", "#"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Gather", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"ReadGrof", "[", "3", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"full", "=", 
           RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"e", ",", "Blue"}], "]"}], "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"VertexContract", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                   ",", "e", ",", "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", 
                RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"e", "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                   "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
       RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.7626953871802936`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     StyleBox[
      RowBox[{"1", "\[UndirectedEdge]", "6"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], ",", 
     StyleBox[
      RowBox[{"2", "\[UndirectedEdge]", "4"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"1", "\[UndirectedEdge]", "4"}],
     StripOnInput->False,
     LineColor->RGBColor[0, 0, 1],
     FrontFaceColor->RGBColor[0, 0, 1],
     BackFaceColor->RGBColor[0, 0, 1],
     GraphicsColor->RGBColor[0, 0, 1],
     FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7626953889760585`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"ReadGrof", "[", "2", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"full", "=", 
       RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{"g", ",", 
        RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}], ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], 
      "\[Rule]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"First", ",", "#"}], "]"}], "&"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Gather", "[", 
         RowBox[{
          RowBox[{"Join", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"e", ",", "Blue"}], "]"}], "\[Rule]", 
               RowBox[{"Sort", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"SymbolToSets", ",", 
                  RowBox[{"AugmentedFormula", "[", 
                   RowBox[{
                    RowBox[{"FindFullFormula", "[", 
                    RowBox[{"VertexContract", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                    ",", "e", ",", "full"}], "]"}]}], "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", 
                RowBox[{"EdgeList", "[", 
                 RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], "}"}]}],
              "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"e", "\[Rule]", 
               RowBox[{"Sort", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"SymbolToSets", ",", 
                  RowBox[{"AugmentedFormula", "[", 
                   RowBox[{
                    RowBox[{"FindFullFormula", "[", 
                    RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                    "full"}], "]"}]}], "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"e", ",", 
                RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
            RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7626954216030836`*^9, 3.762695488918536*^9}}],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3, 5, 4}, {
       Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 4}, {3, 5}, {3, 
        4}, {5, 4}}}, {
       GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"},
         VertexLabels -> {"Name"}}]]}, 
     TagBox[GraphicsGroupBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.}, {4., 0.}}, 0.03700564971751412]}, 
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.}, {1., 1.}}, 0.03700564971751412]}, 
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.}, {0., 4.}}, 0.03700564971751412]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 0.}, {1., 1.}}, 0.03700564971751412]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 0.}, {0., 4.}}, 0.03700564971751412]}, 
         {Arrowheads[0.], 
          ArrowBox[{{4., 0.}, {2., 1.}}, 0.03700564971751412]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {0., 4.}}, 0.03700564971751412]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {2., 1.}}, 0.03700564971751412]}, 
         {Arrowheads[0.], 
          ArrowBox[{{0., 4.}, {2., 1.}}, 0.03700564971751412]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
         0.7]}], {DiskBox[{0., 0.}, 0.03700564971751412], 
          InsetBox["1", 
           Offset[{2, 2}, {0.03700564971751412, 0.03700564971751412}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{4., 0.}, 0.03700564971751412], 
          InsetBox["2", 
           Offset[{2, 2}, {4.037005649717514, 0.03700564971751412}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.03700564971751412], 
          InsetBox["3", 
           Offset[{2, 2}, {1.0370056497175142`, 1.0370056497175142`}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{0., 4.}, 0.03700564971751412], 
          InsetBox["5", 
           Offset[{2, 2}, {0.03700564971751412, 4.037005649717514}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.03700564971751412], 
          InsetBox["4", 
           Offset[{2, 2}, {2.037005649717514, 1.0370056497175142`}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FrameTicks->None,
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]]], "\[Rule]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      StyleBox[
       RowBox[{"1", "\[UndirectedEdge]", "4"}],
       StripOnInput->False,
       LineColor->RGBColor[0, 0, 1],
       FrontFaceColor->RGBColor[0, 0, 1],
       BackFaceColor->RGBColor[0, 0, 1],
       GraphicsColor->RGBColor[0, 0, 1],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "5"}]}], "}"}]}], "}"}]}]], "Output",
 CellChangeTimes->{{3.7626954339509735`*^9, 3.762695490731365*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", "=", 
       RowBox[{"ReadGrof", "[", "k", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"full", "=", 
         RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{"g", ",", 
          RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}], ",", 
          RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], 
        "\[Rule]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{"First", ",", "#"}], "]"}], "&"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Gather", "[", 
           RowBox[{
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"e", ",", "Blue"}], "]"}], "\[Rule]", 
                 RowBox[{"Sort", "[", 
                  RowBox[{"Map", "[", 
                   RowBox[{"SymbolToSets", ",", 
                    RowBox[{"AugmentedFormula", "[", 
                    RowBox[{
                    RowBox[{"FindFullFormula", "[", 
                    RowBox[{"VertexContract", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                    ",", "e", ",", "full"}], "]"}]}], "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"e", ",", 
                  RowBox[{"EdgeList", "[", 
                   RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], 
                 "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"e", "\[Rule]", 
                 RowBox[{"Sort", "[", 
                  RowBox[{"Map", "[", 
                   RowBox[{"SymbolToSets", ",", 
                    RowBox[{"AugmentedFormula", "[", 
                    RowBox[{
                    RowBox[{"FindFullFormula", "[", 
                    RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                    "full"}], "]"}]}], "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"e", ",", 
                  RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
              RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7626955248122206`*^9, 3.7626955399114523`*^9}, {
  3.7626957622447844`*^9, 3.762695762441309*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {3., 0.}}, 0.030239520958083826`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.030239520958083826`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 3.}}, 0.030239520958083826`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 0.}, {1., 1.}}, 0.030239520958083826`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 0.}, {0., 3.}}, 0.030239520958083826`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 3.}}, 0.030239520958083826`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.030239520958083826`], 
            InsetBox["1", 
             Offset[{2, 2}, {0.030239520958083826`, 0.030239520958083826`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{3., 0.}, 0.030239520958083826`], 
            InsetBox["2", 
             Offset[{2, 2}, {3.0302395209580837`, 0.030239520958083826`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1., 1.}, 0.030239520958083826`], 
            InsetBox["3", 
             Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0., 3.}, 0.030239520958083826`], 
            InsetBox["4", 
             Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}]}], "}"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 5, 4}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 4}, {3, 5}, {3, 
          4}, {5, 4}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {4., 0.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 4.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 0.}, {1., 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 0.}, {0., 4.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 0.}, {2., 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 4.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 4.}, {2., 1.}}, 0.03700564971751412]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.03700564971751412], 
            InsetBox["1", 
             Offset[{2, 2}, {0.03700564971751412, 0.03700564971751412}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 0.}, 0.03700564971751412],
             InsetBox["2", 
             Offset[{2, 2}, {4.037005649717514, 0.03700564971751412}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.03700564971751412],
             InsetBox["3", 
             Offset[{2, 2}, {1.0370056497175142`, 1.0370056497175142`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 4.}, 0.03700564971751412],
             InsetBox["5", 
             Offset[{2, 2}, {0.03700564971751412, 4.037005649717514}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.03700564971751412],
             InsetBox["4", 
             Offset[{2, 2}, {2.037005649717514, 1.0370056497175142`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        StyleBox[
         RowBox[{"1", "\[UndirectedEdge]", "4"}],
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontColor->RGBColor[0, 0, 1]], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "5"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 5, 6, 4}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {2, 5}, {3, 6}, {3, 
          4}, {3, 5}, {6, 4}, {6, 5}, {4, 5}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {5., 0.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 5.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 0.}, {1., 1.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 0.}, {0., 5.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 0.}, {3., 1.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 5.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {3., 1.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 5.}, {3., 1.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 5.}, {2., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {2., 2.}}, 0.043048128342245986`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.043048128342245986`], 
            InsetBox["1", 
             Offset[{2, 2}, {0.043048128342245986`, 0.043048128342245986`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{5., 0.}, 0.043048128342245986`], 
            InsetBox["2", 
             Offset[{2, 2}, {5.043048128342246, 0.043048128342245986`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1., 1.}, 0.043048128342245986`], 
            InsetBox["3", 
             Offset[{2, 2}, {1.043048128342246, 1.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0., 5.}, 0.043048128342245986`], 
            InsetBox["5", 
             Offset[{2, 2}, {0.043048128342245986`, 5.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{3., 1.}, 0.043048128342245986`], 
            InsetBox["6", 
             Offset[{2, 2}, {3.043048128342246, 1.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2., 2.}, 0.043048128342245986`], 
            InsetBox["4", 
             Offset[{2, 2}, {2.043048128342246, 2.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        StyleBox[
         RowBox[{"1", "\[UndirectedEdge]", "6"}],
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontColor->RGBColor[0, 0, 1]], ",", 
        StyleBox[
         RowBox[{"2", "\[UndirectedEdge]", "4"}],
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 5, 6, 4}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {2, 5}, {3, 
          6}, {3, 4}, {6, 4}, {6, 5}, {4, 5}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {5., 0.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {2., 1.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 5.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 0.}, {2., 1.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 0.}, {0., 5.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 0.}, {2., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.}, {1., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.}, {2., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {0., 5.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 5.}, {2., 2.}}, 0.043048128342245986`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.043048128342245986`], 
            InsetBox["1", 
             Offset[{2, 2}, {0.043048128342245986`, 0.043048128342245986`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{5., 0.}, 0.043048128342245986`], 
            InsetBox["2", 
             Offset[{2, 2}, {5.043048128342246, 0.043048128342245986`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2., 1.}, 0.043048128342245986`], 
            InsetBox["3", 
             Offset[{2, 2}, {2.043048128342246, 1.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1., 2.}, 0.043048128342245986`], 
            InsetBox["5", 
             Offset[{2, 2}, {1.043048128342246, 2.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0., 5.}, 0.043048128342245986`], 
            InsetBox["6", 
             Offset[{2, 2}, {0.043048128342245986`, 5.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2., 2.}, 0.043048128342245986`], 
            InsetBox["4", 
             Offset[{2, 2}, {2.043048128342246, 2.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 7, 5, 6, 4}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 6}, {2, 4}, {3, 
          7}, {3, 5}, {3, 6}, {3, 4}, {7, 5}, {7, 6}, {5, 6}, {5, 4}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {6., 0.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {1., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 3.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 3.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {2., 2.}}, 0.04847715736040609]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], 
            InsetBox["1", 
             Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{6., 0.}, 0.04847715736040609],
             InsetBox["2", 
             Offset[{2, 2}, {6.048477157360406, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609],
             InsetBox["3", 
             Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 6.}, 0.04847715736040609],
             InsetBox["7", 
             Offset[{2, 2}, {0.04847715736040609, 6.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.04847715736040609],
             InsetBox["5", 
             Offset[{2, 2}, {2.048477157360406, 3.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.04847715736040609],
             InsetBox["6", 
             Offset[{2, 2}, {3.048477157360406, 1.0484771573604061`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609],
             InsetBox["4", 
             Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 5, 7, 6, 4}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 6}, {2, 5}, {3, 
          7}, {3, 4}, {3, 6}, {7, 4}, {7, 6}, {4, 6}, {4, 5}, {6, 5}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {6., 0.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {1., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 3.}, {2., 2.}}, 0.04847715736040609]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], 
            InsetBox["1", 
             Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{6., 0.}, 0.04847715736040609],
             InsetBox["2", 
             Offset[{2, 2}, {6.048477157360406, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.04847715736040609],
             InsetBox["3", 
             Offset[{2, 2}, {3.048477157360406, 1.0484771573604061`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.04847715736040609],
             InsetBox["5", 
             Offset[{2, 2}, {1.0484771573604061`, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 6.}, 0.04847715736040609],
             InsetBox["7", 
             Offset[{2, 2}, {0.04847715736040609, 6.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.04847715736040609],
             InsetBox["6", 
             Offset[{2, 2}, {2.048477157360406, 3.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609],
             InsetBox["4", 
             Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 5, 7, 6, 4}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 6}, {3, 
          7}, {3, 6}, {3, 5}, {7, 4}, {7, 6}, {7, 5}, {4, 6}, {4, 5}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {6., 0.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {1., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {1., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 2.}, {2., 2.}}, 0.04847715736040609]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], 
            InsetBox["1", 
             Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{6., 0.}, 0.04847715736040609],
             InsetBox["2", 
             Offset[{2, 2}, {6.048477157360406, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.04847715736040609],
             InsetBox["3", 
             Offset[{2, 2}, {3.048477157360406, 1.0484771573604061`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 6.}, 0.04847715736040609],
             InsetBox["5", 
             Offset[{2, 2}, {0.04847715736040609, 6.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.04847715736040609],
             InsetBox["7", 
             Offset[{2, 2}, {1.0484771573604061`, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.04847715736040609],
             InsetBox["6", 
             Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609],
             InsetBox["4", 
             Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "7"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 5, 7, 4, 6}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {2, 5}, {3, 6}, {3, 
          4}, {3, 7}, {3, 5}, {6, 4}, {6, 7}, {4, 7}, {4, 5}, {7, 5}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {6., 0.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {1., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {4., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {4., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {4., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 3.}, {3., 2.}}, 0.04847715736040609]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], 
            InsetBox["1", 
             Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{6., 0.}, 0.04847715736040609],
             InsetBox["2", 
             Offset[{2, 2}, {6.048477157360406, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609],
             InsetBox["3", 
             Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 6.}, 0.04847715736040609],
             InsetBox["5", 
             Offset[{2, 2}, {0.04847715736040609, 6.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.04847715736040609],
             InsetBox["7", 
             Offset[{2, 2}, {4.048477157360406, 1.0484771573604061`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.04847715736040609],
             InsetBox["4", 
             Offset[{2, 2}, {2.048477157360406, 3.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.04847715736040609],
             InsetBox["6", 
             Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "7"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 5, 6, 7, 4}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {3, 
          7}, {3, 4}, {3, 5}, {3, 6}, {7, 4}, {7, 5}, {4, 5}, {5, 6}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {6., 0.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {1., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 2.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 2.}, {2., 3.}}, 0.04847715736040609]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], 
            InsetBox["1", 
             Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{6., 0.}, 0.04847715736040609],
             InsetBox["2", 
             Offset[{2, 2}, {6.048477157360406, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609],
             InsetBox["3", 
             Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 6.}, 0.04847715736040609],
             InsetBox["5", 
             Offset[{2, 2}, {0.04847715736040609, 6.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.04847715736040609],
             InsetBox["6", 
             Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.04847715736040609],
             InsetBox["7", 
             Offset[{2, 2}, {3.048477157360406, 1.0484771573604061`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.04847715736040609],
             InsetBox["4", 
             Offset[{2, 2}, {2.048477157360406, 3.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 7, 5, 6, 8, 4}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 6}, {2, 4}, {3, 
          5}, {3, 6}, {3, 4}, {3, 7}, {8, 5}, {8, 6}, {8, 7}, {5, 6}, {5, 
          4}, {5, 7}, {6, 7}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {7., 0.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 4.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 4.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 4.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 2.}, {3., 2.}}, 0.05338164251207729]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.05338164251207729], 
            InsetBox["1", 
             Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{7., 0.}, 0.05338164251207729],
             InsetBox["2", 
             Offset[{2, 2}, {7.053381642512077, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05338164251207729],
             InsetBox["3", 
             Offset[{2, 2}, {1.0533816425120772`, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 7.}, 0.05338164251207729],
             InsetBox["7", 
             Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 4.}, 0.05338164251207729],
             InsetBox["5", 
             Offset[{2, 2}, {2.053381642512077, 4.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.05338164251207729],
             InsetBox["6", 
             Offset[{2, 2}, {4.053381642512077, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.05338164251207729],
             InsetBox["8", 
             Offset[{2, 2}, {2.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.05338164251207729],
             InsetBox["4", 
             Offset[{2, 2}, {3.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 7, 5, 6, 4, 8}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 6}, {2, 4}, {3, 
          7}, {3, 6}, {3, 4}, {3, 8}, {7, 5}, {7, 6}, {7, 8}, {5, 6}, {5, 
          4}, {5, 8}, {4, 8}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {7., 0.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {3., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {3., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 3.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 3.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 3.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 2.}, {2., 3.}}, 0.05338164251207729]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.05338164251207729], 
            InsetBox["1", 
             Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{7., 0.}, 0.05338164251207729],
             InsetBox["2", 
             Offset[{2, 2}, {7.053381642512077, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05338164251207729],
             InsetBox["3", 
             Offset[{2, 2}, {1.0533816425120772`, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 7.}, 0.05338164251207729],
             InsetBox["7", 
             Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 3.}, 0.05338164251207729],
             InsetBox["5", 
             Offset[{2, 2}, {3.053381642512077, 3.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.05338164251207729],
             InsetBox["6", 
             Offset[{2, 2}, {4.053381642512077, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.05338164251207729],
             InsetBox["4", 
             Offset[{2, 2}, {3.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.05338164251207729],
             InsetBox["8", 
             Offset[{2, 2}, {2.053381642512077, 3.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"6", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", "\[UndirectedEdge]", "8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 7, 5, 6, 4, 8}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 6}, {2, 4}, {3, 
          7}, {3, 5}, {3, 6}, {3, 4}, {3, 8}, {7, 6}, {7, 8}, {5, 6}, {5, 
          4}, {5, 8}, {6, 8}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {7., 0.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 4.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 4.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 2.}, {2., 3.}}, 0.05338164251207729]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.05338164251207729], 
            InsetBox["1", 
             Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{7., 0.}, 0.05338164251207729],
             InsetBox["2", 
             Offset[{2, 2}, {7.053381642512077, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05338164251207729],
             InsetBox["3", 
             Offset[{2, 2}, {1.0533816425120772`, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 7.}, 0.05338164251207729],
             InsetBox["7", 
             Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 4.}, 0.05338164251207729],
             InsetBox["5", 
             Offset[{2, 2}, {2.053381642512077, 4.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.05338164251207729],
             InsetBox["6", 
             Offset[{2, 2}, {4.053381642512077, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.05338164251207729],
             InsetBox["4", 
             Offset[{2, 2}, {2.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.05338164251207729],
             InsetBox["8", 
             Offset[{2, 2}, {2.053381642512077, 3.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 7, 5, 8, 4, 6}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 4}, {2, 6}, {3, 
          7}, {3, 5}, {3, 8}, {3, 4}, {3, 6}, {7, 5}, {7, 8}, {5, 8}, {5, 
          4}, {5, 6}, {8, 6}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {7., 0.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 4.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 4.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 4.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 3.}, {3., 2.}}, 0.05338164251207729]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.05338164251207729], 
            InsetBox["1", 
             Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{7., 0.}, 0.05338164251207729],
             InsetBox["2", 
             Offset[{2, 2}, {7.053381642512077, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05338164251207729],
             InsetBox["3", 
             Offset[{2, 2}, {1.0533816425120772`, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 7.}, 0.05338164251207729],
             InsetBox["7", 
             Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 4.}, 0.05338164251207729],
             InsetBox["5", 
             Offset[{2, 2}, {2.053381642512077, 4.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.05338164251207729],
             InsetBox["8", 
             Offset[{2, 2}, {4.053381642512077, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.05338164251207729],
             InsetBox["4", 
             Offset[{2, 2}, {2.053381642512077, 3.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.05338164251207729],
             InsetBox["6", 
             Offset[{2, 2}, {3.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"8", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 7, 5, 6, 8, 4}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 6}, {2, 4}, {2, 
          7}, {3, 8}, {3, 5}, {3, 4}, {3, 7}, {8, 5}, {8, 6}, {8, 7}, {5, 
          6}, {5, 4}, {6, 7}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {7., 0.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {3., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {3., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {2., 4.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 4.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 4.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 2.}, {3., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 2.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {2., 2.}}, 0.05338164251207729]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.05338164251207729], 
            InsetBox["1", 
             Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{7., 0.}, 0.05338164251207729],
             InsetBox["2", 
             Offset[{2, 2}, {7.053381642512077, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05338164251207729],
             InsetBox["3", 
             Offset[{2, 2}, {1.0533816425120772`, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 7.}, 0.05338164251207729],
             InsetBox["7", 
             Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 4.}, 0.05338164251207729],
             InsetBox["5", 
             Offset[{2, 2}, {2.053381642512077, 4.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.05338164251207729],
             InsetBox["6", 
             Offset[{2, 2}, {3.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.05338164251207729],
             InsetBox["8", 
             Offset[{2, 2}, {3.053381642512077, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.05338164251207729],
             InsetBox["4", 
             Offset[{2, 2}, {2.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 7, 6, 8, 4, 5}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 4}, {2, 6}, {3, 
          7}, {3, 8}, {3, 5}, {3, 4}, {7, 8}, {7, 5}, {8, 5}, {8, 4}, {8, 
          6}, {5, 6}, {4, 6}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {7., 0.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {3., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {3., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {3., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 3.}, {2., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 2.}, {2., 3.}}, 0.05338164251207729]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.05338164251207729], 
            InsetBox["1", 
             Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{7., 0.}, 0.05338164251207729],
             InsetBox["2", 
             Offset[{2, 2}, {7.053381642512077, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05338164251207729],
             InsetBox["3", 
             Offset[{2, 2}, {1.0533816425120772`, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 7.}, 0.05338164251207729],
             InsetBox["7", 
             Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.05338164251207729],
             InsetBox["6", 
             Offset[{2, 2}, {4.053381642512077, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 3.}, 0.05338164251207729],
             InsetBox["8", 
             Offset[{2, 2}, {3.053381642512077, 3.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.05338164251207729],
             InsetBox["4", 
             Offset[{2, 2}, {2.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.05338164251207729],
             InsetBox["5", 
             Offset[{2, 2}, {2.053381642512077, 3.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"8", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", "\[UndirectedEdge]", "8"}], "}"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.762695526558848*^9, 3.7626955549545584`*^9}, 
   3.7626957930198393`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"First", ",", "#"}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Gather", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"ReadGrof", "[", "2", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"full", "=", 
           RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Join", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"e", ",", "Blue"}], "]"}], "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"VertexContract", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                   ",", "e", ",", "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", 
                RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"e", "\[Rule]", 
              RowBox[{"Sort", "[", 
               RowBox[{"Map", "[", 
                RowBox[{"SymbolToSets", ",", 
                 RowBox[{"AugmentedFormula", "[", 
                  RowBox[{
                   RowBox[{"FindFullFormula", "[", 
                    RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                   "full"}], "]"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
       RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.762695396568323*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     StyleBox[
      RowBox[{"1", "\[UndirectedEdge]", "4"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "5"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7626953977795305`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"JacobsThalGraph", "[", "k", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"full", "=", 
           RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Graph", "[", 
           RowBox[{"g", ",", 
            RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}], 
            ",", 
            RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], 
          "\[Rule]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"First", ",", "#"}], "]"}], "&"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Gather", "[", 
             RowBox[{
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"e", ",", "Blue"}], "]"}], "\[Rule]", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{"SymbolToSets", ",", 
                    RowBox[{"AugmentedFormula", "[", 
                    RowBox[{
                    RowBox[{"FindFullFormula", "[", 
                    RowBox[{"VertexContract", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                    ",", "e", ",", "full"}], "]"}]}], "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"e", ",", 
                    RowBox[{"EdgeList", "[", 
                    RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], 
                   "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"e", "\[Rule]", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{"SymbolToSets", ",", 
                    RowBox[{"AugmentedFormula", "[", 
                    RowBox[{
                    RowBox[{"FindFullFormula", "[", 
                    RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                    "full"}], "]"}]}], "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"e", ",", 
                    RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
               "\[IndentingNewLine]", "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
                RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "e"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7626967808127427`*^9, 3.7626967907693257`*^9}, 
   3.7626968595306253`*^9, {3.7626968982348237`*^9, 3.762696902996522*^9}, 
   3.762696948067108*^9, 3.762697024736541*^9, 3.76269723917204*^9, {
   3.7627030477391005`*^9, 3.7627030633746834`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {5, 2}, {5, 
          3}, {5, 4}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {4., 0.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 4.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 0.}, {1., 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 0.}, {0., 4.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 0.}, {1., 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {1., 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 4.}, {1., 2.}}, 0.03700564971751412]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.03700564971751412], 
            InsetBox["1", 
             Offset[{2, 2}, {0.03700564971751412, 0.03700564971751412}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 0.}, 0.03700564971751412],
             InsetBox["2", 
             Offset[{2, 2}, {4.037005649717514, 0.03700564971751412}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.03700564971751412],
             InsetBox["3", 
             Offset[{2, 2}, {1.0370056497175142`, 1.0370056497175142`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 4.}, 0.03700564971751412],
             InsetBox["4", Offset[{2, 2}, 
             {0.03700564971751412, 4.037005649717514}], ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.03700564971751412],
             InsetBox["5", 
             Offset[{2, 2}, {1.0370056497175142`, 2.037005649717514}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        StyleBox[
         RowBox[{"3", "\[UndirectedEdge]", "4"}],
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontColor->RGBColor[0, 0, 1]], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "1"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "1"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "2"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6}, {
         Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 2}, {6, 
          3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {5., 0.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {2., 1.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 5.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 0.}, {2., 1.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 0.}, {0., 5.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 0.}, {2., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.}, {1., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 1.}, {2., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 5.}, {1., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 5.}, {2., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 2.}}, 0.043048128342245986`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.043048128342245986`], 
            InsetBox["1", 
             Offset[{2, 2}, {0.043048128342245986`, 0.043048128342245986`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{5., 0.}, 0.043048128342245986`], 
            InsetBox["2", 
             Offset[{2, 2}, {5.043048128342246, 0.043048128342245986`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2., 1.}, 0.043048128342245986`], 
            InsetBox["3", 
             Offset[{2, 2}, {2.043048128342246, 1.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0., 5.}, 0.043048128342245986`], 
            InsetBox["4", 
             Offset[{2, 2}, {0.043048128342245986`, 5.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1., 2.}, 0.043048128342245986`], 
            InsetBox["5", 
             Offset[{2, 2}, {1.043048128342246, 2.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2., 2.}, 0.043048128342245986`], 
            InsetBox["6", 
             Offset[{2, 2}, {2.043048128342246, 2.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "1"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "1"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "4"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 7, 6}, {
         Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 2}, {6, 
          3}, {5, 4}, {5, 3}, {7, 5}, {7, 3}, {7, 4}, {6, 7}, {6, 4}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {6., 0.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {3., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {1., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {1., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {3., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 2.}, {2., 2.}}, 0.04847715736040609]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], 
            InsetBox["1", 
             Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{6., 0.}, 0.04847715736040609],
             InsetBox["2", 
             Offset[{2, 2}, {6.048477157360406, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.04847715736040609],
             InsetBox["3", 
             Offset[{2, 2}, {3.048477157360406, 1.0484771573604061`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 6.}, 0.04847715736040609],
             InsetBox["4", 
             Offset[{2, 2}, {0.04847715736040609, 6.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.04847715736040609],
             InsetBox["5", 
             Offset[{2, 2}, {1.0484771573604061`, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.04847715736040609],
             InsetBox["7", 
             Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609],
             InsetBox["6", 
             Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "1"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"7", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"6", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", "\[UndirectedEdge]", "6"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 8, 6, 7}, {
         Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 2}, {6, 
          3}, {5, 4}, {5, 3}, {7, 5}, {7, 3}, {7, 4}, {8, 7}, {8, 3}, {8, 
          4}, {6, 8}, {6, 4}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {7., 0.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {4., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {4., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {1., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {4., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {1., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {4., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 2.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 2.}, {3., 2.}}, 0.05338164251207729]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.05338164251207729], 
            InsetBox["1", 
             Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{7., 0.}, 0.05338164251207729],
             InsetBox["2", 
             Offset[{2, 2}, {7.053381642512077, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.05338164251207729],
             InsetBox["3", 
             Offset[{2, 2}, {4.053381642512077, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 7.}, 0.05338164251207729],
             InsetBox["4", 
             Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.05338164251207729],
             InsetBox["5", 
             Offset[{2, 2}, {1.0533816425120772`, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 2.}, 0.05338164251207729],
             InsetBox["8", 
             Offset[{2, 2}, {4.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.05338164251207729],
             InsetBox["6", 
             Offset[{2, 2}, {2.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.05338164251207729],
             InsetBox["7", 
             Offset[{2, 2}, {3.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"8", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "1"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"8", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"8", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"6", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"7", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", "\[UndirectedEdge]", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 9, 6, 7, 8}, {
         Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 2}, {6, 
          3}, {5, 4}, {5, 3}, {7, 5}, {7, 3}, {7, 4}, {8, 7}, {8, 3}, {8, 
          4}, {9, 8}, {9, 3}, {9, 4}, {6, 9}, {6, 4}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {8., 0.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {5., 1.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 8.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{8., 0.}, {5., 1.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{8., 0.}, {0., 8.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{8., 0.}, {5., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 1.}, {1., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 1.}, {5., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 1.}, {2., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 1.}, {3., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 1.}, {4., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 8.}, {1., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 8.}, {5., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 8.}, {2., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 8.}, {3., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 8.}, {4., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 2.}, {4., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 2.}, {3., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 2.}, {4., 2.}}, 0.05783410138248847]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.05783410138248847], 
            InsetBox["1", 
             Offset[{2, 2}, {0.05783410138248847, 0.05783410138248847}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{8., 0.}, 0.05783410138248847],
             InsetBox["2", 
             Offset[{2, 2}, {8.057834101382488, 0.05783410138248847}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{5., 1.}, 0.05783410138248847],
             InsetBox["3", 
             Offset[{2, 2}, {5.057834101382489, 1.0578341013824886`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 8.}, 0.05783410138248847],
             InsetBox["4", 
             Offset[{2, 2}, {0.05783410138248847, 8.057834101382488}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.05783410138248847],
             InsetBox["5", 
             Offset[{2, 2}, {1.0578341013824886`, 2.0578341013824883`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{5., 2.}, 0.05783410138248847],
             InsetBox["9", 
             Offset[{2, 2}, {5.057834101382489, 2.0578341013824883`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.05783410138248847],
             InsetBox["6", 
             Offset[{2, 2}, {2.0578341013824883`, 2.0578341013824883`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.05783410138248847],
             InsetBox["7", 
             Offset[{2, 2}, {3.0578341013824883`, 2.0578341013824883`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 2.}, 0.05783410138248847],
             InsetBox["8", 
             Offset[{2, 2}, {4.057834101382489, 2.0578341013824883`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"9", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"9", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"6", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "1"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"9", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"9", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"6", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"7", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"8", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"8", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", "\[UndirectedEdge]", "8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 10, 6, 7, 8, 9}, {
         Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 2}, {6, 
          3}, {5, 4}, {5, 3}, {7, 5}, {7, 3}, {7, 4}, {8, 7}, {8, 3}, {8, 
          4}, {9, 8}, {9, 3}, {9, 4}, {10, 9}, {10, 3}, {10, 4}, {6, 10}, {6, 
          4}}}, {GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {9., 0.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {6., 1.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 9.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{9., 0.}, {6., 1.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{9., 0.}, {0., 9.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{9., 0.}, {6., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 1.}, {1., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 1.}, {6., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 1.}, {2., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 1.}, {3., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 1.}, {4., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 1.}, {5., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 9.}, {1., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 9.}, {6., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 9.}, {2., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 9.}, {3., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 9.}, {4., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 9.}, {5., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 2.}, {5., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 2.}, {3., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 2.}, {4., 2.}}, 0.061894273127753294`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 2.}, {5., 2.}}, 0.061894273127753294`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.061894273127753294`], 
            InsetBox["1", 
             Offset[{2, 2}, {0.061894273127753294`, 0.061894273127753294`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{9., 0.}, 0.061894273127753294`], 
            InsetBox["2", 
             Offset[{2, 2}, {9.061894273127754, 0.061894273127753294`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{6., 1.}, 0.061894273127753294`], 
            InsetBox["3", 
             Offset[{2, 2}, {6.061894273127753, 1.0618942731277532`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0., 9.}, 0.061894273127753294`], 
            InsetBox["4", 
             Offset[{2, 2}, {0.061894273127753294`, 9.061894273127754}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1., 2.}, 0.061894273127753294`], 
            InsetBox["5", 
             Offset[{2, 2}, {1.0618942731277532`, 2.0618942731277534`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{6., 2.}, 0.061894273127753294`], 
            InsetBox["10", 
             Offset[{2, 2}, {6.061894273127753, 2.0618942731277534`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2., 2.}, 0.061894273127753294`], 
            InsetBox["6", 
             Offset[{2, 2}, {2.0618942731277534`, 2.0618942731277534`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{3., 2.}, 0.061894273127753294`], 
            InsetBox["7", 
             Offset[{2, 2}, {3.0618942731277534`, 2.0618942731277534`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{4., 2.}, 0.061894273127753294`], 
            InsetBox["8", 
             Offset[{2, 2}, {4.061894273127753, 2.0618942731277534`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{5., 2.}, 0.061894273127753294`], 
            InsetBox["9", 
             Offset[{2, 2}, {5.061894273127753, 2.0618942731277534`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "10"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "4"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "10"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"10", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"10", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"10", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"6", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"6", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"7", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "1"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"10", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"5", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "3"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"6", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"6", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"7", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"8", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"8", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"9", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"9", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", "\[UndirectedEdge]", "9"}], "}"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.762696856238877*^9, 3.762696867262267*^9}, 
   3.762696910886415*^9, 3.7626969913936524`*^9, 3.76269707025371*^9, 
   3.7627030391041336`*^9, 3.762703955777824*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Differences", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "6", ",", "16", ",", "22", ",", "29"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.762697005724862*^9, 3.76269701026798*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "10", ",", "6", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.762697011364871*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"MinimalGraph2", "[", "k", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"full", "=", 
           RowBox[{"FindFullFormula", "[", "g", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Graph", "[", 
           RowBox[{"g", ",", 
            RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}], 
            ",", 
            RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], 
          "\[Rule]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"First", ",", "#"}], "]"}], "&"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Gather", "[", 
             RowBox[{
              RowBox[{"Join", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"e", ",", "Blue"}], "]"}], "\[Rule]", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{"SymbolToSets", ",", 
                    RowBox[{"AugmentedFormula", "[", 
                    RowBox[{
                    RowBox[{"FindFullFormula", "[", 
                    RowBox[{"VertexContract", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}], 
                    ",", "e", ",", "full"}], "]"}]}], "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"e", ",", 
                    RowBox[{"EdgeList", "[", 
                    RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], 
                   "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"e", "\[Rule]", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{"SymbolToSets", ",", 
                    RowBox[{"AugmentedFormula", "[", 
                    RowBox[{
                    RowBox[{"FindFullFormula", "[", 
                    RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", "e", ",", 
                    "full"}], "]"}]}], "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"e", ",", 
                    RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
               "\[IndentingNewLine]", "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "[", "#1", "]"}], "\[Equal]", 
                RowBox[{"Last", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "3", ",", "8"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "e"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7627463553180623`*^9, 3.7627463591813374`*^9}, {
  3.762746389942355*^9, 3.762746392422005*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4}, {
         Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {3., 0.}}, 0.030239520958083826`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.030239520958083826`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 3.}}, 0.030239520958083826`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 0.}, {1., 1.}}, 0.030239520958083826`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 0.}, {0., 3.}}, 0.030239520958083826`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 3.}}, 0.030239520958083826`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.030239520958083826`], 
            InsetBox["1", 
             Offset[{2, 2}, {0.030239520958083826`, 0.030239520958083826`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{3., 0.}, 0.030239520958083826`], 
            InsetBox["2", 
             Offset[{2, 2}, {3.0302395209580837`, 0.030239520958083826`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1., 1.}, 0.030239520958083826`], 
            InsetBox["3", 
             Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0., 3.}, 0.030239520958083826`], 
            InsetBox["4", 
             Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}]}], "}"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2, 
          5}, {4, 5}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {4., 0.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 4.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 0.}, {1., 1.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 0.}, {1., 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 0.}, {0., 4.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {1., 2.}}, 0.03700564971751412]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {0., 4.}}, 0.03700564971751412]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.03700564971751412], 
            InsetBox["1", 
             Offset[{2, 2}, {0.03700564971751412, 0.03700564971751412}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 0.}, 0.03700564971751412],
             InsetBox["2", 
             Offset[{2, 2}, {4.037005649717514, 0.03700564971751412}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.03700564971751412],
             InsetBox["3", 
             Offset[{2, 2}, {1.0370056497175142`, 1.0370056497175142`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.03700564971751412],
             InsetBox["4", 
             Offset[{2, 2}, {1.0370056497175142`, 2.037005649717514}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 4.}, 0.03700564971751412],
             InsetBox["5", 
             Offset[{2, 2}, {0.03700564971751412, 4.037005649717514}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        StyleBox[
         RowBox[{"3", "\[UndirectedEdge]", "5"}],
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontColor->RGBColor[0, 0, 1]], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "4"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6}, {
         Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {3, 
          5}, {4, 5}, {3, 6}, {4, 6}, {5, 6}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {5., 0.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {3., 1.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 5.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 0.}, {3., 1.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 0.}, {0., 5.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {0., 5.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {1., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 1.}, {2., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 5.}, {1., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 5.}, {2., 2.}}, 0.043048128342245986`]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 2.}}, 0.043048128342245986`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.043048128342245986`], 
            InsetBox["1", 
             Offset[{2, 2}, {0.043048128342245986`, 0.043048128342245986`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{5., 0.}, 0.043048128342245986`], 
            InsetBox["2", 
             Offset[{2, 2}, {5.043048128342246, 0.043048128342245986`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{3., 1.}, 0.043048128342245986`], 
            InsetBox["3", 
             Offset[{2, 2}, {3.043048128342246, 1.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0., 5.}, 0.043048128342245986`], 
            InsetBox["4", 
             Offset[{2, 2}, {0.043048128342245986`, 5.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1., 2.}, 0.043048128342245986`], 
            InsetBox["5", 
             Offset[{2, 2}, {1.043048128342246, 2.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2., 2.}, 0.043048128342245986`], 
            InsetBox["6", 
             Offset[{2, 2}, {2.043048128342246, 2.043048128342246}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        StyleBox[
         RowBox[{"1", "\[UndirectedEdge]", "6"}],
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontColor->RGBColor[0, 0, 1]], ",", 
        StyleBox[
         RowBox[{"2", "\[UndirectedEdge]", "5"}],
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "6"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7}, {
         Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {2, 5}, {3, 
          5}, {4, 5}, {3, 6}, {4, 6}, {5, 6}, {3, 7}, {5, 7}, {6, 7}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {6., 0.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {1., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{6., 0.}, {4., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {0., 6.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {4., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {4., 1.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 6.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {2., 3.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 1.}, {2., 2.}}, 0.04847715736040609]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 3.}, {2., 2.}}, 0.04847715736040609]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], 
            InsetBox["1", 
             Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{6., 0.}, 0.04847715736040609],
             InsetBox["2", 
             Offset[{2, 2}, {6.048477157360406, 0.04847715736040609}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609],
             InsetBox["3", 
             Offset[{2, 2}, {1.0484771573604061`, 1.0484771573604061`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 6.}, 0.04847715736040609],
             InsetBox["4", 
             Offset[{2, 2}, {0.04847715736040609, 6.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.04847715736040609],
             InsetBox["5", 
             Offset[{2, 2}, {4.048477157360406, 1.0484771573604061`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.04847715736040609],
             InsetBox["6", 
             Offset[{2, 2}, {2.048477157360406, 3.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609],
             InsetBox["7", 
             Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"4", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"5", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
         Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2, 
          5}, {4, 5}, {2, 6}, {4, 6}, {5, 6}, {2, 7}, {5, 7}, {6, 7}, {2, 
          8}, {6, 8}, {7, 8}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {7., 0.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {1., 1.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {1., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {3., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{7., 0.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {1., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {0., 7.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {2., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 7.}, {3., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 2.}, {3., 3.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 2.}, {3., 2.}}, 0.05338164251207729]}, 
           {Arrowheads[0.], 
            ArrowBox[{{3., 3.}, {3., 2.}}, 0.05338164251207729]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.05338164251207729], 
            InsetBox["1", 
             Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{7., 0.}, 0.05338164251207729],
             InsetBox["2", 
             Offset[{2, 2}, {7.053381642512077, 0.05338164251207729}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05338164251207729],
             InsetBox["3", 
             Offset[{2, 2}, {1.0533816425120772`, 1.0533816425120772`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.05338164251207729],
             InsetBox["4", 
             Offset[{2, 2}, {1.0533816425120772`, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 7.}, 0.05338164251207729],
             InsetBox["5", 
             Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.05338164251207729],
             InsetBox["6", 
             Offset[{2, 2}, {2.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 3.}, 0.05338164251207729],
             InsetBox["7", 
             Offset[{2, 2}, {3.053381642512077, 3.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.05338164251207729],
             InsetBox["8", 
             Offset[{2, 2}, {3.053381642512077, 2.053381642512077}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"4", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"4", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", "\[UndirectedEdge]", "8"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9}, {
         Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2, 
          5}, {4, 5}, {2, 6}, {4, 6}, {5, 6}, {4, 7}, {5, 7}, {6, 7}, {4, 
          8}, {5, 8}, {7, 8}, {4, 9}, {7, 9}, {8, 9}}}, {
         GraphLayout -> {
           "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
          VertexLabels -> {"Name"}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {8., 0.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 1.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {1., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 0.}, {0., 8.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{8., 0.}, {1., 1.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{8., 0.}, {1., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{8., 0.}, {0., 8.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{8., 0.}, {5., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 1.}, {1., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {0., 8.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {5., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {4., 3.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 5.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{1., 2.}, {2., 4.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 8.}, {5., 2.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 8.}, {4., 3.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{0., 8.}, {2., 5.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{5., 2.}, {4., 3.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 3.}, {2., 5.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{4., 3.}, {2., 4.}}, 0.05783410138248847]}, 
           {Arrowheads[0.], 
            ArrowBox[{{2., 5.}, {2., 4.}}, 0.05783410138248847]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
           0.7]}], {DiskBox[{0., 0.}, 0.05783410138248847], 
            InsetBox["1", 
             Offset[{2, 2}, {0.05783410138248847, 0.05783410138248847}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{8., 0.}, 0.05783410138248847],
             InsetBox["2", 
             Offset[{2, 2}, {8.057834101382488, 0.05783410138248847}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05783410138248847],
             InsetBox["3", 
             Offset[{2, 2}, {1.0578341013824886`, 1.0578341013824886`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.05783410138248847],
             InsetBox["4", 
             Offset[{2, 2}, {1.0578341013824886`, 2.0578341013824883`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{0., 8.}, 0.05783410138248847],
             InsetBox["5", 
             Offset[{2, 2}, {0.05783410138248847, 8.057834101382488}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{5., 2.}, 0.05783410138248847],
             InsetBox["6", 
             Offset[{2, 2}, {5.057834101382489, 2.0578341013824883`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{4., 3.}, 0.05783410138248847],
             InsetBox["7", 
             Offset[{2, 2}, {4.057834101382489, 3.0578341013824883`}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 5.}, 0.05783410138248847],
             InsetBox["8", 
             Offset[{2, 2}, {2.0578341013824883`, 5.057834101382489}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {DiskBox[{2., 4.}, 0.05783410138248847],
             InsetBox["9", 
             Offset[{2, 2}, {2.0578341013824883`, 4.057834101382489}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FrameTicks->None,
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]]], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"1", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"2", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "5"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "6"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "7"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"3", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"5", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"6", "\[UndirectedEdge]", "8"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"6", "\[UndirectedEdge]", "9"}],
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6", "\[UndirectedEdge]", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", "\[UndirectedEdge]", "8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", "\[UndirectedEdge]", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", "\[UndirectedEdge]", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", "\[UndirectedEdge]", "9"}], "}"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.762746366113823*^9, 3.7627464234025707`*^9}]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
PrintingCopies->1,
PrintingPageRange->{1, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Landscape",
"PaperSize"->{841.8, 595.1999999999999},
"PrintingMargins"->{{72.00000078, 72.00000078}, {54.000000584999995`, \
54.000000584999995`}}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 590, 14, 31, "Input"],
Cell[1151, 36, 1471, 37, 72, "Input"],
Cell[2625, 75, 395, 11, 31, "Input"],
Cell[3023, 88, 668, 18, 31, "Input"],
Cell[3694, 108, 884, 24, 31, "Input"],
Cell[CellGroupData[{
Cell[4603, 136, 1271, 32, 152, "Input"],
Cell[5877, 170, 750, 20, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6664, 195, 288, 6, 31, "Input"],
Cell[6955, 203, 262, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7254, 214, 318, 7, 31, "Input"],
Cell[7575, 223, 155, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7767, 231, 2473, 57, 212, "Input"],
Cell[10243, 290, 70956, 1542, 535, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81236, 1837, 1979, 50, 172, "Input"],
Cell[83218, 1889, 95931, 2018, 594, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179186, 3912, 1830, 48, 172, "Input"],
Cell[181019, 3962, 103495, 2039, 635, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284551, 6006, 2171, 56, 172, "Input"],
Cell[286725, 6064, 174680, 3289, 607, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[461442, 9358, 1852, 49, 172, "Input"],
Cell[463297, 9409, 143204, 2698, 726, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606538, 12112, 1804, 48, 172, "Input"],
Cell[608345, 12162, 136069, 2574, 635, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[744451, 14741, 1828, 48, 172, "Input"],
Cell[746282, 14791, 500272, 9457, 446, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1246591, 24253, 490, 15, 31, "Input"],
Cell[1247084, 24270, 328, 10, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1247449, 24285, 2661, 66, 172, "Input"],
Cell[1250113, 24353, 2347, 61, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1252497, 24419, 2762, 69, 212, "Input"],
Cell[1255262, 24490, 4495, 129, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1259794, 24624, 2840, 70, 212, "Input"],
Cell[1262637, 24696, 1899, 53, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1264573, 24754, 65, 1, 31, "Input"],
Cell[1264641, 24757, 3099, 64, 382, "Output"]
}, Open  ]],
Cell[1267755, 24824, 2791, 69, 212, "Input"],
Cell[CellGroupData[{
Cell[1270571, 24897, 312, 6, 31, "Input"],
Cell[1270886, 24905, 4499, 80, 382, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1275422, 24990, 907, 25, 112, "Input"],
Cell[1276332, 25017, 261827, 5049, 292, 113391, 2614, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1538196, 30071, 881, 24, 112, "Input"],
Cell[1539080, 30097, 262379, 5058, 316, 113391, 2614, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1801496, 35160, 2761, 69, 212, "Input"],
Cell[1804260, 35231, 1751, 48, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1806048, 35284, 2761, 69, 212, "Input"],
Cell[1808812, 35355, 1845, 52, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1810694, 35412, 3068, 75, 212, "Input"],
Cell[1813765, 35489, 3636, 82, 204, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1817438, 35576, 3351, 81, 212, "Input"],
Cell[1820792, 35659, 107651, 2526, 3034, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1928480, 38190, 2759, 69, 212, "Input"],
Cell[1931242, 38261, 932, 24, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1932211, 38290, 3742, 88, 212, "Input"],
Cell[1935956, 38380, 51531, 1228, 1202, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1987524, 39613, 212, 5, 31, "Input"],
Cell[1987739, 39620, 136, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1987912, 39628, 3600, 86, 212, "Input"],
Cell[1991515, 39716, 39804, 933, 1000, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
