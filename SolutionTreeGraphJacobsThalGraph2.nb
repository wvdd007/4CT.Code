(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1823436,      29245]
NotebookOptionsPosition[   1822723,      29218]
NotebookOutlinePosition[   1823108,      29234]
CellTagsIndexPosition[   1823065,      29231]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Graph", "[", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", "edges", "]"}], "]"}], "]"}], "//", 
  "SolutionTreeGraph"}]], "Input",
 CellChangeTimes->{{3.6626476633742437`*^9, 3.662647664044666*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindHamiltonianPath", "::", "inv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The argument \[NoBreak]\\!\\(1\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*FrameBox[\\\"FindHamiltonianPath[Graph[<5878>, <5877>], 1, \
5878]\\\", Rule[BoxFrame, False], Rule[BoxMargins, False]]\\)\[NoBreak] is \
not a valid \[NoBreak]\\!\\(\\\"vertex\\\"\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindHamiltonianPath\\\", \
ButtonNote -> \\\"FindHamiltonianPath::inv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6626476647993064`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "symname"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The string \\\"\[NoBreak]\\!\\(\\\"xGraph[<5878>, \
<5877>]\\\"\\)\[NoBreak]\\\" cannot be used for a symbol name. A symbol name \
must start with a letter followed by letters and numbers. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Symbol/symname\\\", ButtonNote -> \
\\\"Symbol::symname\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.662647664835305*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindHamiltonianPath", "::", "graph"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"A graph object is expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \
\[NoBreak]\\!\\(FindHamiltonianPath[\\(\\(\\(\\(Symbol[\\\"xGraph[<5878>, \
<5877>]\\\"]\\)\\), x1, x5878\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindHamiltonianPath\\\", ButtonNote -> \
\\\"FindHamiltonianPath::graph\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6626476648773155`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindHamiltonianPath", "::", "graph"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"A graph object is expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \
\[NoBreak]\\!\\(FindHamiltonianPath[\\(\\(\\(\\(Symbol[\\\"xGraph[<5878>, \
<5877>]\\\"]\\)\\), x1, x5878\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindHamiltonianPath\\\", ButtonNote -> \
\\\"FindHamiltonianPath::graph\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6626476649233184`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "symname"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The string \\\"\[NoBreak]\\!\\(\\\"x1-1\\\"\\)\[NoBreak]\\\
\" cannot be used for a symbol name. A symbol name must start with a letter \
followed by letters and numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Symbol/symname\\\", ButtonNote -> \
\\\"Symbol::symname\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66264766495835*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "symname"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The string \\\"\[NoBreak]\\!\\(\\\"x1-1#3-2\\\"\\)\
\[NoBreak]\\\" cannot be used for a symbol name. A symbol name must start \
with a letter followed by letters and numbers. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Symbol/symname\\\", ButtonNote -> \
\\\"Symbol::symname\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6626476649913497`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Symbol :: \
symname\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66264766499335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"SolutionTreeGraph", "[", 
    RowBox[{"JacobsThalGraph2", "[", "k", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "3", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.662656393159129*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-4", "1-1#2-3", 
         "1-1#2-3#3-2", "1-1#2-3#3-4", "1-1#2-4", "1-1#2-4#3-2", 
         "1-1#2-4#3-3"}, {
        Null, {{1, 2}, {2, 3}, {2, 4}, {1, 5}, {5, 6}, {5, 7}, {1, 8}, {8, 
         9}, {8, 10}}}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {1, "2-2-2"}, 
         VertexStyle -> {
          "1-1#2-2" -> RGBColor[0, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4" -> RGBColor[1, 1, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0],
            "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1#2-4#3-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1.7167125271480974`, 1.486716659505236}, {
         0.9733541973954799, 1.9158947912922606`}, {0.858356263574049, 
         2.9734333190104714`}, {0., 1.4867166595052368`}, {
         1.7167125271480972`, 0.6283603959311872}, {0.8583562635740479, 
         8.881784197001252*^-16}, {2.575068790722145, 0.}, {
         2.4600708569007153`, 1.9158947912922597`}, {3.433425054296195, 
         1.4867166595052355`}, {2.575068790722147, 2.9734333190104705`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.0332691073931828]}, 
           {Arrowheads[0.], ArrowBox[{1, 5}, 0.0332691073931828]}, 
           {Arrowheads[0.], ArrowBox[{1, 8}, 0.0332691073931828]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.0332691073931828]}, 
           {Arrowheads[0.], ArrowBox[{2, 4}, 0.0332691073931828]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.0332691073931828]}, 
           {Arrowheads[0.], ArrowBox[{5, 7}, 0.0332691073931828]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.0332691073931828]}, 
           {Arrowheads[0.], ArrowBox[{8, 10}, 0.0332691073931828]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.0332691073931828]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.0332691073931828]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.0332691073931828]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.0332691073931828]}, 
           {RGBColor[0, 0, 1], DiskBox[5, 0.0332691073931828]}, 
           {RGBColor[0, 1, 0], DiskBox[6, 0.0332691073931828]}, 
           {RGBColor[1, 1, 0], DiskBox[7, 0.0332691073931828]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.0332691073931828]}, 
           {RGBColor[0, 1, 0], DiskBox[9, 0.0332691073931828]}, 
           {RGBColor[0, 0, 1], DiskBox[10, 0.0332691073931828]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"1", ",", "\"2-2-2\""}], "}"}], TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#4-4", "1-1#2-2#3-4", 
         "1-1#2-2#3-4#4-3", "1-1#2-3", "1-1#2-3#3-2", "1-1#2-3#3-2#4-4", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#4-2", "1-1#2-4", "1-1#2-4#3-2", 
         "1-1#2-4#3-2#4-3", "1-1#2-4#3-3", "1-1#2-4#3-3#4-2"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {2, 5}, {5, 6}, {1, 7}, {7, 8}, {8, 
         9}, {7, 10}, {10, 11}, {1, 12}, {12, 13}, {13, 14}, {12, 15}, {15, 
         16}}}, {GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, ImageSize -> 
         400, PlotLabel -> {1, "3-3-3-3"}, 
         VertexStyle -> {
          "1-1#2-2#3-3#4-4" -> RGBColor[1, 1, 0], "1-1#2-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], "1-1#2-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-2" -> RGBColor[0, 1, 0], "1-1#2-3#3-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], "1-1#2-3#3-4" -> 
           RGBColor[1, 1, 0], "1-1" -> RGBColor[1, 0, 0], "1-1#2-2#3-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-3" -> RGBColor[0, 0, 1], "1-1#2-2#3-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3" -> RGBColor[0, 0, 1]}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{2.7223730917948976`, 2.3576442560735678`}, {
         1.936491673103709, 2.811373104706051}, {1.8149153945299321`, 
         3.9294070934559455`}, {1.3611865458974495`, 4.715288512147135}, {
         0.907457697264966, 2.3576442560735686`}, {0., 2.357644256073569}, {
         2.7223730917948976`, 1.450186558808602}, {1.814915394529931, 
         0.7858814186911902}, {1.3611865458974477`, 
         1.3322676295501878`*^-15}, {3.629830789059862, 0.7858814186911891}, {
         4.083559637692344, 0.}, {3.508254510486087, 2.81137310470605}, {
         4.5372884863248295`, 2.3576442560735673`}, {5.444746183589795, 
         2.357644256073567}, {3.6298307890598642`, 3.929407093455945}, {
         4.083559637692348, 4.715288512147134}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{1, 7}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{1, 12}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{2, 5}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{7, 10}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{12, 15}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{13, 14}, 0.045532697021894705`]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.045532697021894705`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.045532697021894705`]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.045532697021894705`]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.045532697021894705`]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.045532697021894705`]}, 
           {RGBColor[1, 1, 0], DiskBox[5, 0.045532697021894705`]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.045532697021894705`]}, 
           {RGBColor[0, 0, 1], DiskBox[7, 0.045532697021894705`]}, 
           {RGBColor[0, 1, 0], DiskBox[8, 0.045532697021894705`]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.045532697021894705`]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.045532697021894705`]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.045532697021894705`]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.045532697021894705`]}, 
           {RGBColor[0, 1, 0], DiskBox[13, 0.045532697021894705`]}, 
           {RGBColor[0, 0, 1], DiskBox[14, 0.045532697021894705`]}, 
           {RGBColor[0, 0, 1], DiskBox[15, 0.045532697021894705`]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.045532697021894705`]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"1", ",", "\"3-3-3-3\""}], "}"}], TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#4-3", 
         "1-1#2-2#3-3#4-3#5-4", "1-1#2-2#3-4", "1-1#2-2#3-4#4-4", 
         "1-1#2-2#3-4#4-4#5-3", "1-1#2-3", "1-1#2-3#3-2", "1-1#2-3#3-2#4-2", 
         "1-1#2-3#3-2#4-2#5-4", "1-1#2-3#3-4", "1-1#2-3#3-4#4-4", 
         "1-1#2-3#3-4#4-4#5-2", "1-1#2-4", "1-1#2-4#3-2", "1-1#2-4#3-2#4-2", 
         "1-1#2-4#3-2#4-2#5-3", "1-1#2-4#3-3", "1-1#2-4#3-3#4-3", 
         "1-1#2-4#3-3#4-3#5-2"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {2, 6}, {6, 7}, {7, 8}, {1, 
         9}, {9, 10}, {10, 11}, {11, 12}, {9, 13}, {13, 14}, {14, 15}, {1, 
         16}, {16, 17}, {17, 18}, {18, 19}, {16, 20}, {20, 21}, {21, 22}}}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {1, "4-4-4-3-3"}, 
         VertexStyle -> {
          "1-1#2-3#3-4#4-4#5-2" -> RGBColor[0, 1, 0], "1-1#2-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], "1-1#2-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4" -> RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2" -> RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1#2-4#3-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3" -> RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> RGBColor[0, 0, 1],
            "1-1#2-2#3-3#4-3" -> RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQLXinS+7QGV6H/Wuvntt0jtNhUcHVLNFIdgcnzuVC
3h28DnyqL6ZNjGRz8HdSkGaLFnboOSkW/HM+kwPbj18ld6aIOYiA9f+13wfW
L+kgCOUfhJonAOa/tT8M5TNAwREoH2b/7m9G7k3RTA7cUPsg6n/ad0DtOwPm
v7TnhJoPMeWBTSdYXgjq/p/2XuX/S47WiDgcgKrnApsnBrf3gLJCprmCkIMD
1H+8UPl9UPf0N+y8pSks5bAXxX2ycH4P1D4/aHj4Qu1jhYYHP9S8PdDwAADs
HaFO
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{1, 9}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{1, 16}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{9, 13}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{13, 14}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{16, 20}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.05543717007889641]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.05543717007889641]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.05543717007889641]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.05543717007889641]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.05543717007889641]}, 
           {RGBColor[0, 0, 1], DiskBox[4, 0.05543717007889641]}, 
           {RGBColor[1, 1, 0], DiskBox[5, 0.05543717007889641]}, 
           {RGBColor[1, 1, 0], DiskBox[6, 0.05543717007889641]}, 
           {RGBColor[1, 1, 0], DiskBox[7, 0.05543717007889641]}, 
           {RGBColor[0, 0, 1], DiskBox[8, 0.05543717007889641]}, 
           {RGBColor[0, 0, 1], DiskBox[9, 0.05543717007889641]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.05543717007889641]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.05543717007889641]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.05543717007889641]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.05543717007889641]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.05543717007889641]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.05543717007889641]}, 
           {RGBColor[1, 1, 0], DiskBox[16, 0.05543717007889641]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.05543717007889641]}, 
           {RGBColor[0, 1, 0], DiskBox[18, 0.05543717007889641]}, 
           {RGBColor[0, 0, 1], DiskBox[19, 0.05543717007889641]}, 
           {RGBColor[0, 0, 1], DiskBox[20, 0.05543717007889641]}, 
           {RGBColor[0, 0, 1], DiskBox[21, 0.05543717007889641]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.05543717007889641]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"1", ",", "\"4-4-4-3-3\""}], "}"}], TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#4-3", 
         "1-1#2-2#3-3#4-3#5-2", "1-1#2-2#3-3#4-3#5-2#6-1", 
         "1-1#2-2#3-3#4-3#5-2#6-4", "1-1#2-2#3-3#4-3#5-4", 
         "1-1#2-2#3-3#4-3#5-4#6-1", "1-1#2-2#3-3#4-4", "1-1#2-2#3-3#4-4#5-2", 
         "1-1#2-2#3-3#4-4#5-2#6-1", "1-1#2-2#3-4", "1-1#2-2#3-4#4-3", 
         "1-1#2-2#3-4#4-3#5-2", "1-1#2-2#3-4#4-3#5-2#6-1", "1-1#2-2#3-4#4-4", 
         "1-1#2-2#3-4#4-4#5-2", "1-1#2-2#3-4#4-4#5-2#6-1", 
         "1-1#2-2#3-4#4-4#5-2#6-3", "1-1#2-2#3-4#4-4#5-3", 
         "1-1#2-2#3-4#4-4#5-3#6-1", "1-1#2-3", "1-1#2-3#3-2", 
         "1-1#2-3#3-2#4-2", "1-1#2-3#3-2#4-2#5-3", "1-1#2-3#3-2#4-2#5-3#6-1", 
         "1-1#2-3#3-2#4-2#5-3#6-4", "1-1#2-3#3-2#4-2#5-4", 
         "1-1#2-3#3-2#4-2#5-4#6-1", "1-1#2-3#3-2#4-4", "1-1#2-3#3-2#4-4#5-3", 
         "1-1#2-3#3-2#4-4#5-3#6-1", "1-1#2-3#3-4", "1-1#2-3#3-4#4-2", 
         "1-1#2-3#3-4#4-2#5-3", "1-1#2-3#3-4#4-2#5-3#6-1", "1-1#2-3#3-4#4-4", 
         "1-1#2-3#3-4#4-4#5-2", "1-1#2-3#3-4#4-4#5-2#6-1", 
         "1-1#2-3#3-4#4-4#5-3", "1-1#2-3#3-4#4-4#5-3#6-1", 
         "1-1#2-3#3-4#4-4#5-3#6-2", "1-1#2-4", "1-1#2-4#3-2", 
         "1-1#2-4#3-2#4-2", "1-1#2-4#3-2#4-2#5-3", "1-1#2-4#3-2#4-2#5-3#6-1", 
         "1-1#2-4#3-2#4-2#5-4", "1-1#2-4#3-2#4-2#5-4#6-1", 
         "1-1#2-4#3-2#4-2#5-4#6-3", "1-1#2-4#3-2#4-3", "1-1#2-4#3-2#4-3#5-4", 
         "1-1#2-4#3-2#4-3#5-4#6-1", "1-1#2-4#3-3", "1-1#2-4#3-3#4-2", 
         "1-1#2-4#3-3#4-2#5-4", "1-1#2-4#3-3#4-2#5-4#6-1", "1-1#2-4#3-3#4-3", 
         "1-1#2-4#3-3#4-3#5-2", "1-1#2-4#3-3#4-3#5-2#6-1", 
         "1-1#2-4#3-3#4-3#5-4", "1-1#2-4#3-3#4-3#5-4#6-1", 
         "1-1#2-4#3-3#4-3#5-4#6-2"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {5, 7}, {4, 8}, {8, 
         9}, {3, 10}, {10, 11}, {11, 12}, {2, 13}, {13, 14}, {14, 15}, {15, 
         16}, {13, 17}, {17, 18}, {18, 19}, {18, 20}, {17, 21}, {21, 22}, {1, 
         23}, {23, 24}, {24, 25}, {25, 26}, {26, 27}, {26, 28}, {25, 29}, {29,
          30}, {24, 31}, {31, 32}, {32, 33}, {23, 34}, {34, 35}, {35, 36}, {
         36, 37}, {34, 38}, {38, 39}, {39, 40}, {38, 41}, {41, 42}, {41, 
         43}, {1, 44}, {44, 45}, {45, 46}, {46, 47}, {47, 48}, {46, 49}, {49, 
         50}, {49, 51}, {45, 52}, {52, 53}, {53, 54}, {44, 55}, {55, 56}, {56,
          57}, {57, 58}, {55, 59}, {59, 60}, {60, 61}, {59, 62}, {62, 63}, {
         62, 64}}}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {4, "4-4-4-4-4-4"}, 
         VertexStyle -> {
          "1-1#2-3#3-2#4-4" -> RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-3#5-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-3#5-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-2#5-4" -> RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#6-3" -> RGBColor[0, 0, 1], "1-1#2-4#3-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-2" -> RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-2#5-3" -> RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#6-1" -> RGBColor[1, 0, 0], "1-1#2-4#3-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1" -> RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-4#5-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-2#5-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#6-1" -> RGBColor[1, 0, 0], "1-1#2-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2" -> RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#6-1" -> RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-4#5-3" -> RGBColor[0, 0, 1], "1-1#2-4#3-2#4-3#5-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2" -> RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-3#5-2" -> RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3" -> RGBColor[0, 0, 1], "1-1#2-2#3-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-2#3-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-2#5-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3" -> RGBColor[0, 0, 1], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-4#5-3#6-1" -> RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#6-1" -> 
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBwAGIQXa7+e11skKADjHacqCUYN53H4YlqLtNCQWEH61A9
gXXLuR1Unh77vSte3CEkXin3/Dwuh8DNs/RXM0o7tG99u2piBrfDoySVjp5L
cg51rnWqKqJ8UPMUHWbsty9vd2V1+GS09pDLbgUHQZkJ//wWMDpYvd8gIJgp
47BFLvds+r5f9lqJci/36sk7eC9O9V7HxOTQVXUwiG2LuMOVOlHTle9+2D9z
WHdv8hVJB428/cter39t78Q+O0vxq7RDW3TaoQWrWBwqoO4vycvb6dDzz95N
PnV5cKioQxDne96WRR/tzY7fXbJ0tZjDgQn7OmUfX7JXzQ9b9J1RwiGqSNv7
z7bf9g8fuefrvuB3qFgQOVvi0Cv7aqh5DGDwwMZEx9xbc5YwlM/A0A71pw/U
/Cp+wyLtT+wOC6Dmz4H6GxauVtBwtIDSUy7HHWHoYnM4viJTLOshq4MP1N//
HkXs5Tv4157hMYRWgfoXFk7roDQsHMqh9vpB3TETau8GqDvuQP0VA/Wnjkjy
qRX/+BwSwPzX9tVQf0B8dcEmQOV+6JMLIg6ToO6rjw1atmSDEDycrh858iNN
VRhq3mt7fbRwgcWbF9Q/htBwh4WTAjTcYeGkI7ZgXbmJtMMnqL/toPHKA/Wf
GjRdzIP6248tMZQnUsThMTR9aise/pPlLwEP53Cwu6QdrkP9PaunKkrKRs6h
ABpOH6HpcAI0nO5LdXtV+Mg7lEH1l0HTbRFaOtaD+jMImu6doOlrDtR8mD9h
6RzmzyBoeMLyj1ets0XKYkmHDmg42UDzwSNo+taF+hcWDrB0DMtvz6HqLKD6
nKHqNKH6tEvqO4o+iMDzoxrUHTB/G0L9AfMnAChUokU=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{1, 23}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{1, 44}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{2, 13}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{3, 10}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{4, 8}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{5, 7}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{13, 14}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{13, 17}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{17, 21}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{18, 20}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{23, 34}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{24, 31}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{25, 29}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{26, 28}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{34, 38}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{38, 41}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{41, 43}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{44, 55}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{45, 52}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{46, 49}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{49, 51}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{55, 59}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{59, 62}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.06055804578761044]}, 
           {Arrowheads[0.], ArrowBox[{62, 64}, 0.06055804578761044]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[4, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[5, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[6, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[7, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[9, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[12, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[14, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[16, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[18, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[19, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[20, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[21, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[22, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[23, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[24, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[25, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[26, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[28, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[29, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[30, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[31, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[33, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[34, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[35, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[37, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[38, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[39, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[40, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[41, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[42, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[43, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[45, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[46, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[48, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[49, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[50, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[53, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[54, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[55, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[57, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[58, 0.06055804578761044]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[61, 0.06055804578761044]}, 
           {RGBColor[1, 1, 0], DiskBox[62, 0.06055804578761044]}, 
           {RGBColor[1, 0, 0], DiskBox[63, 0.06055804578761044]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.06055804578761044]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"4", ",", "\"4-4-4-4-4-4\""}], "}"}], TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#4-3", 
         "1-1#2-2#3-3#4-3#5-2", "1-1#2-2#3-3#4-3#5-2#7-1", 
         "1-1#2-2#3-3#4-3#5-2#7-1#6-4", "1-1#2-2#3-3#4-3#5-2#7-4", 
         "1-1#2-2#3-3#4-3#5-2#7-4#6-1", "1-1#2-2#3-3#4-3#5-4", 
         "1-1#2-2#3-3#4-3#5-4#7-1", "1-1#2-2#3-3#4-3#5-4#7-1#6-2", 
         "1-1#2-2#3-3#4-3#5-4#7-4", "1-1#2-2#3-3#4-3#5-4#7-4#6-1", 
         "1-1#2-2#3-3#4-3#5-4#7-4#6-2", "1-1#2-2#3-4", "1-1#2-2#3-4#4-4", 
         "1-1#2-2#3-4#4-4#5-2", "1-1#2-2#3-4#4-4#5-2#7-1", 
         "1-1#2-2#3-4#4-4#5-2#7-1#6-3", "1-1#2-2#3-4#4-4#5-2#7-3", 
         "1-1#2-2#3-4#4-4#5-2#7-3#6-1", "1-1#2-2#3-4#4-4#5-3", 
         "1-1#2-2#3-4#4-4#5-3#7-1", "1-1#2-2#3-4#4-4#5-3#7-1#6-2", 
         "1-1#2-2#3-4#4-4#5-3#7-3", "1-1#2-2#3-4#4-4#5-3#7-3#6-1", 
         "1-1#2-2#3-4#4-4#5-3#7-3#6-2", "1-1#2-3", "1-1#2-3#3-2", 
         "1-1#2-3#3-2#4-2", "1-1#2-3#3-2#4-2#5-3", "1-1#2-3#3-2#4-2#5-3#7-1", 
         "1-1#2-3#3-2#4-2#5-3#7-1#6-4", "1-1#2-3#3-2#4-2#5-3#7-4", 
         "1-1#2-3#3-2#4-2#5-3#7-4#6-1", "1-1#2-3#3-2#4-2#5-4", 
         "1-1#2-3#3-2#4-2#5-4#7-1", "1-1#2-3#3-2#4-2#5-4#7-1#6-3", 
         "1-1#2-3#3-2#4-2#5-4#7-4", "1-1#2-3#3-2#4-2#5-4#7-4#6-1", 
         "1-1#2-3#3-2#4-2#5-4#7-4#6-3", "1-1#2-3#3-4", "1-1#2-3#3-4#4-4", 
         "1-1#2-3#3-4#4-4#5-2", "1-1#2-3#3-4#4-4#5-2#7-1", 
         "1-1#2-3#3-4#4-4#5-2#7-1#6-3", "1-1#2-3#3-4#4-4#5-2#7-2", 
         "1-1#2-3#3-4#4-4#5-2#7-2#6-1", "1-1#2-3#3-4#4-4#5-2#7-2#6-3", 
         "1-1#2-3#3-4#4-4#5-3", "1-1#2-3#3-4#4-4#5-3#7-1", 
         "1-1#2-3#3-4#4-4#5-3#7-1#6-2", "1-1#2-3#3-4#4-4#5-3#7-2", 
         "1-1#2-3#3-4#4-4#5-3#7-2#6-1", "1-1#2-4", "1-1#2-4#3-2", 
         "1-1#2-4#3-2#4-2", "1-1#2-4#3-2#4-2#5-3", "1-1#2-4#3-2#4-2#5-3#7-1", 
         "1-1#2-4#3-2#4-2#5-3#7-1#6-4", "1-1#2-4#3-2#4-2#5-3#7-3", 
         "1-1#2-4#3-2#4-2#5-3#7-3#6-1", "1-1#2-4#3-2#4-2#5-3#7-3#6-4", 
         "1-1#2-4#3-2#4-2#5-4", "1-1#2-4#3-2#4-2#5-4#7-1", 
         "1-1#2-4#3-2#4-2#5-4#7-1#6-3", "1-1#2-4#3-2#4-2#5-4#7-3", 
         "1-1#2-4#3-2#4-2#5-4#7-3#6-1", "1-1#2-4#3-3", "1-1#2-4#3-3#4-3", 
         "1-1#2-4#3-3#4-3#5-2", "1-1#2-4#3-3#4-3#5-2#7-1", 
         "1-1#2-4#3-3#4-3#5-2#7-1#6-4", "1-1#2-4#3-3#4-3#5-2#7-2", 
         "1-1#2-4#3-3#4-3#5-2#7-2#6-1", "1-1#2-4#3-3#4-3#5-2#7-2#6-4", 
         "1-1#2-4#3-3#4-3#5-4", "1-1#2-4#3-3#4-3#5-4#7-1", 
         "1-1#2-4#3-3#4-3#5-4#7-1#6-2", "1-1#2-4#3-3#4-3#5-4#7-2", 
         "1-1#2-4#3-3#4-3#5-4#7-2#6-1"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {5, 8}, {8, 
         9}, {4, 10}, {10, 11}, {11, 12}, {10, 13}, {13, 14}, {13, 15}, {2, 
         16}, {16, 17}, {17, 18}, {18, 19}, {19, 20}, {18, 21}, {21, 22}, {17,
          23}, {23, 24}, {24, 25}, {23, 26}, {26, 27}, {26, 28}, {1, 29}, {29,
          30}, {30, 31}, {31, 32}, {32, 33}, {33, 34}, {32, 35}, {35, 36}, {
         31, 37}, {37, 38}, {38, 39}, {37, 40}, {40, 41}, {40, 42}, {29, 
         43}, {43, 44}, {44, 45}, {45, 46}, {46, 47}, {45, 48}, {48, 49}, {48,
          50}, {44, 51}, {51, 52}, {52, 53}, {51, 54}, {54, 55}, {1, 56}, {56,
          57}, {57, 58}, {58, 59}, {59, 60}, {60, 61}, {59, 62}, {62, 63}, {
         62, 64}, {58, 65}, {65, 66}, {66, 67}, {65, 68}, {68, 69}, {56, 
         70}, {70, 71}, {71, 72}, {72, 73}, {73, 74}, {72, 75}, {75, 76}, {75,
          77}, {71, 78}, {78, 79}, {79, 80}, {78, 81}, {81, 82}}}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {5, "5-5-4-4-4-4-4"}, 
         VertexStyle -> {
          "1-1#2-4" -> RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#7-2" -> RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#7-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#7-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#7-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2" -> RGBColor[0, 1, 0], "1-1#2-4#3-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#7-4#6-1" -> RGBColor[1, 0, 0], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#7-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#7-3#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#7-2" -> RGBColor[0, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#7-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#7-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#7-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#7-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#7-4#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#7-4#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2" -> RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#7-3#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#7-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#7-1" -> RGBColor[1, 0, 0], "1-1#2-2#3-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#7-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#7-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4" -> RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#7-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#7-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#7-3" -> RGBColor[0, 0, 1], "1-1#2-3#3-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#7-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#7-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#7-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#7-1#6-3" -> RGBColor[0, 0, 1], "1-1#2-3#3-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#7-2#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#7-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#7-2#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#7-1#6-4" -> RGBColor[1, 1, 0], "1-1#2-4#3-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#7-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#7-2" -> RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4" -> RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#7-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#7-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#7-1#6-2" -> 
           RGBColor[0, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9VHtMU2cUr1Cgrq60FOlLC215bKABhWSkJn4HkaYF6qBsThEFwcLElJfj
sQU3EwQhCqtuQ1TSKGGsiYDOMWCWKTA7GPIQhKVTVjsrzAlFCM4hoG6T097k
5ub8cc/v+34vUWq2Su1EoVBU/73/f/PqadSAUU9I0X+zZa7VE8x/FHWXjrAg
k54wrDjsBcnmb035e1hQvrHneug1PjQ+W1Mm3eoO62Z3UsYM66Gj5AWbPceC
7vFQq7O/CHgtE8GXndmwK5Ha7/ZCDNI286G+Bg/c7ws5ZaFq7gwDyj9zVRbU
isHv+Z3Cu71rYOAiM8c90hd+2eOu57LdYPisLa2B5g3HM5ODTbE0qJMauk7c
F0H+6/NSYVpQkpqUIoFzd2/KPNpfkeis0RheoA8U9K2bXdIukSgFrbiTK4ZO
1cahgZEnJJp7IbDyEx+oCWlNrDDSYT/eNw/3peIcojA3Fx55SRa60700q3jQ
XlXYq7bOk/u2fU3bfhYAZcQgGBkaJ6d7W/f+ELwe3iq62bJzcIbITn0f0Kfi
QmezeDFW9CP5aHe75HM6DzYrxRMRy8uk8XhtzO93WIg/RdSIR8EnHWfqO5XV
zfI5oqrKHW38jgFHcZ/qn+qEhFQm3B5ewc9ibgpVFdPArp/yQRwTtrJgH+qV
I2Pm7s14E/Sol6Jr1sY/4AZO6aVtVqoLfJ2m5DSZXIEf58yL8lsi3J+WLspd
XRx8JYFwu3aOAkcsjLhbGid47zH4bYl8RT5EficXFpdL556SexWKty9VMOHR
rsTKC7SXpBz1mtakDQUZnpEC5De8R35aeXCCaA2LnB3hLNCe6cjVP7QRH9Tf
Ut81kbfQT+x+sfNy7PU+LmThfU4OvGEMWc0HGd6HdqPHXCfkwSTiD34ZZNLV
e8FRS9hitW6KNJ3aXFuyiuPY9+SvG/lFVgHk6OYbqrLmiSo2oN8SKYBOxF/x
tzcAntfy1Y4N437eoEO+4qepIS3hPhCNfEjoLmVuqSIwIR8a6aOUT7NFwEA+
tw+tDVj8VQzxyKdrRk1U7xgHDmK+VvwgcOTvEuIn43wr8UCPLkwEevTP+avP
o699IIZuo+UL8i4dHhgDD+ttEkhCP+w3hV2po0vAqf1YxseTHuCZ7Jn58Kwv
xKB/VvziC7txf+y9DYwiqgj+Rr/PJnXURPwpBkA/r8X/NejnWsT/DfNgRfwT
mIcy1MveF1rUS4B9QT2/uqVLKIRBzHc28hWWHe9//bEQZMiXHPMqP3R1Zt7N
G9QdbcXWFBH4I9/bMN/NyNcU9kGQkf1U2sZx9NHl0sKxiE18R9+8j3r3Y9/c
Rr/Y++oK+sXeV/8Cwn0vVg==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{1, 29}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{1, 56}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{2, 16}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{4, 10}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{5, 8}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{10, 13}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{13, 14}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{13, 15}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{17, 23}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{18, 21}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{23, 26}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{26, 28}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{29, 43}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{31, 37}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{32, 35}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{37, 40}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{40, 42}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{44, 51}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{45, 48}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{48, 50}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{51, 54}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{56, 70}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{58, 65}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{59, 62}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{62, 64}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{65, 68}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{71, 78}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{72, 75}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{75, 77}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{78, 81}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.06706186744403202]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.06706186744403202]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[4, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[5, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[6, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[7, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[9, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[11, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[12, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[14, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[16, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[18, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[19, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[20, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[21, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[22, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[23, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[24, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[25, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[26, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[28, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[29, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[31, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[33, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[34, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[35, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[37, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[38, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[39, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[40, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[41, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[42, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[45, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[49, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[52, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[53, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[55, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[56, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[57, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[58, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[60, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[61, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[62, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[63, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[64, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[65, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[66, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[67, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[68, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[69, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[70, 0.06706186744403202]}, 
           {RGBColor[0, 0, 1], DiskBox[71, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[72, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[73, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[74, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[75, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[76, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.06706186744403202]}, 
           {RGBColor[1, 1, 0], DiskBox[78, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[79, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[80, 0.06706186744403202]}, 
           {RGBColor[0, 1, 0], DiskBox[81, 0.06706186744403202]}, 
           {RGBColor[1, 0, 0], DiskBox[82, 0.06706186744403202]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"5", ",", "\"5-5-4-4-4-4-4\""}], "}"}], TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#4-3", 
         "1-1#2-2#3-3#4-3#5-2", "1-1#2-2#3-3#4-3#5-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#8-1#6-1", "1-1#2-2#3-3#4-3#5-2#8-1#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-2#8-1#6-1#7-4", "1-1#2-2#3-3#4-3#5-2#8-1#6-4", 
         "1-1#2-2#3-3#4-3#5-2#8-1#6-4#7-2", "1-1#2-2#3-3#4-3#5-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#8-4#6-1", "1-1#2-2#3-3#4-3#5-2#8-4#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-2#8-4#6-4", "1-1#2-2#3-3#4-3#5-2#8-4#6-4#7-1", 
         "1-1#2-2#3-3#4-3#5-2#8-4#6-4#7-2", "1-1#2-2#3-3#4-3#5-4", 
         "1-1#2-2#3-3#4-3#5-4#8-1", "1-1#2-2#3-3#4-3#5-4#8-1#6-1", 
         "1-1#2-2#3-3#4-3#5-4#8-1#6-1#7-2", "1-1#2-2#3-3#4-3#5-4#8-1#6-1#7-4",
          "1-1#2-2#3-3#4-3#5-4#8-1#6-2", "1-1#2-2#3-3#4-3#5-4#8-1#6-2#7-4", 
         "1-1#2-2#3-3#4-3#5-4#8-4", "1-1#2-2#3-3#4-3#5-4#8-4#6-1", 
         "1-1#2-2#3-3#4-3#5-4#8-4#6-1#7-2", "1-1#2-2#3-3#4-3#5-4#8-4#6-2", 
         "1-1#2-2#3-3#4-3#5-4#8-4#6-2#7-1", "1-1#2-2#3-3#4-4", 
         "1-1#2-2#3-3#4-4#5-2", "1-1#2-2#3-3#4-4#5-2#8-1", 
         "1-1#2-2#3-3#4-4#5-2#8-1#6-1", "1-1#2-2#3-3#4-4#5-2#8-1#6-1#7-2", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#4-3", "1-1#2-2#3-4#4-3#5-2", 
         "1-1#2-2#3-4#4-3#5-2#8-1", "1-1#2-2#3-4#4-3#5-2#8-1#6-1", 
         "1-1#2-2#3-4#4-3#5-2#8-1#6-1#7-2", "1-1#2-2#3-4#4-4", 
         "1-1#2-2#3-4#4-4#5-2", "1-1#2-2#3-4#4-4#5-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#8-1#6-1", "1-1#2-2#3-4#4-4#5-2#8-1#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-2#8-1#6-1#7-3", "1-1#2-2#3-4#4-4#5-2#8-1#6-3", 
         "1-1#2-2#3-4#4-4#5-2#8-1#6-3#7-2", "1-1#2-2#3-4#4-4#5-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#8-3#6-1", "1-1#2-2#3-4#4-4#5-2#8-3#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-2#8-3#6-3", "1-1#2-2#3-4#4-4#5-2#8-3#6-3#7-1", 
         "1-1#2-2#3-4#4-4#5-2#8-3#6-3#7-2", "1-1#2-2#3-4#4-4#5-3", 
         "1-1#2-2#3-4#4-4#5-3#8-1", "1-1#2-2#3-4#4-4#5-3#8-1#6-1", 
         "1-1#2-2#3-4#4-4#5-3#8-1#6-1#7-2", "1-1#2-2#3-4#4-4#5-3#8-1#6-1#7-3",
          "1-1#2-2#3-4#4-4#5-3#8-1#6-2", "1-1#2-2#3-4#4-4#5-3#8-1#6-2#7-3", 
         "1-1#2-2#3-4#4-4#5-3#8-3", "1-1#2-2#3-4#4-4#5-3#8-3#6-1", 
         "1-1#2-2#3-4#4-4#5-3#8-3#6-1#7-2", "1-1#2-2#3-4#4-4#5-3#8-3#6-2", 
         "1-1#2-2#3-4#4-4#5-3#8-3#6-2#7-1", "1-1#2-3", "1-1#2-3#3-2", 
         "1-1#2-3#3-2#4-2", "1-1#2-3#3-2#4-2#5-3", "1-1#2-3#3-2#4-2#5-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#8-1#6-1", "1-1#2-3#3-2#4-2#5-3#8-1#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-3#8-1#6-1#7-4", "1-1#2-3#3-2#4-2#5-3#8-1#6-4", 
         "1-1#2-3#3-2#4-2#5-3#8-1#6-4#7-3", "1-1#2-3#3-2#4-2#5-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#8-4#6-1", "1-1#2-3#3-2#4-2#5-3#8-4#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-3#8-4#6-4", "1-1#2-3#3-2#4-2#5-3#8-4#6-4#7-1", 
         "1-1#2-3#3-2#4-2#5-3#8-4#6-4#7-3", "1-1#2-3#3-2#4-2#5-4", 
         "1-1#2-3#3-2#4-2#5-4#8-1", "1-1#2-3#3-2#4-2#5-4#8-1#6-1", 
         "1-1#2-3#3-2#4-2#5-4#8-1#6-1#7-3", "1-1#2-3#3-2#4-2#5-4#8-1#6-1#7-4",
          "1-1#2-3#3-2#4-2#5-4#8-1#6-3", "1-1#2-3#3-2#4-2#5-4#8-1#6-3#7-4", 
         "1-1#2-3#3-2#4-2#5-4#8-4", "1-1#2-3#3-2#4-2#5-4#8-4#6-1", 
         "1-1#2-3#3-2#4-2#5-4#8-4#6-1#7-3", "1-1#2-3#3-2#4-2#5-4#8-4#6-3", 
         "1-1#2-3#3-2#4-2#5-4#8-4#6-3#7-1", "1-1#2-3#3-2#4-4", 
         "1-1#2-3#3-2#4-4#5-3", "1-1#2-3#3-2#4-4#5-3#8-1", 
         "1-1#2-3#3-2#4-4#5-3#8-1#6-1", "1-1#2-3#3-2#4-4#5-3#8-1#6-1#7-3", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#4-2", "1-1#2-3#3-4#4-2#5-3", 
         "1-1#2-3#3-4#4-2#5-3#8-1", "1-1#2-3#3-4#4-2#5-3#8-1#6-1", 
         "1-1#2-3#3-4#4-2#5-3#8-1#6-1#7-3", "1-1#2-3#3-4#4-4", 
         "1-1#2-3#3-4#4-4#5-2", "1-1#2-3#3-4#4-4#5-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#8-1#6-1", "1-1#2-3#3-4#4-4#5-2#8-1#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-2#8-1#6-1#7-3", "1-1#2-3#3-4#4-4#5-2#8-1#6-3", 
         "1-1#2-3#3-4#4-4#5-2#8-1#6-3#7-2", "1-1#2-3#3-4#4-4#5-2#8-2", 
         "1-1#2-3#3-4#4-4#5-2#8-2#6-1", "1-1#2-3#3-4#4-4#5-2#8-2#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-2#8-2#6-3", "1-1#2-3#3-4#4-4#5-2#8-2#6-3#7-1", 
         "1-1#2-3#3-4#4-4#5-3", "1-1#2-3#3-4#4-4#5-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#8-1#6-1", "1-1#2-3#3-4#4-4#5-3#8-1#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-3#8-1#6-1#7-3", "1-1#2-3#3-4#4-4#5-3#8-1#6-2", 
         "1-1#2-3#3-4#4-4#5-3#8-1#6-2#7-3", "1-1#2-3#3-4#4-4#5-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#8-2#6-1", "1-1#2-3#3-4#4-4#5-3#8-2#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-3#8-2#6-2", "1-1#2-3#3-4#4-4#5-3#8-2#6-2#7-1", 
         "1-1#2-3#3-4#4-4#5-3#8-2#6-2#7-3", "1-1#2-4", "1-1#2-4#3-2", 
         "1-1#2-4#3-2#4-2", "1-1#2-4#3-2#4-2#5-3", "1-1#2-4#3-2#4-2#5-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#8-1#6-1", "1-1#2-4#3-2#4-2#5-3#8-1#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-3#8-1#6-1#7-4", "1-1#2-4#3-2#4-2#5-3#8-1#6-4", 
         "1-1#2-4#3-2#4-2#5-3#8-1#6-4#7-3", "1-1#2-4#3-2#4-2#5-3#8-3", 
         "1-1#2-4#3-2#4-2#5-3#8-3#6-1", "1-1#2-4#3-2#4-2#5-3#8-3#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-3#8-3#6-4", "1-1#2-4#3-2#4-2#5-3#8-3#6-4#7-1", 
         "1-1#2-4#3-2#4-2#5-4", "1-1#2-4#3-2#4-2#5-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#8-1#6-1", "1-1#2-4#3-2#4-2#5-4#8-1#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-4#8-1#6-1#7-4", "1-1#2-4#3-2#4-2#5-4#8-1#6-3", 
         "1-1#2-4#3-2#4-2#5-4#8-1#6-3#7-4", "1-1#2-4#3-2#4-2#5-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#8-3#6-1", "1-1#2-4#3-2#4-2#5-4#8-3#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-4#8-3#6-3", "1-1#2-4#3-2#4-2#5-4#8-3#6-3#7-1", 
         "1-1#2-4#3-2#4-2#5-4#8-3#6-3#7-4", "1-1#2-4#3-2#4-3", 
         "1-1#2-4#3-2#4-3#5-4", "1-1#2-4#3-2#4-3#5-4#8-1", 
         "1-1#2-4#3-2#4-3#5-4#8-1#6-1", "1-1#2-4#3-2#4-3#5-4#8-1#6-1#7-4", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#4-2", "1-1#2-4#3-3#4-2#5-4", 
         "1-1#2-4#3-3#4-2#5-4#8-1", "1-1#2-4#3-3#4-2#5-4#8-1#6-1", 
         "1-1#2-4#3-3#4-2#5-4#8-1#6-1#7-4", "1-1#2-4#3-3#4-3", 
         "1-1#2-4#3-3#4-3#5-2", "1-1#2-4#3-3#4-3#5-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#8-1#6-1", "1-1#2-4#3-3#4-3#5-2#8-1#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-2#8-1#6-1#7-4", "1-1#2-4#3-3#4-3#5-2#8-1#6-4", 
         "1-1#2-4#3-3#4-3#5-2#8-1#6-4#7-2", "1-1#2-4#3-3#4-3#5-2#8-2", 
         "1-1#2-4#3-3#4-3#5-2#8-2#6-1", "1-1#2-4#3-3#4-3#5-2#8-2#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-2#8-2#6-4", "1-1#2-4#3-3#4-3#5-2#8-2#6-4#7-1", 
         "1-1#2-4#3-3#4-3#5-4", "1-1#2-4#3-3#4-3#5-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#8-1#6-1", "1-1#2-4#3-3#4-3#5-4#8-1#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-4#8-1#6-1#7-4", "1-1#2-4#3-3#4-3#5-4#8-1#6-2", 
         "1-1#2-4#3-3#4-3#5-4#8-1#6-2#7-4", "1-1#2-4#3-3#4-3#5-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#8-2#6-1", "1-1#2-4#3-3#4-3#5-4#8-2#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-4#8-2#6-2", "1-1#2-4#3-3#4-3#5-4#8-2#6-2#7-1", 
         "1-1#2-4#3-3#4-3#5-4#8-2#6-2#7-4"}, {Null, CompressedData["
1:eJwBlwFo/iFib1JiAgAAAMMAAAACAAAAAQICAwMEBAUFBgYHBwgHCQYKCgsF
DAwNDQ4MDw8QDxEEEhITExQUFRQWExcXGBIZGRoaGxkcHB0DHh4fHyAgISEi
AiMjJCQlJSYmJycoIykpKiorKywsLSwuKy8vMCoxMTIyMzE0NDU0Nik3Nzg4
OTk6OTs4PDw9Nz4+Pz9APkFBQgFDQ0RERUVGRkdHSEhJSEpHS0tMRk1NTk5P
TVBQUVBSRVNTVFRVVVZVV1RYWFlTWlpbW1xaXV1eRF9fYGBhYWJiY0NkZGVl
ZmZnZ2hoaWRqamtrbGxtbW5tb2xwcHFrcnJzc3RydXV2and3eHh5eXp5e3h8
fH13fn5/f4B+gYGCgYMBhISFhYaGh4eIiImJiomLiIyMjYeOjo+PkI6RkZKG
k5OUlJWVlpWXlJiYmZOampubnJqdnZ6dn4WgoKGhoqKjo6SEpaWmpqenqKip
qaqlq6usrK2trq6vrrCtsbGyrLOztLS1s7a2t6u4uLm5urq7ury5vb2+uL+/
wMDBv8LCw8LE+ZSWHA==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {12, "6-6-4-4-4-4-4-4"}, 
         VertexStyle -> {
          "1-1#2-2#3-3#4-3#5-4#8-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#8-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#8-4#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-3#5-2#8-1" -> RGBColor[1, 0, 0], "1-1#2-3#3-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#8-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#8-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#8-3#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#8-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-4#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#8-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#8-2#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#8-4#6-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#8-2#6-4" -> RGBColor[1, 1, 0], "1-1#2-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#8-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4" -> RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#8-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#8-1#6-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-4#5-3#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#8-4#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#8-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2" -> RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#8-2#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#8-3#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#8-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#8-4#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#8-1#6-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-2#5-3#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#8-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#8-1#6-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#8-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#8-2#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#8-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#8-2#6-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#8-4#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#8-4#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4" -> RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#8-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#8-3#6-3#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#8-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#8-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#8-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#8-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#8-2#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#8-2#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#8-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#8-1#6-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#8-1#6-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#8-3#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-3#5-4#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-4#5-2#8-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-2#5-4#8-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#8-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#8-2#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-2#5-4#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-2#5-3#8-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#8-1#6-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#8-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#8-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#8-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-4#5-3#8-1" -> RGBColor[1, 0, 0], "1-1#2-4#3-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#8-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-4#5-2#8-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#8-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#8-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#8-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#8-4#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#8-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#8-3" -> RGBColor[0, 0, 1], "1-1#2-3#3-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#8-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#8-1#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#8-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#8-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#8-2#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#8-2#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#8-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-3#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#8-4#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#8-3#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#8-3#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#8-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#8-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#8-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#8-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-3#5-2#8-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#8-4#6-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#8-1" -> RGBColor[1, 0, 0], "1-1#2-3#3-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#8-2#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-2#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#8-1#6-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#8-3#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#8-3#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#8-3#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-3#5-2#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-2#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#8-1#6-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#8-3#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#8-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#8-2" -> RGBColor[0, 1, 0], "1-1#2-2#3-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#8-3#6-3#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#8-4#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#8-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#8-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#8-4#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3" -> RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#8-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#8-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#8-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#8-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#8-2#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#8-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#8-4#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-4#5-3#8-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#8-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#8-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#8-3#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#8-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#8-3#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-2#5-4" -> RGBColor[1, 1, 0], "1-1#2-2#3-4#4-3#5-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#8-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#8-1#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#8-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#8-1#6-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#8-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-3#5-4#8-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2" -> RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#8-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#8-3#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#8-1#6-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#8-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#8-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#8-2#6-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#8-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-3#5-4" -> RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#8-2#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-4#5-3" -> RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
V+Z1FuqS6LQMdUx0/QcjQWbA
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{1, 67}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{1, 132}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{2, 35}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{3, 30}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{4, 18}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{5, 12}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{6, 10}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{7, 9}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{12, 15}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{13, 14}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{15, 17}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{18, 25}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{19, 23}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{20, 22}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{25, 28}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{35, 41}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{41, 55}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{42, 49}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{43, 47}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{44, 46}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{49, 52}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{52, 54}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{55, 62}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{56, 60}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{57, 59}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{62, 65}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{67, 100}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{68, 95}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{69, 83}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{70, 77}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{71, 75}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{72, 74}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{77, 80}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{80, 82}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{83, 90}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{84, 88}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{85, 87}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{90, 93}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{100, 106}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{106, 119}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{107, 114}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{108, 112}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{109, 111}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{114, 117}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{119, 126}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{120, 124}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{121, 123}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{126, 129}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{129, 131}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{132, 165}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{133, 160}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{134, 147}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{135, 142}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{136, 140}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{137, 139}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{142, 145}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{147, 154}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{148, 152}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{149, 151}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{154, 157}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{157, 159}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{165, 171}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{171, 184}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{172, 179}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{173, 177}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{174, 176}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{179, 182}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{184, 185}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{184, 191}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{185, 189}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{186, 188}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{191, 192}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{191, 194}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{192, 193}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{194, 195}, 0.07471078830636266]}, 
           {Arrowheads[0.], ArrowBox[{194, 196}, 0.07471078830636266]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[4, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[5, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[6, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[8, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[13, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[14, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[15, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[16, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[18, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[19, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[20, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[22, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[23, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[25, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[27, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[28, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[29, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[30, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[31, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[32, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[33, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[34, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[35, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[37, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[38, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[39, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[41, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[42, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[43, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[45, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[46, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[49, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[50, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[51, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[53, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[55, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[56, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[57, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[58, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[61, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[62, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[63, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[65, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[66, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[67, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[68, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[69, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[70, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[71, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[72, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[73, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[74, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[76, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[78, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[79, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[80, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[81, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[82, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[83, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[84, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[85, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[86, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[87, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[88, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[89, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[90, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[91, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[92, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[93, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[94, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[95, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[96, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[97, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[98, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[99, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[100, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[101, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[102, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[103, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[104, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[105, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[106, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[107, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[108, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[109, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[110, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[111, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[112, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[113, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[114, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[115, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[116, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[117, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[118, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[119, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[120, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[121, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[122, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[123, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[124, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[125, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[126, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[127, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[128, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[129, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[130, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[131, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[132, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[133, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[134, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[136, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[137, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[138, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[139, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[140, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[141, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[142, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[143, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[144, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[145, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[146, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[148, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[149, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[150, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[151, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[152, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[153, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[154, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[155, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[156, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[157, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[158, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[159, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[161, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[163, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[164, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[166, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[167, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[168, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[169, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[170, 0.07471078830636266]}, 
           {RGBColor[0, 0, 1], DiskBox[171, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[172, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[173, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[174, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[175, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[176, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[177, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[178, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[179, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[180, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[181, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[182, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[183, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[184, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[185, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[186, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[187, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[188, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[189, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[190, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[191, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[192, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[193, 0.07471078830636266]}, 
           {RGBColor[0, 1, 0], DiskBox[194, 0.07471078830636266]}, 
           {RGBColor[1, 0, 0], DiskBox[195, 0.07471078830636266]}, 
           {RGBColor[1, 1, 0], DiskBox[196, 0.07471078830636266]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"12", ",", "\"6-6-4-4-4-4-4-4\""}], "}"}], TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#4-3", 
         "1-1#2-2#3-3#4-3#5-2", "1-1#2-2#3-3#4-3#5-2#9-1", 
         "1-1#2-2#3-3#4-3#5-2#9-1#6-1", "1-1#2-2#3-3#4-3#5-2#9-1#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-2#9-1#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#9-1#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-2#9-1#6-1#7-4#8-2", "1-1#2-2#3-3#4-3#5-2#9-1#6-4",
          "1-1#2-2#3-3#4-3#5-2#9-1#6-4#7-1", 
         "1-1#2-2#3-3#4-3#5-2#9-1#6-4#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-2#9-1#6-4#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-2#9-1#6-4#7-2", 
         "1-1#2-2#3-3#4-3#5-2#9-1#6-4#7-2#8-4", "1-1#2-2#3-3#4-3#5-2#9-4", 
         "1-1#2-2#3-3#4-3#5-2#9-4#6-1", "1-1#2-2#3-3#4-3#5-2#9-4#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-2#9-4#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#9-4#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-2#9-4#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-2#9-4#6-1#7-4#8-2", "1-1#2-2#3-3#4-3#5-2#9-4#6-4",
          "1-1#2-2#3-3#4-3#5-2#9-4#6-4#7-1", 
         "1-1#2-2#3-3#4-3#5-2#9-4#6-4#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-2#9-4#6-4#7-2", 
         "1-1#2-2#3-3#4-3#5-2#9-4#6-4#7-2#8-1", "1-1#2-2#3-3#4-3#5-4", 
         "1-1#2-2#3-3#4-3#5-4#9-1", "1-1#2-2#3-3#4-3#5-4#9-1#6-1", 
         "1-1#2-2#3-3#4-3#5-4#9-1#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-4#9-1#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-4#9-1#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-4#9-1#6-1#7-4#8-2", "1-1#2-2#3-3#4-3#5-4#9-1#6-2",
          "1-1#2-2#3-3#4-3#5-4#9-1#6-2#7-1", 
         "1-1#2-2#3-3#4-3#5-4#9-1#6-2#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-4#9-1#6-2#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-4#9-1#6-2#7-4", 
         "1-1#2-2#3-3#4-3#5-4#9-1#6-2#7-4#8-2", "1-1#2-2#3-3#4-3#5-4#9-4", 
         "1-1#2-2#3-3#4-3#5-4#9-4#6-1", "1-1#2-2#3-3#4-3#5-4#9-4#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-4#9-4#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-4#9-4#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-4#9-4#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#9-4#6-1#7-4#8-2", "1-1#2-2#3-3#4-3#5-4#9-4#6-2",
          "1-1#2-2#3-3#4-3#5-4#9-4#6-2#7-1", 
         "1-1#2-2#3-3#4-3#5-4#9-4#6-2#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-4#9-4#6-2#7-4", 
         "1-1#2-2#3-3#4-3#5-4#9-4#6-2#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#9-4#6-2#7-4#8-2", "1-1#2-2#3-4", 
         "1-1#2-2#3-4#4-4", "1-1#2-2#3-4#4-4#5-2", "1-1#2-2#3-4#4-4#5-2#9-1", 
         "1-1#2-2#3-4#4-4#5-2#9-1#6-1", "1-1#2-2#3-4#4-4#5-2#9-1#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-2#9-1#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#9-1#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-2#9-1#6-1#7-3#8-2", "1-1#2-2#3-4#4-4#5-2#9-1#6-3",
          "1-1#2-2#3-4#4-4#5-2#9-1#6-3#7-1", 
         "1-1#2-2#3-4#4-4#5-2#9-1#6-3#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-2#9-1#6-3#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-2#9-1#6-3#7-2", 
         "1-1#2-2#3-4#4-4#5-2#9-1#6-3#7-2#8-3", "1-1#2-2#3-4#4-4#5-2#9-3", 
         "1-1#2-2#3-4#4-4#5-2#9-3#6-1", "1-1#2-2#3-4#4-4#5-2#9-3#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-2#9-3#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#9-3#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-2#9-3#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-2#9-3#6-1#7-3#8-2", "1-1#2-2#3-4#4-4#5-2#9-3#6-3",
          "1-1#2-2#3-4#4-4#5-2#9-3#6-3#7-1", 
         "1-1#2-2#3-4#4-4#5-2#9-3#6-3#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-2#9-3#6-3#7-2", 
         "1-1#2-2#3-4#4-4#5-2#9-3#6-3#7-2#8-1", "1-1#2-2#3-4#4-4#5-3", 
         "1-1#2-2#3-4#4-4#5-3#9-1", "1-1#2-2#3-4#4-4#5-3#9-1#6-1", 
         "1-1#2-2#3-4#4-4#5-3#9-1#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-3#9-1#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-3#9-1#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-3#9-1#6-1#7-3#8-2", "1-1#2-2#3-4#4-4#5-3#9-1#6-2",
          "1-1#2-2#3-4#4-4#5-3#9-1#6-2#7-1", 
         "1-1#2-2#3-4#4-4#5-3#9-1#6-2#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-3#9-1#6-2#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-3#9-1#6-2#7-3", 
         "1-1#2-2#3-4#4-4#5-3#9-1#6-2#7-3#8-2", "1-1#2-2#3-4#4-4#5-3#9-3", 
         "1-1#2-2#3-4#4-4#5-3#9-3#6-1", "1-1#2-2#3-4#4-4#5-3#9-3#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-3#9-3#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-3#9-3#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-3#9-3#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#9-3#6-1#7-3#8-2", "1-1#2-2#3-4#4-4#5-3#9-3#6-2",
          "1-1#2-2#3-4#4-4#5-3#9-3#6-2#7-1", 
         "1-1#2-2#3-4#4-4#5-3#9-3#6-2#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-3#9-3#6-2#7-3", 
         "1-1#2-2#3-4#4-4#5-3#9-3#6-2#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#9-3#6-2#7-3#8-2", "1-1#2-3", "1-1#2-3#3-2", 
         "1-1#2-3#3-2#4-2", "1-1#2-3#3-2#4-2#5-3", "1-1#2-3#3-2#4-2#5-3#9-1", 
         "1-1#2-3#3-2#4-2#5-3#9-1#6-1", "1-1#2-3#3-2#4-2#5-3#9-1#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-3#9-1#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#9-1#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-3#9-1#6-1#7-4#8-3", "1-1#2-3#3-2#4-2#5-3#9-1#6-4",
          "1-1#2-3#3-2#4-2#5-3#9-1#6-4#7-1", 
         "1-1#2-3#3-2#4-2#5-3#9-1#6-4#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-3#9-1#6-4#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-3#9-1#6-4#7-3", 
         "1-1#2-3#3-2#4-2#5-3#9-1#6-4#7-3#8-4", "1-1#2-3#3-2#4-2#5-3#9-4", 
         "1-1#2-3#3-2#4-2#5-3#9-4#6-1", "1-1#2-3#3-2#4-2#5-3#9-4#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-3#9-4#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#9-4#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-3#9-4#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-3#9-4#6-1#7-4#8-3", "1-1#2-3#3-2#4-2#5-3#9-4#6-4",
          "1-1#2-3#3-2#4-2#5-3#9-4#6-4#7-1", 
         "1-1#2-3#3-2#4-2#5-3#9-4#6-4#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-3#9-4#6-4#7-3", 
         "1-1#2-3#3-2#4-2#5-3#9-4#6-4#7-3#8-1", "1-1#2-3#3-2#4-2#5-4", 
         "1-1#2-3#3-2#4-2#5-4#9-1", "1-1#2-3#3-2#4-2#5-4#9-1#6-1", 
         "1-1#2-3#3-2#4-2#5-4#9-1#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-4#9-1#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-4#9-1#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-4#9-1#6-1#7-4#8-3", "1-1#2-3#3-2#4-2#5-4#9-1#6-3",
          "1-1#2-3#3-2#4-2#5-4#9-1#6-3#7-1", 
         "1-1#2-3#3-2#4-2#5-4#9-1#6-3#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-4#9-1#6-3#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-4#9-1#6-3#7-4", 
         "1-1#2-3#3-2#4-2#5-4#9-1#6-3#7-4#8-3", "1-1#2-3#3-2#4-2#5-4#9-4", 
         "1-1#2-3#3-2#4-2#5-4#9-4#6-1", "1-1#2-3#3-2#4-2#5-4#9-4#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-4#9-4#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-4#9-4#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-4#9-4#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#9-4#6-1#7-4#8-3", "1-1#2-3#3-2#4-2#5-4#9-4#6-3",
          "1-1#2-3#3-2#4-2#5-4#9-4#6-3#7-1", 
         "1-1#2-3#3-2#4-2#5-4#9-4#6-3#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-4#9-4#6-3#7-4", 
         "1-1#2-3#3-2#4-2#5-4#9-4#6-3#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#9-4#6-3#7-4#8-3", "1-1#2-3#3-4", 
         "1-1#2-3#3-4#4-4", "1-1#2-3#3-4#4-4#5-2", "1-1#2-3#3-4#4-4#5-2#9-1", 
         "1-1#2-3#3-4#4-4#5-2#9-1#6-1", "1-1#2-3#3-4#4-4#5-2#9-1#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-2#9-1#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#9-1#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-2#9-1#6-1#7-3#8-2", "1-1#2-3#3-4#4-4#5-2#9-1#6-3",
          "1-1#2-3#3-4#4-4#5-2#9-1#6-3#7-1", 
         "1-1#2-3#3-4#4-4#5-2#9-1#6-3#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-2#9-1#6-3#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-2#9-1#6-3#7-2", 
         "1-1#2-3#3-4#4-4#5-2#9-1#6-3#7-2#8-3", "1-1#2-3#3-4#4-4#5-2#9-2", 
         "1-1#2-3#3-4#4-4#5-2#9-2#6-1", "1-1#2-3#3-4#4-4#5-2#9-2#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-2#9-2#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#9-2#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#9-2#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-2#9-2#6-1#7-3#8-1", "1-1#2-3#3-4#4-4#5-2#9-2#6-3",
          "1-1#2-3#3-4#4-4#5-2#9-2#6-3#7-1", 
         "1-1#2-3#3-4#4-4#5-2#9-2#6-3#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-2#9-2#6-3#7-2", 
         "1-1#2-3#3-4#4-4#5-2#9-2#6-3#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#9-2#6-3#7-2#8-3", "1-1#2-3#3-4#4-4#5-3", 
         "1-1#2-3#3-4#4-4#5-3#9-1", "1-1#2-3#3-4#4-4#5-3#9-1#6-1", 
         "1-1#2-3#3-4#4-4#5-3#9-1#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-3#9-1#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-3#9-1#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-3#9-1#6-1#7-3#8-2", "1-1#2-3#3-4#4-4#5-3#9-1#6-2",
          "1-1#2-3#3-4#4-4#5-3#9-1#6-2#7-1", 
         "1-1#2-3#3-4#4-4#5-3#9-1#6-2#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-3#9-1#6-2#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-3#9-1#6-2#7-3", 
         "1-1#2-3#3-4#4-4#5-3#9-1#6-2#7-3#8-2", "1-1#2-3#3-4#4-4#5-3#9-2", 
         "1-1#2-3#3-4#4-4#5-3#9-2#6-1", "1-1#2-3#3-4#4-4#5-3#9-2#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-3#9-2#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-3#9-2#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-3#9-2#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-3#9-2#6-1#7-3#8-1", "1-1#2-3#3-4#4-4#5-3#9-2#6-2",
          "1-1#2-3#3-4#4-4#5-3#9-2#6-2#7-1", 
         "1-1#2-3#3-4#4-4#5-3#9-2#6-2#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-3#9-2#6-2#7-3", 
         "1-1#2-3#3-4#4-4#5-3#9-2#6-2#7-3#8-1", "1-1#2-4", "1-1#2-4#3-2", 
         "1-1#2-4#3-2#4-2", "1-1#2-4#3-2#4-2#5-3", "1-1#2-4#3-2#4-2#5-3#9-1", 
         "1-1#2-4#3-2#4-2#5-3#9-1#6-1", "1-1#2-4#3-2#4-2#5-3#9-1#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-3#9-1#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#9-1#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-3#9-1#6-1#7-4#8-3", "1-1#2-4#3-2#4-2#5-3#9-1#6-4",
          "1-1#2-4#3-2#4-2#5-3#9-1#6-4#7-1", 
         "1-1#2-4#3-2#4-2#5-3#9-1#6-4#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-3#9-1#6-4#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-3#9-1#6-4#7-3", 
         "1-1#2-4#3-2#4-2#5-3#9-1#6-4#7-3#8-4", "1-1#2-4#3-2#4-2#5-3#9-3", 
         "1-1#2-4#3-2#4-2#5-3#9-3#6-1", "1-1#2-4#3-2#4-2#5-3#9-3#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-3#9-3#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#9-3#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#9-3#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-3#9-3#6-1#7-4#8-1", "1-1#2-4#3-2#4-2#5-3#9-3#6-4",
          "1-1#2-4#3-2#4-2#5-3#9-3#6-4#7-1", 
         "1-1#2-4#3-2#4-2#5-3#9-3#6-4#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-3#9-3#6-4#7-3", 
         "1-1#2-4#3-2#4-2#5-3#9-3#6-4#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#9-3#6-4#7-3#8-4", "1-1#2-4#3-2#4-2#5-4", 
         "1-1#2-4#3-2#4-2#5-4#9-1", "1-1#2-4#3-2#4-2#5-4#9-1#6-1", 
         "1-1#2-4#3-2#4-2#5-4#9-1#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-4#9-1#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-4#9-1#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-4#9-1#6-1#7-4#8-3", "1-1#2-4#3-2#4-2#5-4#9-1#6-3",
          "1-1#2-4#3-2#4-2#5-4#9-1#6-3#7-1", 
         "1-1#2-4#3-2#4-2#5-4#9-1#6-3#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-4#9-1#6-3#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-4#9-1#6-3#7-4", 
         "1-1#2-4#3-2#4-2#5-4#9-1#6-3#7-4#8-3", "1-1#2-4#3-2#4-2#5-4#9-3", 
         "1-1#2-4#3-2#4-2#5-4#9-3#6-1", "1-1#2-4#3-2#4-2#5-4#9-3#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-4#9-3#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-4#9-3#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-4#9-3#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-4#9-3#6-1#7-4#8-1", "1-1#2-4#3-2#4-2#5-4#9-3#6-3",
          "1-1#2-4#3-2#4-2#5-4#9-3#6-3#7-1", 
         "1-1#2-4#3-2#4-2#5-4#9-3#6-3#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-4#9-3#6-3#7-4", 
         "1-1#2-4#3-2#4-2#5-4#9-3#6-3#7-4#8-1", "1-1#2-4#3-3", 
         "1-1#2-4#3-3#4-3", "1-1#2-4#3-3#4-3#5-2", "1-1#2-4#3-3#4-3#5-2#9-1", 
         "1-1#2-4#3-3#4-3#5-2#9-1#6-1", "1-1#2-4#3-3#4-3#5-2#9-1#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-2#9-1#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#9-1#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-2#9-1#6-1#7-4#8-2", "1-1#2-4#3-3#4-3#5-2#9-1#6-4",
          "1-1#2-4#3-3#4-3#5-2#9-1#6-4#7-1", 
         "1-1#2-4#3-3#4-3#5-2#9-1#6-4#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-2#9-1#6-4#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-2#9-1#6-4#7-2", 
         "1-1#2-4#3-3#4-3#5-2#9-1#6-4#7-2#8-4", "1-1#2-4#3-3#4-3#5-2#9-2", 
         "1-1#2-4#3-3#4-3#5-2#9-2#6-1", "1-1#2-4#3-3#4-3#5-2#9-2#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-2#9-2#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#9-2#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#9-2#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-2#9-2#6-1#7-4#8-1", "1-1#2-4#3-3#4-3#5-2#9-2#6-4",
          "1-1#2-4#3-3#4-3#5-2#9-2#6-4#7-1", 
         "1-1#2-4#3-3#4-3#5-2#9-2#6-4#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-2#9-2#6-4#7-2", 
         "1-1#2-4#3-3#4-3#5-2#9-2#6-4#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#9-2#6-4#7-2#8-4", "1-1#2-4#3-3#4-3#5-4", 
         "1-1#2-4#3-3#4-3#5-4#9-1", "1-1#2-4#3-3#4-3#5-4#9-1#6-1", 
         "1-1#2-4#3-3#4-3#5-4#9-1#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-4#9-1#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-4#9-1#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-4#9-1#6-1#7-4#8-2", "1-1#2-4#3-3#4-3#5-4#9-1#6-2",
          "1-1#2-4#3-3#4-3#5-4#9-1#6-2#7-1", 
         "1-1#2-4#3-3#4-3#5-4#9-1#6-2#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-4#9-1#6-2#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-4#9-1#6-2#7-4", 
         "1-1#2-4#3-3#4-3#5-4#9-1#6-2#7-4#8-2", "1-1#2-4#3-3#4-3#5-4#9-2", 
         "1-1#2-4#3-3#4-3#5-4#9-2#6-1", "1-1#2-4#3-3#4-3#5-4#9-2#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-4#9-2#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-4#9-2#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-4#9-2#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-4#9-2#6-1#7-4#8-1", "1-1#2-4#3-3#4-3#5-4#9-2#6-2",
          "1-1#2-4#3-3#4-3#5-4#9-2#6-2#7-1", 
         "1-1#2-4#3-3#4-3#5-4#9-2#6-2#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-4#9-2#6-2#7-4", 
         "1-1#2-4#3-3#4-3#5-4#9-2#6-2#7-4#8-1"}, {Null, CompressedData["
1:eJwt03l8z3UcB/Dfz+bY2DDb2MwxNuw0zLDNmAqVLh2SJKsosaGkHJWzWzmK
dNAdXQghFXJ1OTpUbsrRoRIRJc1+zz+ej9fj9X68H+/H4/P7Pn7JJWU9SysF
AoHiYCBwLsujIs8JI5zKVKEq1YjQI6lurwZRRMua5rWo7X4MdYglTo+nrqxn
P4FE6utJNPCOhjSiMck00ZuSYi+VZjSXLczTSHc/g0yyyNZbkiNb2W9NG3L1
tuTJdr5TezqQTwGFdKRI70Rne8V04Tx5vvkFdHW/G925kIv0i+khL7F/KZdx
uX4FPb3jSq7iaq6hl34tve1dRx+ul33Nb6Cf+zfSnxJu0m/mFjnA/kBu5TZ9
ELfLwYHQ/2oIpZQxlGEM5w7u1Edwl72R3M09cpT5aMa4P5Z7uY/79XGMlxPs
T2QSk/UHeNA7HuJhHuFRHtOn8Li9J5jKNDndfAZPuv8UM5nF0/psnpHP2n+O
55mjz+UF+aLv9BIv8wqv8hqvM0+fzxv23uQt3pbvmC9gofuLeJfFLJFLzd9j
mf3lrOB9fSUfyA+95yNWsZo1fKyvZZ299Wxgo/zE/FM+c/9zvmATm+UW8618
af8rvuYbfRvfBkL/q+/4nu3sYCe72M0efS/77O3nB36UB8wPcsj9w/zEz/wi
fzU/wm/2f+cPjup/ckwe956/OMFJ/uaUfpp/7P3LGf6TZ80rfsRywWDofqVg
SBjhVJZVzKtSzX4EkVTXaxAVDH2n6GBITWpRmxjqEKvHEW+vLvVIkInm9Uly
vwENaURjmWzehKb2U0ilmd6cFjLNe9LJIJMssvWW5NhrRWvayFzztuS53472
dCBfFpgX0tF+EZ3orBfTpdz/GCIQcQ==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {21, "7-7-4-4-4-4-4-4-4"}, 
         VertexStyle -> {
          "1-1#2-4#3-3#4-3#5-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-2#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-1#6-3#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-1#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-4#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-1#6-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#9-2#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#9-1#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-1#6-4#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#9-3#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-3#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-4#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-1#6-4#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#9-4#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-3#6-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#9-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-1#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3" -> RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#9-1#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#9-1#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#9-1#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#9-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#9-1#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-4#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-3#6-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-1#6-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#9-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#9-3#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#9-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-2#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-3#6-1#7-2" -> RGBColor[0, 1, 0], "1-1#2-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#9-1#6-3#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#9-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#9-1#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#9-2#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-2#6-3#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-3#6-4#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-2#6-2#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#9-4#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-1#6-4#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-4#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-1#6-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-1#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#9-1#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-3#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#9-1#6-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#9-1#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-4#6-4#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-3#6-4#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-2#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-1#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-1#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-1#6-2" -> RGBColor[0, 1, 0], "1-1#2-4#3-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#9-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#9-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#9-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#9-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-2#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-1#6-3#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2" -> RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#9-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#9-2#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#9-2#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#9-2#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#9-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#9-4#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#9-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#9-3#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#9-2#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#9-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#9-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#9-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#9-4#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#9-1#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#9-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#9-3#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-4#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-1#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-3#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-1#6-3#7-1" -> RGBColor[1, 0, 0], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#9-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#9-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#9-1#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#9-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#9-1#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#9-3#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#9-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#9-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#9-3#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-1#6-4#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-1#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-2#6-4#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-4#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-3#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-1#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-1#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-3#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#9-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-3#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-1#6-4#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-4#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-3#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-3#6-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-4#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-1#6-3#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-1#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#9-3#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-2#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#9-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-2#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-3#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-2#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-4#6-2#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-4#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-1#6-2#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-1#6-2#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-1#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-4#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-2#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#9-2#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-2#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#9-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-4#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-1#6-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-3#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#9-3#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-4#6-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-1#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#9-2#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-1#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-1#6-2#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-1#6-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-4#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-2#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-1#6-3#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-4#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#9-4#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-3#6-3#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-3#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-1#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-3#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-2#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-1#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-1#6-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-2#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-3#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-1#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-1#6-2#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#9-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-4#6-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#9-4#6-3#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#9-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-1#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#9-1#6-4#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-1#6-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-4#6-4#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-2#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-1#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#9-2#6-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-1#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#9-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#9-4#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#9-3#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-2#6-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-4#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-4#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-1#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-3#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-3#6-2#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-4#6-3#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#9-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#9-1#6-2#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-1#6-2#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-3#6-3#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#9-2#6-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-1#6-3#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#9-3#6-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#9-3#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-2#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-1#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-1#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-2#6-2#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-3#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-4#6-4#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-4#6-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-4#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-1#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#9-4#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#9-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-4#6-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-2#6-4#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-1#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-1#6-4#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#9-1#6-3#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-2#6-3#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#9-2#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-1#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#9-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-2#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-1#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#9-4#6-4#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#9-2#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#9-2#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-1#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-4#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-3#6-3#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-2#6-4#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-3#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#9-2#6-2#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-3#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-1#6-4#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-4#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#9-1#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#9-1#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-1#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#9-3" -> RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#9-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#9-4#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#9-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#9-3#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#9-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#9-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#9-1#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#9-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#9-1#6-3#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#9-2#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#9-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#9-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#9-1#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#9-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#9-3#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#9-1#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#9-3#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-1#6-4#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#9-2#6-3#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#9-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#9-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#9-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#9-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#9-1#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#9-2#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3" -> RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9mHk81Ov7xieJZDfWaWSbGWMMESr66nNVCq2KSlJJ2iQqhZQ1iVIHEXUc
KYrCSVJSKQnR6pRTnU6LRAvJWlTo53e68Y/X8888z+d57vu63vel5+m3aK0E
i8WaPoLF+v//5glFTX+vGwemkX/c22scSo8+PLGQOxZnjpQNbOLrYszPfuGP
oxwc/hh4uGS3Pnounrxz8IIm5q/1vvhDjwfRTBv/o6c5+DCnSr/sNwF2CZ5s
GZDhomKFEzvouBCFLx1762dow2nv32W8ZBESFBueKZRq48deiy8GoWIc15N/
ej9Lm/Y3xT7/xPufNnIxa3NLeP4OMXwvP5lkrcfFXLf9edfdTDGQ75Bjs5WD
jPndR319RIjt0J3zwo+Dy3/19IqWiTH9glOF+nEODDcJ23zsTdEiFzzVXUcL
AZtvFEaITNEZ+aM+aJcmPMwstOuMxJC/M7++/6QGNkbyVylKmmLr41eZxTs0
0FfjOGfyGCH0Wrlvaww0EHn3/aK7LBH0tUZWek/QwKG+doe2n8Yo3LG0rFWk
jvdF8T6mdSa4o1TtdG6eGsps2+Y+P2+MatnkSWMvq+I7W9Kl/5gJUlYbO26b
w8a78827MlxNMHdmeYRFpCrSrdeZXw80QssE9/Xfd7Ax6+TN6PqFxmhgGcv9
26QMifpPutPlTfBiVfJ5OTsVbOpJ/2PiaGOcVXyuYR2jhMa1ClNUSsRYualv
YVENG2H5dVnsTB5KFmu2uy5gY7Kz7cWuDwJE2m7rEexRQcTLd8Epn4Q4m2C1
8JmWMqxcLG0li0Uw+a8eFND2ULBqlrsYteFjDSa2K8KjRJcdslKEaxuVZA/X
yuLgjNtpWj3GmLOG77JtvBJiQpJ9R3OFkJKqKqnPl0OBRcQzv3tGmJ/yr86C
BTLYdTDT9V6sMQayYX+yUQp5S44YZKkaQ2HKhe6YozKQPRFRZWlshBe1pTPU
EyURkOx2qCVFBOlsj5IjGopgZlrfSx/Hx5gba3Y/WSWL1c129Yu7BGCle826
lC0N6e+VXleKhVA/ELObv0wCrzeof+9gi3Bp3Z9t+R8l8WUTRk39aYh0h2I5
myksBCX+vVY21ghcpeSSZf59jMcltnV8jxDxNR8cunSkscDN2WBOOh88bkH2
TS8JTCr5wRbaGMK1dcGh2NxepmN9kOzLVUJ4jppQGsdlIcrtdEniRgEc8gXx
m/S+MKsffdi4qNwQRbrO/njawSBM9aiLjiGafOx9dO+rD/fb9efx52ay2MPr
R2mbE0piFfFzcrPr+Gl6yEoYGSZXIwO97nrbtgZ9aN7+OlrNWhKFDRXcgrU8
FA0E8bKFfUyEqCEp5xAftRXeW5HeyugvzVo8J1CA8DP+BZKl3xglx3qZpB4e
XJNWnu9Q+8AoBFsmnrjDh82GY9oBXSOw5epjb29NA7hI+XhsPPSV6fyq0Gim
wINZS7gyR+sts/jLdItKLT6U+nK33Vv8krE6M7VGMLh/1oOJAWmtXQy78XLN
M20DbHm0QtEp7W9GuaHBwTrfAJ5uvMU11tLg5d6WupCmC90VOzPecliQUH6U
GbldD/eWjxxTFtLJnOoutfAO1kf9tCaus9oDRjBVvnxrpz68mo7V4692pv/A
tZjgCD1keHwKVJh9i8nc8j81eyt9QKumcvXVi4zbvPfZ5gF6uPx41EadnAFm
g0GVkpOcLmLMtjUc2tHGuHAer/zfXl2wcrUnLF+SyZyye6GRe1EXBUHbWw6d
/cw4eegXvSzWAato3XK/ZXuYJmHRv8s/6ABXfw8NX6qIyam5YtMsDpSK7ZyC
+qWgZnvHSyOci9GpHiUavgNMopMwqfGRNsz+65/PDOg9WfQ3tB7az2iD0f4e
Je3h/ZKOp3jurOfCY+BbcPqmn8ya5dmcLQMcxH+5av1Iqp2Rjfy8OlNt7PD5
TZnDCmErxg5/f6VJyOetL7QgNOjdF7Wgg3k6y3av7KDuDd3XxPeP2PYrNdFd
fvDF8c0yCBE4rZjrrwEX1TnbVWxGwLnP5ExjrgZq6T3MXj98wqrTAGv6r/cw
mWt+peOtOmqXXgl8XdrNhC+4M2tfixrC6b3dJKPzPH3VoEv1oRTwIHffABve
kly7mOKRWJZqMaU6TBUx5yLd1h3qYdJena81VVSFA9XXg5eVT2cnq8CLs00w
r+U701wotenENBU4Ub161TVoJVooo5rqe6ellCCkSBFD/qW1yK/htxQO5Miv
ln5ZruH5UAPfyK8a+gMev4xSxTaO+RStvWz4XN8s63ibDZX1ZRuuRiqgV8m+
27VFBeqm994OhEphxHHJpRGjVGA26tbSWw8HGAeTPa/89yqhgPqZlTRT01VV
Hhyl0BiXZyykTdLx9KtVgB31/2777jqPmDHIMN2WmvdKBtd31URUBCkiePqK
JkOrkdiwIqf5U5osXEhP/tdxcf5EldHQJD0KLXZI3XhhFB7tOWgXc38UZqd4
tr9PHY1jpF/j7Kc17d48Eu3N6z9JHFKBwbwZ4jKVQZ08lXPqR4YCgl91RxSm
jIEU6ePznLCPZYVSGEf6GNRqm9QwbQRC/QXHWo+NwfYRESZLpCXxjPTXKcAt
unfNAPOd9DrLZ/cLi9DvzOMyi6lnDynjrN/dq9yx0sh3mHeRc0MeZTkJ6XZH
Rgye85fe615Sseys+8o8I/8IzlU1u6TBQgX5R9SoLyox3l3MlpFSj984cNA+
3UnybZQiRqZc17Y+oo6KL80TrPhjULjz2AvLMDaOdLF24Zok/iS/mhsep2ix
qZ+ZTH4VdLL3p960dqae/DFp3SS5jDffmQLyx4ymwGnRF5uZqPx5ZnNU1CGI
tSs5vFgCiQegcUxZFZd/2KMkqof5QH5bNiP+7b5tTUwq+XU8/4LFyWv1TECf
68HOVjWMzgpbMaGom7lD/l4w2sbrjMk/jFBnTuDzhLEIZUlXd1pKo25Kzpsu
58E+1EhStHdmQUD8EG6bff65QRdTTPxQ33xqUbT0I6a26+7dAD0tuPuVbn46
s4NRIT7x2KHJqlWvZrqJZ1heUywCuq8xGabz12QUctGuc3f+tvQBZsT4kBwF
zbGI3yPBzP7exswgHmJp7uw/15/HaKldrvVka0NX+ecly5TPzBbiK9Y79qSm
pYeZP4jHhnQr77/71hvuJ6uJa1iK8vp4S/0U9Jt5n9d0PbTR+3WGOOY/Wa2L
Zq0l4++wpXHeTufxnVgdBPVEdpoGDzC1Kvs605QGdfU/PfzMlLPcu18KdYb3
81vaEvrafFC3/bLf/tXymflhWeNovUR3+HzmNvEJk0310J4XZ1R/4yfjq8kr
ez+4tkzaYt6/rJ1JnBS3Z7aG3vD3lu4PrDJ8qodwuq/LDyfu0DLSR296smJR
XQcjEh/8siRZH+F0v0dnC9/wGvVRNuldh1WFDE5wBN3tdfro9Ow1Czk0Avtt
WJsVdAxQx+lb3va2i3F9EjNq1UIDsFp+vd8c2WbH6jE8ZFA9eM9bsm+dIg8x
i8xnXYv6yqypH3eTe5OHcKonY2u5sqZ1PEzY/M+uqZaSuBIoVfgsl4d7ivq3
nJJ6mRtKx1d98OejmurxW7jR5Fe/8fFh9tQx38f1Mctjby8r0ReggOr7F18M
+j71w7eRXAfHLB58Se8u/x7uV6fDhy7pRU3Bsarw43zkUT/3FbS6V3sLEEr9
Wh7Qrn9+myHiqF+lmdWTFXsEKKd+98gt1ZZgCyGmfn+zfnbfkeuCYf1x7haF
ccoMEUz6Yrm+0Tk/X4gC0pM+bqWL03QjeJDeFGwc6/JhtxCvSK82+SZGx9Ua
IZT0yjcwStawSoA+0uv9o1JviNoMUU76uqeneqO32AiCN8nrC5NkIHcj2lPa
VQQe6aVJW8Sf3s9ECCJ9Fe6v3nXqvhF083LEY87IIfpw8wWvQe6eSHqct/em
WP22EJLkB2L55FtlZiJkkt7vv3rOP6fcGFGk93Fm14Jfxokwl/yCazL7aaux
GDLkF4sq7qnmP9Mdnq9u/Md/Bhjig0cGn+QvvONhGq1Xn5Sv+hIvgA3xR3Ve
V2VityGm1MeWf5XQgM/rgMx4VyOMG1kuuaOfDfet/BE334gQ7r9PNSpXGe8a
/3jVESdGBPmlBPf0AqvxxvCaeECU/48KWrPT7wQ0ibGB/FW/Z97K3o9GSF+Y
tYGVqo4NStklo5ONcfy5SYB/nirCItPs7KxM8Jz8epG5TqThbhNwyO/di1uX
6H80hhvr+VmDg+pIP2m9tqvEBCuJD2yLUi7lZwixf6e96LA0F83WR/q5HiKE
ns7++vC1Fp5FB5fJDN5X/98+x+R3akLUh6Phn01gRfzx5+u63HwtU0winpkg
ZNI83MRItUuU3LqZg4EBof6qKaaoIR6q+Zfr5XZEhHKzq+d3TNOG0Pdgz24/
MeoOnwp3vz4W0f6R+8OcTWFBPLX9RXDqsjAxMj2dEzOvaCOq+GXsz9WmSCU+
+8UbpphJ79NntCxifZQAI6x/8Xpq8Kb4NalC8Il3rzw53PtXggg+xKOnHfu/
ineLsZx4c+j3O4g3h87nRrw6dL5c4tUPdF+SxM9Rlidq8ueKIRH3i4+Hvt+D
eHjovs4QL1/ib2/U1hAjh3hbSPcrIt6uovri0byhR/WwneaDSbNKv2o9NEbo
tbIfp30NkEbvq0a870T1MInmA0zx4sjsMEZ7972Jj915CKH6WUrzhDfVbxHN
MyyqTxWaV5qpPpVoXnGj+t5D804D1TeP5p2z5FdJlFdYkl8N5RXhyy9d+xHB
QwTNxz6kJxXLJfjXP/Nwlvq9LCmz68xqPvZTP/8xr/FcgZ4AHOrn6TTPCUkP
3NTTq+YXCBBNerCG5r8Y0qdFey+EWkcLEI8Vnw4cNULzvV1e40MMEUl685Xm
SRHp0zqaR23MEur8u4TwmyqfaTZViNGkZ8E0v9oUOlZ3tfHwRdd2Q0eFAK9I
fzPzcgZCrhuiMcll1jpGiIp/HM2ndgqxgfT0Lc3HvaS/gTRvuxvckl4baoix
zWqOS1KNYEZ6nU/zumVL85HXnnxYjg+Ora8c1EXyA+XgiMB/BozgTn6wm+Z9
pSxj53eD/qT6fPvT7AMilJKfxFN+UE9+1Ul5w1FfDXEsWw8fKU8KMKxkf8/V
H85jon0f867xB/2V8hLmzce4h3Z8+FIesoT88B3lIZfITx0oT7lCfipJecof
5O9RlO9UxTjZDtwwwC3Kb1aSX3+kvGYW+Xsf5Tm/S1rsybivj3jKgxYRD3yk
POgz8VAl5WEmxC8nKb9yTHkQxnmiB+eJvufPTRmsY+IRb8qjLhO/BFJ+9ee3
HQkPnutC6prVj0ovMeKId4SUd50h3hrK27yJp+wpT/tKPDWUp1URj/VRHldM
PAbK4/4P38qalg==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{1, 109}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{1, 216}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{2, 56}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{4, 30}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{5, 18}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{6, 12}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{7, 10}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{12, 16}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{13, 14}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{13, 15}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{18, 25}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{19, 22}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{22, 24}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{25, 28}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{30, 43}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{31, 37}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{32, 35}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{37, 41}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{38, 40}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{43, 50}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{44, 47}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{47, 49}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{50, 53}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{53, 55}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{57, 83}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{58, 71}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{59, 65}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{60, 63}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{65, 69}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{66, 68}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{71, 78}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{72, 75}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{75, 77}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{78, 81}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{83, 96}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{84, 90}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{85, 88}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{90, 94}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{91, 93}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{96, 103}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{97, 100}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{100, 102}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{103, 106}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{106, 108}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{109, 163}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{111, 137}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{112, 125}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{113, 119}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{114, 117}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{119, 123}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{120, 122}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{125, 132}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{126, 129}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{129, 131}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{132, 135}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{137, 150}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{138, 144}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{139, 142}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{144, 148}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{145, 147}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{150, 157}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{151, 154}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{154, 156}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{157, 160}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{160, 162}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{164, 191}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{165, 178}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{166, 172}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{167, 170}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{172, 176}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{173, 175}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{178, 179}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{178, 185}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{179, 183}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{180, 182}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{183, 184}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{185, 188}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{188, 190}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{191, 192}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{191, 204}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{192, 193}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{192, 198}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{193, 194}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{193, 196}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{194, 195}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{196, 197}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{198, 199}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{198, 202}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{199, 200}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{199, 201}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{202, 203}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{204, 205}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{204, 211}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{205, 206}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{205, 209}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{206, 207}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{206, 208}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{209, 210}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{211, 212}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{211, 214}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{212, 213}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{214, 215}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{216, 217}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{216, 270}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{217, 218}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{218, 219}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{218, 245}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{219, 220}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{219, 232}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{220, 221}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{220, 226}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{221, 222}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{221, 224}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{222, 223}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{224, 225}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{226, 227}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{226, 230}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{227, 228}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{227, 229}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{230, 231}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{232, 233}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{232, 239}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{233, 234}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{233, 237}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{234, 235}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{234, 236}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{237, 238}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{239, 240}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{239, 242}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{240, 241}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{242, 243}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{242, 244}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{245, 246}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{245, 258}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{246, 247}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{246, 252}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{247, 248}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{247, 250}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{248, 249}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{250, 251}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{252, 253}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{252, 256}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{253, 254}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{253, 255}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{256, 257}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{258, 259}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{258, 265}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{259, 260}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{259, 263}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{260, 261}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{260, 262}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{263, 264}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{265, 266}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{265, 268}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{266, 267}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{268, 269}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{270, 271}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{271, 272}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{271, 298}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{272, 273}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{272, 285}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{273, 274}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{273, 279}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{274, 275}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{274, 277}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{275, 276}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{277, 278}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{279, 280}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{279, 283}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{280, 281}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{280, 282}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{283, 284}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{285, 286}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{285, 292}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{286, 287}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{286, 290}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{287, 288}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{287, 289}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{290, 291}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{292, 293}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{292, 295}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{293, 294}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{295, 296}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{295, 297}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{298, 299}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{298, 311}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{299, 300}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{299, 305}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{300, 301}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{300, 303}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{301, 302}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{303, 304}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{305, 306}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{305, 309}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{306, 307}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{306, 308}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{309, 310}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{311, 312}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{311, 318}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{312, 313}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{312, 316}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{313, 314}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{313, 315}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{316, 317}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{318, 319}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{318, 321}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{319, 320}, 0.08079788467990051]}, 
           {Arrowheads[0.], ArrowBox[{321, 322}, 0.08079788467990051]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[4, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[5, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[6, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[8, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[13, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[14, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[15, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[18, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[19, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[20, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[21, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[22, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[23, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[24, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[25, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[27, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[28, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[29, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[30, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[31, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[32, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[33, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[34, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[35, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[36, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[37, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[38, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[39, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[40, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[41, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[42, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[45, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[47, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[48, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[50, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[51, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[52, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[53, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[54, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[56, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[57, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[58, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[59, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[60, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[62, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[63, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[65, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[66, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[67, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[68, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[69, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[70, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[71, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[72, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[73, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[74, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[75, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[76, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[77, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[78, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[79, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[80, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[81, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[82, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[83, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[84, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[85, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[86, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[87, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[88, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[89, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[90, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[91, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[92, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[93, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[94, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[95, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[96, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[97, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[99, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[100, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[101, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[102, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[103, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[104, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[105, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[106, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[107, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[108, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[109, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[110, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[112, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[113, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[114, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[115, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[116, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[117, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[118, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[119, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[120, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[121, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[122, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[123, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[124, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[125, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[126, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[127, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[128, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[129, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[130, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[131, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[132, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[133, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[134, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[136, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[137, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[138, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[139, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[140, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[141, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[142, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[143, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[144, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[145, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[148, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[149, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[150, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[151, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[152, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[153, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[154, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[155, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[156, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[157, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[158, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[159, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[160, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[161, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[162, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[163, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[164, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[165, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[166, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[167, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[168, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[169, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[170, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[171, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[172, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[173, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[174, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[175, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[176, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[177, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[178, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[179, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[180, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[181, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[182, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[183, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[184, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[185, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[186, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[187, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[188, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[189, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[190, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[191, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[192, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[193, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[194, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[195, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[196, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[197, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[198, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[199, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[200, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[201, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[202, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[203, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[204, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[205, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[206, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[207, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[208, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[209, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[210, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[211, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[212, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[213, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[214, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[215, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[216, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[217, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[218, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[219, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[220, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[221, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[222, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[223, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[224, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[225, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[226, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[227, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[228, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[229, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[230, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[231, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[232, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[233, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[234, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[235, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[236, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[237, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[238, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[239, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[240, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[241, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[242, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[243, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[244, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[245, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[246, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[247, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[248, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[249, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[250, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[251, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[252, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[253, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[254, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[255, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[256, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[257, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[258, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[259, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[260, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[261, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[262, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[263, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[264, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[265, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[266, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[267, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[268, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[269, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[270, 0.08079788467990051]}, 
           {RGBColor[0, 0, 1], DiskBox[271, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[272, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[273, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[274, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[275, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[276, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[277, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[278, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[279, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[280, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[281, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[282, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[283, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[284, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[285, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[286, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[287, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[288, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[289, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[290, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[291, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[292, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[293, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[294, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[295, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[296, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[297, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[298, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[299, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[300, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[301, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[302, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[303, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[304, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[305, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[306, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[307, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[308, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[309, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[310, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[311, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[312, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[313, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[314, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[315, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[316, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[317, 0.08079788467990051]}, 
           {RGBColor[0, 1, 0], DiskBox[318, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[319, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[320, 0.08079788467990051]}, 
           {RGBColor[1, 1, 0], DiskBox[321, 0.08079788467990051]}, 
           {RGBColor[1, 0, 0], DiskBox[322, 0.08079788467990051]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"21", ",", "\"7-7-4-4-4-4-4-4-4\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#4-3", 
         "1-1#2-2#3-3#4-3#5-2", "1-1#2-2#3-3#4-3#5-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1", "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-4", "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-1", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-1#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#10-4", "1-1#2-2#3-3#4-3#5-2#10-4#6-1", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4", "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2#8-4#9-2", "1-1#2-2#3-3#4-3#5-4", 
         "1-1#2-2#3-3#4-3#5-4#10-1", "1-1#2-2#3-3#4-3#5-4#10-1#6-1", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-2", "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-1", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#10-4", "1-1#2-2#3-3#4-3#5-4#10-4#6-1", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-2", "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-4", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-4#8-2#9-1", "1-1#2-2#3-3#4-4", 
         "1-1#2-2#3-3#4-4#5-2", "1-1#2-2#3-3#4-4#5-2#10-1", 
         "1-1#2-2#3-3#4-4#5-2#10-1#6-1", "1-1#2-2#3-3#4-4#5-2#10-1#6-1#7-2", 
         "1-1#2-2#3-3#4-4#5-2#10-1#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-4#5-2#10-1#6-1#7-2#8-1#9-2", "1-1#2-2#3-4", 
         "1-1#2-2#3-4#4-3", "1-1#2-2#3-4#4-3#5-2", "1-1#2-2#3-4#4-3#5-2#10-1",
          "1-1#2-2#3-4#4-3#5-2#10-1#6-1", "1-1#2-2#3-4#4-3#5-2#10-1#6-1#7-2", 
         "1-1#2-2#3-4#4-3#5-2#10-1#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-3#5-2#10-1#6-1#7-2#8-1#9-2", "1-1#2-2#3-4#4-4", 
         "1-1#2-2#3-4#4-4#5-2", "1-1#2-2#3-4#4-4#5-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1", "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-3", "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-1", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-1#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#10-3", "1-1#2-2#3-4#4-4#5-2#10-3#6-1", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3", "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2#8-3#9-2", "1-1#2-2#3-4#4-4#5-3", 
         "1-1#2-2#3-4#4-4#5-3#10-1", "1-1#2-2#3-4#4-4#5-3#10-1#6-1", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-2", "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-1", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#10-3", "1-1#2-2#3-4#4-4#5-3#10-3#6-1", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-2", "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-3", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-3#8-2#9-1", "1-1#2-3", "1-1#2-3#3-2",
          "1-1#2-3#3-2#4-2", "1-1#2-3#3-2#4-2#5-3", 
         "1-1#2-3#3-2#4-2#5-3#10-1", "1-1#2-3#3-2#4-2#5-3#10-1#6-1", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-4", "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-1", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-1#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#10-4", "1-1#2-3#3-2#4-2#5-3#10-4#6-1", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4", "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3#8-4#9-3", "1-1#2-3#3-2#4-2#5-4", 
         "1-1#2-3#3-2#4-2#5-4#10-1", "1-1#2-3#3-2#4-2#5-4#10-1#6-1", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-3", "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-1", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#10-4", "1-1#2-3#3-2#4-2#5-4#10-4#6-1", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-3", "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-4", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-4#8-3#9-1", "1-1#2-3#3-2#4-4", 
         "1-1#2-3#3-2#4-4#5-3", "1-1#2-3#3-2#4-4#5-3#10-1", 
         "1-1#2-3#3-2#4-4#5-3#10-1#6-1", "1-1#2-3#3-2#4-4#5-3#10-1#6-1#7-3", 
         "1-1#2-3#3-2#4-4#5-3#10-1#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-4#5-3#10-1#6-1#7-3#8-1#9-3", "1-1#2-3#3-4", 
         "1-1#2-3#3-4#4-2", "1-1#2-3#3-4#4-2#5-3", "1-1#2-3#3-4#4-2#5-3#10-1",
          "1-1#2-3#3-4#4-2#5-3#10-1#6-1", "1-1#2-3#3-4#4-2#5-3#10-1#6-1#7-3", 
         "1-1#2-3#3-4#4-2#5-3#10-1#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-2#5-3#10-1#6-1#7-3#8-1#9-3", "1-1#2-3#3-4#4-4", 
         "1-1#2-3#3-4#4-4#5-2", "1-1#2-3#3-4#4-4#5-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1", "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-3", "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-1", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#10-2", "1-1#2-3#3-4#4-4#5-2#10-2#6-1", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-3", "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-2", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-2#8-3#9-1", "1-1#2-3#3-4#4-4#5-3", 
         "1-1#2-3#3-4#4-4#5-3#10-1", "1-1#2-3#3-4#4-4#5-3#10-1#6-1", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-2", "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-1", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-1#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#10-2", "1-1#2-3#3-4#4-4#5-3#10-2#6-1", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2", "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3#8-2#9-3", "1-1#2-4", "1-1#2-4#3-2",
          "1-1#2-4#3-2#4-2", "1-1#2-4#3-2#4-2#5-3", 
         "1-1#2-4#3-2#4-2#5-3#10-1", "1-1#2-4#3-2#4-2#5-3#10-1#6-1", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-4", "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-1", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#10-3", "1-1#2-4#3-2#4-2#5-3#10-3#6-1", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-4", "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-3", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-3#8-4#9-1", "1-1#2-4#3-2#4-2#5-4", 
         "1-1#2-4#3-2#4-2#5-4#10-1", "1-1#2-4#3-2#4-2#5-4#10-1#6-1", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-3", "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-1", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-1#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#10-3", "1-1#2-4#3-2#4-2#5-4#10-3#6-1", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3", "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4#8-3#9-4", "1-1#2-4#3-2#4-3", 
         "1-1#2-4#3-2#4-3#5-4", "1-1#2-4#3-2#4-3#5-4#10-1", 
         "1-1#2-4#3-2#4-3#5-4#10-1#6-1", "1-1#2-4#3-2#4-3#5-4#10-1#6-1#7-4", 
         "1-1#2-4#3-2#4-3#5-4#10-1#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-3#5-4#10-1#6-1#7-4#8-1#9-4", "1-1#2-4#3-3", 
         "1-1#2-4#3-3#4-2", "1-1#2-4#3-3#4-2#5-4", "1-1#2-4#3-3#4-2#5-4#10-1",
          "1-1#2-4#3-3#4-2#5-4#10-1#6-1", "1-1#2-4#3-3#4-2#5-4#10-1#6-1#7-4", 
         "1-1#2-4#3-3#4-2#5-4#10-1#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-2#5-4#10-1#6-1#7-4#8-1#9-4", "1-1#2-4#3-3#4-3", 
         "1-1#2-4#3-3#4-3#5-2", "1-1#2-4#3-3#4-3#5-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1", "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-4", "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-1", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#10-2", "1-1#2-4#3-3#4-3#5-2#10-2#6-1", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-4", "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-2", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-2#8-4#9-1", "1-1#2-4#3-3#4-3#5-4", 
         "1-1#2-4#3-3#4-3#5-4#10-1", "1-1#2-4#3-3#4-3#5-4#10-1#6-1", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-2", "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-1", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-1#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#10-2", "1-1#2-4#3-3#4-3#5-4#10-2#6-1", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2", "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4#8-2#9-4"}, {Null, CompressedData["
1:eJwt12XQVVUYBtDvXrq7u7u7u7u7u7u7u7u7Ow1QUFBCCYPGIBRMQsEEBM/6
sXjmeee9+8yeM2e+IUPHfg37hiMiIva9/udNhiKCfCMSkYlCVKIRnRjElLHM
YxPHflziEV8mME9IIs9JTBKSkkxPTgp7KUlFapnGPC3p3Cc9GchIJjLrWcgq
s9nPTg5y6rnI7fw85CUf+fUCFJSF7BemCEX1YhSXJbynkpSiNGUoSzlZ3rwC
Fe1XojJVZFXzalT3nBrUpBa19TrUtVeP+jSQDc0b0dh9mtCUZjSnhd6SVrK1
/Ta0pZ3eng7O70gnOtNF70o32d1+D3rSS+9Nn4jge+pLP/ozgIEMYnBE8D0O
YSjDGM4IRjKK0X43hrGMYzwTmMgkOdl8ClPtT2M6M+RM81nM9pw5zGUe8/UF
LLS3iMUskUvNl7HcfVawklWsZo2+lnVyvf0NbGSTvpktzt/KNrazQ9/JLrnb
/h72sk/fzwF50Hs6xGGOcJS3eFu+Y/4ux+wf5z3elyfMT/KB53zIKU7zkf4x
Z+yd5Rzn5Sfmn3LBfS5yict8xuf6F3wpr9i/yjWu6ze46fxb3OYrvta/4Vt5
x/5d7nFf/47vI4K/kw94yA/8yE/8zC/8yiP52PwJT+3/xu88k8/N/+BPz/mL
v/mHf/UXvLT3iv8v81pIhkPBPFIoEDkU3CdKKBCVaEQnhh6TWDK2/TjEJZ4e
nwTOT0giEpNET0oymdx+ClKSSk9NGpk2FLyndKFAejKQkUxkllnMs5LNfnZy
kFPmMs9NHs/JSz7yU0AvSCF7hSlCUVnMvDgl3KckpShNGcrq5SgvK9ivSCUq
61Wo6vxqVKcGNfVa1JZ17NelHvX1BjQMBd9To1CgMU1oSjOa0yIUfI8tQ4FW
tKYNbWlHezr4XUc60ZkudKUb3WUP8570st+bPvSV/cz7M8BzBjKIwQzRhzLM
3nBGMFKOMh/NGPcZyzjGM4GJ+iQm25vCVKbp05khZzp/FrOZw1w5z3w+C+wv
ZBGL9SUs9X6WsZwVrGQVq+Ua87Wss7+eDWyUm8w3s8VztrKN7ezQd7LL3m72
sFfuM9/PAfc5yCEOc4Sj+lu8be8d3uWYfpz35PvOP8FJPuBDecr8NB/Z/5gz
nNXPcV5+Egr+tHwaClzgIpe4zGd8zhd8Ka+YX+Wa/evc4Ka8ZX6brzzna77h
W+7od7ln7z7f8b18YP6QH9znR37iZ37hV/0Rj+094Sm/6b/zTD53/h/8yV/8
Lf8x/5cX9l/yijf/uXjTQ+FAOBy8n0jhQGSiEJVoRJcxzGMSy35s4hBXxjOP
TwLPSUgiEpNET0oye8lJQUqZyjw1adwnLelITwYy6pnIbC8LWcmmZyeHzOn8
XOQmD3llPvP8FLBfkEIU1otQVBYLB99T8XCgBCUpRWnKUDYcfI/lwoHyVKAi
lahMFar6XTWqU4Oa1KI2dWRd83rUt9+AhjSSjc2b0NRzmtGcFrTUW9HaXhva
0k62N+9AR/fpRGe60JVuend62OtJL3rrfegr+zm/PwMYyCA52HwIQ+0PYzgj
9JGM8n5GM4axjGM8E+RE80lMtj+FqUyT081nMNNzZjGbOczV5zHf3gIWskgu
Nl/CUvdZxnJWsJJV+mrW2FvLOtbrG9goNzl/M1vYyja53XwHO+3vYjd79L3s
k/tf+w8/mX0M
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {44, "8-8-4-4-4-4-4-4-4-4"}, 
         VertexStyle -> {
          "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-4#5-3#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-1#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-3#5-4#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-3#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-1#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-4#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-1#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-1" -> RGBColor[1, 0, 0], "1-1#2-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#10-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#10-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#10-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-4#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-4#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-3#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-3#5-4#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-4#5-3" -> RGBColor[0, 0, 1], "1-1#2-3#3-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#10-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-2#5-3#10-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-4#5-2#10-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#10-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#10-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-4#5-2#10-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-3#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-1#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-2#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-2#5-3#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-3#5-2#10-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-2#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-1#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-1#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-4#5-2#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-3#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-3#5-4#10-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3" -> RGBColor[0, 0, 1], "1-1#2-4#3-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-2#5-4#10-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#10-3" -> RGBColor[0, 0, 1],
            "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3" -> RGBColor[0, 0, 1], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-1#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-1#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-1#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-3#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-2#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-1#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-2#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-1#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-4#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-4#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-3#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-4#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-4#5-3#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-4#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-3#5-2#10-1#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-2#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-3#5-2#10-1#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-2#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-4#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4" -> RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#10-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#10-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-2#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1#7-2#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-1#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-2#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-4#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-2#5-3#10-1#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-4#5-3#10-1#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-1#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-2#5-4#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2" -> RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#10-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-3#5-4#10-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#10-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-4#5-2#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-3#5-4#10-1#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-3#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-2#5-4#10-1#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-2#5-3#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-3#7-2#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-3#5-2#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-4#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-3#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-2#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-2#5-4#10-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-4#5-3#10-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-2#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-2#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-2#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-4#7-1#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-4#5-3#10-1#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-1#7-2#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-3#6-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-3#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-1#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-1#7-2#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-1#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-4#5-2#10-1#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-1#7-2#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-2#5-4#10-1#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-1#6-4#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-4#6-4#7-1#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-4#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-2#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-2#5-3#10-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-1#6-2#7-1#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-4#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-4#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-1#7-3#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-3#7-1#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-3#5-2#10-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-1#6-2#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-2#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-1#6-1#7-2#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-2#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-3#7-1#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4" -> RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#10-1#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-3#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#10-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#10-2#6-2#7-1#8-4" -> RGBColor[1, 1, 0], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#10-3#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-2#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#10-3#6-3#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#10-4#6-4#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#10-2#6-1#7-3#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-2#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#10-4#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#10-3#6-1#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#10-1#6-2#7-1#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#10-4#6-2#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-2#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#10-1#6-1#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#10-3#6-2#7-1#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#10-1#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#10-1#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#10-1#6-4#7-1" -> RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
AB7thqs=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{1, 231}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{1, 460}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{2, 117}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{3, 110}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{4, 58}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{5, 32}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{6, 20}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{7, 14}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{8, 12}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{9, 11}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{14, 18}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{15, 17}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{20, 26}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{21, 24}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{26, 30}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{27, 29}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{32, 45}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{33, 40}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{34, 37}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{37, 39}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{40, 43}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{45, 52}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{46, 49}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{49, 51}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{52, 55}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{55, 57}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{58, 85}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{59, 73}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{60, 67}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{61, 65}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{62, 64}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{67, 71}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{68, 70}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{73, 79}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{74, 77}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{79, 83}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{80, 82}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{85, 98}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{86, 93}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{87, 90}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{90, 92}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{93, 96}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{98, 105}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{99, 102}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{102, 104}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{105, 108}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{117, 125}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{125, 179}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{126, 153}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{127, 141}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{128, 135}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{129, 133}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{130, 132}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{135, 139}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{136, 138}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{141, 147}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{142, 145}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{147, 151}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{148, 150}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{153, 166}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{154, 161}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{155, 158}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{158, 160}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{161, 164}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{166, 173}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{167, 170}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{170, 172}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{173, 176}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{176, 178}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{179, 206}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{180, 194}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{181, 188}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{182, 186}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{183, 184}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{183, 185}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{188, 192}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{189, 191}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{192, 193}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{194, 195}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{194, 200}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{195, 196}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{195, 198}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{196, 197}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{198, 199}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{200, 201}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{200, 204}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{201, 202}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{201, 203}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{204, 205}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{206, 207}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{206, 219}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{207, 208}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{207, 214}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{208, 209}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{208, 211}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{209, 210}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{211, 212}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{211, 213}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{214, 215}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{214, 217}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{215, 216}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{217, 218}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{219, 220}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{219, 226}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{220, 221}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{220, 223}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{221, 222}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{223, 224}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{223, 225}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{226, 227}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{226, 229}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{227, 228}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{229, 230}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{231, 232}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{231, 346}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{232, 233}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{232, 339}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{233, 234}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{233, 287}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{234, 235}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{234, 261}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{235, 236}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{235, 249}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{236, 237}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{236, 243}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{237, 238}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{237, 241}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{238, 239}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{238, 240}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{241, 242}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{243, 244}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{243, 247}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{244, 245}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{244, 246}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{247, 248}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{249, 250}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{249, 255}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{250, 251}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{250, 253}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{251, 252}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{253, 254}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{255, 256}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{255, 259}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{256, 257}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{256, 258}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{259, 260}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{261, 262}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{261, 274}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{262, 263}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{262, 269}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{263, 264}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{263, 266}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{264, 265}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{266, 267}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{266, 268}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{269, 270}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{269, 272}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{270, 271}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{272, 273}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{274, 275}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{274, 281}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{275, 276}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{275, 278}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{276, 277}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{278, 279}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{278, 280}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{281, 282}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{281, 284}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{282, 283}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{284, 285}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{284, 286}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{287, 288}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{287, 314}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{288, 289}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{288, 302}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{289, 290}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{289, 296}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{290, 291}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{290, 294}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{291, 292}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{291, 293}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{294, 295}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{296, 297}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{296, 300}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{297, 298}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{297, 299}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{300, 301}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{302, 303}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{302, 308}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{303, 304}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{303, 306}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{304, 305}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{306, 307}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{308, 309}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{308, 312}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{309, 310}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{309, 311}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{312, 313}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{314, 315}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{314, 327}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{315, 316}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{315, 322}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{316, 317}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{316, 319}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{317, 318}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{319, 320}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{319, 321}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{322, 323}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{322, 325}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{323, 324}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{325, 326}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{327, 328}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{327, 334}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{328, 329}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{328, 331}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{329, 330}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{331, 332}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{331, 333}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{334, 335}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{334, 337}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{335, 336}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{337, 338}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{339, 340}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{340, 341}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{341, 342}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{342, 343}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{343, 344}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{344, 345}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{346, 347}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{346, 354}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{347, 348}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{348, 349}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{349, 350}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{350, 351}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{351, 352}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{352, 353}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{354, 355}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{354, 407}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{355, 356}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{355, 382}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{356, 357}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{356, 370}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{357, 358}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{357, 364}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{358, 359}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{358, 362}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{359, 360}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{359, 361}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{362, 363}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{364, 365}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{364, 368}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{365, 366}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{365, 367}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{368, 369}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{370, 371}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{370, 376}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{371, 372}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{371, 374}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{372, 373}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{374, 375}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{376, 377}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{376, 380}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{377, 378}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{377, 379}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{380, 381}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{382, 383}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{382, 395}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{383, 384}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{383, 389}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{384, 385}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{384, 387}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{385, 386}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{387, 388}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{389, 390}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{389, 392}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{390, 391}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{392, 393}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{392, 394}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{395, 396}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{395, 402}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{396, 397}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{396, 400}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{397, 398}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{397, 399}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{400, 401}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{402, 403}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{402, 405}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{403, 404}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{405, 406}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{407, 408}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{407, 434}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{408, 409}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{408, 422}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{409, 410}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{409, 416}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{410, 411}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{410, 414}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{411, 412}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{411, 413}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{414, 415}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{416, 417}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{416, 420}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{417, 418}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{417, 419}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{420, 421}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{422, 423}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{422, 428}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{423, 424}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{423, 426}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{424, 425}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{426, 427}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{428, 429}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{428, 432}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{429, 430}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{429, 431}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{432, 433}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{434, 435}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{434, 447}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{435, 436}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{435, 441}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{436, 437}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{436, 439}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{437, 438}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{439, 440}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{441, 442}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{441, 444}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{442, 443}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{444, 445}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{444, 446}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{447, 448}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{447, 454}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{448, 449}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{448, 452}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{449, 450}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{449, 451}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{452, 453}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{454, 455}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{454, 457}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{455, 456}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{457, 458}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{457, 459}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{460, 461}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{460, 575}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{461, 462}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{461, 568}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{462, 463}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{462, 515}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{463, 464}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{463, 490}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{464, 465}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{464, 478}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{465, 466}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{465, 472}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{466, 467}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{466, 470}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{467, 468}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{467, 469}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{470, 471}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{472, 473}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{472, 476}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{473, 474}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{473, 475}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{476, 477}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{478, 479}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{478, 484}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{479, 480}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{479, 482}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{480, 481}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{482, 483}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{484, 485}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{484, 488}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{485, 486}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{485, 487}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{488, 489}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{490, 491}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{490, 503}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{491, 492}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{491, 497}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{492, 493}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{492, 495}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{493, 494}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{495, 496}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{497, 498}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{497, 500}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{498, 499}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{500, 501}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{500, 502}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{503, 504}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{503, 510}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{504, 505}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{504, 508}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{505, 506}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{505, 507}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{508, 509}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{510, 511}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{510, 513}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{511, 512}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{513, 514}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{515, 516}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{515, 542}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{516, 517}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{516, 530}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{517, 518}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{517, 524}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{518, 519}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{518, 522}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{519, 520}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{519, 521}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{522, 523}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{524, 525}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{524, 528}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{525, 526}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{525, 527}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{528, 529}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{530, 531}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{530, 536}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{531, 532}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{531, 534}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{532, 533}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{534, 535}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{536, 537}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{536, 540}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{537, 538}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{537, 539}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{540, 541}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{542, 543}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{542, 555}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{543, 544}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{543, 549}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{544, 545}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{544, 547}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{545, 546}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{547, 548}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{549, 550}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{549, 552}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{550, 551}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{552, 553}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{552, 554}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{555, 556}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{555, 562}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{556, 557}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{556, 560}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{557, 558}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{557, 559}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{560, 561}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{562, 563}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{562, 565}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{563, 564}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{565, 566}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{565, 567}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{568, 569}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{569, 570}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{570, 571}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{571, 572}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{572, 573}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{573, 574}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{575, 576}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{575, 583}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{576, 577}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{577, 578}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{578, 579}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{579, 580}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{580, 581}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{581, 582}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{583, 584}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{583, 636}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{584, 585}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{584, 611}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{585, 586}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{585, 599}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{586, 587}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{586, 593}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{587, 588}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{587, 591}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{588, 589}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{588, 590}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{591, 592}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{593, 594}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{593, 597}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{594, 595}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{594, 596}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{597, 598}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{599, 600}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{599, 605}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{600, 601}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{600, 603}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{601, 602}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{603, 604}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{605, 606}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{605, 609}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{606, 607}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{606, 608}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{609, 610}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{611, 612}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{611, 624}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{612, 613}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{612, 618}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{613, 614}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{613, 616}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{614, 615}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{616, 617}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{618, 619}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{618, 621}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{619, 620}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{621, 622}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{621, 623}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{624, 625}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{624, 631}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{625, 626}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{625, 629}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{626, 627}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{626, 628}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{629, 630}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{631, 632}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{631, 634}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{632, 633}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{634, 635}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{636, 637}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{636, 663}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{637, 638}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{637, 651}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{638, 639}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{638, 645}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{639, 640}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{639, 643}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{640, 641}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{640, 642}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{643, 644}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{645, 646}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{645, 649}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{646, 647}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{646, 648}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{649, 650}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{651, 652}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{651, 657}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{652, 653}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{652, 655}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{653, 654}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{655, 656}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{657, 658}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{657, 661}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{658, 659}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{658, 660}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{661, 662}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{663, 664}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{663, 676}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{664, 665}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{664, 670}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{665, 666}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{665, 668}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{666, 667}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{668, 669}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{670, 671}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{670, 673}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{671, 672}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{673, 674}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{673, 675}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{676, 677}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{676, 683}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{677, 678}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{677, 681}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{678, 679}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{678, 680}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{681, 682}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{683, 684}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{683, 686}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{684, 685}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{686, 687}, 0.08578432235437178]}, 
           {Arrowheads[0.], ArrowBox[{686, 688}, 0.08578432235437178]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[4, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[5, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[6, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[8, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[9, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[11, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[13, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[15, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[18, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[20, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[21, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[23, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[25, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[26, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[28, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[29, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[30, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[31, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[33, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[34, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[35, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[36, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[37, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[38, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[39, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[40, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[41, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[42, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[43, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[45, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[47, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[48, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[49, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[50, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[51, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[52, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[53, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[55, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[56, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[57, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[58, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[59, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[60, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[62, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[63, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[64, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[65, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[67, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[69, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[70, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[71, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[72, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[73, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[74, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[75, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[76, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[78, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[79, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[80, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[81, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[82, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[83, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[84, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[85, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[86, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[87, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[88, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[89, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[90, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[91, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[92, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[93, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[94, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[95, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[96, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[97, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[99, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[100, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[101, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[102, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[103, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[104, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[105, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[106, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[107, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[108, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[109, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[110, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[112, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[113, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[114, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[115, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[116, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[117, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[118, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[119, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[120, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[121, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[122, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[123, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[124, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[125, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[126, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[127, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[128, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[129, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[130, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[131, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[132, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[133, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[134, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[136, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[137, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[138, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[139, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[140, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[141, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[142, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[143, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[144, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[145, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[146, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[147, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[148, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[149, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[150, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[151, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[152, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[153, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[154, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[155, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[156, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[157, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[158, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[159, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[160, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[161, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[163, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[164, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[165, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[166, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[167, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[168, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[169, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[170, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[171, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[172, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[173, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[174, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[175, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[176, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[177, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[178, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[179, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[180, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[181, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[182, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[183, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[184, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[185, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[186, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[187, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[188, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[189, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[190, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[191, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[192, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[193, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[194, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[195, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[196, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[197, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[198, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[199, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[200, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[201, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[202, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[203, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[204, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[205, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[206, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[207, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[208, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[209, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[210, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[211, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[212, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[213, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[214, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[215, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[216, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[217, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[218, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[219, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[220, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[221, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[222, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[223, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[224, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[225, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[226, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[227, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[228, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[229, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[230, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[231, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[232, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[233, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[234, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[235, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[236, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[237, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[238, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[239, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[240, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[241, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[242, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[243, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[244, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[245, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[246, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[247, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[248, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[249, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[250, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[251, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[252, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[253, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[254, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[255, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[256, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[257, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[258, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[259, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[260, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[261, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[262, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[263, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[264, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[265, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[266, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[267, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[268, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[269, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[270, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[271, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[272, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[273, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[274, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[275, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[276, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[277, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[278, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[279, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[280, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[281, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[282, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[283, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[284, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[285, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[286, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[287, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[288, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[289, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[290, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[291, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[292, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[293, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[294, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[295, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[296, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[297, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[298, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[299, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[300, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[301, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[302, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[303, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[304, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[305, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[306, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[307, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[308, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[309, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[310, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[311, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[312, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[313, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[314, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[315, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[316, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[317, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[318, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[319, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[320, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[321, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[322, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[323, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[324, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[325, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[326, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[327, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[328, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[329, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[330, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[331, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[332, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[333, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[334, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[335, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[336, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[337, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[338, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[339, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[340, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[341, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[342, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[343, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[344, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[345, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[346, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[347, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[348, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[349, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[350, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[351, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[352, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[353, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[354, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[355, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[356, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[357, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[358, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[359, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[360, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[361, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[362, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[363, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[364, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[365, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[366, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[367, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[368, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[369, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[370, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[371, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[372, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[373, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[374, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[375, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[376, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[377, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[378, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[379, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[380, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[381, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[382, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[383, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[384, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[385, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[386, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[387, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[388, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[389, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[390, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[391, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[392, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[393, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[394, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[395, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[396, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[397, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[398, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[399, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[400, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[401, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[402, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[403, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[404, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[405, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[406, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[407, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[408, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[409, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[410, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[411, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[412, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[413, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[414, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[415, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[416, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[417, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[418, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[419, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[420, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[421, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[422, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[423, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[424, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[425, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[426, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[427, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[428, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[429, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[430, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[431, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[432, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[433, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[434, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[435, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[436, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[437, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[438, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[439, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[440, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[441, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[442, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[443, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[444, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[445, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[446, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[447, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[448, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[449, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[450, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[451, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[452, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[453, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[454, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[455, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[456, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[457, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[458, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[459, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[460, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[461, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[462, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[463, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[464, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[465, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[466, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[467, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[468, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[469, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[470, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[471, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[472, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[473, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[474, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[475, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[476, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[477, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[478, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[479, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[480, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[481, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[482, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[483, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[484, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[485, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[486, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[487, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[488, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[489, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[490, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[491, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[492, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[493, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[494, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[495, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[496, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[497, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[498, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[499, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[500, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[501, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[502, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[503, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[504, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[505, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[506, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[507, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[508, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[509, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[510, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[511, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[512, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[513, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[514, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[515, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[516, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[517, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[518, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[519, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[520, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[521, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[522, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[523, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[524, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[525, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[526, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[527, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[528, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[529, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[530, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[531, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[532, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[533, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[534, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[535, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[536, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[537, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[538, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[539, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[540, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[541, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[542, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[543, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[544, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[545, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[546, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[547, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[548, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[549, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[550, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[551, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[552, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[553, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[554, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[555, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[556, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[557, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[558, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[559, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[560, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[561, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[562, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[563, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[564, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[565, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[566, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[567, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[568, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[569, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[570, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[571, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[572, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[573, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[574, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[575, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[576, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[577, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[578, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[579, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[580, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[581, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[582, 0.08578432235437178]}, 
           {RGBColor[0, 0, 1], DiskBox[583, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[584, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[585, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[586, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[587, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[588, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[589, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[590, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[591, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[592, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[593, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[594, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[595, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[596, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[597, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[598, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[599, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[600, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[601, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[602, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[603, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[604, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[605, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[606, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[607, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[608, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[609, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[610, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[611, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[612, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[613, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[614, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[615, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[616, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[617, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[618, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[619, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[620, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[621, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[622, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[623, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[624, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[625, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[626, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[627, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[628, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[629, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[630, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[631, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[632, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[633, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[634, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[635, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[636, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[637, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[638, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[639, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[640, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[641, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[642, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[643, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[644, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[645, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[646, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[647, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[648, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[649, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[650, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[651, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[652, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[653, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[654, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[655, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[656, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[657, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[658, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[659, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[660, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[661, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[662, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[663, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[664, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[665, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[666, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[667, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[668, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[669, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[670, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[671, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[672, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[673, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[674, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[675, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[676, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[677, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[678, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[679, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[680, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[681, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[682, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[683, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[684, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[685, 0.08578432235437178]}, 
           {RGBColor[0, 1, 0], DiskBox[686, 0.08578432235437178]}, 
           {RGBColor[1, 0, 0], DiskBox[687, 0.08578432235437178]}, 
           {RGBColor[1, 1, 0], DiskBox[688, 0.08578432235437178]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"44", ",", "\"8-8-4-4-4-4-4-4-4-4\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#4-3", 
         "1-1#2-2#3-3#4-3#5-2", "1-1#2-2#3-3#4-3#5-2#11-1", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1", "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4", "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#11-4", "1-1#2-2#3-3#4-3#5-2#11-4#6-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4", "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4", "1-1#2-2#3-3#4-3#5-4#11-1", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1", "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2", "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4", "1-1#2-2#3-3#4-3#5-4#11-4#6-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2", "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2#9-4#10-2", "1-1#2-2#3-4", 
         "1-1#2-2#3-4#4-4", "1-1#2-2#3-4#4-4#5-2", "1-1#2-2#3-4#4-4#5-2#11-1",
          "1-1#2-2#3-4#4-4#5-2#11-1#6-1", "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3", "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#11-3", "1-1#2-2#3-4#4-4#5-2#11-3#6-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3", "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3", "1-1#2-2#3-4#4-4#5-3#11-1", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1", "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2", "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3", "1-1#2-2#3-4#4-4#5-3#11-3#6-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2", "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2#9-3#10-2", "1-1#2-3", 
         "1-1#2-3#3-2", "1-1#2-3#3-2#4-2", "1-1#2-3#3-2#4-2#5-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1", "1-1#2-3#3-2#4-2#5-3#11-1#6-1", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4", "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#11-4", "1-1#2-3#3-2#4-2#5-3#11-4#6-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4", "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4", "1-1#2-3#3-2#4-2#5-4#11-1", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1", "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3", "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4", "1-1#2-3#3-2#4-2#5-4#11-4#6-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3", "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3#9-4#10-3", "1-1#2-3#3-4", 
         "1-1#2-3#3-4#4-4", "1-1#2-3#3-4#4-4#5-2", "1-1#2-3#3-4#4-4#5-2#11-1",
          "1-1#2-3#3-4#4-4#5-2#11-1#6-1", "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3", "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2", "1-1#2-3#3-4#4-4#5-2#11-2#6-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3", "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3", "1-1#2-3#3-4#4-4#5-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1", "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2", "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#11-2", "1-1#2-3#3-4#4-4#5-3#11-2#6-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2", "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-2#9-3#10-1", "1-1#2-4", 
         "1-1#2-4#3-2", "1-1#2-4#3-2#4-2", "1-1#2-4#3-2#4-2#5-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1", "1-1#2-4#3-2#4-2#5-3#11-1#6-1", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4", "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3", "1-1#2-4#3-2#4-2#5-3#11-3#6-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4", "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4", "1-1#2-4#3-2#4-2#5-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1", "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3", "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#11-3", "1-1#2-4#3-2#4-2#5-4#11-3#6-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3", "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-3#9-4#10-1", "1-1#2-4#3-3", 
         "1-1#2-4#3-3#4-3", "1-1#2-4#3-3#4-3#5-2", "1-1#2-4#3-3#4-3#5-2#11-1",
          "1-1#2-4#3-3#4-3#5-2#11-1#6-1", "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4", "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2", "1-1#2-4#3-3#4-3#5-2#11-2#6-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4", "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4", "1-1#2-4#3-3#4-3#5-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1", "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2", "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#11-2", "1-1#2-4#3-3#4-3#5-4#11-2#6-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2", "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-2#9-4#10-1"}, {
        Null, CompressedData["
1:eJw12mWwleUaBmB2gCDSICiNdKd0d3endHc30h3S3d1KN0h3igLS3R0KnMNZ
1/lxzT33M8+837zzzZo1C3bihu0qtQ0OEyZMUNgwYf6XYQL5RQihhCUcXxGe
CHxNRP0bItmLTBSiymjm0Ynh/JjE4lti63H4zt73xCWejG+egITukYjEJOEH
kspk5slJYT8lqUgt05inJZ3npCcDGcmkZyaLvaxk40eZ3TwHOb2fXOQmD3nJ
R369AAVlIfuFKUJRvRjFnV+CkpSitF6GsrKc/fJUoKJeicqyivtUpRrVqUFN
vRa1ZR37dalHfb0BPzm/IY1oTBO9Kc1kc/staEkrvTVtwgQ+R21pR3s60JFO
dNa70NVeN7rTQ/Y070Vv5/ehL/3orw/gZ3sDGcRgOcR8KMPcYzgjGMkoRssx
5mMZZ388E/hFTjSfxGTPmcJUpjFdn8FMe7OYzRw513we872fBSxkEYtZwlJ9
GcvlCvsrWcVqfQ1rnb+O9fzKb/oGNspN9jezha36NrbLHe6zk13sZg979X38
LvfbP8BBDumHOeL8oxzjOCf0k5ySp+2f4Szn9PNckH+ECXxPXeRP/uISl7nC
31zlmn6dG/Zucovb8o75Xe45/z4PeMgj/TFP7D3lGc/lC/OXvHKP17zhLe94
Lz+Y/8O/9j/yic/yy5f+l3lQUEBwUOA5IUEBoYQlnP4V4e1F4Gsiym/MIxE5
KPB+ogQFRCUa0YlBTD0W38rY9uPwHd/rcYnn/PgkICGJ9MQkkT/YT0oykusp
SClTuU9q0pCWdKTXM5BRZrKfmSxk1bPxo/Ozk4Oc5NJzk0fmtZ+P/BTQC1Io
KPA5KhwUUISiFKM4JSipl6K0vTKUpZwsb16Bis6vRGWqUFWvRnV7NahJLVnb
vA513aMe9WnATzSUjcwb08R+U5rRXLYwb0krz2lNG9rSTm9PB3sd6URn2cW8
K928n+70oCe96E0fvS/9ZH/7A/iZgfogBjt/CEMZxnB9BCPlKPujGcNYfRzj
5QT3+YWJTGIyU/SpTJPT7c9gJrP02cxx/lzmMZ8F+kIWycX2l7CUZfpyVsiV
QYHfVauCAlazhrWsYz2/8hsb2KhvYrO9LWxlm9xuvoOdzt/FbvawV9/H7/b2
c4CD8pD5YY64x1GOcZwTnJSnzE9zxv5ZznFeXjD/g4ue8yd/cYnL+hX+tneV
a1yXN8xvcsv7uc0d7nKP+zzQH/JIPrb/hKc805/zwvkvecVr3uhveSff2//A
P/yrf+ST/Ow+///BH0QwIYTqYQknv7Ifngh8rUfkG+dHIjJRiKpHI7qMYT8m
sfhWj02c4MDn6LvggO+JSzzik4CEeiIS20vCDySVycyTk8L5KUlFatLoaUln
Lz0ZyCgzmWcmi3tkJRs/kp0cMqd5LnLbz0Ne8sn85gUo6DmFKEwRiurFKG6v
BCUpJUubl6Gs91OO8lSgIpWorFehqqxmvzo1qKnXorbz61CXetTXG/CTbGi/
EY1pojelmWzuPi1oSSta00ZvSzvZ3n4HOtJJ70wX53elG93pofekl+xtvw99
6af3Z4D8OTjwPTUwOGAQgxnCUIYxnBGM1Ecx2t4YxjJOjjefwC/On8gkJjNF
n8o0e9OZwUw5y3w2c9xjLvOYzwIWykXmi1lifynLWC5XmK9kleesZg1rWaev
51d7v7GBjXKT+Wa2eD9b2cZ2drCTXXK3+R722t/H7+zXD3BQHvKcwxzhKMfk
cfMTnLR/itOc0c9yzn3Oc4E/uMif+l9csneZK/ytX+WavO78G9zkFrflHfO7
3LN/nwc81B/xWD4JDnyenvKM57zgJa94rb/hrb13vOeD/Mf8Xz46/xOf+f8/
9AeFBHpwSEBISGAvNCQgLOHkV+bhiRASuMfXIQER+YZIRJZRzKMSzX50YhBT
xjL/ltieE4fv+J64ejzi20tAQhLJxOZJ+CEk8H6ShgQkIzkpSEkqmdo8DWnt
pyM9GfSMZJKZPScLWcnGjzK7eQ5y2s9FbvLoecnnPvkpQEEKUVgvQlF7xShO
Cb0kpWRp55ehLOUoLyuYV6SS/cpUoapejeohgd9VNUICalKL2tShLvWoTwN+
0hvSyF5jmtBUNjNvTgvnt6QVrWmjt6WdvfZ0oKPsZN6ZLu7RlW50pwc9ZS/z
3vSx35d+9JcDzH9moOcMYjBDGKoPY7i9EYxklBxtPoax3s84xjOBX5jIJDnZ
fApT7U9jOjP0mcySsz1nDnOZx3y5wHwhi+wvZglL9WUsd58VrGQVq1mjr2Wd
vfX8ym/6BjbKTc7fzBa2sk1uN9/BTvu72M0efS/75O8hgc/Tfg5wkEMc5ghH
9WMct3eCk5ySp83PcNb55zjPBf7QL/Knvb+4xGV5xfxvrrrHNa5zg5vckrfN
73DX/j3u80A+NH/EY895wlOe8Vx/wUt7r3jNG/nW/B3vvZ8P/MO/fOQTn+WX
/5T8Mg8KDQgODeyHhAaEElYPx1cyfGjgORFCA74mIt/ISOaRiWI/KtGIrscg
ZmjgPrFCA74lNnH4Tv+euPbiEZ8EekISycTOT8IPJCWZTG6egpT2U5GaNHpa
0oUGvqfShwZkICOZyEwWspKNH/Xs5LCXk1zklnnM85LP+fkpQEEK6YUpYq8o
xSguS5iXpJR7lKYMZSlHeVnBvCKV7FemClVlNfPq1PCcmtSiNnX0utSzV58G
/CQbmjeisffThKY0ozktaClbmbemjf22tKO93oGOspPndKYLXekmu5v3oKf9
XvSmj96Xfu7TnwH8zEAG6YMZYm8owxiuj2CkHOX80YxhLOPkePMJ/GJ/IpOY
rE9hqpwWGvg8TWcGM5nFbOYwV5/HfHsLWMgiudh8CUudv4zlrGClvorV9taw
lnVyvfmv/OYeG9jIJjazRW4138Z2+zvYyS6523wPez1nH7+znwP6QQ7ZO8wR
jspj5sc54f2c5BSnOcNZzsnz5hf4w/5F/uQv/RKX5RXP+ZurXOO6vGF+k1v2
b3OHu/o97rvPAx7yiMc80Z/yzN5zXvBSf8Vr+cb5b3nHez7If8z/5aP9T3zm
yx+Nfelf/gbwf38H+F//AYyuD48=
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {85, "9-9-4-4-4-4-4-4-4-4-4"}, 
         VertexStyle -> {
          "1-1#2-2#3-4#4-4#5-3#11-3#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2" -> RGBColor[0, 1, 0],
            "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#11-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#11-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3" -> RGBColor[0, 0, 1],
            "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4" -> RGBColor[1, 1, 0],
            "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2" -> RGBColor[0, 1, 0],
            "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#11-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4" -> RGBColor[1, 1, 0],
            "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#11-4#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#11-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1#10-3" -> R\
GBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-3" -> RGBColor[0, 0, 1],
            "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4" -> RGBColor[1, 1, 0],
            "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-3" -> RGBColor[0, 0, 1],
            "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#11-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4" -> RGBColor[1, 1, 0],
            "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-4#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2" -> RGBColor[0, 1, 0],
            "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-4#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#11-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-1#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-4#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1" -> RGBColor[1, 0, 0],
            "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-2#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-1#6-2#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-2#6-4#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-3#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-2#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#11-1#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-4#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#11-1#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-4#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#11-2#6-3#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#11-2#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#11-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#11-1#6-3#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#11-2#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#11-1#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#11-1#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#11-4#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-1#6-4#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#11-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-1#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-2#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#11-1#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#11-3#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#11-1#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#11-3#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#11-3#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#11-2#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#11-4#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.5], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1, 429}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1, 856}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{2, 216}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{4, 110}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{5, 58}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{6, 32}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{7, 20}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{8, 14}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{9, 12}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{14, 18}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{15, 17}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{20, 26}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{21, 24}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{26, 30}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{27, 29}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{32, 46}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{33, 40}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{34, 38}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{35, 37}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{40, 44}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{41, 43}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{46, 52}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{47, 50}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{52, 56}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{53, 55}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{58, 85}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{59, 72}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{60, 67}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{61, 64}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{64, 66}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{67, 70}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{72, 79}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{73, 76}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{76, 78}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{79, 82}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{82, 84}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{85, 98}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{86, 93}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{87, 90}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{90, 92}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{93, 96}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{98, 105}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{99, 102}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{102, 104}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{105, 108}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{110, 163}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{111, 137}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{112, 125}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{113, 119}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{114, 117}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{119, 123}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{120, 122}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{125, 131}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{126, 129}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{131, 135}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{132, 134}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{137, 151}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{138, 145}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{139, 143}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{140, 142}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{145, 149}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{146, 148}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{151, 157}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{152, 155}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{157, 161}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{158, 160}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{163, 190}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{164, 177}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{165, 172}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{166, 169}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{169, 171}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{172, 175}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{177, 184}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{178, 179}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{178, 181}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{181, 183}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{184, 185}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{184, 187}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{187, 189}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{190, 191}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{190, 203}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{191, 192}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{191, 198}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{192, 193}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{192, 195}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{193, 194}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{195, 196}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{195, 197}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{198, 199}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{198, 201}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{199, 200}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{201, 202}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{203, 204}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{203, 210}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{204, 205}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{204, 207}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{205, 206}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{207, 208}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{207, 209}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{210, 211}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{210, 213}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{211, 212}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{213, 214}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{213, 215}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{216, 217}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{217, 218}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{217, 323}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{218, 219}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{218, 271}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{219, 220}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{219, 245}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{220, 221}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{220, 233}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{221, 222}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{221, 227}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{222, 223}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{222, 225}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{223, 224}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{225, 226}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{227, 228}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{227, 231}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{228, 229}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{228, 230}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{231, 232}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{233, 234}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{233, 239}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{234, 235}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{234, 237}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{235, 236}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{237, 238}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{239, 240}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{239, 243}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{240, 241}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{240, 242}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{243, 244}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{245, 246}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{245, 259}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{246, 247}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{246, 253}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{247, 248}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{247, 251}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{248, 249}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{248, 250}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{251, 252}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{253, 254}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{253, 257}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{254, 255}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{254, 256}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{257, 258}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{259, 260}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{259, 265}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{260, 261}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{260, 263}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{261, 262}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{263, 264}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{265, 266}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{265, 269}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{266, 267}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{266, 268}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{269, 270}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{271, 272}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{271, 298}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{272, 273}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{272, 285}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{273, 274}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{273, 280}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{274, 275}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{274, 277}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{275, 276}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{277, 278}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{277, 279}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{280, 281}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{280, 283}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{281, 282}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{283, 284}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{285, 286}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{285, 292}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{286, 287}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{286, 289}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{287, 288}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{289, 290}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{289, 291}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{292, 293}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{292, 295}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{293, 294}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{295, 296}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{295, 297}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{298, 299}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{298, 311}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{299, 300}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{299, 306}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{300, 301}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{300, 303}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{301, 302}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{303, 304}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{303, 305}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{306, 307}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{306, 309}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{307, 308}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{309, 310}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{311, 312}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{311, 318}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{312, 313}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{312, 315}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{313, 314}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{315, 316}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{315, 317}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{318, 319}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{318, 321}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{319, 320}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{321, 322}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{323, 324}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{323, 376}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{324, 325}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{324, 350}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{325, 326}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{325, 338}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{326, 327}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{326, 332}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{327, 328}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{327, 330}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{328, 329}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{330, 331}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{332, 333}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{332, 336}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{333, 334}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{333, 335}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{336, 337}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{338, 339}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{338, 344}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{339, 340}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{339, 342}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{340, 341}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{342, 343}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{344, 345}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{344, 348}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{345, 346}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{345, 347}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{348, 349}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{350, 351}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{350, 364}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{351, 352}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{351, 358}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{352, 353}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{352, 356}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{353, 354}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{353, 355}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{356, 357}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{358, 359}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{358, 362}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{359, 360}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{359, 361}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{362, 363}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{364, 365}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{364, 370}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{365, 366}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{365, 368}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{366, 367}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{368, 369}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{370, 371}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{370, 374}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{371, 372}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{371, 373}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{374, 375}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{376, 377}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{376, 403}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{377, 378}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{377, 390}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{378, 379}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{378, 385}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{379, 380}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{379, 382}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{380, 381}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{382, 383}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{382, 384}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{385, 386}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{385, 388}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{386, 387}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{388, 389}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{390, 391}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{390, 397}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{391, 392}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{391, 394}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{392, 393}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{394, 395}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{394, 396}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{397, 398}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{397, 400}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{398, 399}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{400, 401}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{400, 402}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{403, 404}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{403, 416}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{404, 405}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{404, 411}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{405, 406}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{405, 408}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{406, 407}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{408, 409}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{408, 410}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{411, 412}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{411, 414}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{412, 413}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{414, 415}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{416, 417}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{416, 423}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{417, 418}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{417, 420}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{418, 419}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{420, 421}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{420, 422}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{423, 424}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{423, 426}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{424, 425}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{426, 427}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{426, 428}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{429, 430}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{429, 643}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{430, 431}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{431, 432}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{431, 537}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{432, 433}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{432, 485}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{433, 434}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{433, 459}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{434, 435}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{434, 447}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{435, 436}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{435, 441}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{436, 437}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{436, 439}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{437, 438}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{439, 440}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{441, 442}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{441, 445}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{442, 443}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{442, 444}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{445, 446}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{447, 448}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{447, 453}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{448, 449}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{448, 451}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{449, 450}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{451, 452}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{453, 454}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{453, 457}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{454, 455}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{454, 456}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{457, 458}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{459, 460}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{459, 473}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{460, 461}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{460, 467}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{461, 462}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{461, 465}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{462, 463}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{462, 464}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{465, 466}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{467, 468}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{467, 471}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{468, 469}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{468, 470}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{471, 472}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{473, 474}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{473, 479}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{474, 475}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{474, 477}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{475, 476}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{477, 478}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{479, 480}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{479, 483}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{480, 481}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{480, 482}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{483, 484}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{485, 486}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{485, 512}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{486, 487}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{486, 499}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{487, 488}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{487, 494}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{488, 489}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{488, 491}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{489, 490}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{491, 492}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{491, 493}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{494, 495}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{494, 497}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{495, 496}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{497, 498}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{499, 500}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{499, 506}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{500, 501}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{500, 503}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{501, 502}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{503, 504}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{503, 505}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{506, 507}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{506, 509}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{507, 508}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{509, 510}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{509, 511}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{512, 513}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{512, 525}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{513, 514}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{513, 520}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{514, 515}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{514, 517}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{515, 516}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{517, 518}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{517, 519}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{520, 521}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{520, 523}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{521, 522}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{523, 524}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{525, 526}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{525, 532}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{526, 527}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{526, 529}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{527, 528}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{529, 530}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{529, 531}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{532, 533}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{532, 535}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{533, 534}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{535, 536}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{537, 538}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{537, 590}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{538, 539}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{538, 564}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{539, 540}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{539, 552}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{540, 541}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{540, 546}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{541, 542}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{541, 544}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{542, 543}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{544, 545}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{546, 547}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{546, 550}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{547, 548}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{547, 549}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{550, 551}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{552, 553}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{552, 558}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{553, 554}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{553, 556}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{554, 555}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{556, 557}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{558, 559}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{558, 562}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{559, 560}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{559, 561}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{562, 563}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{564, 565}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{564, 578}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{565, 566}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{565, 572}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{566, 567}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{566, 570}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{567, 568}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{567, 569}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{570, 571}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{572, 573}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{572, 576}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{573, 574}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{573, 575}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{576, 577}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{578, 579}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{578, 584}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{579, 580}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{579, 582}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{580, 581}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{582, 583}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{584, 585}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{584, 588}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{585, 586}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{585, 587}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{588, 589}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{590, 591}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{590, 617}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{591, 592}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{591, 604}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{592, 593}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{592, 599}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{593, 594}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{593, 596}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{594, 595}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{596, 597}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{596, 598}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{599, 600}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{599, 602}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{600, 601}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{602, 603}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{604, 605}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{604, 611}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{605, 606}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{605, 608}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{606, 607}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{608, 609}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{608, 610}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{611, 612}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{611, 614}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{612, 613}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{614, 615}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{614, 616}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{617, 618}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{617, 630}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{618, 619}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{618, 625}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{619, 620}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{619, 622}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{620, 621}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{622, 623}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{622, 624}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{625, 626}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{625, 628}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{626, 627}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{628, 629}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{630, 631}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{630, 637}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{631, 632}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{631, 634}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{632, 633}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{634, 635}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{634, 636}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{637, 638}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{637, 640}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{638, 639}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{640, 641}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{640, 642}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{643, 644}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{644, 645}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{644, 751}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{645, 646}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{645, 698}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{646, 647}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{646, 672}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{647, 648}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{647, 660}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{648, 649}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{648, 654}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{649, 650}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{649, 652}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{650, 651}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{652, 653}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{654, 655}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{654, 658}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{655, 656}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{655, 657}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{658, 659}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{660, 661}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{660, 666}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{661, 662}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{661, 664}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{662, 663}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{664, 665}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{666, 667}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{666, 670}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{667, 668}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{667, 669}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{670, 671}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{672, 673}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{672, 686}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{673, 674}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{673, 680}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{674, 675}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{674, 678}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{675, 676}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{675, 677}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{678, 679}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{680, 681}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{680, 684}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{681, 682}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{681, 683}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{684, 685}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{686, 687}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{686, 692}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{687, 688}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{687, 690}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{688, 689}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{690, 691}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{692, 693}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{692, 696}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{693, 694}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{693, 695}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{696, 697}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{698, 699}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{698, 725}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{699, 700}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{699, 713}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{700, 701}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{700, 707}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{701, 702}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{701, 705}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{702, 703}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{702, 704}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{705, 706}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{707, 708}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{707, 710}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{708, 709}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{710, 711}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{710, 712}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{713, 714}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{713, 720}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{714, 715}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{714, 718}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{715, 716}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{715, 717}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{718, 719}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{720, 721}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{720, 723}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{721, 722}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{723, 724}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{725, 726}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{725, 738}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{726, 727}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{726, 732}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{727, 728}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{727, 730}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{728, 729}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{730, 731}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{732, 733}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{732, 735}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{733, 734}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{735, 736}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{735, 737}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{738, 739}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{738, 745}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{739, 740}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{739, 743}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{740, 741}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{740, 742}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{743, 744}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{745, 746}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{745, 748}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{746, 747}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{748, 749}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{748, 750}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{751, 752}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{751, 804}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{752, 753}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{752, 778}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{753, 754}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{753, 766}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{754, 755}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{754, 760}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{755, 756}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{755, 758}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{756, 757}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{758, 759}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{760, 761}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{760, 764}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{761, 762}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{761, 763}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{764, 765}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{766, 767}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{766, 772}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{767, 768}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{767, 770}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{768, 769}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{770, 771}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{772, 773}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{772, 776}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{773, 774}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{773, 775}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{776, 777}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{778, 779}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{778, 792}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{779, 780}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{779, 786}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{780, 781}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{780, 784}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{781, 782}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{781, 783}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{784, 785}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{786, 787}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{786, 790}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{787, 788}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{787, 789}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{790, 791}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{792, 793}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{792, 798}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{793, 794}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{793, 796}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{794, 795}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{796, 797}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{798, 799}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{798, 802}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{799, 800}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{799, 801}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{802, 803}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{804, 805}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{804, 831}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{805, 806}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{805, 819}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{806, 807}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{806, 813}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{807, 808}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{807, 811}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{808, 809}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{808, 810}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{811, 812}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{813, 814}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{813, 816}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{814, 815}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{816, 817}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{816, 818}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{819, 820}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{819, 826}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{820, 821}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{820, 824}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{821, 822}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{821, 823}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{824, 825}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{826, 827}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{826, 829}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{827, 828}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{829, 830}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{831, 832}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{831, 844}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{832, 833}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{832, 838}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{833, 834}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{833, 836}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{834, 835}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{836, 837}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{838, 839}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{838, 841}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{839, 840}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{841, 842}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{841, 843}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{844, 845}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{844, 851}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{845, 846}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{845, 849}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{846, 847}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{846, 848}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{849, 850}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{851, 852}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{851, 854}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{852, 853}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{854, 855}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{856, 857}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{856, 1070}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{857, 858}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{858, 859}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{858, 965}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{859, 860}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{859, 912}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{860, 861}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{860, 886}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{861, 862}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{861, 874}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{862, 863}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{862, 868}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{863, 864}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{863, 866}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{864, 865}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{866, 867}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{868, 869}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{868, 872}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{869, 870}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{869, 871}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{872, 873}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{874, 875}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{874, 880}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{875, 876}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{875, 878}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{876, 877}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{878, 879}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{880, 881}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{880, 884}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{881, 882}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{881, 883}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{884, 885}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{886, 887}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{886, 900}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{887, 888}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{887, 894}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{888, 889}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{888, 892}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{889, 890}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{889, 891}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{892, 893}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{894, 895}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{894, 898}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{895, 896}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{895, 897}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{898, 899}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{900, 901}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{900, 906}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{901, 902}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{901, 904}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{902, 903}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{904, 905}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{906, 907}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{906, 910}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{907, 908}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{907, 909}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{910, 911}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{912, 913}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{912, 939}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{913, 914}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{913, 927}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{914, 915}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{914, 921}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{915, 916}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{915, 919}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{916, 917}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{916, 918}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{919, 920}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{921, 922}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{921, 924}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{922, 923}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{924, 925}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{924, 926}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{927, 928}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{927, 934}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{928, 929}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{928, 932}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{929, 930}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{929, 931}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{932, 933}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{934, 935}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{934, 937}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{935, 936}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{937, 938}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{939, 940}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{939, 952}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{940, 941}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{940, 946}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{941, 942}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{941, 944}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{942, 943}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{944, 945}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{946, 947}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{946, 949}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{947, 948}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{949, 950}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{949, 951}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{952, 953}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{952, 959}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{953, 954}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{953, 957}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{954, 955}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{954, 956}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{957, 958}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{959, 960}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{959, 962}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{960, 961}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{962, 963}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{962, 964}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{965, 966}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{965, 1018}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{966, 967}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{966, 992}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{967, 968}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{967, 980}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{968, 969}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{968, 974}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{969, 970}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{969, 972}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{970, 971}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{972, 973}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{974, 975}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{974, 978}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{975, 976}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{975, 977}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{978, 979}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{980, 981}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{980, 986}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{981, 982}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{981, 984}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{982, 983}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{984, 985}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{986, 987}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{986, 990}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{987, 988}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{987, 989}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{990, 991}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{992, 993}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{992, 1006}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{993, 994}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{993, 1000}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{994, 995}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{994, 998}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{995, 996}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{995, 997}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{998, 999}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1000, 1001}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1000, 1004}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1001, 1002}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1001, 1003}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1004, 1005}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1006, 1007}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1006, 1012}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1007, 1008}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1007, 1010}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1008, 1009}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1010, 1011}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1012, 1013}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1012, 1016}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1013, 1014}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1013, 1015}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1016, 1017}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1018, 1019}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1018, 1045}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1019, 1020}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1019, 1033}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1020, 1021}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1020, 1027}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1021, 1022}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1021, 1025}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1022, 1023}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1022, 1024}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1025, 1026}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1027, 1028}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1027, 1030}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1028, 1029}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1030, 1031}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1030, 1032}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1033, 1034}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1033, 1040}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1034, 1035}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1034, 1038}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1035, 1036}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1035, 1037}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1038, 1039}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1040, 1041}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1040, 1043}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1041, 1042}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1043, 1044}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1045, 1046}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1045, 1058}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1046, 1047}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1046, 1052}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1047, 1048}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1047, 1050}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1048, 1049}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1050, 1051}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1052, 1053}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1052, 1055}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1053, 1054}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1055, 1056}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1055, 1057}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1058, 1059}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1058, 1065}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1059, 1060}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1059, 1063}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1060, 1061}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1060, 1062}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1063, 1064}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1065, 1066}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1065, 1068}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1066, 1067}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1068, 1069}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1070, 1071}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1071, 1072}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1071, 1178}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1072, 1073}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1072, 1125}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1073, 1074}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1073, 1099}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1074, 1075}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1074, 1087}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1075, 1076}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1075, 1081}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1076, 1077}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1076, 1079}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1077, 1078}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1079, 1080}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1081, 1082}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1081, 1085}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1082, 1083}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1082, 1084}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1085, 1086}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1087, 1088}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1087, 1093}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1088, 1089}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1088, 1091}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1089, 1090}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1091, 1092}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1093, 1094}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1093, 1097}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1094, 1095}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1094, 1096}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1097, 1098}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1099, 1100}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1099, 1113}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1100, 1101}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1100, 1107}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1101, 1102}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1101, 1105}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1102, 1103}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1102, 1104}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1105, 1106}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1107, 1108}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1107, 1111}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1108, 1109}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1108, 1110}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1111, 1112}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1113, 1114}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1113, 1119}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1114, 1115}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1114, 1117}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1115, 1116}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1117, 1118}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1119, 1120}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1119, 1123}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1120, 1121}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1120, 1122}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1123, 1124}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1125, 1126}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1125, 1152}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1126, 1127}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1126, 1140}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1127, 1128}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1127, 1134}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1128, 1129}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1128, 1132}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1129, 1130}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1129, 1131}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1132, 1133}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1134, 1135}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1134, 1137}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1135, 1136}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1137, 1138}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1137, 1139}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1140, 1141}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1140, 1147}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1141, 1142}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1141, 1145}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1142, 1143}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1142, 1144}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1145, 1146}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1147, 1148}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1147, 1150}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1148, 1149}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1150, 1151}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1152, 1153}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1152, 1165}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1153, 1154}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1153, 1159}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1154, 1155}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1154, 1157}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1155, 1156}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1157, 1158}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1159, 1160}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1159, 1162}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1160, 1161}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1162, 1163}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1162, 1164}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1165, 1166}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1165, 1172}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1166, 1167}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1166, 1170}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1167, 1168}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1167, 1169}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1170, 1171}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1172, 1173}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1172, 1175}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1173, 1174}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1175, 1176}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1175, 1177}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1178, 1179}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1178, 1231}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1179, 1180}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1179, 1205}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1180, 1181}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1180, 1193}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1181, 1182}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1181, 1187}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1182, 1183}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1182, 1185}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1183, 1184}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1185, 1186}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1187, 1188}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1187, 1191}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1188, 1189}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1188, 1190}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1191, 1192}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1193, 1194}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1193, 1199}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1194, 1195}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1194, 1197}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1195, 1196}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1197, 1198}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1199, 1200}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1199, 1203}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1200, 1201}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1200, 1202}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1203, 1204}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1205, 1206}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1205, 1219}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1206, 1207}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1206, 1213}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1207, 1208}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1207, 1211}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1208, 1209}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1208, 1210}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1211, 1212}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1213, 1214}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1213, 1217}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1214, 1215}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1214, 1216}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1217, 1218}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1219, 1220}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1219, 1225}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1220, 1221}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1220, 1223}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1221, 1222}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1223, 1224}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1225, 1226}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1225, 1229}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1226, 1227}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1226, 1228}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1229, 1230}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1231, 1232}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1231, 1258}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1232, 1233}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1232, 1246}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1233, 1234}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1233, 1240}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1234, 1235}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1234, 1238}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1235, 1236}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1235, 1237}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1238, 1239}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1240, 1241}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1240, 1243}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1241, 1242}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1243, 1244}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1243, 1245}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1246, 1247}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1246, 1253}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1247, 1248}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1247, 1251}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1248, 1249}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1248, 1250}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1251, 1252}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1253, 1254}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1253, 1256}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1254, 1255}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1256, 1257}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1258, 1259}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1258, 1271}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1259, 1260}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1259, 1265}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1260, 1261}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1260, 1263}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1261, 1262}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1263, 1264}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1265, 1266}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1265, 1268}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1266, 1267}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1268, 1269}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1268, 1270}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1271, 1272}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1271, 1278}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1272, 1273}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1272, 1276}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1273, 1274}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1273, 1275}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1276, 1277}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1278, 1279}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1278, 1281}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1279, 1280}, 0.09014148570520863]}, 
           {Arrowheads[0.], ArrowBox[{1281, 1282}, 0.09014148570520863]}}, 
          {Hue[0.625, 0.5, 0.7], 
           {RGBColor[1, 0, 0], PointBox[1]}, 
           {RGBColor[0, 1, 0], PointBox[2]}, 
           {RGBColor[0, 0, 1], PointBox[3]}, 
           {RGBColor[0, 0, 1], PointBox[4]}, 
           {RGBColor[0, 1, 0], PointBox[5]}, 
           {RGBColor[1, 0, 0], PointBox[6]}, 
           {RGBColor[1, 0, 0], PointBox[7]}, 
           {RGBColor[0, 1, 0], PointBox[8]}, 
           {RGBColor[1, 0, 0], PointBox[9]}, 
           {RGBColor[0, 1, 0], PointBox[10]}, 
           {RGBColor[1, 1, 0], PointBox[11]}, 
           {RGBColor[1, 1, 0], PointBox[12]}, 
           {RGBColor[0, 1, 0], PointBox[13]}, 
           {RGBColor[1, 1, 0], PointBox[14]}, 
           {RGBColor[1, 0, 0], PointBox[15]}, 
           {RGBColor[0, 1, 0], PointBox[16]}, 
           {RGBColor[1, 1, 0], PointBox[17]}, 
           {RGBColor[0, 1, 0], PointBox[18]}, 
           {RGBColor[1, 1, 0], PointBox[19]}, 
           {RGBColor[1, 1, 0], PointBox[20]}, 
           {RGBColor[1, 0, 0], PointBox[21]}, 
           {RGBColor[0, 1, 0], PointBox[22]}, 
           {RGBColor[1, 1, 0], PointBox[23]}, 
           {RGBColor[1, 1, 0], PointBox[24]}, 
           {RGBColor[0, 1, 0], PointBox[25]}, 
           {RGBColor[0, 1, 0], PointBox[26]}, 
           {RGBColor[1, 0, 0], PointBox[27]}, 
           {RGBColor[0, 1, 0], PointBox[28]}, 
           {RGBColor[1, 1, 0], PointBox[29]}, 
           {RGBColor[1, 1, 0], PointBox[30]}, 
           {RGBColor[0, 1, 0], PointBox[31]}, 
           {RGBColor[1, 1, 0], PointBox[32]}, 
           {RGBColor[1, 0, 0], PointBox[33]}, 
           {RGBColor[0, 1, 0], PointBox[34]}, 
           {RGBColor[1, 0, 0], PointBox[35]}, 
           {RGBColor[0, 1, 0], PointBox[36]}, 
           {RGBColor[1, 1, 0], PointBox[37]}, 
           {RGBColor[1, 1, 0], PointBox[38]}, 
           {RGBColor[0, 1, 0], PointBox[39]}, 
           {RGBColor[1, 1, 0], PointBox[40]}, 
           {RGBColor[1, 0, 0], PointBox[41]}, 
           {RGBColor[0, 1, 0], PointBox[42]}, 
           {RGBColor[1, 1, 0], PointBox[43]}, 
           {RGBColor[0, 1, 0], PointBox[44]}, 
           {RGBColor[1, 1, 0], PointBox[45]}, 
           {RGBColor[0, 1, 0], PointBox[46]}, 
           {RGBColor[1, 0, 0], PointBox[47]}, 
           {RGBColor[0, 1, 0], PointBox[48]}, 
           {RGBColor[1, 1, 0], PointBox[49]}, 
           {RGBColor[1, 1, 0], PointBox[50]}, 
           {RGBColor[0, 1, 0], PointBox[51]}, 
           {RGBColor[1, 1, 0], PointBox[52]}, 
           {RGBColor[1, 0, 0], PointBox[53]}, 
           {RGBColor[0, 1, 0], PointBox[54]}, 
           {RGBColor[1, 1, 0], PointBox[55]}, 
           {RGBColor[0, 1, 0], PointBox[56]}, 
           {RGBColor[1, 1, 0], PointBox[57]}, 
           {RGBColor[1, 1, 0], PointBox[58]}, 
           {RGBColor[1, 0, 0], PointBox[59]}, 
           {RGBColor[0, 1, 0], PointBox[60]}, 
           {RGBColor[1, 0, 0], PointBox[61]}, 
           {RGBColor[0, 1, 0], PointBox[62]}, 
           {RGBColor[1, 0, 0], PointBox[63]}, 
           {RGBColor[1, 1, 0], PointBox[64]}, 
           {RGBColor[1, 0, 0], PointBox[65]}, 
           {RGBColor[0, 1, 0], PointBox[66]}, 
           {RGBColor[1, 1, 0], PointBox[67]}, 
           {RGBColor[1, 0, 0], PointBox[68]}, 
           {RGBColor[0, 1, 0], PointBox[69]}, 
           {RGBColor[0, 1, 0], PointBox[70]}, 
           {RGBColor[1, 0, 0], PointBox[71]}, 
           {RGBColor[1, 1, 0], PointBox[72]}, 
           {RGBColor[1, 0, 0], PointBox[73]}, 
           {RGBColor[0, 1, 0], PointBox[74]}, 
           {RGBColor[1, 0, 0], PointBox[75]}, 
           {RGBColor[1, 1, 0], PointBox[76]}, 
           {RGBColor[1, 0, 0], PointBox[77]}, 
           {RGBColor[0, 1, 0], PointBox[78]}, 
           {RGBColor[0, 1, 0], PointBox[79]}, 
           {RGBColor[1, 0, 0], PointBox[80]}, 
           {RGBColor[0, 1, 0], PointBox[81]}, 
           {RGBColor[1, 1, 0], PointBox[82]}, 
           {RGBColor[1, 0, 0], PointBox[83]}, 
           {RGBColor[0, 1, 0], PointBox[84]}, 
           {RGBColor[1, 1, 0], PointBox[85]}, 
           {RGBColor[1, 0, 0], PointBox[86]}, 
           {RGBColor[0, 1, 0], PointBox[87]}, 
           {RGBColor[1, 0, 0], PointBox[88]}, 
           {RGBColor[0, 1, 0], PointBox[89]}, 
           {RGBColor[1, 1, 0], PointBox[90]}, 
           {RGBColor[1, 0, 0], PointBox[91]}, 
           {RGBColor[0, 1, 0], PointBox[92]}, 
           {RGBColor[1, 1, 0], PointBox[93]}, 
           {RGBColor[1, 0, 0], PointBox[94]}, 
           {RGBColor[0, 1, 0], PointBox[95]}, 
           {RGBColor[0, 1, 0], PointBox[96]}, 
           {RGBColor[1, 0, 0], PointBox[97]}, 
           {RGBColor[0, 1, 0], PointBox[98]}, 
           {RGBColor[1, 0, 0], PointBox[99]}, 
           {RGBColor[0, 1, 0], PointBox[100]}, 
           {RGBColor[1, 0, 0], PointBox[101]}, 
           {RGBColor[1, 1, 0], PointBox[102]}, 
           {RGBColor[1, 0, 0], PointBox[103]}, 
           {RGBColor[0, 1, 0], PointBox[104]}, 
           {RGBColor[1, 1, 0], PointBox[105]}, 
           {RGBColor[1, 0, 0], PointBox[106]}, 
           {RGBColor[0, 1, 0], PointBox[107]}, 
           {RGBColor[0, 1, 0], PointBox[108]}, 
           {RGBColor[1, 0, 0], PointBox[109]}, 
           {RGBColor[1, 1, 0], PointBox[110]}, 
           {RGBColor[1, 0, 0], PointBox[111]}, 
           {RGBColor[1, 0, 0], PointBox[112]}, 
           {RGBColor[0, 1, 0], PointBox[113]}, 
           {RGBColor[1, 0, 0], PointBox[114]}, 
           {RGBColor[0, 1, 0], PointBox[115]}, 
           {RGBColor[1, 1, 0], PointBox[116]}, 
           {RGBColor[1, 1, 0], PointBox[117]}, 
           {RGBColor[0, 1, 0], PointBox[118]}, 
           {RGBColor[1, 1, 0], PointBox[119]}, 
           {RGBColor[1, 0, 0], PointBox[120]}, 
           {RGBColor[0, 1, 0], PointBox[121]}, 
           {RGBColor[1, 1, 0], PointBox[122]}, 
           {RGBColor[0, 1, 0], PointBox[123]}, 
           {RGBColor[1, 1, 0], PointBox[124]}, 
           {RGBColor[1, 1, 0], PointBox[125]}, 
           {RGBColor[1, 0, 0], PointBox[126]}, 
           {RGBColor[0, 1, 0], PointBox[127]}, 
           {RGBColor[1, 1, 0], PointBox[128]}, 
           {RGBColor[1, 1, 0], PointBox[129]}, 
           {RGBColor[0, 1, 0], PointBox[130]}, 
           {RGBColor[0, 1, 0], PointBox[131]}, 
           {RGBColor[1, 0, 0], PointBox[132]}, 
           {RGBColor[0, 1, 0], PointBox[133]}, 
           {RGBColor[1, 1, 0], PointBox[134]}, 
           {RGBColor[1, 1, 0], PointBox[135]}, 
           {RGBColor[0, 1, 0], PointBox[136]}, 
           {RGBColor[0, 1, 0], PointBox[137]}, 
           {RGBColor[1, 0, 0], PointBox[138]}, 
           {RGBColor[0, 1, 0], PointBox[139]}, 
           {RGBColor[1, 0, 0], PointBox[140]}, 
           {RGBColor[0, 1, 0], PointBox[141]}, 
           {RGBColor[1, 1, 0], PointBox[142]}, 
           {RGBColor[1, 1, 0], PointBox[143]}, 
           {RGBColor[0, 1, 0], PointBox[144]}, 
           {RGBColor[1, 1, 0], PointBox[145]}, 
           {RGBColor[1, 0, 0], PointBox[146]}, 
           {RGBColor[0, 1, 0], PointBox[147]}, 
           {RGBColor[1, 1, 0], PointBox[148]}, 
           {RGBColor[0, 1, 0], PointBox[149]}, 
           {RGBColor[1, 1, 0], PointBox[150]}, 
           {RGBColor[1, 1, 0], PointBox[151]}, 
           {RGBColor[1, 0, 0], PointBox[152]}, 
           {RGBColor[0, 1, 0], PointBox[153]}, 
           {RGBColor[1, 1, 0], PointBox[154]}, 
           {RGBColor[1, 1, 0], PointBox[155]}, 
           {RGBColor[0, 1, 0], PointBox[156]}, 
           {RGBColor[0, 1, 0], PointBox[157]}, 
           {RGBColor[1, 0, 0], PointBox[158]}, 
           {RGBColor[0, 1, 0], PointBox[159]}, 
           {RGBColor[1, 1, 0], PointBox[160]}, 
           {RGBColor[1, 1, 0], PointBox[161]}, 
           {RGBColor[0, 1, 0], PointBox[162]}, 
           {RGBColor[1, 1, 0], PointBox[163]}, 
           {RGBColor[1, 0, 0], PointBox[164]}, 
           {RGBColor[0, 1, 0], PointBox[165]}, 
           {RGBColor[1, 0, 0], PointBox[166]}, 
           {RGBColor[0, 1, 0], PointBox[167]}, 
           {RGBColor[1, 0, 0], PointBox[168]}, 
           {RGBColor[1, 1, 0], PointBox[169]}, 
           {RGBColor[1, 0, 0], PointBox[170]}, 
           {RGBColor[0, 1, 0], PointBox[171]}, 
           {RGBColor[1, 1, 0], PointBox[172]}, 
           {RGBColor[1, 0, 0], PointBox[173]}, 
           {RGBColor[0, 1, 0], PointBox[174]}, 
           {RGBColor[0, 1, 0], PointBox[175]}, 
           {RGBColor[1, 0, 0], PointBox[176]}, 
           {RGBColor[1, 1, 0], PointBox[177]}, 
           {RGBColor[1, 0, 0], PointBox[178]}, 
           {RGBColor[0, 1, 0], PointBox[179]}, 
           {RGBColor[1, 0, 0], PointBox[180]}, 
           {RGBColor[1, 1, 0], PointBox[181]}, 
           {RGBColor[1, 0, 0], PointBox[182]}, 
           {RGBColor[0, 1, 0], PointBox[183]}, 
           {RGBColor[0, 1, 0], PointBox[184]}, 
           {RGBColor[1, 0, 0], PointBox[185]}, 
           {RGBColor[0, 1, 0], PointBox[186]}, 
           {RGBColor[1, 1, 0], PointBox[187]}, 
           {RGBColor[1, 0, 0], PointBox[188]}, 
           {RGBColor[0, 1, 0], PointBox[189]}, 
           {RGBColor[0, 1, 0], PointBox[190]}, 
           {RGBColor[1, 0, 0], PointBox[191]}, 
           {RGBColor[0, 1, 0], PointBox[192]}, 
           {RGBColor[1, 0, 0], PointBox[193]}, 
           {RGBColor[0, 1, 0], PointBox[194]}, 
           {RGBColor[1, 1, 0], PointBox[195]}, 
           {RGBColor[1, 0, 0], PointBox[196]}, 
           {RGBColor[0, 1, 0], PointBox[197]}, 
           {RGBColor[1, 1, 0], PointBox[198]}, 
           {RGBColor[1, 0, 0], PointBox[199]}, 
           {RGBColor[0, 1, 0], PointBox[200]}, 
           {RGBColor[0, 1, 0], PointBox[201]}, 
           {RGBColor[1, 0, 0], PointBox[202]}, 
           {RGBColor[1, 1, 0], PointBox[203]}, 
           {RGBColor[1, 0, 0], PointBox[204]}, 
           {RGBColor[0, 1, 0], PointBox[205]}, 
           {RGBColor[1, 0, 0], PointBox[206]}, 
           {RGBColor[1, 1, 0], PointBox[207]}, 
           {RGBColor[1, 0, 0], PointBox[208]}, 
           {RGBColor[0, 1, 0], PointBox[209]}, 
           {RGBColor[0, 1, 0], PointBox[210]}, 
           {RGBColor[1, 0, 0], PointBox[211]}, 
           {RGBColor[0, 1, 0], PointBox[212]}, 
           {RGBColor[1, 1, 0], PointBox[213]}, 
           {RGBColor[1, 0, 0], PointBox[214]}, 
           {RGBColor[0, 1, 0], PointBox[215]}, 
           {RGBColor[1, 1, 0], PointBox[216]}, 
           {RGBColor[1, 1, 0], PointBox[217]}, 
           {RGBColor[0, 1, 0], PointBox[218]}, 
           {RGBColor[1, 0, 0], PointBox[219]}, 
           {RGBColor[1, 0, 0], PointBox[220]}, 
           {RGBColor[0, 1, 0], PointBox[221]}, 
           {RGBColor[1, 0, 0], PointBox[222]}, 
           {RGBColor[0, 1, 0], PointBox[223]}, 
           {RGBColor[0, 0, 1], PointBox[224]}, 
           {RGBColor[0, 0, 1], PointBox[225]}, 
           {RGBColor[0, 1, 0], PointBox[226]}, 
           {RGBColor[0, 0, 1], PointBox[227]}, 
           {RGBColor[1, 0, 0], PointBox[228]}, 
           {RGBColor[0, 1, 0], PointBox[229]}, 
           {RGBColor[0, 0, 1], PointBox[230]}, 
           {RGBColor[0, 1, 0], PointBox[231]}, 
           {RGBColor[0, 0, 1], PointBox[232]}, 
           {RGBColor[0, 0, 1], PointBox[233]}, 
           {RGBColor[1, 0, 0], PointBox[234]}, 
           {RGBColor[0, 1, 0], PointBox[235]}, 
           {RGBColor[0, 0, 1], PointBox[236]}, 
           {RGBColor[0, 0, 1], PointBox[237]}, 
           {RGBColor[0, 1, 0], PointBox[238]}, 
           {RGBColor[0, 1, 0], PointBox[239]}, 
           {RGBColor[1, 0, 0], PointBox[240]}, 
           {RGBColor[0, 1, 0], PointBox[241]}, 
           {RGBColor[0, 0, 1], PointBox[242]}, 
           {RGBColor[0, 0, 1], PointBox[243]}, 
           {RGBColor[0, 1, 0], PointBox[244]}, 
           {RGBColor[0, 0, 1], PointBox[245]}, 
           {RGBColor[1, 0, 0], PointBox[246]}, 
           {RGBColor[0, 1, 0], PointBox[247]}, 
           {RGBColor[1, 0, 0], PointBox[248]}, 
           {RGBColor[0, 1, 0], PointBox[249]}, 
           {RGBColor[0, 0, 1], PointBox[250]}, 
           {RGBColor[0, 0, 1], PointBox[251]}, 
           {RGBColor[0, 1, 0], PointBox[252]}, 
           {RGBColor[0, 0, 1], PointBox[253]}, 
           {RGBColor[1, 0, 0], PointBox[254]}, 
           {RGBColor[0, 1, 0], PointBox[255]}, 
           {RGBColor[0, 0, 1], PointBox[256]}, 
           {RGBColor[0, 1, 0], PointBox[257]}, 
           {RGBColor[0, 0, 1], PointBox[258]}, 
           {RGBColor[0, 1, 0], PointBox[259]}, 
           {RGBColor[1, 0, 0], PointBox[260]}, 
           {RGBColor[0, 1, 0], PointBox[261]}, 
           {RGBColor[0, 0, 1], PointBox[262]}, 
           {RGBColor[0, 0, 1], PointBox[263]}, 
           {RGBColor[0, 1, 0], PointBox[264]}, 
           {RGBColor[0, 0, 1], PointBox[265]}, 
           {RGBColor[1, 0, 0], PointBox[266]}, 
           {RGBColor[0, 1, 0], PointBox[267]}, 
           {RGBColor[0, 0, 1], PointBox[268]}, 
           {RGBColor[0, 1, 0], PointBox[269]}, 
           {RGBColor[0, 0, 1], PointBox[270]}, 
           {RGBColor[0, 0, 1], PointBox[271]}, 
           {RGBColor[1, 0, 0], PointBox[272]}, 
           {RGBColor[0, 1, 0], PointBox[273]}, 
           {RGBColor[1, 0, 0], PointBox[274]}, 
           {RGBColor[0, 1, 0], PointBox[275]}, 
           {RGBColor[1, 0, 0], PointBox[276]}, 
           {RGBColor[0, 0, 1], PointBox[277]}, 
           {RGBColor[1, 0, 0], PointBox[278]}, 
           {RGBColor[0, 1, 0], PointBox[279]}, 
           {RGBColor[0, 0, 1], PointBox[280]}, 
           {RGBColor[1, 0, 0], PointBox[281]}, 
           {RGBColor[0, 1, 0], PointBox[282]}, 
           {RGBColor[0, 1, 0], PointBox[283]}, 
           {RGBColor[1, 0, 0], PointBox[284]}, 
           {RGBColor[0, 0, 1], PointBox[285]}, 
           {RGBColor[1, 0, 0], PointBox[286]}, 
           {RGBColor[0, 1, 0], PointBox[287]}, 
           {RGBColor[1, 0, 0], PointBox[288]}, 
           {RGBColor[0, 0, 1], PointBox[289]}, 
           {RGBColor[1, 0, 0], PointBox[290]}, 
           {RGBColor[0, 1, 0], PointBox[291]}, 
           {RGBColor[0, 1, 0], PointBox[292]}, 
           {RGBColor[1, 0, 0], PointBox[293]}, 
           {RGBColor[0, 1, 0], PointBox[294]}, 
           {RGBColor[0, 0, 1], PointBox[295]}, 
           {RGBColor[1, 0, 0], PointBox[296]}, 
           {RGBColor[0, 1, 0], PointBox[297]}, 
           {RGBColor[0, 0, 1], PointBox[298]}, 
           {RGBColor[1, 0, 0], PointBox[299]}, 
           {RGBColor[0, 1, 0], PointBox[300]}, 
           {RGBColor[1, 0, 0], PointBox[301]}, 
           {RGBColor[0, 1, 0], PointBox[302]}, 
           {RGBColor[0, 0, 1], PointBox[303]}, 
           {RGBColor[1, 0, 0], PointBox[304]}, 
           {RGBColor[0, 1, 0], PointBox[305]}, 
           {RGBColor[0, 0, 1], PointBox[306]}, 
           {RGBColor[1, 0, 0], PointBox[307]}, 
           {RGBColor[0, 1, 0], PointBox[308]}, 
           {RGBColor[0, 1, 0], PointBox[309]}, 
           {RGBColor[1, 0, 0], PointBox[310]}, 
           {RGBColor[0, 1, 0], PointBox[311]}, 
           {RGBColor[1, 0, 0], PointBox[312]}, 
           {RGBColor[0, 1, 0], PointBox[313]}, 
           {RGBColor[1, 0, 0], PointBox[314]}, 
           {RGBColor[0, 0, 1], PointBox[315]}, 
           {RGBColor[1, 0, 0], PointBox[316]}, 
           {RGBColor[0, 1, 0], PointBox[317]}, 
           {RGBColor[0, 0, 1], PointBox[318]}, 
           {RGBColor[1, 0, 0], PointBox[319]}, 
           {RGBColor[0, 1, 0], PointBox[320]}, 
           {RGBColor[0, 1, 0], PointBox[321]}, 
           {RGBColor[1, 0, 0], PointBox[322]}, 
           {RGBColor[0, 0, 1], PointBox[323]}, 
           {RGBColor[1, 0, 0], PointBox[324]}, 
           {RGBColor[1, 0, 0], PointBox[325]}, 
           {RGBColor[0, 1, 0], PointBox[326]}, 
           {RGBColor[1, 0, 0], PointBox[327]}, 
           {RGBColor[0, 1, 0], PointBox[328]}, 
           {RGBColor[0, 0, 1], PointBox[329]}, 
           {RGBColor[0, 0, 1], PointBox[330]}, 
           {RGBColor[0, 1, 0], PointBox[331]}, 
           {RGBColor[0, 0, 1], PointBox[332]}, 
           {RGBColor[1, 0, 0], PointBox[333]}, 
           {RGBColor[0, 1, 0], PointBox[334]}, 
           {RGBColor[0, 0, 1], PointBox[335]}, 
           {RGBColor[0, 1, 0], PointBox[336]}, 
           {RGBColor[0, 0, 1], PointBox[337]}, 
           {RGBColor[0, 0, 1], PointBox[338]}, 
           {RGBColor[1, 0, 0], PointBox[339]}, 
           {RGBColor[0, 1, 0], PointBox[340]}, 
           {RGBColor[0, 0, 1], PointBox[341]}, 
           {RGBColor[0, 0, 1], PointBox[342]}, 
           {RGBColor[0, 1, 0], PointBox[343]}, 
           {RGBColor[0, 1, 0], PointBox[344]}, 
           {RGBColor[1, 0, 0], PointBox[345]}, 
           {RGBColor[0, 1, 0], PointBox[346]}, 
           {RGBColor[0, 0, 1], PointBox[347]}, 
           {RGBColor[0, 0, 1], PointBox[348]}, 
           {RGBColor[0, 1, 0], PointBox[349]}, 
           {RGBColor[0, 1, 0], PointBox[350]}, 
           {RGBColor[1, 0, 0], PointBox[351]}, 
           {RGBColor[0, 1, 0], PointBox[352]}, 
           {RGBColor[1, 0, 0], PointBox[353]}, 
           {RGBColor[0, 1, 0], PointBox[354]}, 
           {RGBColor[0, 0, 1], PointBox[355]}, 
           {RGBColor[0, 0, 1], PointBox[356]}, 
           {RGBColor[0, 1, 0], PointBox[357]}, 
           {RGBColor[0, 0, 1], PointBox[358]}, 
           {RGBColor[1, 0, 0], PointBox[359]}, 
           {RGBColor[0, 1, 0], PointBox[360]}, 
           {RGBColor[0, 0, 1], PointBox[361]}, 
           {RGBColor[0, 1, 0], PointBox[362]}, 
           {RGBColor[0, 0, 1], PointBox[363]}, 
           {RGBColor[0, 0, 1], PointBox[364]}, 
           {RGBColor[1, 0, 0], PointBox[365]}, 
           {RGBColor[0, 1, 0], PointBox[366]}, 
           {RGBColor[0, 0, 1], PointBox[367]}, 
           {RGBColor[0, 0, 1], PointBox[368]}, 
           {RGBColor[0, 1, 0], PointBox[369]}, 
           {RGBColor[0, 1, 0], PointBox[370]}, 
           {RGBColor[1, 0, 0], PointBox[371]}, 
           {RGBColor[0, 1, 0], PointBox[372]}, 
           {RGBColor[0, 0, 1], PointBox[373]}, 
           {RGBColor[0, 0, 1], PointBox[374]}, 
           {RGBColor[0, 1, 0], PointBox[375]}, 
           {RGBColor[0, 0, 1], PointBox[376]}, 
           {RGBColor[1, 0, 0], PointBox[377]}, 
           {RGBColor[0, 1, 0], PointBox[378]}, 
           {RGBColor[1, 0, 0], PointBox[379]}, 
           {RGBColor[0, 1, 0], PointBox[380]}, 
           {RGBColor[1, 0, 0], PointBox[381]}, 
           {RGBColor[0, 0, 1], PointBox[382]}, 
           {RGBColor[1, 0, 0], PointBox[383]}, 
           {RGBColor[0, 1, 0], PointBox[384]}, 
           {RGBColor[0, 0, 1], PointBox[385]}, 
           {RGBColor[1, 0, 0], PointBox[386]}, 
           {RGBColor[0, 1, 0], PointBox[387]}, 
           {RGBColor[0, 1, 0], PointBox[388]}, 
           {RGBColor[1, 0, 0], PointBox[389]}, 
           {RGBColor[0, 0, 1], PointBox[390]}, 
           {RGBColor[1, 0, 0], PointBox[391]}, 
           {RGBColor[0, 1, 0], PointBox[392]}, 
           {RGBColor[1, 0, 0], PointBox[393]}, 
           {RGBColor[0, 0, 1], PointBox[394]}, 
           {RGBColor[1, 0, 0], PointBox[395]}, 
           {RGBColor[0, 1, 0], PointBox[396]}, 
           {RGBColor[0, 1, 0], PointBox[397]}, 
           {RGBColor[1, 0, 0], PointBox[398]}, 
           {RGBColor[0, 1, 0], PointBox[399]}, 
           {RGBColor[0, 0, 1], PointBox[400]}, 
           {RGBColor[1, 0, 0], PointBox[401]}, 
           {RGBColor[0, 1, 0], PointBox[402]}, 
           {RGBColor[0, 1, 0], PointBox[403]}, 
           {RGBColor[1, 0, 0], PointBox[404]}, 
           {RGBColor[0, 1, 0], PointBox[405]}, 
           {RGBColor[1, 0, 0], PointBox[406]}, 
           {RGBColor[0, 1, 0], PointBox[407]}, 
           {RGBColor[0, 0, 1], PointBox[408]}, 
           {RGBColor[1, 0, 0], PointBox[409]}, 
           {RGBColor[0, 1, 0], PointBox[410]}, 
           {RGBColor[0, 0, 1], PointBox[411]}, 
           {RGBColor[1, 0, 0], PointBox[412]}, 
           {RGBColor[0, 1, 0], PointBox[413]}, 
           {RGBColor[0, 1, 0], PointBox[414]}, 
           {RGBColor[1, 0, 0], PointBox[415]}, 
           {RGBColor[0, 0, 1], PointBox[416]}, 
           {RGBColor[1, 0, 0], PointBox[417]}, 
           {RGBColor[0, 1, 0], PointBox[418]}, 
           {RGBColor[1, 0, 0], PointBox[419]}, 
           {RGBColor[0, 0, 1], PointBox[420]}, 
           {RGBColor[1, 0, 0], PointBox[421]}, 
           {RGBColor[0, 1, 0], PointBox[422]}, 
           {RGBColor[0, 1, 0], PointBox[423]}, 
           {RGBColor[1, 0, 0], PointBox[424]}, 
           {RGBColor[0, 1, 0], PointBox[425]}, 
           {RGBColor[0, 0, 1], PointBox[426]}, 
           {RGBColor[1, 0, 0], PointBox[427]}, 
           {RGBColor[0, 1, 0], PointBox[428]}, 
           {RGBColor[0, 0, 1], PointBox[429]}, 
           {RGBColor[0, 1, 0], PointBox[430]}, 
           {RGBColor[0, 1, 0], PointBox[431]}, 
           {RGBColor[0, 0, 1], PointBox[432]}, 
           {RGBColor[1, 0, 0], PointBox[433]}, 
           {RGBColor[1, 0, 0], PointBox[434]}, 
           {RGBColor[0, 0, 1], PointBox[435]}, 
           {RGBColor[1, 0, 0], PointBox[436]}, 
           {RGBColor[0, 0, 1], PointBox[437]}, 
           {RGBColor[1, 1, 0], PointBox[438]}, 
           {RGBColor[1, 1, 0], PointBox[439]}, 
           {RGBColor[0, 0, 1], PointBox[440]}, 
           {RGBColor[1, 1, 0], PointBox[441]}, 
           {RGBColor[1, 0, 0], PointBox[442]}, 
           {RGBColor[0, 0, 1], PointBox[443]}, 
           {RGBColor[1, 1, 0], PointBox[444]}, 
           {RGBColor[0, 0, 1], PointBox[445]}, 
           {RGBColor[1, 1, 0], PointBox[446]}, 
           {RGBColor[1, 1, 0], PointBox[447]}, 
           {RGBColor[1, 0, 0], PointBox[448]}, 
           {RGBColor[0, 0, 1], PointBox[449]}, 
           {RGBColor[1, 1, 0], PointBox[450]}, 
           {RGBColor[1, 1, 0], PointBox[451]}, 
           {RGBColor[0, 0, 1], PointBox[452]}, 
           {RGBColor[0, 0, 1], PointBox[453]}, 
           {RGBColor[1, 0, 0], PointBox[454]}, 
           {RGBColor[0, 0, 1], PointBox[455]}, 
           {RGBColor[1, 1, 0], PointBox[456]}, 
           {RGBColor[1, 1, 0], PointBox[457]}, 
           {RGBColor[0, 0, 1], PointBox[458]}, 
           {RGBColor[1, 1, 0], PointBox[459]}, 
           {RGBColor[1, 0, 0], PointBox[460]}, 
           {RGBColor[0, 0, 1], PointBox[461]}, 
           {RGBColor[1, 0, 0], PointBox[462]}, 
           {RGBColor[0, 0, 1], PointBox[463]}, 
           {RGBColor[1, 1, 0], PointBox[464]}, 
           {RGBColor[1, 1, 0], PointBox[465]}, 
           {RGBColor[0, 0, 1], PointBox[466]}, 
           {RGBColor[1, 1, 0], PointBox[467]}, 
           {RGBColor[1, 0, 0], PointBox[468]}, 
           {RGBColor[0, 0, 1], PointBox[469]}, 
           {RGBColor[1, 1, 0], PointBox[470]}, 
           {RGBColor[0, 0, 1], PointBox[471]}, 
           {RGBColor[1, 1, 0], PointBox[472]}, 
           {RGBColor[0, 0, 1], PointBox[473]}, 
           {RGBColor[1, 0, 0], PointBox[474]}, 
           {RGBColor[0, 0, 1], PointBox[475]}, 
           {RGBColor[1, 1, 0], PointBox[476]}, 
           {RGBColor[1, 1, 0], PointBox[477]}, 
           {RGBColor[0, 0, 1], PointBox[478]}, 
           {RGBColor[1, 1, 0], PointBox[479]}, 
           {RGBColor[1, 0, 0], PointBox[480]}, 
           {RGBColor[0, 0, 1], PointBox[481]}, 
           {RGBColor[1, 1, 0], PointBox[482]}, 
           {RGBColor[0, 0, 1], PointBox[483]}, 
           {RGBColor[1, 1, 0], PointBox[484]}, 
           {RGBColor[1, 1, 0], PointBox[485]}, 
           {RGBColor[1, 0, 0], PointBox[486]}, 
           {RGBColor[0, 0, 1], PointBox[487]}, 
           {RGBColor[1, 0, 0], PointBox[488]}, 
           {RGBColor[0, 0, 1], PointBox[489]}, 
           {RGBColor[1, 0, 0], PointBox[490]}, 
           {RGBColor[1, 1, 0], PointBox[491]}, 
           {RGBColor[1, 0, 0], PointBox[492]}, 
           {RGBColor[0, 0, 1], PointBox[493]}, 
           {RGBColor[1, 1, 0], PointBox[494]}, 
           {RGBColor[1, 0, 0], PointBox[495]}, 
           {RGBColor[0, 0, 1], PointBox[496]}, 
           {RGBColor[0, 0, 1], PointBox[497]}, 
           {RGBColor[1, 0, 0], PointBox[498]}, 
           {RGBColor[1, 1, 0], PointBox[499]}, 
           {RGBColor[1, 0, 0], PointBox[500]}, 
           {RGBColor[0, 0, 1], PointBox[501]}, 
           {RGBColor[1, 0, 0], PointBox[502]}, 
           {RGBColor[1, 1, 0], PointBox[503]}, 
           {RGBColor[1, 0, 0], PointBox[504]}, 
           {RGBColor[0, 0, 1], PointBox[505]}, 
           {RGBColor[0, 0, 1], PointBox[506]}, 
           {RGBColor[1, 0, 0], PointBox[507]}, 
           {RGBColor[0, 0, 1], PointBox[508]}, 
           {RGBColor[1, 1, 0], PointBox[509]}, 
           {RGBColor[1, 0, 0], PointBox[510]}, 
           {RGBColor[0, 0, 1], PointBox[511]}, 
           {RGBColor[1, 1, 0], PointBox[512]}, 
           {RGBColor[1, 0, 0], PointBox[513]}, 
           {RGBColor[0, 0, 1], PointBox[514]}, 
           {RGBColor[1, 0, 0], PointBox[515]}, 
           {RGBColor[0, 0, 1], PointBox[516]}, 
           {RGBColor[1, 1, 0], PointBox[517]}, 
           {RGBColor[1, 0, 0], PointBox[518]}, 
           {RGBColor[0, 0, 1], PointBox[519]}, 
           {RGBColor[1, 1, 0], PointBox[520]}, 
           {RGBColor[1, 0, 0], PointBox[521]}, 
           {RGBColor[0, 0, 1], PointBox[522]}, 
           {RGBColor[0, 0, 1], PointBox[523]}, 
           {RGBColor[1, 0, 0], PointBox[524]}, 
           {RGBColor[0, 0, 1], PointBox[525]}, 
           {RGBColor[1, 0, 0], PointBox[526]}, 
           {RGBColor[0, 0, 1], PointBox[527]}, 
           {RGBColor[1, 0, 0], PointBox[528]}, 
           {RGBColor[1, 1, 0], PointBox[529]}, 
           {RGBColor[1, 0, 0], PointBox[530]}, 
           {RGBColor[0, 0, 1], PointBox[531]}, 
           {RGBColor[1, 1, 0], PointBox[532]}, 
           {RGBColor[1, 0, 0], PointBox[533]}, 
           {RGBColor[0, 0, 1], PointBox[534]}, 
           {RGBColor[0, 0, 1], PointBox[535]}, 
           {RGBColor[1, 0, 0], PointBox[536]}, 
           {RGBColor[1, 1, 0], PointBox[537]}, 
           {RGBColor[1, 0, 0], PointBox[538]}, 
           {RGBColor[1, 0, 0], PointBox[539]}, 
           {RGBColor[0, 0, 1], PointBox[540]}, 
           {RGBColor[1, 0, 0], PointBox[541]}, 
           {RGBColor[0, 0, 1], PointBox[542]}, 
           {RGBColor[1, 1, 0], PointBox[543]}, 
           {RGBColor[1, 1, 0], PointBox[544]}, 
           {RGBColor[0, 0, 1], PointBox[545]}, 
           {RGBColor[1, 1, 0], PointBox[546]}, 
           {RGBColor[1, 0, 0], PointBox[547]}, 
           {RGBColor[0, 0, 1], PointBox[548]}, 
           {RGBColor[1, 1, 0], PointBox[549]}, 
           {RGBColor[0, 0, 1], PointBox[550]}, 
           {RGBColor[1, 1, 0], PointBox[551]}, 
           {RGBColor[1, 1, 0], PointBox[552]}, 
           {RGBColor[1, 0, 0], PointBox[553]}, 
           {RGBColor[0, 0, 1], PointBox[554]}, 
           {RGBColor[1, 1, 0], PointBox[555]}, 
           {RGBColor[1, 1, 0], PointBox[556]}, 
           {RGBColor[0, 0, 1], PointBox[557]}, 
           {RGBColor[0, 0, 1], PointBox[558]}, 
           {RGBColor[1, 0, 0], PointBox[559]}, 
           {RGBColor[0, 0, 1], PointBox[560]}, 
           {RGBColor[1, 1, 0], PointBox[561]}, 
           {RGBColor[1, 1, 0], PointBox[562]}, 
           {RGBColor[0, 0, 1], PointBox[563]}, 
           {RGBColor[0, 0, 1], PointBox[564]}, 
           {RGBColor[1, 0, 0], PointBox[565]}, 
           {RGBColor[0, 0, 1], PointBox[566]}, 
           {RGBColor[1, 0, 0], PointBox[567]}, 
           {RGBColor[0, 0, 1], PointBox[568]}, 
           {RGBColor[1, 1, 0], PointBox[569]}, 
           {RGBColor[1, 1, 0], PointBox[570]}, 
           {RGBColor[0, 0, 1], PointBox[571]}, 
           {RGBColor[1, 1, 0], PointBox[572]}, 
           {RGBColor[1, 0, 0], PointBox[573]}, 
           {RGBColor[0, 0, 1], PointBox[574]}, 
           {RGBColor[1, 1, 0], PointBox[575]}, 
           {RGBColor[0, 0, 1], PointBox[576]}, 
           {RGBColor[1, 1, 0], PointBox[577]}, 
           {RGBColor[1, 1, 0], PointBox[578]}, 
           {RGBColor[1, 0, 0], PointBox[579]}, 
           {RGBColor[0, 0, 1], PointBox[580]}, 
           {RGBColor[1, 1, 0], PointBox[581]}, 
           {RGBColor[1, 1, 0], PointBox[582]}, 
           {RGBColor[0, 0, 1], PointBox[583]}, 
           {RGBColor[0, 0, 1], PointBox[584]}, 
           {RGBColor[1, 0, 0], PointBox[585]}, 
           {RGBColor[0, 0, 1], PointBox[586]}, 
           {RGBColor[1, 1, 0], PointBox[587]}, 
           {RGBColor[1, 1, 0], PointBox[588]}, 
           {RGBColor[0, 0, 1], PointBox[589]}, 
           {RGBColor[1, 1, 0], PointBox[590]}, 
           {RGBColor[1, 0, 0], PointBox[591]}, 
           {RGBColor[0, 0, 1], PointBox[592]}, 
           {RGBColor[1, 0, 0], PointBox[593]}, 
           {RGBColor[0, 0, 1], PointBox[594]}, 
           {RGBColor[1, 0, 0], PointBox[595]}, 
           {RGBColor[1, 1, 0], PointBox[596]}, 
           {RGBColor[1, 0, 0], PointBox[597]}, 
           {RGBColor[0, 0, 1], PointBox[598]}, 
           {RGBColor[1, 1, 0], PointBox[599]}, 
           {RGBColor[1, 0, 0], PointBox[600]}, 
           {RGBColor[0, 0, 1], PointBox[601]}, 
           {RGBColor[0, 0, 1], PointBox[602]}, 
           {RGBColor[1, 0, 0], PointBox[603]}, 
           {RGBColor[1, 1, 0], PointBox[604]}, 
           {RGBColor[1, 0, 0], PointBox[605]}, 
           {RGBColor[0, 0, 1], PointBox[606]}, 
           {RGBColor[1, 0, 0], PointBox[607]}, 
           {RGBColor[1, 1, 0], PointBox[608]}, 
           {RGBColor[1, 0, 0], PointBox[609]}, 
           {RGBColor[0, 0, 1], PointBox[610]}, 
           {RGBColor[0, 0, 1], PointBox[611]}, 
           {RGBColor[1, 0, 0], PointBox[612]}, 
           {RGBColor[0, 0, 1], PointBox[613]}, 
           {RGBColor[1, 1, 0], PointBox[614]}, 
           {RGBColor[1, 0, 0], PointBox[615]}, 
           {RGBColor[0, 0, 1], PointBox[616]}, 
           {RGBColor[0, 0, 1], PointBox[617]}, 
           {RGBColor[1, 0, 0], PointBox[618]}, 
           {RGBColor[0, 0, 1], PointBox[619]}, 
           {RGBColor[1, 0, 0], PointBox[620]}, 
           {RGBColor[0, 0, 1], PointBox[621]}, 
           {RGBColor[1, 1, 0], PointBox[622]}, 
           {RGBColor[1, 0, 0], PointBox[623]}, 
           {RGBColor[0, 0, 1], PointBox[624]}, 
           {RGBColor[1, 1, 0], PointBox[625]}, 
           {RGBColor[1, 0, 0], PointBox[626]}, 
           {RGBColor[0, 0, 1], PointBox[627]}, 
           {RGBColor[0, 0, 1], PointBox[628]}, 
           {RGBColor[1, 0, 0], PointBox[629]}, 
           {RGBColor[1, 1, 0], PointBox[630]}, 
           {RGBColor[1, 0, 0], PointBox[631]}, 
           {RGBColor[0, 0, 1], PointBox[632]}, 
           {RGBColor[1, 0, 0], PointBox[633]}, 
           {RGBColor[1, 1, 0], PointBox[634]}, 
           {RGBColor[1, 0, 0], PointBox[635]}, 
           {RGBColor[0, 0, 1], PointBox[636]}, 
           {RGBColor[0, 0, 1], PointBox[637]}, 
           {RGBColor[1, 0, 0], PointBox[638]}, 
           {RGBColor[0, 0, 1], PointBox[639]}, 
           {RGBColor[1, 1, 0], PointBox[640]}, 
           {RGBColor[1, 0, 0], PointBox[641]}, 
           {RGBColor[0, 0, 1], PointBox[642]}, 
           {RGBColor[1, 1, 0], PointBox[643]}, 
           {RGBColor[1, 1, 0], PointBox[644]}, 
           {RGBColor[0, 1, 0], PointBox[645]}, 
           {RGBColor[1, 0, 0], PointBox[646]}, 
           {RGBColor[1, 0, 0], PointBox[647]}, 
           {RGBColor[0, 1, 0], PointBox[648]}, 
           {RGBColor[1, 0, 0], PointBox[649]}, 
           {RGBColor[0, 1, 0], PointBox[650]}, 
           {RGBColor[0, 0, 1], PointBox[651]}, 
           {RGBColor[0, 0, 1], PointBox[652]}, 
           {RGBColor[0, 1, 0], PointBox[653]}, 
           {RGBColor[0, 0, 1], PointBox[654]}, 
           {RGBColor[1, 0, 0], PointBox[655]}, 
           {RGBColor[0, 1, 0], PointBox[656]}, 
           {RGBColor[0, 0, 1], PointBox[657]}, 
           {RGBColor[0, 1, 0], PointBox[658]}, 
           {RGBColor[0, 0, 1], PointBox[659]}, 
           {RGBColor[0, 0, 1], PointBox[660]}, 
           {RGBColor[1, 0, 0], PointBox[661]}, 
           {RGBColor[0, 1, 0], PointBox[662]}, 
           {RGBColor[0, 0, 1], PointBox[663]}, 
           {RGBColor[0, 0, 1], PointBox[664]}, 
           {RGBColor[0, 1, 0], PointBox[665]}, 
           {RGBColor[0, 1, 0], PointBox[666]}, 
           {RGBColor[1, 0, 0], PointBox[667]}, 
           {RGBColor[0, 1, 0], PointBox[668]}, 
           {RGBColor[0, 0, 1], PointBox[669]}, 
           {RGBColor[0, 0, 1], PointBox[670]}, 
           {RGBColor[0, 1, 0], PointBox[671]}, 
           {RGBColor[0, 0, 1], PointBox[672]}, 
           {RGBColor[1, 0, 0], PointBox[673]}, 
           {RGBColor[0, 1, 0], PointBox[674]}, 
           {RGBColor[1, 0, 0], PointBox[675]}, 
           {RGBColor[0, 1, 0], PointBox[676]}, 
           {RGBColor[0, 0, 1], PointBox[677]}, 
           {RGBColor[0, 0, 1], PointBox[678]}, 
           {RGBColor[0, 1, 0], PointBox[679]}, 
           {RGBColor[0, 0, 1], PointBox[680]}, 
           {RGBColor[1, 0, 0], PointBox[681]}, 
           {RGBColor[0, 1, 0], PointBox[682]}, 
           {RGBColor[0, 0, 1], PointBox[683]}, 
           {RGBColor[0, 1, 0], PointBox[684]}, 
           {RGBColor[0, 0, 1], PointBox[685]}, 
           {RGBColor[0, 1, 0], PointBox[686]}, 
           {RGBColor[1, 0, 0], PointBox[687]}, 
           {RGBColor[0, 1, 0], PointBox[688]}, 
           {RGBColor[0, 0, 1], PointBox[689]}, 
           {RGBColor[0, 0, 1], PointBox[690]}, 
           {RGBColor[0, 1, 0], PointBox[691]}, 
           {RGBColor[0, 0, 1], PointBox[692]}, 
           {RGBColor[1, 0, 0], PointBox[693]}, 
           {RGBColor[0, 1, 0], PointBox[694]}, 
           {RGBColor[0, 0, 1], PointBox[695]}, 
           {RGBColor[0, 1, 0], PointBox[696]}, 
           {RGBColor[0, 0, 1], PointBox[697]}, 
           {RGBColor[0, 1, 0], PointBox[698]}, 
           {RGBColor[1, 0, 0], PointBox[699]}, 
           {RGBColor[0, 1, 0], PointBox[700]}, 
           {RGBColor[1, 0, 0], PointBox[701]}, 
           {RGBColor[0, 1, 0], PointBox[702]}, 
           {RGBColor[1, 0, 0], PointBox[703]}, 
           {RGBColor[0, 0, 1], PointBox[704]}, 
           {RGBColor[0, 0, 1], PointBox[705]}, 
           {RGBColor[1, 0, 0], PointBox[706]}, 
           {RGBColor[0, 0, 1], PointBox[707]}, 
           {RGBColor[1, 0, 0], PointBox[708]}, 
           {RGBColor[0, 0, 1], PointBox[709]}, 
           {RGBColor[0, 1, 0], PointBox[710]}, 
           {RGBColor[1, 0, 0], PointBox[711]}, 
           {RGBColor[0, 0, 1], PointBox[712]}, 
           {RGBColor[0, 0, 1], PointBox[713]}, 
           {RGBColor[1, 0, 0], PointBox[714]}, 
           {RGBColor[0, 1, 0], PointBox[715]}, 
           {RGBColor[1, 0, 0], PointBox[716]}, 
           {RGBColor[0, 0, 1], PointBox[717]}, 
           {RGBColor[0, 0, 1], PointBox[718]}, 
           {RGBColor[1, 0, 0], PointBox[719]}, 
           {RGBColor[0, 1, 0], PointBox[720]}, 
           {RGBColor[1, 0, 0], PointBox[721]}, 
           {RGBColor[0, 0, 1], PointBox[722]}, 
           {RGBColor[0, 0, 1], PointBox[723]}, 
           {RGBColor[1, 0, 0], PointBox[724]}, 
           {RGBColor[0, 0, 1], PointBox[725]}, 
           {RGBColor[1, 0, 0], PointBox[726]}, 
           {RGBColor[0, 1, 0], PointBox[727]}, 
           {RGBColor[1, 0, 0], PointBox[728]}, 
           {RGBColor[0, 0, 1], PointBox[729]}, 
           {RGBColor[0, 0, 1], PointBox[730]}, 
           {RGBColor[1, 0, 0], PointBox[731]}, 
           {RGBColor[0, 0, 1], PointBox[732]}, 
           {RGBColor[1, 0, 0], PointBox[733]}, 
           {RGBColor[0, 0, 1], PointBox[734]}, 
           {RGBColor[0, 1, 0], PointBox[735]}, 
           {RGBColor[1, 0, 0], PointBox[736]}, 
           {RGBColor[0, 0, 1], PointBox[737]}, 
           {RGBColor[0, 1, 0], PointBox[738]}, 
           {RGBColor[1, 0, 0], PointBox[739]}, 
           {RGBColor[0, 1, 0], PointBox[740]}, 
           {RGBColor[1, 0, 0], PointBox[741]}, 
           {RGBColor[0, 0, 1], PointBox[742]}, 
           {RGBColor[0, 0, 1], PointBox[743]}, 
           {RGBColor[1, 0, 0], PointBox[744]}, 
           {RGBColor[0, 0, 1], PointBox[745]}, 
           {RGBColor[1, 0, 0], PointBox[746]}, 
           {RGBColor[0, 0, 1], PointBox[747]}, 
           {RGBColor[0, 1, 0], PointBox[748]}, 
           {RGBColor[1, 0, 0], PointBox[749]}, 
           {RGBColor[0, 0, 1], PointBox[750]}, 
           {RGBColor[0, 0, 1], PointBox[751]}, 
           {RGBColor[1, 0, 0], PointBox[752]}, 
           {RGBColor[1, 0, 0], PointBox[753]}, 
           {RGBColor[0, 1, 0], PointBox[754]}, 
           {RGBColor[1, 0, 0], PointBox[755]}, 
           {RGBColor[0, 1, 0], PointBox[756]}, 
           {RGBColor[0, 0, 1], PointBox[757]}, 
           {RGBColor[0, 0, 1], PointBox[758]}, 
           {RGBColor[0, 1, 0], PointBox[759]}, 
           {RGBColor[0, 0, 1], PointBox[760]}, 
           {RGBColor[1, 0, 0], PointBox[761]}, 
           {RGBColor[0, 1, 0], PointBox[762]}, 
           {RGBColor[0, 0, 1], PointBox[763]}, 
           {RGBColor[0, 1, 0], PointBox[764]}, 
           {RGBColor[0, 0, 1], PointBox[765]}, 
           {RGBColor[0, 0, 1], PointBox[766]}, 
           {RGBColor[1, 0, 0], PointBox[767]}, 
           {RGBColor[0, 1, 0], PointBox[768]}, 
           {RGBColor[0, 0, 1], PointBox[769]}, 
           {RGBColor[0, 0, 1], PointBox[770]}, 
           {RGBColor[0, 1, 0], PointBox[771]}, 
           {RGBColor[0, 1, 0], PointBox[772]}, 
           {RGBColor[1, 0, 0], PointBox[773]}, 
           {RGBColor[0, 1, 0], PointBox[774]}, 
           {RGBColor[0, 0, 1], PointBox[775]}, 
           {RGBColor[0, 0, 1], PointBox[776]}, 
           {RGBColor[0, 1, 0], PointBox[777]}, 
           {RGBColor[0, 1, 0], PointBox[778]}, 
           {RGBColor[1, 0, 0], PointBox[779]}, 
           {RGBColor[0, 1, 0], PointBox[780]}, 
           {RGBColor[1, 0, 0], PointBox[781]}, 
           {RGBColor[0, 1, 0], PointBox[782]}, 
           {RGBColor[0, 0, 1], PointBox[783]}, 
           {RGBColor[0, 0, 1], PointBox[784]}, 
           {RGBColor[0, 1, 0], PointBox[785]}, 
           {RGBColor[0, 0, 1], PointBox[786]}, 
           {RGBColor[1, 0, 0], PointBox[787]}, 
           {RGBColor[0, 1, 0], PointBox[788]}, 
           {RGBColor[0, 0, 1], PointBox[789]}, 
           {RGBColor[0, 1, 0], PointBox[790]}, 
           {RGBColor[0, 0, 1], PointBox[791]}, 
           {RGBColor[0, 0, 1], PointBox[792]}, 
           {RGBColor[1, 0, 0], PointBox[793]}, 
           {RGBColor[0, 1, 0], PointBox[794]}, 
           {RGBColor[0, 0, 1], PointBox[795]}, 
           {RGBColor[0, 0, 1], PointBox[796]}, 
           {RGBColor[0, 1, 0], PointBox[797]}, 
           {RGBColor[0, 1, 0], PointBox[798]}, 
           {RGBColor[1, 0, 0], PointBox[799]}, 
           {RGBColor[0, 1, 0], PointBox[800]}, 
           {RGBColor[0, 0, 1], PointBox[801]}, 
           {RGBColor[0, 0, 1], PointBox[802]}, 
           {RGBColor[0, 1, 0], PointBox[803]}, 
           {RGBColor[0, 1, 0], PointBox[804]}, 
           {RGBColor[1, 0, 0], PointBox[805]}, 
           {RGBColor[0, 1, 0], PointBox[806]}, 
           {RGBColor[1, 0, 0], PointBox[807]}, 
           {RGBColor[0, 1, 0], PointBox[808]}, 
           {RGBColor[1, 0, 0], PointBox[809]}, 
           {RGBColor[0, 0, 1], PointBox[810]}, 
           {RGBColor[0, 0, 1], PointBox[811]}, 
           {RGBColor[1, 0, 0], PointBox[812]}, 
           {RGBColor[0, 0, 1], PointBox[813]}, 
           {RGBColor[1, 0, 0], PointBox[814]}, 
           {RGBColor[0, 0, 1], PointBox[815]}, 
           {RGBColor[0, 1, 0], PointBox[816]}, 
           {RGBColor[1, 0, 0], PointBox[817]}, 
           {RGBColor[0, 0, 1], PointBox[818]}, 
           {RGBColor[0, 0, 1], PointBox[819]}, 
           {RGBColor[1, 0, 0], PointBox[820]}, 
           {RGBColor[0, 1, 0], PointBox[821]}, 
           {RGBColor[1, 0, 0], PointBox[822]}, 
           {RGBColor[0, 0, 1], PointBox[823]}, 
           {RGBColor[0, 0, 1], PointBox[824]}, 
           {RGBColor[1, 0, 0], PointBox[825]}, 
           {RGBColor[0, 1, 0], PointBox[826]}, 
           {RGBColor[1, 0, 0], PointBox[827]}, 
           {RGBColor[0, 0, 1], PointBox[828]}, 
           {RGBColor[0, 0, 1], PointBox[829]}, 
           {RGBColor[1, 0, 0], PointBox[830]}, 
           {RGBColor[0, 1, 0], PointBox[831]}, 
           {RGBColor[1, 0, 0], PointBox[832]}, 
           {RGBColor[0, 1, 0], PointBox[833]}, 
           {RGBColor[1, 0, 0], PointBox[834]}, 
           {RGBColor[0, 0, 1], PointBox[835]}, 
           {RGBColor[0, 0, 1], PointBox[836]}, 
           {RGBColor[1, 0, 0], PointBox[837]}, 
           {RGBColor[0, 0, 1], PointBox[838]}, 
           {RGBColor[1, 0, 0], PointBox[839]}, 
           {RGBColor[0, 0, 1], PointBox[840]}, 
           {RGBColor[0, 1, 0], PointBox[841]}, 
           {RGBColor[1, 0, 0], PointBox[842]}, 
           {RGBColor[0, 0, 1], PointBox[843]}, 
           {RGBColor[0, 0, 1], PointBox[844]}, 
           {RGBColor[1, 0, 0], PointBox[845]}, 
           {RGBColor[0, 1, 0], PointBox[846]}, 
           {RGBColor[1, 0, 0], PointBox[847]}, 
           {RGBColor[0, 0, 1], PointBox[848]}, 
           {RGBColor[0, 0, 1], PointBox[849]}, 
           {RGBColor[1, 0, 0], PointBox[850]}, 
           {RGBColor[0, 1, 0], PointBox[851]}, 
           {RGBColor[1, 0, 0], PointBox[852]}, 
           {RGBColor[0, 0, 1], PointBox[853]}, 
           {RGBColor[0, 0, 1], PointBox[854]}, 
           {RGBColor[1, 0, 0], PointBox[855]}, 
           {RGBColor[1, 1, 0], PointBox[856]}, 
           {RGBColor[0, 1, 0], PointBox[857]}, 
           {RGBColor[0, 1, 0], PointBox[858]}, 
           {RGBColor[0, 0, 1], PointBox[859]}, 
           {RGBColor[1, 0, 0], PointBox[860]}, 
           {RGBColor[1, 0, 0], PointBox[861]}, 
           {RGBColor[0, 0, 1], PointBox[862]}, 
           {RGBColor[1, 0, 0], PointBox[863]}, 
           {RGBColor[0, 0, 1], PointBox[864]}, 
           {RGBColor[1, 1, 0], PointBox[865]}, 
           {RGBColor[1, 1, 0], PointBox[866]}, 
           {RGBColor[0, 0, 1], PointBox[867]}, 
           {RGBColor[1, 1, 0], PointBox[868]}, 
           {RGBColor[1, 0, 0], PointBox[869]}, 
           {RGBColor[0, 0, 1], PointBox[870]}, 
           {RGBColor[1, 1, 0], PointBox[871]}, 
           {RGBColor[0, 0, 1], PointBox[872]}, 
           {RGBColor[1, 1, 0], PointBox[873]}, 
           {RGBColor[1, 1, 0], PointBox[874]}, 
           {RGBColor[1, 0, 0], PointBox[875]}, 
           {RGBColor[0, 0, 1], PointBox[876]}, 
           {RGBColor[1, 1, 0], PointBox[877]}, 
           {RGBColor[1, 1, 0], PointBox[878]}, 
           {RGBColor[0, 0, 1], PointBox[879]}, 
           {RGBColor[0, 0, 1], PointBox[880]}, 
           {RGBColor[1, 0, 0], PointBox[881]}, 
           {RGBColor[0, 0, 1], PointBox[882]}, 
           {RGBColor[1, 1, 0], PointBox[883]}, 
           {RGBColor[1, 1, 0], PointBox[884]}, 
           {RGBColor[0, 0, 1], PointBox[885]}, 
           {RGBColor[1, 1, 0], PointBox[886]}, 
           {RGBColor[1, 0, 0], PointBox[887]}, 
           {RGBColor[0, 0, 1], PointBox[888]}, 
           {RGBColor[1, 0, 0], PointBox[889]}, 
           {RGBColor[0, 0, 1], PointBox[890]}, 
           {RGBColor[1, 1, 0], PointBox[891]}, 
           {RGBColor[1, 1, 0], PointBox[892]}, 
           {RGBColor[0, 0, 1], PointBox[893]}, 
           {RGBColor[1, 1, 0], PointBox[894]}, 
           {RGBColor[1, 0, 0], PointBox[895]}, 
           {RGBColor[0, 0, 1], PointBox[896]}, 
           {RGBColor[1, 1, 0], PointBox[897]}, 
           {RGBColor[0, 0, 1], PointBox[898]}, 
           {RGBColor[1, 1, 0], PointBox[899]}, 
           {RGBColor[0, 0, 1], PointBox[900]}, 
           {RGBColor[1, 0, 0], PointBox[901]}, 
           {RGBColor[0, 0, 1], PointBox[902]}, 
           {RGBColor[1, 1, 0], PointBox[903]}, 
           {RGBColor[1, 1, 0], PointBox[904]}, 
           {RGBColor[0, 0, 1], PointBox[905]}, 
           {RGBColor[1, 1, 0], PointBox[906]}, 
           {RGBColor[1, 0, 0], PointBox[907]}, 
           {RGBColor[0, 0, 1], PointBox[908]}, 
           {RGBColor[1, 1, 0], PointBox[909]}, 
           {RGBColor[0, 0, 1], PointBox[910]}, 
           {RGBColor[1, 1, 0], PointBox[911]}, 
           {RGBColor[0, 0, 1], PointBox[912]}, 
           {RGBColor[1, 0, 0], PointBox[913]}, 
           {RGBColor[0, 0, 1], PointBox[914]}, 
           {RGBColor[1, 0, 0], PointBox[915]}, 
           {RGBColor[0, 0, 1], PointBox[916]}, 
           {RGBColor[1, 0, 0], PointBox[917]}, 
           {RGBColor[1, 1, 0], PointBox[918]}, 
           {RGBColor[1, 1, 0], PointBox[919]}, 
           {RGBColor[1, 0, 0], PointBox[920]}, 
           {RGBColor[1, 1, 0], PointBox[921]}, 
           {RGBColor[1, 0, 0], PointBox[922]}, 
           {RGBColor[1, 1, 0], PointBox[923]}, 
           {RGBColor[0, 0, 1], PointBox[924]}, 
           {RGBColor[1, 0, 0], PointBox[925]}, 
           {RGBColor[1, 1, 0], PointBox[926]}, 
           {RGBColor[1, 1, 0], PointBox[927]}, 
           {RGBColor[1, 0, 0], PointBox[928]}, 
           {RGBColor[0, 0, 1], PointBox[929]}, 
           {RGBColor[1, 0, 0], PointBox[930]}, 
           {RGBColor[1, 1, 0], PointBox[931]}, 
           {RGBColor[1, 1, 0], PointBox[932]}, 
           {RGBColor[1, 0, 0], PointBox[933]}, 
           {RGBColor[0, 0, 1], PointBox[934]}, 
           {RGBColor[1, 0, 0], PointBox[935]}, 
           {RGBColor[1, 1, 0], PointBox[936]}, 
           {RGBColor[1, 1, 0], PointBox[937]}, 
           {RGBColor[1, 0, 0], PointBox[938]}, 
           {RGBColor[1, 1, 0], PointBox[939]}, 
           {RGBColor[1, 0, 0], PointBox[940]}, 
           {RGBColor[0, 0, 1], PointBox[941]}, 
           {RGBColor[1, 0, 0], PointBox[942]}, 
           {RGBColor[1, 1, 0], PointBox[943]}, 
           {RGBColor[1, 1, 0], PointBox[944]}, 
           {RGBColor[1, 0, 0], PointBox[945]}, 
           {RGBColor[1, 1, 0], PointBox[946]}, 
           {RGBColor[1, 0, 0], PointBox[947]}, 
           {RGBColor[1, 1, 0], PointBox[948]}, 
           {RGBColor[0, 0, 1], PointBox[949]}, 
           {RGBColor[1, 0, 0], PointBox[950]}, 
           {RGBColor[1, 1, 0], PointBox[951]}, 
           {RGBColor[0, 0, 1], PointBox[952]}, 
           {RGBColor[1, 0, 0], PointBox[953]}, 
           {RGBColor[0, 0, 1], PointBox[954]}, 
           {RGBColor[1, 0, 0], PointBox[955]}, 
           {RGBColor[1, 1, 0], PointBox[956]}, 
           {RGBColor[1, 1, 0], PointBox[957]}, 
           {RGBColor[1, 0, 0], PointBox[958]}, 
           {RGBColor[1, 1, 0], PointBox[959]}, 
           {RGBColor[1, 0, 0], PointBox[960]}, 
           {RGBColor[1, 1, 0], PointBox[961]}, 
           {RGBColor[0, 0, 1], PointBox[962]}, 
           {RGBColor[1, 0, 0], PointBox[963]}, 
           {RGBColor[1, 1, 0], PointBox[964]}, 
           {RGBColor[1, 1, 0], PointBox[965]}, 
           {RGBColor[1, 0, 0], PointBox[966]}, 
           {RGBColor[1, 0, 0], PointBox[967]}, 
           {RGBColor[0, 0, 1], PointBox[968]}, 
           {RGBColor[1, 0, 0], PointBox[969]}, 
           {RGBColor[0, 0, 1], PointBox[970]}, 
           {RGBColor[1, 1, 0], PointBox[971]}, 
           {RGBColor[1, 1, 0], PointBox[972]}, 
           {RGBColor[0, 0, 1], PointBox[973]}, 
           {RGBColor[1, 1, 0], PointBox[974]}, 
           {RGBColor[1, 0, 0], PointBox[975]}, 
           {RGBColor[0, 0, 1], PointBox[976]}, 
           {RGBColor[1, 1, 0], PointBox[977]}, 
           {RGBColor[0, 0, 1], PointBox[978]}, 
           {RGBColor[1, 1, 0], PointBox[979]}, 
           {RGBColor[1, 1, 0], PointBox[980]}, 
           {RGBColor[1, 0, 0], PointBox[981]}, 
           {RGBColor[0, 0, 1], PointBox[982]}, 
           {RGBColor[1, 1, 0], PointBox[983]}, 
           {RGBColor[1, 1, 0], PointBox[984]}, 
           {RGBColor[0, 0, 1], PointBox[985]}, 
           {RGBColor[0, 0, 1], PointBox[986]}, 
           {RGBColor[1, 0, 0], PointBox[987]}, 
           {RGBColor[0, 0, 1], PointBox[988]}, 
           {RGBColor[1, 1, 0], PointBox[989]}, 
           {RGBColor[1, 1, 0], PointBox[990]}, 
           {RGBColor[0, 0, 1], PointBox[991]}, 
           {RGBColor[0, 0, 1], PointBox[992]}, 
           {RGBColor[1, 0, 0], PointBox[993]}, 
           {RGBColor[0, 0, 1], PointBox[994]}, 
           {RGBColor[1, 0, 0], PointBox[995]}, 
           {RGBColor[0, 0, 1], PointBox[996]}, 
           {RGBColor[1, 1, 0], PointBox[997]}, 
           {RGBColor[1, 1, 0], PointBox[998]}, 
           {RGBColor[0, 0, 1], PointBox[999]}, 
           {RGBColor[1, 1, 0], PointBox[1000]}, 
           {RGBColor[1, 0, 0], PointBox[1001]}, 
           {RGBColor[0, 0, 1], PointBox[1002]}, 
           {RGBColor[1, 1, 0], PointBox[1003]}, 
           {RGBColor[0, 0, 1], PointBox[1004]}, 
           {RGBColor[1, 1, 0], PointBox[1005]}, 
           {RGBColor[1, 1, 0], PointBox[1006]}, 
           {RGBColor[1, 0, 0], PointBox[1007]}, 
           {RGBColor[0, 0, 1], PointBox[1008]}, 
           {RGBColor[1, 1, 0], PointBox[1009]}, 
           {RGBColor[1, 1, 0], PointBox[1010]}, 
           {RGBColor[0, 0, 1], PointBox[1011]}, 
           {RGBColor[0, 0, 1], PointBox[1012]}, 
           {RGBColor[1, 0, 0], PointBox[1013]}, 
           {RGBColor[0, 0, 1], PointBox[1014]}, 
           {RGBColor[1, 1, 0], PointBox[1015]}, 
           {RGBColor[1, 1, 0], PointBox[1016]}, 
           {RGBColor[0, 0, 1], PointBox[1017]}, 
           {RGBColor[0, 0, 1], PointBox[1018]}, 
           {RGBColor[1, 0, 0], PointBox[1019]}, 
           {RGBColor[0, 0, 1], PointBox[1020]}, 
           {RGBColor[1, 0, 0], PointBox[1021]}, 
           {RGBColor[0, 0, 1], PointBox[1022]}, 
           {RGBColor[1, 0, 0], PointBox[1023]}, 
           {RGBColor[1, 1, 0], PointBox[1024]}, 
           {RGBColor[1, 1, 0], PointBox[1025]}, 
           {RGBColor[1, 0, 0], PointBox[1026]}, 
           {RGBColor[1, 1, 0], PointBox[1027]}, 
           {RGBColor[1, 0, 0], PointBox[1028]}, 
           {RGBColor[1, 1, 0], PointBox[1029]}, 
           {RGBColor[0, 0, 1], PointBox[1030]}, 
           {RGBColor[1, 0, 0], PointBox[1031]}, 
           {RGBColor[1, 1, 0], PointBox[1032]}, 
           {RGBColor[1, 1, 0], PointBox[1033]}, 
           {RGBColor[1, 0, 0], PointBox[1034]}, 
           {RGBColor[0, 0, 1], PointBox[1035]}, 
           {RGBColor[1, 0, 0], PointBox[1036]}, 
           {RGBColor[1, 1, 0], PointBox[1037]}, 
           {RGBColor[1, 1, 0], PointBox[1038]}, 
           {RGBColor[1, 0, 0], PointBox[1039]}, 
           {RGBColor[0, 0, 1], PointBox[1040]}, 
           {RGBColor[1, 0, 0], PointBox[1041]}, 
           {RGBColor[1, 1, 0], PointBox[1042]}, 
           {RGBColor[1, 1, 0], PointBox[1043]}, 
           {RGBColor[1, 0, 0], PointBox[1044]}, 
           {RGBColor[0, 0, 1], PointBox[1045]}, 
           {RGBColor[1, 0, 0], PointBox[1046]}, 
           {RGBColor[0, 0, 1], PointBox[1047]}, 
           {RGBColor[1, 0, 0], PointBox[1048]}, 
           {RGBColor[1, 1, 0], PointBox[1049]}, 
           {RGBColor[1, 1, 0], PointBox[1050]}, 
           {RGBColor[1, 0, 0], PointBox[1051]}, 
           {RGBColor[1, 1, 0], PointBox[1052]}, 
           {RGBColor[1, 0, 0], PointBox[1053]}, 
           {RGBColor[1, 1, 0], PointBox[1054]}, 
           {RGBColor[0, 0, 1], PointBox[1055]}, 
           {RGBColor[1, 0, 0], PointBox[1056]}, 
           {RGBColor[1, 1, 0], PointBox[1057]}, 
           {RGBColor[1, 1, 0], PointBox[1058]}, 
           {RGBColor[1, 0, 0], PointBox[1059]}, 
           {RGBColor[0, 0, 1], PointBox[1060]}, 
           {RGBColor[1, 0, 0], PointBox[1061]}, 
           {RGBColor[1, 1, 0], PointBox[1062]}, 
           {RGBColor[1, 1, 0], PointBox[1063]}, 
           {RGBColor[1, 0, 0], PointBox[1064]}, 
           {RGBColor[0, 0, 1], PointBox[1065]}, 
           {RGBColor[1, 0, 0], PointBox[1066]}, 
           {RGBColor[1, 1, 0], PointBox[1067]}, 
           {RGBColor[1, 1, 0], PointBox[1068]}, 
           {RGBColor[1, 0, 0], PointBox[1069]}, 
           {RGBColor[0, 0, 1], PointBox[1070]}, 
           {RGBColor[0, 0, 1], PointBox[1071]}, 
           {RGBColor[0, 1, 0], PointBox[1072]}, 
           {RGBColor[1, 0, 0], PointBox[1073]}, 
           {RGBColor[1, 0, 0], PointBox[1074]}, 
           {RGBColor[0, 1, 0], PointBox[1075]}, 
           {RGBColor[1, 0, 0], PointBox[1076]}, 
           {RGBColor[0, 1, 0], PointBox[1077]}, 
           {RGBColor[1, 1, 0], PointBox[1078]}, 
           {RGBColor[1, 1, 0], PointBox[1079]}, 
           {RGBColor[0, 1, 0], PointBox[1080]}, 
           {RGBColor[1, 1, 0], PointBox[1081]}, 
           {RGBColor[1, 0, 0], PointBox[1082]}, 
           {RGBColor[0, 1, 0], PointBox[1083]}, 
           {RGBColor[1, 1, 0], PointBox[1084]}, 
           {RGBColor[0, 1, 0], PointBox[1085]}, 
           {RGBColor[1, 1, 0], PointBox[1086]}, 
           {RGBColor[1, 1, 0], PointBox[1087]}, 
           {RGBColor[1, 0, 0], PointBox[1088]}, 
           {RGBColor[0, 1, 0], PointBox[1089]}, 
           {RGBColor[1, 1, 0], PointBox[1090]}, 
           {RGBColor[1, 1, 0], PointBox[1091]}, 
           {RGBColor[0, 1, 0], PointBox[1092]}, 
           {RGBColor[0, 1, 0], PointBox[1093]}, 
           {RGBColor[1, 0, 0], PointBox[1094]}, 
           {RGBColor[0, 1, 0], PointBox[1095]}, 
           {RGBColor[1, 1, 0], PointBox[1096]}, 
           {RGBColor[1, 1, 0], PointBox[1097]}, 
           {RGBColor[0, 1, 0], PointBox[1098]}, 
           {RGBColor[1, 1, 0], PointBox[1099]}, 
           {RGBColor[1, 0, 0], PointBox[1100]}, 
           {RGBColor[0, 1, 0], PointBox[1101]}, 
           {RGBColor[1, 0, 0], PointBox[1102]}, 
           {RGBColor[0, 1, 0], PointBox[1103]}, 
           {RGBColor[1, 1, 0], PointBox[1104]}, 
           {RGBColor[1, 1, 0], PointBox[1105]}, 
           {RGBColor[0, 1, 0], PointBox[1106]}, 
           {RGBColor[1, 1, 0], PointBox[1107]}, 
           {RGBColor[1, 0, 0], PointBox[1108]}, 
           {RGBColor[0, 1, 0], PointBox[1109]}, 
           {RGBColor[1, 1, 0], PointBox[1110]}, 
           {RGBColor[0, 1, 0], PointBox[1111]}, 
           {RGBColor[1, 1, 0], PointBox[1112]}, 
           {RGBColor[0, 1, 0], PointBox[1113]}, 
           {RGBColor[1, 0, 0], PointBox[1114]}, 
           {RGBColor[0, 1, 0], PointBox[1115]}, 
           {RGBColor[1, 1, 0], PointBox[1116]}, 
           {RGBColor[1, 1, 0], PointBox[1117]}, 
           {RGBColor[0, 1, 0], PointBox[1118]}, 
           {RGBColor[1, 1, 0], PointBox[1119]}, 
           {RGBColor[1, 0, 0], PointBox[1120]}, 
           {RGBColor[0, 1, 0], PointBox[1121]}, 
           {RGBColor[1, 1, 0], PointBox[1122]}, 
           {RGBColor[0, 1, 0], PointBox[1123]}, 
           {RGBColor[1, 1, 0], PointBox[1124]}, 
           {RGBColor[0, 1, 0], PointBox[1125]}, 
           {RGBColor[1, 0, 0], PointBox[1126]}, 
           {RGBColor[0, 1, 0], PointBox[1127]}, 
           {RGBColor[1, 0, 0], PointBox[1128]}, 
           {RGBColor[0, 1, 0], PointBox[1129]}, 
           {RGBColor[1, 0, 0], PointBox[1130]}, 
           {RGBColor[1, 1, 0], PointBox[1131]}, 
           {RGBColor[1, 1, 0], PointBox[1132]}, 
           {RGBColor[1, 0, 0], PointBox[1133]}, 
           {RGBColor[1, 1, 0], PointBox[1134]}, 
           {RGBColor[1, 0, 0], PointBox[1135]}, 
           {RGBColor[1, 1, 0], PointBox[1136]}, 
           {RGBColor[0, 1, 0], PointBox[1137]}, 
           {RGBColor[1, 0, 0], PointBox[1138]}, 
           {RGBColor[1, 1, 0], PointBox[1139]}, 
           {RGBColor[1, 1, 0], PointBox[1140]}, 
           {RGBColor[1, 0, 0], PointBox[1141]}, 
           {RGBColor[0, 1, 0], PointBox[1142]}, 
           {RGBColor[1, 0, 0], PointBox[1143]}, 
           {RGBColor[1, 1, 0], PointBox[1144]}, 
           {RGBColor[1, 1, 0], PointBox[1145]}, 
           {RGBColor[1, 0, 0], PointBox[1146]}, 
           {RGBColor[0, 1, 0], PointBox[1147]}, 
           {RGBColor[1, 0, 0], PointBox[1148]}, 
           {RGBColor[1, 1, 0], PointBox[1149]}, 
           {RGBColor[1, 1, 0], PointBox[1150]}, 
           {RGBColor[1, 0, 0], PointBox[1151]}, 
           {RGBColor[1, 1, 0], PointBox[1152]}, 
           {RGBColor[1, 0, 0], PointBox[1153]}, 
           {RGBColor[0, 1, 0], PointBox[1154]}, 
           {RGBColor[1, 0, 0], PointBox[1155]}, 
           {RGBColor[1, 1, 0], PointBox[1156]}, 
           {RGBColor[1, 1, 0], PointBox[1157]}, 
           {RGBColor[1, 0, 0], PointBox[1158]}, 
           {RGBColor[1, 1, 0], PointBox[1159]}, 
           {RGBColor[1, 0, 0], PointBox[1160]}, 
           {RGBColor[1, 1, 0], PointBox[1161]}, 
           {RGBColor[0, 1, 0], PointBox[1162]}, 
           {RGBColor[1, 0, 0], PointBox[1163]}, 
           {RGBColor[1, 1, 0], PointBox[1164]}, 
           {RGBColor[0, 1, 0], PointBox[1165]}, 
           {RGBColor[1, 0, 0], PointBox[1166]}, 
           {RGBColor[0, 1, 0], PointBox[1167]}, 
           {RGBColor[1, 0, 0], PointBox[1168]}, 
           {RGBColor[1, 1, 0], PointBox[1169]}, 
           {RGBColor[1, 1, 0], PointBox[1170]}, 
           {RGBColor[1, 0, 0], PointBox[1171]}, 
           {RGBColor[1, 1, 0], PointBox[1172]}, 
           {RGBColor[1, 0, 0], PointBox[1173]}, 
           {RGBColor[1, 1, 0], PointBox[1174]}, 
           {RGBColor[0, 1, 0], PointBox[1175]}, 
           {RGBColor[1, 0, 0], PointBox[1176]}, 
           {RGBColor[1, 1, 0], PointBox[1177]}, 
           {RGBColor[1, 1, 0], PointBox[1178]}, 
           {RGBColor[1, 0, 0], PointBox[1179]}, 
           {RGBColor[1, 0, 0], PointBox[1180]}, 
           {RGBColor[0, 1, 0], PointBox[1181]}, 
           {RGBColor[1, 0, 0], PointBox[1182]}, 
           {RGBColor[0, 1, 0], PointBox[1183]}, 
           {RGBColor[1, 1, 0], PointBox[1184]}, 
           {RGBColor[1, 1, 0], PointBox[1185]}, 
           {RGBColor[0, 1, 0], PointBox[1186]}, 
           {RGBColor[1, 1, 0], PointBox[1187]}, 
           {RGBColor[1, 0, 0], PointBox[1188]}, 
           {RGBColor[0, 1, 0], PointBox[1189]}, 
           {RGBColor[1, 1, 0], PointBox[1190]}, 
           {RGBColor[0, 1, 0], PointBox[1191]}, 
           {RGBColor[1, 1, 0], PointBox[1192]}, 
           {RGBColor[1, 1, 0], PointBox[1193]}, 
           {RGBColor[1, 0, 0], PointBox[1194]}, 
           {RGBColor[0, 1, 0], PointBox[1195]}, 
           {RGBColor[1, 1, 0], PointBox[1196]}, 
           {RGBColor[1, 1, 0], PointBox[1197]}, 
           {RGBColor[0, 1, 0], PointBox[1198]}, 
           {RGBColor[0, 1, 0], PointBox[1199]}, 
           {RGBColor[1, 0, 0], PointBox[1200]}, 
           {RGBColor[0, 1, 0], PointBox[1201]}, 
           {RGBColor[1, 1, 0], PointBox[1202]}, 
           {RGBColor[1, 1, 0], PointBox[1203]}, 
           {RGBColor[0, 1, 0], PointBox[1204]}, 
           {RGBColor[0, 1, 0], PointBox[1205]}, 
           {RGBColor[1, 0, 0], PointBox[1206]}, 
           {RGBColor[0, 1, 0], PointBox[1207]}, 
           {RGBColor[1, 0, 0], PointBox[1208]}, 
           {RGBColor[0, 1, 0], PointBox[1209]}, 
           {RGBColor[1, 1, 0], PointBox[1210]}, 
           {RGBColor[1, 1, 0], PointBox[1211]}, 
           {RGBColor[0, 1, 0], PointBox[1212]}, 
           {RGBColor[1, 1, 0], PointBox[1213]}, 
           {RGBColor[1, 0, 0], PointBox[1214]}, 
           {RGBColor[0, 1, 0], PointBox[1215]}, 
           {RGBColor[1, 1, 0], PointBox[1216]}, 
           {RGBColor[0, 1, 0], PointBox[1217]}, 
           {RGBColor[1, 1, 0], PointBox[1218]}, 
           {RGBColor[1, 1, 0], PointBox[1219]}, 
           {RGBColor[1, 0, 0], PointBox[1220]}, 
           {RGBColor[0, 1, 0], PointBox[1221]}, 
           {RGBColor[1, 1, 0], PointBox[1222]}, 
           {RGBColor[1, 1, 0], PointBox[1223]}, 
           {RGBColor[0, 1, 0], PointBox[1224]}, 
           {RGBColor[0, 1, 0], PointBox[1225]}, 
           {RGBColor[1, 0, 0], PointBox[1226]}, 
           {RGBColor[0, 1, 0], PointBox[1227]}, 
           {RGBColor[1, 1, 0], PointBox[1228]}, 
           {RGBColor[1, 1, 0], PointBox[1229]}, 
           {RGBColor[0, 1, 0], PointBox[1230]}, 
           {RGBColor[0, 1, 0], PointBox[1231]}, 
           {RGBColor[1, 0, 0], PointBox[1232]}, 
           {RGBColor[0, 1, 0], PointBox[1233]}, 
           {RGBColor[1, 0, 0], PointBox[1234]}, 
           {RGBColor[0, 1, 0], PointBox[1235]}, 
           {RGBColor[1, 0, 0], PointBox[1236]}, 
           {RGBColor[1, 1, 0], PointBox[1237]}, 
           {RGBColor[1, 1, 0], PointBox[1238]}, 
           {RGBColor[1, 0, 0], PointBox[1239]}, 
           {RGBColor[1, 1, 0], PointBox[1240]}, 
           {RGBColor[1, 0, 0], PointBox[1241]}, 
           {RGBColor[1, 1, 0], PointBox[1242]}, 
           {RGBColor[0, 1, 0], PointBox[1243]}, 
           {RGBColor[1, 0, 0], PointBox[1244]}, 
           {RGBColor[1, 1, 0], PointBox[1245]}, 
           {RGBColor[1, 1, 0], PointBox[1246]}, 
           {RGBColor[1, 0, 0], PointBox[1247]}, 
           {RGBColor[0, 1, 0], PointBox[1248]}, 
           {RGBColor[1, 0, 0], PointBox[1249]}, 
           {RGBColor[1, 1, 0], PointBox[1250]}, 
           {RGBColor[1, 1, 0], PointBox[1251]}, 
           {RGBColor[1, 0, 0], PointBox[1252]}, 
           {RGBColor[0, 1, 0], PointBox[1253]}, 
           {RGBColor[1, 0, 0], PointBox[1254]}, 
           {RGBColor[1, 1, 0], PointBox[1255]}, 
           {RGBColor[1, 1, 0], PointBox[1256]}, 
           {RGBColor[1, 0, 0], PointBox[1257]}, 
           {RGBColor[0, 1, 0], PointBox[1258]}, 
           {RGBColor[1, 0, 0], PointBox[1259]}, 
           {RGBColor[0, 1, 0], PointBox[1260]}, 
           {RGBColor[1, 0, 0], PointBox[1261]}, 
           {RGBColor[1, 1, 0], PointBox[1262]}, 
           {RGBColor[1, 1, 0], PointBox[1263]}, 
           {RGBColor[1, 0, 0], PointBox[1264]}, 
           {RGBColor[1, 1, 0], PointBox[1265]}, 
           {RGBColor[1, 0, 0], PointBox[1266]}, 
           {RGBColor[1, 1, 0], PointBox[1267]}, 
           {RGBColor[0, 1, 0], PointBox[1268]}, 
           {RGBColor[1, 0, 0], PointBox[1269]}, 
           {RGBColor[1, 1, 0], PointBox[1270]}, 
           {RGBColor[1, 1, 0], PointBox[1271]}, 
           {RGBColor[1, 0, 0], PointBox[1272]}, 
           {RGBColor[0, 1, 0], PointBox[1273]}, 
           {RGBColor[1, 0, 0], PointBox[1274]}, 
           {RGBColor[1, 1, 0], PointBox[1275]}, 
           {RGBColor[1, 1, 0], PointBox[1276]}, 
           {RGBColor[1, 0, 0], PointBox[1277]}, 
           {RGBColor[0, 1, 0], PointBox[1278]}, 
           {RGBColor[1, 0, 0], PointBox[1279]}, 
           {RGBColor[1, 1, 0], PointBox[1280]}, 
           {RGBColor[1, 1, 0], PointBox[1281]}, 
           {RGBColor[1, 0, 0], PointBox[1282]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"85", ",", "\"9-9-4-4-4-4-4-4-4-4-4\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#4-3", 
         "1-1#2-2#3-3#4-3#5-2", "1-1#2-2#3-3#4-3#5-2#12-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1", "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4", "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4", "1-1#2-2#3-3#4-3#5-2#12-4#6-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-4#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-4#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-4#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4", "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-4#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-4#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4", "1-1#2-2#3-3#4-3#5-4#12-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1", "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2", "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-2#11-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4", "1-1#2-2#3-3#4-3#5-4#12-4#6-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-4#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-4#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-4#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2", "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-4#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-4#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1#10-2#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1#10-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1#10-4#11-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1#10-4#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-4", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-4#10-1", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-4#10-1#11-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-4#10-2", 
         "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-4#10-2#11-1", 
         "1-1#2-2#3-3#4-4", "1-1#2-2#3-3#4-4#5-2", "1-1#2-2#3-3#4-4#5-2#12-1",
          "1-1#2-2#3-3#4-4#5-2#12-1#6-1", "1-1#2-2#3-3#4-4#5-2#12-1#6-1#7-2", 
         "1-1#2-2#3-3#4-4#5-2#12-1#6-1#7-2#8-1", 
         "1-1#2-2#3-3#4-4#5-2#12-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-3#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2", "1-1#2-2#3-4", 
         "1-1#2-2#3-4#4-3", "1-1#2-2#3-4#4-3#5-2", "1-1#2-2#3-4#4-3#5-2#12-1",
          "1-1#2-2#3-4#4-3#5-2#12-1#6-1", "1-1#2-2#3-4#4-3#5-2#12-1#6-1#7-2", 
         "1-1#2-2#3-4#4-3#5-2#12-1#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-3#5-2#12-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4", "1-1#2-2#3-4#4-4#5-2", "1-1#2-2#3-4#4-4#5-2#12-1",
          "1-1#2-2#3-4#4-4#5-2#12-1#6-1", "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3", "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3", "1-1#2-2#3-4#4-4#5-2#12-3#6-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-3#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-3#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-3#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3", "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-3#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-3#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3", "1-1#2-2#3-4#4-4#5-3#12-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1", "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2", "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-2#11-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3", "1-1#2-2#3-4#4-4#5-3#12-3#6-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-3#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-3#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-3#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2", "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-3#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-3#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1#10-2#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1#10-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1#10-3#11-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1#10-3#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-3", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-3#10-1", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-3#10-1#11-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-3#10-2", 
         "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-3#10-2#11-1", "1-1#2-3", 
         "1-1#2-3#3-2", "1-1#2-3#3-2#4-2", "1-1#2-3#3-2#4-2#5-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1", "1-1#2-3#3-2#4-2#5-3#12-1#6-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4", "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4", "1-1#2-3#3-2#4-2#5-3#12-4#6-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-4#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-4#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-4#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4", "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-4#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-4#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4", "1-1#2-3#3-2#4-2#5-4#12-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1", "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3", "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-3#11-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4", "1-1#2-3#3-2#4-2#5-4#12-4#6-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-4#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-4#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-4#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3", "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-4#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-4#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1#10-3#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1#10-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1#10-4#11-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1#10-4#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-4", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-4#10-1", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-4#10-1#11-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-4#10-3", 
         "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-4#10-3#11-1", 
         "1-1#2-3#3-2#4-4", "1-1#2-3#3-2#4-4#5-3", "1-1#2-3#3-2#4-4#5-3#12-1",
          "1-1#2-3#3-2#4-4#5-3#12-1#6-1", "1-1#2-3#3-2#4-4#5-3#12-1#6-1#7-3", 
         "1-1#2-3#3-2#4-4#5-3#12-1#6-1#7-3#8-1", 
         "1-1#2-3#3-2#4-4#5-3#12-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-2#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3", "1-1#2-3#3-4", 
         "1-1#2-3#3-4#4-2", "1-1#2-3#3-4#4-2#5-3", "1-1#2-3#3-4#4-2#5-3#12-1",
          "1-1#2-3#3-4#4-2#5-3#12-1#6-1", "1-1#2-3#3-4#4-2#5-3#12-1#6-1#7-3", 
         "1-1#2-3#3-4#4-2#5-3#12-1#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-2#5-3#12-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4", "1-1#2-3#3-4#4-4#5-2", "1-1#2-3#3-4#4-4#5-2#12-1",
          "1-1#2-3#3-4#4-4#5-2#12-1#6-1", "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3", "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2", "1-1#2-3#3-4#4-4#5-2#12-2#6-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-2#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-2#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-2#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3", "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-2#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-2#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-2#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3", "1-1#2-3#3-4#4-4#5-3#12-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1", "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2", "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-3#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1#11-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2", "1-1#2-3#3-4#4-4#5-3#12-2#6-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-2#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-2#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-2#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2", "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-2#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-2#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-2#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-2#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-2#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1#10-2#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1#10-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1#10-3#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3#10-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3#10-1#11-3", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3#10-2", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3#10-2#11-1", 
         "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3#10-2#11-3", "1-1#2-4", 
         "1-1#2-4#3-2", "1-1#2-4#3-2#4-2", "1-1#2-4#3-2#4-2#5-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1", "1-1#2-4#3-2#4-2#5-3#12-1#6-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4", "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3", "1-1#2-4#3-2#4-2#5-3#12-3#6-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-3#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-3#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-3#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4", "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-3#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-3#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-3#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4", "1-1#2-4#3-2#4-2#5-4#12-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1", "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3", "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-4#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1#11-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3", "1-1#2-4#3-2#4-2#5-4#12-3#6-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-3#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-3#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-3#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3", "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-3#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-3#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-3#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-3#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-3#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1#10-3#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1#10-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1#10-4#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4#10-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4#10-1#11-4", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4#10-3", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4#10-3#11-1", 
         "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4#10-3#11-4", 
         "1-1#2-4#3-2#4-3", "1-1#2-4#3-2#4-3#5-4", "1-1#2-4#3-2#4-3#5-4#12-1",
          "1-1#2-4#3-2#4-3#5-4#12-1#6-1", "1-1#2-4#3-2#4-3#5-4#12-1#6-1#7-4", 
         "1-1#2-4#3-2#4-3#5-4#12-1#6-1#7-4#8-1", 
         "1-1#2-4#3-2#4-3#5-4#12-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-2#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4", "1-1#2-4#3-3", 
         "1-1#2-4#3-3#4-2", "1-1#2-4#3-3#4-2#5-4", "1-1#2-4#3-3#4-2#5-4#12-1",
          "1-1#2-4#3-3#4-2#5-4#12-1#6-1", "1-1#2-4#3-3#4-2#5-4#12-1#6-1#7-4", 
         "1-1#2-4#3-3#4-2#5-4#12-1#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-2#5-4#12-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3", "1-1#2-4#3-3#4-3#5-2", "1-1#2-4#3-3#4-3#5-2#12-1",
          "1-1#2-4#3-3#4-3#5-2#12-1#6-1", "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4", "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2", "1-1#2-4#3-3#4-3#5-2#12-2#6-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-2#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-2#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-2#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4", "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-2#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-2#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-2#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4", "1-1#2-4#3-3#4-3#5-4#12-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1", "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2", "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-4#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1#11-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2", "1-1#2-4#3-3#4-3#5-4#12-2#6-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-2#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-2#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-2#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2", "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-2#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-2#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-2#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-2#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-2#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1#10-2#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1#10-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1#10-4#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4#10-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4#10-1#11-4", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4#10-2", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4#10-2#11-1", 
         "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4#10-2#11-4"}, {
        Null, CompressedData["
1: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
jg==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {172, "10-10-4-4-4-4-4-4-4-4-4-4"}, 
         VertexStyle -> {
          "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3" -> RGBColor[0, 0, 1],
            "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2" -> RGBColor[0, 1, 0],
            "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4" -> RGBColor[1, 1, 0],
            "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4" -> RGBColor[1, 1, 0],
            "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3" -> RGBColor[0, 0, 1],
            "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-2#5-3#12-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3" -> RGBColor[0, 0, 1],
            "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-2#5-3#12-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-3#5-4#12-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-4#5-2#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-2#5-4#12-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-2#5-4#12-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-3#5-2#12-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2" -> RGBColor[0, 1, 0],
            "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-3#5-4#12-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-4#5-2#12-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-4#5-3#12-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-3#5-4#12-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-4#5-2#12-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-3#5-4#12-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-3#5-2#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3" -> RGBColor[0, 0, 1],
            "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2" -> RGBColor[0, 1, 0],
            "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-4#5-3#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-3#5-2#12-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-2#5-3#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-3#5-2#12-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-4#5-2#12-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-2#5-4#12-1#6-1#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-2#5-3#12-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-2#5-4#12-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-4#5-3#12-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4" -> RGBColor[1, 1, 0],
            "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-2#5-4#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-4#5-2#12-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4" -> RGBColor[1, 1, 0],
            "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-3#5-4#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-4#5-3#12-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2" -> RGBColor[0, 1, 0],
            "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-2#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-4#5-3#12-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-4#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-4#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-4#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-2#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-4#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-2#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-2#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-2#7-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-3#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-3#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-2#7-1#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-4#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-4#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-2#8-1#9-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-2#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-1#7-4#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-4#7-1#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-2#9-1#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-2#5-3#12-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-4#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-2#7-1#8-2#9-3#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-2#7-1#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-1#8-3#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-4#12-2#6-1#7-2#8-1#9-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-3#7-1#8-3#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-3#6-2#7-3#8-2#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-1#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-1#7-2#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-3#12-1#6-1#7-3#8-2#9-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-2#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-1#8-4#9-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-3#6-1#7-3#8-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-4#8-2#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-3#12-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-3#12-2#6-2#7-1#8-3#9-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-3#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-4#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-4#8-1#9-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#4-3#5-4#12-1#6-1#7-4#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-3#9-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-4#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-1#7-4#8-1#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-3#8-2#9-1#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-3#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-3#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-1#7-2#8-1#9-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-1#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-1#8-4#9-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#4-4#5-3#12-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-3#4-3#5-4#12-4#6-2#7-1#8-4#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-3#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-3#7-2#8-1#9-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-3#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-3#5-2#12-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#4-4#5-3#12-2#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-3#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#4-3#5-4#12-1#6-1#7-2#8-4#9-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#4-2#5-3#12-3#6-1#7-4#8-3#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#4-3#5-2#12-4#6-4#7-2#8-1#9-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-1#8-3#9-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-2#9-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#4-3#5-2#12-2#6-4#7-2#8-1#9-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#4-4#5-2#12-3#6-1#7-2#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-3#12-4#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-3#9-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#4-3#5-2#12-1#6-4#7-2#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-3#9-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#4-4#5-2#12-1#6-1#7-2#8-1#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-1#7-4#8-1#9-4#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#4-2#5-3#12-1#6-1#7-4#8-3#9-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#4-3#5-2#12-1#6-4#7-1#8-2#9-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#4-2#5-4#12-3#6-3#7-4#8-3#9-4#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-3#7-4#8-1#9-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#4-2#5-4#12-1#6-3#7-4#8-1#9-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-4#8-1#9-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-2#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#4-4#5-2#12-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#4-4#5-3#12-1#6-1#7-2#8-3#9-2#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-4#12-4#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#4-2#5-4#12-1#6-3#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#4-3#5-2#12-4#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#4-2#5-3#12-1#6-4#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
ZkRZeJExCGJ94u/BqT7FjqVT9YjF2OdI1SvE9v/huvb1f32AU/WPFOyTpDjK
d96+c4p3k+frlRAmHMMD/J/dsmiCJuCLHKU59lnSsJ5ijn2d44pTfZ4G2NdJ
cZRri/zfryg0Ahbvqs+umVIg37y3PFHPGISxPhW4+ZyP1w1j8Hf9KNv2kgdu
ZH1zjLEzAUWsD3VjH2kC1oekzgw+vL/eZJqr3IZ9pxRXGTDiv/9dnzFE86lc
tTbnhcfY12qFfa6S2NeagPWph1eJ9xsyTSDv+jfRnqu/iL/BU32xnljvEsE+
22Ksj8Vz/e4tuWYMioSWMBkNwSeXrObBmSaQgvU8Ovb1tmCfbzD28TKwPqeG
fb4UR9mKfcMh2Ec8eWaqb5iG9b8DxUIloeTzKczY27Bfgw+asQ85EOuLHdiH
THGW+5WqLyitJI8/2i/HW/SHaMQ+aE+sT/54OtU3TcN6aHLIs5GFssbTHKVg
fVtV5WnjaY7S+31ZyWkzcnxkqUoX6ojBwjjnizuaTKY5ylMnKrepxpkCYH2W
gX3aFEfZiH3eVL02HfvE6Vj/TcA+cRrWf09jH7si9rUHY196MdaT52JfOsVR
HsY+90Dse7+Lfe2BWK8+in3vFBe5bN2cj3I3TKC/XFShSEAcdmJffg726dv/
E1rlNoP8PHKT0thnT9XLdbAvvwXr7VUi885beplNc5K82MdPcZLSY/sOGGWb
gqxvWMILIwGIQB8BK/QVYKOPQBXW++/y18QUJ5tBCOoLNuhDAKgv+HnG1cuT
45/iKEPk38tkKZpOc5QxGle0v7WZwtF/Ow7IxQlAk9CFc5vumkEQcpR70OcA
UM9Yg74Jeeij0IK+CQmofyR+KZO/rWwGw+LKS8+KCYI1+jCEob6Sgj4Mbqiv
yH6evXifrDmMc7wXfdblgu/o85CH+kw5+kLkod7jeyxzzcEjptMcpV9X0aAR
OV4ojlL634quzw7mYID6Ugb6TNijnlSOPhU01Js+cfN9C9tlDoNfp/SrV+hz
QUf9StGipeF1qhmkIUfZ1pl5LyDOHHqRo7yOPhmUHuaBvh4GyFG+Rl+PBuQo
eTp9lMp9jaEJecjNfhLPxJuN4SXyJiKdjnbv/U2mucjFqr0zorRNYTbqsZ4f
aXfU/phOc5HXNwvd+d1mBqWoN4olF+9a/9J8mot0QN8TioukfFkon5b36OuS
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
xvkUO8VgfB9Nc+X17UmdHGjuiHNaKz/JiL8H9qBPZYaruE71RX+bewer/k9C
nOkC+tsK9Oxn5usoqTP6234u8PA1e66kw+hvs/81yGriWRU5ob9t0MTIL+c3
CZSG/rb5zxZc/CtaTebob8vGeR87Rj+8TuZ43fRkVz6MGiXed9HPvWXmxaWf
UuW0cfKsFK/HjhTt5XigWZqCQlzXZ7rNcqJNfht0Zp5X0uCEBgPL/5ZTa+9e
ffuK81sjygkmPfH6e9bz5Y7lAr3dtsL6yRdnirlmr/XPODV1sdEWqt8o6AfO
I73hKLl3m93kMZyH5pi0Xn2vqZLG4Tz0PZzkQ23txm/F+/OeryMtjcXrczfO
Ww0N7L+nWChpAM5X3eEorXH+uhhusga92m5wkW1xvrsGLnKmsl3E+4UqCl48
s0pfXM9o5KoNfmMEaloQ16BomkLq3WY3yb3b7CZ9cN58t7pyoLePku7gvPkC
nGQLXUVAr4EC6cc06/g5U0F3mjX9+6hM/PmL+5nuDVFSI/RwX4WjbIvzb3aT
OjhvD95g8ONDlJL0cd7+Dg5y97s5JzPmiNdJ7xTjdT/llP4k7uCuYSpSnrZJ
H/3ZmWatOu5f5i7Q8imK2sqvCqpakrPsqp6alP0/JRotUNJpnO/rwFFy7za7
Se8lN9NXi+u325KuEebrlRQEXzATTlK5s2Xjy+0EmnCgdZCO+H7Q3pgw+TeB
4o42dGq4R3z94RNs4Si5d5vd5CX0aqfDRcbCR3yCi7SYsc58UUcVyb742JsO
V1C3DlXe3VuKzz+n9QqNXZVUDn/BbpJ7t9lN5sBzHDs4NWPHLSW5wXMch5N0
Lz33qP9PFV1tGD21xF9J6+BFrq56dNX6lZKewoe4wlFy7za7yZfozWb36A+/
wu7R7kLqa5cDzlR0R23ld0ScTyKbTHjoriQXWf/EHfucaWbBlc7R+ioa1XXP
qwl5Cpr1NqbJ56fi61Tgsc9dvF7uoHeb3eRqeBl2k9nwNv5LjEPyDVQUBm/D
TnIk/I+8lfvN/uIcH+Uy3CxhvXi9Fo6Iu9leJfVws6Pk3m12k7/Qq80u8hq8
ELtIK3iptpk0/7Cekt7UrrX4eUxFnrau/fTSxc8LerfZTZrDK7GbNBk2qZPW
NIGuDKtpMrGf+PfBN7GTzFy4YefwbSrKM7dMiD4jXn9ZmS8qxeuzKO/oQ53h
KsqAl2JHyb3b7CZHwGsl393Sf+4kFX2B12IHWePx+GnjRwoK751yJmKwgnKT
bPbeED+Hs1/bdUzorqSeJednnRLXB5e8L2OzHijpqNpnzWAvgcyCuvwonaei
b/Bk7Cjj4M8C4CZt4dkyoytmNlqrotHwbNVwkp3OdpqZEK6iH75GxyNqlJQL
L1eluypGL10l+bhncJQr4ee6w012R682u8iG8HnsIqMKPNdqr1CS/a4jL4qn
KCmgIk5/o5+KPng47dtiopJ6ty/DTXLv9nq4yUJ4waqy+nk9ClV0BF6QneQq
6+ZO3m4qcuxdf/tUpYqqjL4e2iO+b0f+2TDuxn0VTYdHZEfJfpH7sBugJ5ud
42389wX4/+Y+meX/9poj9fmavtbggJzitJ+NnrVRTkeSFrtlXXQWP+dnlec8
FLRre4RNx+8KkisPzzUYqaSPDkeudEpVkvxqQ9eNVirSvRBv9dZLRedjY0/7
lamoDdzkGvxc3Bdejd+TnWR//J7sJOsNd81c2kRF8XF0uL74+eMe7toHda8j
93A3xuv4eXbTfYHidfjyyoIXyyzF1w3vS21F3fvUA+8ju0jHktf9S8S5Jy3S
V7evuJ6FLreJrRXXoecpr6aOiVXRQXjb2ehvZ1/LnxPu3eY+dy94XnaSg7hn
G5/TPs++trUtVlKPtUY3tiapKGF39wiD2SqaCTfJn2vum0/FdcQOsiOuI3aQ
ssZh4SlJzmT5Me+qylOcu+Ct68kMD32vVJLZALOlHU4oyfhb0vn34uebe7in
wE1yDzdfx2e0ZfOU/1FJTnI5rnN2kkX3gnJPie9zklfYlkmnVFSMdcQA60ob
rCPmWFcmLtvncKizigIGxXu8ni9QPNYhdpSjsa6xi+x1oyAyZoeCet29cV/H
UiX1cF8/MdHw/W0VvcM6OhHrqg/WTXaUA7Cu8jo7BOs0O8li7uHGuv04aJn/
jaHiXNLr6Lnrn1RSDzffB8Kx7q/EfeCfaY1rR35VkvmMX1ce54rvA+477Ci5
N9sV963FwoR4+9Hic3nyL6uVWeL91CT6cextOen3Sd7eZ7mShjyff3KlQkFf
Gvooa71VdLJrvkeGOPd0SHCZbtZMoAJ834BMG8pSxM+vG+6LT9hR4r7qivss
92yX4T7NPdt8n56IuUGBOWIn5gCeCyoxB8zCXBCPuYLnjOOYI3iusMOcUY25
47qt4vSuM+Jz7yvXit7i53Yl5qCZmIu+V5x1v7RKSfO8dz2t1VbTLMw1gZhz
5JiDOmAuKt0+yOioOLfehJNshrkpF3NUee3tIXNPinPWtxVHw/sJFIK5rSnm
uPeY23iO4x5tIzhId8x9lpgDK2dfih7cWk5JZR12GRSK8/Pb8MCNQc60pn2c
0XDxet2wOuWJ1XIFeadEmeSFCDR+uO0M10AlOcFNFmCubIg58yHmVC/MrVcx
p97iufVyp65pAxV0z++UYrG4jg3B3Mtz8BvMvTwH2+4qjjghU5LvmWae8j5q
2oC52hxz9lLM4W0xl1dvy30x/6OcFn4Szj7OFj/f7nMCDusqSGvjj8kxiwRa
h+9LCV6TukQGq6kT5vr+mPM/4LkgHM8JD/F9rBg4yTA8V/BzxoiCQy41xeJz
3LWBQo8NAlmidzv0lO4Vn4lq8sFzSRWeU9riOYqfq7gH+xCeq9rJf0Q/vWNH
OeEOc4ynyWlc5n6HmPUOkovUKHIaVjVzlFykLEhr4/IAJ8lFzjY+sD4rRi65
yHG7irvkiuslu0jff6Ld7ycrJBd5F8+Z7CK5Z5pdZCW+j8cushzPzewijxhs
f3jWx1lykYb4vh+7SO6hZhe5C8/x7CJnzXX5YWmtkFzkVewDsIsMVUR13t9A
LrnIkMiW04e3cJZcpDd6qdlF/sS+gjP2GTzxfUd2kRnYt2AX6bJBdnpesVxy
kcFy96bKPGfJRT7FvsdE7IPEYJ+EXWQu9l3YRfbCvgu7yMl2Ic+M4x0lF+n3
Rr/3ugQnyUWuzs7zSF8gl1xk/9nZv9pOcKYouMgO2OdhF6mN76eyiyzGPhS7
SFvsQ7GLLMS+GLvIFrVr3QLMnCUXaYh9rsXY90rAvhi7SKeMNSWyT3LJRZ7B
Phq7yCWX0/JX6TpJLjIj7dbtrJ9OkouMxvd/2UV6Yh+PXWQmvk/MLnIz9v3Y
RQZ9WnfqTo6T5CLX4vvK7CJvYh+RXaQG+5DsIsNP2XYbPlIuuciG6J1mF9n7
+tHF15Id/rjIA1VVf++XSS4yudPrkO4bHSUXqXvh9/T1MU6SixTQW80u8gH2
TdlFPsb3vdlFvse+LbvIt/j+ObvICU93VujWOkkuUhc91Owi22KfmF2kO/ad
2UXOw74zu0hzfF9fBhfpd6rLgRdVjpKLvI5eanaRLbCvzS6Se6fZRTZF7zS7
yBPYp2cX6Yh9eHaRlth3ZxcZhX15dpGHsa/PLvIj9vXZRfpnTLJ3v+0guchj
C/tlVuyQSS7y6YyAvivCHCUX2ah99c1dxk6Si3TCuQK7SAHnEOwi9XDuwS4y
Fece7CLrOQYp2/3lKLnIIchrYBfpi3MUPlepxTkMu8jei0qbu612lFxkT5zj
8LlOWbhp8vl2MtoEF1m46GDT5FsyagYX2Qe91OfgIo1wLsTnRInIq2AXGYxz
J3aR70M/TMhfI5Nc5LjxU89MljlSW7jIrTi3uo5zrNc451qJc6+GyPNgF/kQ
52bsIoNGbulwwtSOxkxfdPdrqrju7WyfrW9jT0q4yIpgR2/tanvJRR5sm38r
bK+D5CLzPU8HZfSXSS7yCc7x+FxvG87x+FzvGc4V2UWm4VyRXaSPrHVer+Yy
yUU2qCf737yTzXCRu3FOyeeWvtoHvradLpNcpB7ONdlF2uBclF2kwxN/bWuN
Ax2Ci3w0dN0kk5MOdAsuMgl5Lzlwkddx7srnsPNxjsvnuqbIk2EXqYdzYD4X
9pHVusmjHSQXKZu489OaDw6Si2yKc+TxOFfOx7k0u8h+OJdmF7n7vtWWOAt7
ugoX6Y28H3aRrRbt/XWgq4PkIkORtxMPF5mFc3A+F6/ZnjvsXJKD5CJ1kdfD
LrIPzvn53L8+eqn5HD8Y5/Z8jp8PB8Auknup2UUGwwWwi/xtURbe8m97yUUG
Ix+JXeSGJilGlc0cJBf5CQ6BXeQFuAV2DA5wEewiS+Ei2EkoPzYZkRso/v1w
kcuQ12QIFzkdzoLdRT+D2mOFq+wlF7kRLmMnnIYrXAc7j6bRAckDNthSmMvL
1lvFufnV04sdrqrsJBepWjptv9k2O8lFPsiwG2PY2F5ykQXIu2IX6QlXws7k
NBwLu8hlyNNiF9kdDoZdTNbRhvdds+wkF5mNfC52kTfhaNjVLD9/ZviNcjvJ
RVrA5bDTeQHHw64nXN2ydXlrO8lFhsIdsUPanZOoHbDJTnKRunBE7CJL4I7Y
RYYP7rlJFmknuchwOCV2S0X1DD3fif8eu8itcFDsonThoNhFmSKvjV3kNDgq
dlVTV1+ojO1hS1pjhww7W6qigWk2wcu32Eousldqr6SoJ7aSi6TplgYnW9lJ
LnIbnBa7rc1wYewireHC2IlVj/Uc1iTFVnKRy5BXxy5yN5wZu7NfY6yCzu2w
lVxkF7g0dmob4drYRX5vPuPjERNb6ri3k0WbmwK1vGU8bJ+3reQinZDXxy5S
CTfHjm4LHB67vB3IA2QXGcJ5gHB91UvzM3t9b0/+RwZ81Bfn3fXVka2LWttK
LtIcDpBdYNff309Of9uevtrXv3ZT/PM1cIXsDDPgENkl/g8hLU0M
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.5], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1, 875}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1, 1748}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2, 439}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{3, 430}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{4, 218}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{5, 112}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{6, 60}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{7, 34}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{8, 22}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{9, 16}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{10, 14}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{11, 13}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{16, 20}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{17, 19}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{22, 28}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{23, 26}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{28, 32}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{29, 31}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{34, 48}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{35, 42}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{36, 40}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{37, 39}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{42, 46}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{43, 45}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{48, 54}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{49, 52}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{54, 58}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{55, 57}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{60, 86}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{61, 74}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{62, 68}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{63, 66}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{68, 72}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{69, 71}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{74, 80}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{75, 78}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{80, 84}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{81, 83}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{86, 100}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{87, 94}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{88, 92}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{89, 91}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{94, 98}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{95, 97}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{100, 106}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{101, 104}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{106, 110}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{107, 109}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{112, 165}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{113, 140}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{114, 127}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{115, 122}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{116, 119}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{119, 121}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{122, 125}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{127, 134}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{128, 131}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{131, 133}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{134, 137}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{137, 139}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{140, 153}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{141, 148}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{142, 145}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{145, 147}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{148, 151}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{153, 160}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{154, 157}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{157, 159}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{160, 163}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{165, 192}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{166, 179}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{167, 174}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{168, 171}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{171, 173}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{174, 177}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{179, 186}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{180, 183}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{183, 184}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{183, 185}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{186, 189}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{189, 191}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{192, 193}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{192, 205}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{193, 194}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{193, 200}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{194, 195}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{194, 197}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{195, 196}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{197, 198}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{197, 199}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{200, 201}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{200, 203}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{201, 202}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{203, 204}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{205, 206}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{205, 212}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{206, 207}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{206, 209}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{207, 208}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{209, 210}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{209, 211}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{212, 213}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{212, 215}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{213, 214}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{215, 216}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{215, 217}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{218, 219}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{218, 325}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{219, 220}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{219, 273}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{220, 221}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{220, 247}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{221, 222}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{221, 235}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{222, 223}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{222, 229}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{223, 224}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{223, 227}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{224, 225}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{224, 226}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{227, 228}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{229, 230}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{229, 233}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{230, 231}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{230, 232}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{233, 234}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{235, 236}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{235, 241}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{236, 237}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{236, 239}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{237, 238}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{239, 240}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{241, 242}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{241, 245}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{242, 243}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{242, 244}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{245, 246}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{247, 248}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{247, 261}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{248, 249}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{248, 255}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{249, 250}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{249, 253}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{250, 251}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{250, 252}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{253, 254}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{255, 256}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{255, 259}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{256, 257}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{256, 258}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{259, 260}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{261, 262}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{261, 267}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{262, 263}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{262, 265}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{263, 264}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{265, 266}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{267, 268}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{267, 271}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{268, 269}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{268, 270}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{271, 272}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{273, 274}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{273, 299}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{274, 275}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{274, 287}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{275, 276}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{275, 281}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{276, 277}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{276, 279}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{277, 278}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{279, 280}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{281, 282}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{281, 285}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{282, 283}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{282, 284}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{285, 286}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{287, 288}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{287, 293}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{288, 289}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{288, 291}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{289, 290}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{291, 292}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{293, 294}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{293, 297}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{294, 295}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{294, 296}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{297, 298}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{299, 300}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{299, 313}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{300, 301}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{300, 307}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{301, 302}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{301, 305}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{302, 303}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{302, 304}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{305, 306}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{307, 308}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{307, 311}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{308, 309}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{308, 310}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{311, 312}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{313, 314}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{313, 319}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{314, 315}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{314, 317}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{315, 316}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{317, 318}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{319, 320}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{319, 323}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{320, 321}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{320, 322}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{323, 324}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{325, 326}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{325, 378}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{326, 327}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{326, 353}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{327, 328}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{327, 340}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{328, 329}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{328, 335}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{329, 330}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{329, 332}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{330, 331}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{332, 333}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{332, 334}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{335, 336}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{335, 338}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{336, 337}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{338, 339}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{340, 341}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{340, 347}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{341, 342}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{341, 344}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{342, 343}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{344, 345}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{344, 346}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{347, 348}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{347, 350}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{348, 349}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{350, 351}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{350, 352}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{353, 354}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{353, 366}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{354, 355}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{354, 361}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{355, 356}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{355, 358}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{356, 357}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{358, 359}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{358, 360}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{361, 362}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{361, 364}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{362, 363}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{364, 365}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{366, 367}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{366, 373}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{367, 368}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{367, 370}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{368, 369}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{370, 371}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{370, 372}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{373, 374}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{373, 376}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{374, 375}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{376, 377}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{378, 379}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{378, 405}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{379, 380}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{379, 392}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{380, 381}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{380, 387}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{381, 382}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{381, 384}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{382, 383}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{384, 385}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{384, 386}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{387, 388}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{387, 390}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{388, 389}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{390, 391}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{392, 393}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{392, 399}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{393, 394}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{393, 396}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{394, 395}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{396, 397}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{396, 398}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{399, 400}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{399, 402}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{400, 401}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{402, 403}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{402, 404}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{405, 406}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{405, 418}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{406, 407}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{406, 413}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{407, 408}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{407, 410}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{408, 409}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{410, 411}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{410, 412}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{413, 414}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{413, 416}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{414, 415}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{416, 417}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{418, 419}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{418, 425}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{419, 420}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{419, 422}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{420, 421}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{422, 423}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{422, 424}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{425, 426}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{425, 428}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{426, 427}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{428, 429}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{430, 431}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{431, 432}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{432, 433}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{433, 434}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{434, 435}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{435, 436}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{436, 437}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{437, 438}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{439, 440}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{439, 449}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{440, 441}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{441, 442}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{442, 443}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{443, 444}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{444, 445}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{445, 446}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{446, 447}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{447, 448}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{449, 450}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{449, 663}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{450, 451}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{450, 557}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{451, 452}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{451, 505}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{452, 453}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{452, 479}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{453, 454}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{453, 467}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{454, 455}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{454, 461}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{455, 456}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{455, 459}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{456, 457}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{456, 458}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{459, 460}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{461, 462}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{461, 465}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{462, 463}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{462, 464}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{465, 466}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{467, 468}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{467, 473}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{468, 469}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{468, 471}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{469, 470}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{471, 472}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{473, 474}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{473, 477}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{474, 475}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{474, 476}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{477, 478}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{479, 480}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{479, 493}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{480, 481}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{480, 487}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{481, 482}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{481, 485}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{482, 483}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{482, 484}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{485, 486}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{487, 488}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{487, 491}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{488, 489}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{488, 490}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{491, 492}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{493, 494}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{493, 499}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{494, 495}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{494, 497}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{495, 496}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{497, 498}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{499, 500}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{499, 503}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{500, 501}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{500, 502}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{503, 504}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{505, 506}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{505, 531}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{506, 507}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{506, 519}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{507, 508}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{507, 513}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{508, 509}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{508, 511}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{509, 510}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{511, 512}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{513, 514}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{513, 517}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{514, 515}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{514, 516}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{517, 518}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{519, 520}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{519, 525}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{520, 521}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{520, 523}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{521, 522}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{523, 524}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{525, 526}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{525, 529}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{526, 527}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{526, 528}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{529, 530}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{531, 532}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{531, 545}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{532, 533}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{532, 539}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{533, 534}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{533, 537}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{534, 535}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{534, 536}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{537, 538}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{539, 540}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{539, 543}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{540, 541}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{540, 542}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{543, 544}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{545, 546}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{545, 551}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{546, 547}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{546, 549}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{547, 548}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{549, 550}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{551, 552}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{551, 555}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{552, 553}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{552, 554}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{555, 556}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{557, 558}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{557, 610}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{558, 559}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{558, 585}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{559, 560}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{559, 572}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{560, 561}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{560, 567}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{561, 562}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{561, 564}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{562, 563}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{564, 565}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{564, 566}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{567, 568}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{567, 570}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{568, 569}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{570, 571}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{572, 573}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{572, 579}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{573, 574}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{573, 576}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{574, 575}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{576, 577}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{576, 578}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{579, 580}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{579, 582}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{580, 581}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{582, 583}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{582, 584}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{585, 586}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{585, 598}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{586, 587}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{586, 593}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{587, 588}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{587, 590}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{588, 589}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{590, 591}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{590, 592}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{593, 594}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{593, 596}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{594, 595}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{596, 597}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{598, 599}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{598, 605}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{599, 600}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{599, 602}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{600, 601}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{602, 603}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{602, 604}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{605, 606}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{605, 608}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{606, 607}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{608, 609}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{610, 611}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{610, 637}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{611, 612}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{611, 624}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{612, 613}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{612, 619}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{613, 614}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{613, 616}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{614, 615}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{616, 617}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{616, 618}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{619, 620}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{619, 622}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{620, 621}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{622, 623}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{624, 625}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{624, 631}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{625, 626}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{625, 628}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{626, 627}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{628, 629}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{628, 630}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{631, 632}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{631, 634}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{632, 633}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{634, 635}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{634, 636}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{637, 638}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{637, 650}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{638, 639}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{638, 645}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{639, 640}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{639, 642}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{640, 641}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{642, 643}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{642, 644}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{645, 646}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{645, 648}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{646, 647}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{648, 649}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{650, 651}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{650, 657}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{651, 652}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{651, 654}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{652, 653}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{654, 655}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{654, 656}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{657, 658}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{657, 660}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{658, 659}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{660, 661}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{660, 662}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{663, 664}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{663, 770}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{664, 665}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{664, 718}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{665, 666}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{665, 692}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{666, 667}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{666, 680}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{667, 668}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{667, 674}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{668, 669}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{668, 672}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{669, 670}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{669, 671}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{672, 673}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{674, 675}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{674, 678}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{675, 676}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{675, 677}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{678, 679}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{680, 681}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{680, 686}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{681, 682}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{681, 684}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{682, 683}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{684, 685}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{686, 687}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{686, 690}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{687, 688}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{687, 689}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{690, 691}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{692, 693}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{692, 706}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{693, 694}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{693, 700}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{694, 695}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{694, 698}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{695, 696}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{695, 697}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{698, 699}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{700, 701}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{700, 704}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{701, 702}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{701, 703}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{704, 705}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{706, 707}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{706, 712}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{707, 708}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{707, 710}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{708, 709}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{710, 711}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{712, 713}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{712, 716}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{713, 714}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{713, 715}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{716, 717}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{718, 719}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{718, 744}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{719, 720}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{719, 732}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{720, 721}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{720, 726}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{721, 722}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{721, 724}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{722, 723}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{724, 725}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{726, 727}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{726, 730}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{727, 728}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{727, 729}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{730, 731}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{732, 733}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{732, 738}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{733, 734}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{733, 736}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{734, 735}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{736, 737}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{738, 739}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{738, 742}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{739, 740}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{739, 741}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{742, 743}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{744, 745}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{744, 758}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{745, 746}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{745, 752}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{746, 747}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{746, 750}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{747, 748}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{747, 749}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{750, 751}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{752, 753}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{752, 756}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{753, 754}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{753, 755}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{756, 757}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{758, 759}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{758, 764}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{759, 760}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{759, 762}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{760, 761}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{762, 763}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{764, 765}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{764, 768}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{765, 766}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{765, 767}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{768, 769}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{770, 771}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{770, 823}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{771, 772}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{771, 798}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{772, 773}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{772, 785}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{773, 774}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{773, 780}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{774, 775}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{774, 777}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{775, 776}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{777, 778}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{777, 779}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{780, 781}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{780, 783}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{781, 782}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{783, 784}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{785, 786}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{785, 792}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{786, 787}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{786, 789}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{787, 788}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{789, 790}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{789, 791}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{792, 793}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{792, 795}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{793, 794}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{795, 796}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{795, 797}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{798, 799}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{798, 811}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{799, 800}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{799, 806}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{800, 801}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{800, 803}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{801, 802}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{803, 804}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{803, 805}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{806, 807}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{806, 809}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{807, 808}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{809, 810}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{811, 812}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{811, 818}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{812, 813}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{812, 815}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{813, 814}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{815, 816}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{815, 817}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{818, 819}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{818, 821}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{819, 820}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{821, 822}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{823, 824}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{823, 850}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{824, 825}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{824, 837}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{825, 826}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{825, 832}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{826, 827}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{826, 829}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{827, 828}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{829, 830}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{829, 831}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{832, 833}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{832, 835}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{833, 834}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{835, 836}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{837, 838}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{837, 844}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{838, 839}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{838, 841}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{839, 840}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{841, 842}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{841, 843}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{844, 845}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{844, 847}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{845, 846}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{847, 848}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{847, 849}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{850, 851}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{850, 863}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{851, 852}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{851, 858}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{852, 853}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{852, 855}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{853, 854}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{855, 856}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{855, 857}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{858, 859}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{858, 861}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{859, 860}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{861, 862}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{863, 864}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{863, 870}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{864, 865}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{864, 867}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{865, 866}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{867, 868}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{867, 869}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{870, 871}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{870, 873}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{871, 872}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{873, 874}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{875, 876}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{875, 1312}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{876, 877}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{876, 1303}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{877, 878}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{877, 1091}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{878, 879}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{878, 985}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{879, 880}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{879, 933}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{880, 881}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{880, 907}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{881, 882}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{881, 895}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{882, 883}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{882, 889}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{883, 884}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{883, 887}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{884, 885}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{884, 886}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{887, 888}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{889, 890}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{889, 893}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{890, 891}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{890, 892}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{893, 894}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{895, 896}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{895, 901}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{896, 897}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{896, 899}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{897, 898}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{899, 900}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{901, 902}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{901, 905}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{902, 903}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{902, 904}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{905, 906}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{907, 908}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{907, 921}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{908, 909}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{908, 915}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{909, 910}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{909, 913}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{910, 911}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{910, 912}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{913, 914}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{915, 916}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{915, 919}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{916, 917}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{916, 918}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{919, 920}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{921, 922}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{921, 927}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{922, 923}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{922, 925}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{923, 924}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{925, 926}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{927, 928}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{927, 931}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{928, 929}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{928, 930}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{931, 932}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{933, 934}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{933, 959}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{934, 935}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{934, 947}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{935, 936}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{935, 941}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{936, 937}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{936, 939}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{937, 938}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{939, 940}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{941, 942}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{941, 945}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{942, 943}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{942, 944}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{945, 946}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{947, 948}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{947, 953}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{948, 949}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{948, 951}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{949, 950}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{951, 952}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{953, 954}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{953, 957}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{954, 955}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{954, 956}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{957, 958}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{959, 960}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{959, 973}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{960, 961}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{960, 967}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{961, 962}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{961, 965}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{962, 963}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{962, 964}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{965, 966}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{967, 968}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{967, 971}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{968, 969}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{968, 970}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{971, 972}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{973, 974}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{973, 979}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{974, 975}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{974, 977}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{975, 976}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{977, 978}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{979, 980}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{979, 983}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{980, 981}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{980, 982}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{983, 984}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{985, 986}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{985, 1038}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{986, 987}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{986, 1013}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{987, 988}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{987, 1000}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{988, 989}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{988, 995}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{989, 990}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{989, 992}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{990, 991}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{992, 993}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{992, 994}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{995, 996}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{995, 998}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{996, 997}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{998, 999}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1000, 1001}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1000, 1007}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1001, 1002}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1001, 1004}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1002, 1003}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1004, 1005}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1004, 1006}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1007, 1008}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1007, 1010}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1008, 1009}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1010, 1011}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1010, 1012}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1013, 1014}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1013, 1026}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1014, 1015}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1014, 1021}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1015, 1016}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1015, 1018}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1016, 1017}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1018, 1019}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1018, 1020}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1021, 1022}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1021, 1024}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1022, 1023}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1024, 1025}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1026, 1027}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1026, 1033}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1027, 1028}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1027, 1030}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1028, 1029}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1030, 1031}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1030, 1032}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1033, 1034}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1033, 1036}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1034, 1035}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1036, 1037}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1038, 1039}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1038, 1065}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1039, 1040}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1039, 1052}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1040, 1041}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1040, 1047}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1041, 1042}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1041, 1044}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1042, 1043}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1044, 1045}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1044, 1046}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1047, 1048}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1047, 1050}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1048, 1049}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1050, 1051}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1052, 1053}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1052, 1059}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1053, 1054}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1053, 1056}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1054, 1055}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1056, 1057}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1056, 1058}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1059, 1060}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1059, 1062}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1060, 1061}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1062, 1063}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1062, 1064}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1065, 1066}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1065, 1078}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1066, 1067}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1066, 1073}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1067, 1068}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1067, 1070}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1068, 1069}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1070, 1071}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1070, 1072}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1073, 1074}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1073, 1076}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1074, 1075}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1076, 1077}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1078, 1079}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1078, 1085}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1079, 1080}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1079, 1082}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1080, 1081}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1082, 1083}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1082, 1084}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1085, 1086}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1085, 1088}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1086, 1087}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1088, 1089}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1088, 1090}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1091, 1092}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1091, 1198}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1092, 1093}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1092, 1146}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1093, 1094}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1093, 1120}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1094, 1095}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1094, 1108}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1095, 1096}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1095, 1102}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1096, 1097}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1096, 1100}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1097, 1098}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1097, 1099}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1100, 1101}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1102, 1103}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1102, 1106}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1103, 1104}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1103, 1105}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1106, 1107}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1108, 1109}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1108, 1114}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1109, 1110}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1109, 1112}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1110, 1111}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1112, 1113}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1114, 1115}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1114, 1118}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1115, 1116}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1115, 1117}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1118, 1119}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1120, 1121}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1120, 1134}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1121, 1122}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1121, 1128}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1122, 1123}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1122, 1126}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1123, 1124}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1123, 1125}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1126, 1127}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1128, 1129}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1128, 1132}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1129, 1130}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1129, 1131}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1132, 1133}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1134, 1135}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1134, 1140}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1135, 1136}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1135, 1138}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1136, 1137}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1138, 1139}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1140, 1141}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1140, 1144}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1141, 1142}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1141, 1143}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1144, 1145}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1146, 1147}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1146, 1172}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1147, 1148}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1147, 1160}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1148, 1149}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1148, 1154}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1149, 1150}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1149, 1152}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1150, 1151}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1152, 1153}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1154, 1155}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1154, 1158}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1155, 1156}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1155, 1157}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1158, 1159}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1160, 1161}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1160, 1166}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1161, 1162}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1161, 1164}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1162, 1163}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1164, 1165}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1166, 1167}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1166, 1170}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1167, 1168}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1167, 1169}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1170, 1171}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1172, 1173}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1172, 1186}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1173, 1174}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1173, 1180}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1174, 1175}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1174, 1178}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1175, 1176}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1175, 1177}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1178, 1179}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1180, 1181}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1180, 1184}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1181, 1182}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1181, 1183}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1184, 1185}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1186, 1187}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1186, 1192}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1187, 1188}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1187, 1190}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1188, 1189}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1190, 1191}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1192, 1193}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1192, 1196}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1193, 1194}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1193, 1195}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1196, 1197}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1198, 1199}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1198, 1251}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1199, 1200}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1199, 1226}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1200, 1201}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1200, 1213}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1201, 1202}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1201, 1208}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1202, 1203}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1202, 1205}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1203, 1204}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1205, 1206}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1205, 1207}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1208, 1209}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1208, 1211}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1209, 1210}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1211, 1212}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1213, 1214}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1213, 1220}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1214, 1215}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1214, 1217}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1215, 1216}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1217, 1218}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1217, 1219}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1220, 1221}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1220, 1223}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1221, 1222}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1223, 1224}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1223, 1225}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1226, 1227}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1226, 1239}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1227, 1228}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1227, 1234}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1228, 1229}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1228, 1231}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1229, 1230}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1231, 1232}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1231, 1233}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1234, 1235}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1234, 1237}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1235, 1236}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1237, 1238}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1239, 1240}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1239, 1246}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1240, 1241}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1240, 1243}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1241, 1242}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1243, 1244}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1243, 1245}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1246, 1247}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1246, 1249}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1247, 1248}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1249, 1250}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1251, 1252}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1251, 1278}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1252, 1253}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1252, 1265}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1253, 1254}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1253, 1260}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1254, 1255}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1254, 1257}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1255, 1256}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1257, 1258}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1257, 1259}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1260, 1261}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1260, 1263}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1261, 1262}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1263, 1264}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1265, 1266}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1265, 1272}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1266, 1267}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1266, 1269}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1267, 1268}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1269, 1270}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1269, 1271}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1272, 1273}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1272, 1275}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1273, 1274}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1275, 1276}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1275, 1277}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1278, 1279}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1278, 1291}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1279, 1280}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1279, 1286}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1280, 1281}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1280, 1283}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1281, 1282}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1283, 1284}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1283, 1285}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1286, 1287}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1286, 1289}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1287, 1288}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1289, 1290}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1291, 1292}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1291, 1298}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1292, 1293}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1292, 1295}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1293, 1294}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1295, 1296}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1295, 1297}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1298, 1299}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1298, 1301}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1299, 1300}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1301, 1302}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1303, 1304}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1304, 1305}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1305, 1306}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1306, 1307}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1307, 1308}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1308, 1309}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1309, 1310}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1310, 1311}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1312, 1313}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1312, 1322}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1313, 1314}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1314, 1315}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1315, 1316}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1316, 1317}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1317, 1318}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1318, 1319}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1319, 1320}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1320, 1321}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1322, 1323}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1322, 1535}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1323, 1324}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1323, 1430}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1324, 1325}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1324, 1378}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1325, 1326}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1325, 1352}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1326, 1327}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1326, 1340}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1327, 1328}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1327, 1334}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1328, 1329}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1328, 1332}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1329, 1330}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1329, 1331}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1332, 1333}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1334, 1335}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1334, 1338}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1335, 1336}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1335, 1337}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1338, 1339}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1340, 1341}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1340, 1346}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1341, 1342}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1341, 1344}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1342, 1343}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1344, 1345}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1346, 1347}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1346, 1350}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1347, 1348}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1347, 1349}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1350, 1351}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1352, 1353}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1352, 1366}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1353, 1354}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1353, 1360}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1354, 1355}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1354, 1358}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1355, 1356}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1355, 1357}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1358, 1359}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1360, 1361}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1360, 1364}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1361, 1362}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1361, 1363}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1364, 1365}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1366, 1367}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1366, 1372}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1367, 1368}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1367, 1370}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1368, 1369}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1370, 1371}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1372, 1373}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1372, 1376}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1373, 1374}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1373, 1375}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1376, 1377}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1378, 1379}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1378, 1404}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1379, 1380}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1379, 1392}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1380, 1381}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1380, 1386}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1381, 1382}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1381, 1384}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1382, 1383}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1384, 1385}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1386, 1387}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1386, 1390}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1387, 1388}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1387, 1389}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1390, 1391}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1392, 1393}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1392, 1398}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1393, 1394}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1393, 1396}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1394, 1395}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1396, 1397}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1398, 1399}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1398, 1402}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1399, 1400}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1399, 1401}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1402, 1403}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1404, 1405}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1404, 1418}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1405, 1406}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1405, 1412}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1406, 1407}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1406, 1410}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1407, 1408}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1407, 1409}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1410, 1411}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1412, 1413}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1412, 1416}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1413, 1414}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1413, 1415}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1416, 1417}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1418, 1419}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1418, 1424}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1419, 1420}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1419, 1422}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1420, 1421}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1422, 1423}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1424, 1425}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1424, 1428}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1425, 1426}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1425, 1427}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1428, 1429}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1430, 1431}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1430, 1483}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1431, 1432}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1431, 1457}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1432, 1433}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1432, 1445}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1433, 1434}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1433, 1439}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1434, 1435}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1434, 1437}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1435, 1436}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1437, 1438}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1439, 1440}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1439, 1442}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1440, 1441}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1442, 1443}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1442, 1444}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1445, 1446}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1445, 1452}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1446, 1447}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1446, 1450}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1447, 1448}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1447, 1449}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1450, 1451}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1452, 1453}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1452, 1455}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1453, 1454}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1455, 1456}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1457, 1458}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1457, 1470}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1458, 1459}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1458, 1464}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1459, 1460}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1459, 1462}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1460, 1461}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1462, 1463}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1464, 1465}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1464, 1467}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1465, 1466}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1467, 1468}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1467, 1469}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1470, 1471}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1470, 1477}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1471, 1472}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1471, 1475}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1472, 1473}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1472, 1474}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1475, 1476}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1477, 1478}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1477, 1480}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1478, 1479}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1480, 1481}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1480, 1482}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1483, 1484}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1483, 1510}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1484, 1485}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1484, 1498}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1485, 1486}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1485, 1492}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1486, 1487}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1486, 1490}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1487, 1488}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1487, 1489}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1490, 1491}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1492, 1493}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1492, 1495}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1493, 1494}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1495, 1496}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1495, 1497}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1498, 1499}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1498, 1505}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1499, 1500}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1499, 1503}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1500, 1501}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1500, 1502}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1503, 1504}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1505, 1506}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1505, 1508}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1506, 1507}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1508, 1509}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1510, 1511}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1510, 1523}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1511, 1512}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1511, 1517}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1512, 1513}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1512, 1515}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1513, 1514}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1515, 1516}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1517, 1518}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1517, 1520}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1518, 1519}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1520, 1521}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1520, 1522}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1523, 1524}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1523, 1530}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1524, 1525}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1524, 1528}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1525, 1526}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1525, 1527}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1528, 1529}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1530, 1531}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1530, 1533}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1531, 1532}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1533, 1534}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1535, 1536}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1535, 1642}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1536, 1537}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1536, 1590}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1537, 1538}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1537, 1564}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1538, 1539}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1538, 1552}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1539, 1540}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1539, 1546}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1540, 1541}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1540, 1544}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1541, 1542}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1541, 1543}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1544, 1545}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1546, 1547}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1546, 1550}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1547, 1548}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1547, 1549}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1550, 1551}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1552, 1553}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1552, 1558}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1553, 1554}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1553, 1556}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1554, 1555}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1556, 1557}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1558, 1559}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1558, 1562}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1559, 1560}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1559, 1561}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1562, 1563}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1564, 1565}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1564, 1578}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1565, 1566}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1565, 1572}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1566, 1567}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1566, 1570}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1567, 1568}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1567, 1569}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1570, 1571}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1572, 1573}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1572, 1576}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1573, 1574}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1573, 1575}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1576, 1577}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1578, 1579}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1578, 1584}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1579, 1580}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1579, 1582}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1580, 1581}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1582, 1583}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1584, 1585}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1584, 1588}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1585, 1586}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1585, 1587}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1588, 1589}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1590, 1591}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1590, 1616}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1591, 1592}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1591, 1604}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1592, 1593}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1592, 1598}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1593, 1594}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1593, 1596}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1594, 1595}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1596, 1597}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1598, 1599}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1598, 1602}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1599, 1600}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1599, 1601}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1602, 1603}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1604, 1605}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1604, 1610}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1605, 1606}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1605, 1608}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1606, 1607}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1608, 1609}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1610, 1611}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1610, 1614}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1611, 1612}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1611, 1613}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1614, 1615}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1616, 1617}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1616, 1630}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1617, 1618}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1617, 1624}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1618, 1619}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1618, 1622}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1619, 1620}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1619, 1621}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1622, 1623}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1624, 1625}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1624, 1628}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1625, 1626}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1625, 1627}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1628, 1629}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1630, 1631}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1630, 1636}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1631, 1632}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1631, 1634}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1632, 1633}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1634, 1635}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1636, 1637}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1636, 1640}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1637, 1638}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1637, 1639}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1640, 1641}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1642, 1643}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1642, 1695}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1643, 1644}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1643, 1669}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1644, 1645}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1644, 1657}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1645, 1646}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1645, 1651}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1646, 1647}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1646, 1649}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1647, 1648}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1649, 1650}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1651, 1652}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1651, 1654}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1652, 1653}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1654, 1655}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1654, 1656}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1657, 1658}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1657, 1664}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1658, 1659}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1658, 1662}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1659, 1660}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1659, 1661}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1662, 1663}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1664, 1665}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1664, 1667}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1665, 1666}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1667, 1668}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1669, 1670}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1669, 1682}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1670, 1671}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1670, 1676}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1671, 1672}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1671, 1674}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1672, 1673}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1674, 1675}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1676, 1677}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1676, 1679}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1677, 1678}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1679, 1680}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1679, 1681}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1682, 1683}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1682, 1689}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1683, 1684}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1683, 1687}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1684, 1685}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1684, 1686}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1687, 1688}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1689, 1690}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1689, 1692}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1690, 1691}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1692, 1693}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1692, 1694}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1695, 1696}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1695, 1722}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1696, 1697}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1696, 1710}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1697, 1698}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1697, 1704}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1698, 1699}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1698, 1702}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1699, 1700}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1699, 1701}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1702, 1703}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1704, 1705}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1704, 1707}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1705, 1706}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1707, 1708}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1707, 1709}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1710, 1711}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1710, 1717}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1711, 1712}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1711, 1715}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1712, 1713}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1712, 1714}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1715, 1716}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1717, 1718}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1717, 1720}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1718, 1719}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1720, 1721}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1722, 1723}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1722, 1735}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1723, 1724}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1723, 1729}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1724, 1725}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1724, 1727}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1725, 1726}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1727, 1728}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1729, 1730}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1729, 1732}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1730, 1731}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1732, 1733}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1732, 1734}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1735, 1736}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1735, 1742}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1736, 1737}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1736, 1740}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1737, 1738}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1737, 1739}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1740, 1741}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1742, 1743}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1742, 1745}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1743, 1744}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1745, 1746}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1745, 1747}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1748, 1749}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1748, 2185}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1749, 1750}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1749, 2176}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1750, 1751}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1750, 1963}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1751, 1752}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1751, 1858}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1752, 1753}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1752, 1806}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1753, 1754}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1753, 1780}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1754, 1755}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1754, 1768}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1755, 1756}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1755, 1762}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1756, 1757}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1756, 1760}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1757, 1758}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1757, 1759}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1760, 1761}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1762, 1763}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1762, 1766}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1763, 1764}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1763, 1765}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1766, 1767}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1768, 1769}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1768, 1774}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1769, 1770}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1769, 1772}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1770, 1771}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1772, 1773}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1774, 1775}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1774, 1778}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1775, 1776}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1775, 1777}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1778, 1779}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1780, 1781}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1780, 1794}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1781, 1782}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1781, 1788}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1782, 1783}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1782, 1786}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1783, 1784}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1783, 1785}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1786, 1787}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1788, 1789}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1788, 1792}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1789, 1790}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1789, 1791}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1792, 1793}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1794, 1795}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1794, 1800}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1795, 1796}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1795, 1798}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1796, 1797}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1798, 1799}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1800, 1801}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1800, 1804}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1801, 1802}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1801, 1803}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1804, 1805}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1806, 1807}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1806, 1832}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1807, 1808}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1807, 1820}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1808, 1809}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1808, 1814}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1809, 1810}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1809, 1812}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1810, 1811}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1812, 1813}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1814, 1815}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1814, 1818}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1815, 1816}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1815, 1817}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1818, 1819}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1820, 1821}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1820, 1826}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1821, 1822}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1821, 1824}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1822, 1823}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1824, 1825}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1826, 1827}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1826, 1830}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1827, 1828}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1827, 1829}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1830, 1831}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1832, 1833}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1832, 1846}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1833, 1834}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1833, 1840}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1834, 1835}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1834, 1838}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1835, 1836}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1835, 1837}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1838, 1839}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1840, 1841}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1840, 1844}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1841, 1842}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1841, 1843}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1844, 1845}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1846, 1847}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1846, 1852}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1847, 1848}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1847, 1850}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1848, 1849}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1850, 1851}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1852, 1853}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1852, 1856}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1853, 1854}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1853, 1855}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1856, 1857}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1858, 1859}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1858, 1911}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1859, 1860}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1859, 1885}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1860, 1861}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1860, 1873}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1861, 1862}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1861, 1867}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1862, 1863}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1862, 1865}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1863, 1864}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1865, 1866}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1867, 1868}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1867, 1870}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1868, 1869}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1870, 1871}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1870, 1872}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1873, 1874}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1873, 1880}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1874, 1875}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1874, 1878}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1875, 1876}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1875, 1877}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1878, 1879}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1880, 1881}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1880, 1883}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1881, 1882}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1883, 1884}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1885, 1886}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1885, 1898}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1886, 1887}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1886, 1892}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1887, 1888}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1887, 1890}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1888, 1889}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1890, 1891}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1892, 1893}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1892, 1895}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1893, 1894}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1895, 1896}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1895, 1897}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1898, 1899}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1898, 1905}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1899, 1900}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1899, 1903}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1900, 1901}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1900, 1902}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1903, 1904}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1905, 1906}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1905, 1908}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1906, 1907}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1908, 1909}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1908, 1910}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1911, 1912}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1911, 1938}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1912, 1913}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1912, 1926}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1913, 1914}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1913, 1920}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1914, 1915}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1914, 1918}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1915, 1916}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1915, 1917}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1918, 1919}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1920, 1921}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1920, 1923}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1921, 1922}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1923, 1924}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1923, 1925}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1926, 1927}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1926, 1933}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1927, 1928}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1927, 1931}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1928, 1929}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1928, 1930}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1931, 1932}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1933, 1934}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1933, 1936}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1934, 1935}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1936, 1937}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1938, 1939}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1938, 1951}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1939, 1940}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1939, 1945}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1940, 1941}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1940, 1943}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1941, 1942}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1943, 1944}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1945, 1946}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1945, 1948}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1946, 1947}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1948, 1949}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1948, 1950}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1951, 1952}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1951, 1958}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1952, 1953}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1952, 1956}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1953, 1954}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1953, 1955}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1956, 1957}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1958, 1959}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1958, 1961}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1959, 1960}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1961, 1962}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1963, 1964}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1963, 2070}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1964, 1965}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1964, 2018}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1965, 1966}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1965, 1992}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1966, 1967}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1966, 1980}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1967, 1968}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1967, 1974}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1968, 1969}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1968, 1972}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1969, 1970}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1969, 1971}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1972, 1973}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1974, 1975}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1974, 1978}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1975, 1976}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1975, 1977}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1978, 1979}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1980, 1981}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1980, 1986}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1981, 1982}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1981, 1984}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1982, 1983}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1984, 1985}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1986, 1987}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1986, 1990}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1987, 1988}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1987, 1989}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1990, 1991}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1992, 1993}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1992, 2006}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1993, 1994}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1993, 2000}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1994, 1995}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1994, 1998}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1995, 1996}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1995, 1997}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{1998, 1999}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2000, 2001}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2000, 2004}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2001, 2002}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2001, 2003}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2004, 2005}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2006, 2007}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2006, 2012}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2007, 2008}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2007, 2010}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2008, 2009}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2010, 2011}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2012, 2013}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2012, 2016}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2013, 2014}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2013, 2015}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2016, 2017}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2018, 2019}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2018, 2044}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2019, 2020}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2019, 2032}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2020, 2021}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2020, 2026}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2021, 2022}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2021, 2024}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2022, 2023}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2024, 2025}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2026, 2027}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2026, 2030}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2027, 2028}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2027, 2029}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2030, 2031}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2032, 2033}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2032, 2038}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2033, 2034}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2033, 2036}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2034, 2035}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2036, 2037}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2038, 2039}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2038, 2042}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2039, 2040}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2039, 2041}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2042, 2043}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2044, 2045}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2044, 2058}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2045, 2046}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2045, 2052}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2046, 2047}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2046, 2050}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2047, 2048}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2047, 2049}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2050, 2051}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2052, 2053}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2052, 2056}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2053, 2054}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2053, 2055}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2056, 2057}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2058, 2059}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2058, 2064}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2059, 2060}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2059, 2062}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2060, 2061}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2062, 2063}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2064, 2065}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2064, 2068}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2065, 2066}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2065, 2067}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2068, 2069}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2070, 2071}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2070, 2123}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2071, 2072}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2071, 2097}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2072, 2073}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2072, 2085}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2073, 2074}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2073, 2079}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2074, 2075}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2074, 2077}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2075, 2076}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2077, 2078}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2079, 2080}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2079, 2082}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2080, 2081}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2082, 2083}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2082, 2084}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2085, 2086}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2085, 2092}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2086, 2087}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2086, 2090}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2087, 2088}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2087, 2089}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2090, 2091}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2092, 2093}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2092, 2095}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2093, 2094}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2095, 2096}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2097, 2098}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2097, 2110}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2098, 2099}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2098, 2104}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2099, 2100}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2099, 2102}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2100, 2101}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2102, 2103}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2104, 2105}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2104, 2107}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2105, 2106}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2107, 2108}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2107, 2109}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2110, 2111}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2110, 2117}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2111, 2112}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2111, 2115}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2112, 2113}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2112, 2114}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2115, 2116}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2117, 2118}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2117, 2120}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2118, 2119}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2120, 2121}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2120, 2122}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2123, 2124}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2123, 2150}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2124, 2125}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2124, 2138}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2125, 2126}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2125, 2132}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2126, 2127}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2126, 2130}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2127, 2128}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2127, 2129}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2130, 2131}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2132, 2133}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2132, 2135}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2133, 2134}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2135, 2136}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2135, 2137}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2138, 2139}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2138, 2145}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2139, 2140}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2139, 2143}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2140, 2141}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2140, 2142}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2143, 2144}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2145, 2146}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2145, 2148}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2146, 2147}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2148, 2149}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2150, 2151}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2150, 2163}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2151, 2152}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2151, 2157}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2152, 2153}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2152, 2155}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2153, 2154}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2155, 2156}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2157, 2158}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2157, 2160}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2158, 2159}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2160, 2161}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2160, 2162}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2163, 2164}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2163, 2170}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2164, 2165}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2164, 2168}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2165, 2166}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2165, 2167}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2168, 2169}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2170, 2171}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2170, 2173}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2171, 2172}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2173, 2174}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2173, 2175}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2176, 2177}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2177, 2178}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2178, 2179}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2179, 2180}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2180, 2181}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2181, 2182}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2182, 2183}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2183, 2184}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2185, 2186}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2185, 2195}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2186, 2187}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2187, 2188}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2188, 2189}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2189, 2190}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2190, 2191}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2191, 2192}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2192, 2193}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2193, 2194}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2195, 2196}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2195, 2408}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2196, 2197}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2196, 2303}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2197, 2198}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2197, 2251}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2198, 2199}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2198, 2225}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2199, 2200}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2199, 2213}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2200, 2201}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2200, 2207}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2201, 2202}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2201, 2205}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2202, 2203}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2202, 2204}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2205, 2206}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2207, 2208}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2207, 2211}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2208, 2209}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2208, 2210}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2211, 2212}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2213, 2214}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2213, 2219}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2214, 2215}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2214, 2217}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2215, 2216}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2217, 2218}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2219, 2220}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2219, 2223}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2220, 2221}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2220, 2222}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2223, 2224}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2225, 2226}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2225, 2239}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2226, 2227}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2226, 2233}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2227, 2228}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2227, 2231}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2228, 2229}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2228, 2230}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2231, 2232}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2233, 2234}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2233, 2237}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2234, 2235}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2234, 2236}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2237, 2238}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2239, 2240}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2239, 2245}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2240, 2241}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2240, 2243}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2241, 2242}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2243, 2244}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2245, 2246}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2245, 2249}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2246, 2247}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2246, 2248}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2249, 2250}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2251, 2252}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2251, 2277}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2252, 2253}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2252, 2265}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2253, 2254}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2253, 2259}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2254, 2255}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2254, 2257}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2255, 2256}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2257, 2258}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2259, 2260}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2259, 2263}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2260, 2261}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2260, 2262}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2263, 2264}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2265, 2266}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2265, 2271}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2266, 2267}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2266, 2269}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2267, 2268}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2269, 2270}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2271, 2272}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2271, 2275}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2272, 2273}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2272, 2274}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2275, 2276}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2277, 2278}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2277, 2291}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2278, 2279}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2278, 2285}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2279, 2280}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2279, 2283}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2280, 2281}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2280, 2282}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2283, 2284}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2285, 2286}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2285, 2289}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2286, 2287}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2286, 2288}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2289, 2290}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2291, 2292}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2291, 2297}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2292, 2293}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2292, 2295}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2293, 2294}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2295, 2296}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2297, 2298}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2297, 2301}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2298, 2299}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2298, 2300}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2301, 2302}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2303, 2304}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2303, 2356}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2304, 2305}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2304, 2330}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2305, 2306}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2305, 2318}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2306, 2307}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2306, 2312}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2307, 2308}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2307, 2310}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2308, 2309}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2310, 2311}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2312, 2313}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2312, 2315}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2313, 2314}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2315, 2316}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2315, 2317}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2318, 2319}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2318, 2325}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2319, 2320}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2319, 2323}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2320, 2321}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2320, 2322}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2323, 2324}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2325, 2326}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2325, 2328}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2326, 2327}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2328, 2329}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2330, 2331}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2330, 2343}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2331, 2332}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2331, 2337}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2332, 2333}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2332, 2335}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2333, 2334}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2335, 2336}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2337, 2338}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2337, 2340}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2338, 2339}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2340, 2341}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2340, 2342}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2343, 2344}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2343, 2350}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2344, 2345}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2344, 2348}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2345, 2346}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2345, 2347}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2348, 2349}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2350, 2351}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2350, 2353}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2351, 2352}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2353, 2354}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2353, 2355}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2356, 2357}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2356, 2383}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2357, 2358}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2357, 2371}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2358, 2359}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2358, 2365}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2359, 2360}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2359, 2363}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2360, 2361}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2360, 2362}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2363, 2364}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2365, 2366}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2365, 2368}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2366, 2367}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2368, 2369}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2368, 2370}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2371, 2372}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2371, 2378}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2372, 2373}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2372, 2376}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2373, 2374}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2373, 2375}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2376, 2377}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2378, 2379}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2378, 2381}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2379, 2380}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2381, 2382}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2383, 2384}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2383, 2396}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2384, 2385}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2384, 2390}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2385, 2386}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2385, 2388}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2386, 2387}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2388, 2389}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2390, 2391}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2390, 2393}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2391, 2392}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2393, 2394}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2393, 2395}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2396, 2397}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2396, 2403}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2397, 2398}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2397, 2401}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2398, 2399}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2398, 2400}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2401, 2402}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2403, 2404}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2403, 2406}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2404, 2405}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2406, 2407}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2408, 2409}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2408, 2515}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2409, 2410}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2409, 2463}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2410, 2411}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2410, 2437}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2411, 2412}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2411, 2425}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2412, 2413}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2412, 2419}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2413, 2414}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2413, 2417}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2414, 2415}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2414, 2416}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2417, 2418}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2419, 2420}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2419, 2423}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2420, 2421}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2420, 2422}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2423, 2424}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2425, 2426}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2425, 2431}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2426, 2427}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2426, 2429}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2427, 2428}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2429, 2430}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2431, 2432}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2431, 2435}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2432, 2433}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2432, 2434}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2435, 2436}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2437, 2438}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2437, 2451}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2438, 2439}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2438, 2445}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2439, 2440}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2439, 2443}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2440, 2441}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2440, 2442}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2443, 2444}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2445, 2446}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2445, 2449}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2446, 2447}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2446, 2448}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2449, 2450}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2451, 2452}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2451, 2457}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2452, 2453}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2452, 2455}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2453, 2454}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2455, 2456}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2457, 2458}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2457, 2461}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2458, 2459}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2458, 2460}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2461, 2462}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2463, 2464}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2463, 2489}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2464, 2465}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2464, 2477}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2465, 2466}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2465, 2471}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2466, 2467}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2466, 2469}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2467, 2468}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2469, 2470}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2471, 2472}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2471, 2475}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2472, 2473}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2472, 2474}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2475, 2476}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2477, 2478}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2477, 2483}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2478, 2479}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2478, 2481}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2479, 2480}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2481, 2482}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2483, 2484}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2483, 2487}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2484, 2485}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2484, 2486}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2487, 2488}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2489, 2490}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2489, 2503}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2490, 2491}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2490, 2497}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2491, 2492}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2491, 2495}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2492, 2493}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2492, 2494}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2495, 2496}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2497, 2498}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2497, 2501}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2498, 2499}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2498, 2500}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2501, 2502}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2503, 2504}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2503, 2509}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2504, 2505}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2504, 2507}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2505, 2506}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2507, 2508}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2509, 2510}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2509, 2513}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2510, 2511}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2510, 2512}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2513, 2514}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2515, 2516}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2515, 2568}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2516, 2517}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2516, 2542}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2517, 2518}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2517, 2530}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2518, 2519}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2518, 2524}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2519, 2520}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2519, 2522}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2520, 2521}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2522, 2523}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2524, 2525}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2524, 2527}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2525, 2526}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2527, 2528}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2527, 2529}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2530, 2531}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2530, 2537}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2531, 2532}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2531, 2535}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2532, 2533}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2532, 2534}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2535, 2536}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2537, 2538}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2537, 2540}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2538, 2539}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2540, 2541}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2542, 2543}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2542, 2555}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2543, 2544}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2543, 2549}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2544, 2545}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2544, 2547}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2545, 2546}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2547, 2548}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2549, 2550}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2549, 2552}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2550, 2551}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2552, 2553}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2552, 2554}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2555, 2556}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2555, 2562}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2556, 2557}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2556, 2560}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2557, 2558}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2557, 2559}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2560, 2561}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2562, 2563}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2562, 2565}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2563, 2564}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2565, 2566}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2565, 2567}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2568, 2569}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2568, 2595}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2569, 2570}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2569, 2583}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2570, 2571}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2570, 2577}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2571, 2572}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2571, 2575}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2572, 2573}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2572, 2574}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2575, 2576}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2577, 2578}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2577, 2580}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2578, 2579}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2580, 2581}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2580, 2582}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2583, 2584}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2583, 2590}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2584, 2585}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2584, 2588}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2585, 2586}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2585, 2587}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2588, 2589}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2590, 2591}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2590, 2593}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2591, 2592}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2593, 2594}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2595, 2596}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2595, 2608}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2596, 2597}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2596, 2602}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2597, 2598}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2597, 2600}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2598, 2599}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2600, 2601}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2602, 2603}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2602, 2605}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2603, 2604}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2605, 2606}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2605, 2607}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2608, 2609}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2608, 2615}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2609, 2610}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2609, 2613}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2610, 2611}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2610, 2612}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2613, 2614}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2615, 2616}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2615, 2618}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2616, 2617}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2618, 2619}, 0.09366677256131137]}, 
           {Arrowheads[0.], ArrowBox[{2618, 2620}, 0.09366677256131137]}}, 
          {Hue[0.625, 0.5, 0.7], 
           {RGBColor[1, 0, 0], PointBox[1]}, 
           {RGBColor[0, 1, 0], PointBox[2]}, 
           {RGBColor[0, 0, 1], PointBox[3]}, 
           {RGBColor[0, 0, 1], PointBox[4]}, 
           {RGBColor[0, 1, 0], PointBox[5]}, 
           {RGBColor[1, 0, 0], PointBox[6]}, 
           {RGBColor[1, 0, 0], PointBox[7]}, 
           {RGBColor[0, 1, 0], PointBox[8]}, 
           {RGBColor[1, 0, 0], PointBox[9]}, 
           {RGBColor[0, 1, 0], PointBox[10]}, 
           {RGBColor[1, 0, 0], PointBox[11]}, 
           {RGBColor[0, 1, 0], PointBox[12]}, 
           {RGBColor[1, 1, 0], PointBox[13]}, 
           {RGBColor[1, 1, 0], PointBox[14]}, 
           {RGBColor[0, 1, 0], PointBox[15]}, 
           {RGBColor[1, 1, 0], PointBox[16]}, 
           {RGBColor[1, 0, 0], PointBox[17]}, 
           {RGBColor[0, 1, 0], PointBox[18]}, 
           {RGBColor[1, 1, 0], PointBox[19]}, 
           {RGBColor[0, 1, 0], PointBox[20]}, 
           {RGBColor[1, 1, 0], PointBox[21]}, 
           {RGBColor[1, 1, 0], PointBox[22]}, 
           {RGBColor[1, 0, 0], PointBox[23]}, 
           {RGBColor[0, 1, 0], PointBox[24]}, 
           {RGBColor[1, 1, 0], PointBox[25]}, 
           {RGBColor[1, 1, 0], PointBox[26]}, 
           {RGBColor[0, 1, 0], PointBox[27]}, 
           {RGBColor[0, 1, 0], PointBox[28]}, 
           {RGBColor[1, 0, 0], PointBox[29]}, 
           {RGBColor[0, 1, 0], PointBox[30]}, 
           {RGBColor[1, 1, 0], PointBox[31]}, 
           {RGBColor[1, 1, 0], PointBox[32]}, 
           {RGBColor[0, 1, 0], PointBox[33]}, 
           {RGBColor[1, 1, 0], PointBox[34]}, 
           {RGBColor[1, 0, 0], PointBox[35]}, 
           {RGBColor[0, 1, 0], PointBox[36]}, 
           {RGBColor[1, 0, 0], PointBox[37]}, 
           {RGBColor[0, 1, 0], PointBox[38]}, 
           {RGBColor[1, 1, 0], PointBox[39]}, 
           {RGBColor[1, 1, 0], PointBox[40]}, 
           {RGBColor[0, 1, 0], PointBox[41]}, 
           {RGBColor[1, 1, 0], PointBox[42]}, 
           {RGBColor[1, 0, 0], PointBox[43]}, 
           {RGBColor[0, 1, 0], PointBox[44]}, 
           {RGBColor[1, 1, 0], PointBox[45]}, 
           {RGBColor[0, 1, 0], PointBox[46]}, 
           {RGBColor[1, 1, 0], PointBox[47]}, 
           {RGBColor[0, 1, 0], PointBox[48]}, 
           {RGBColor[1, 0, 0], PointBox[49]}, 
           {RGBColor[0, 1, 0], PointBox[50]}, 
           {RGBColor[1, 1, 0], PointBox[51]}, 
           {RGBColor[1, 1, 0], PointBox[52]}, 
           {RGBColor[0, 1, 0], PointBox[53]}, 
           {RGBColor[1, 1, 0], PointBox[54]}, 
           {RGBColor[1, 0, 0], PointBox[55]}, 
           {RGBColor[0, 1, 0], PointBox[56]}, 
           {RGBColor[1, 1, 0], PointBox[57]}, 
           {RGBColor[0, 1, 0], PointBox[58]}, 
           {RGBColor[1, 1, 0], PointBox[59]}, 
           {RGBColor[1, 1, 0], PointBox[60]}, 
           {RGBColor[1, 0, 0], PointBox[61]}, 
           {RGBColor[0, 1, 0], PointBox[62]}, 
           {RGBColor[1, 0, 0], PointBox[63]}, 
           {RGBColor[0, 1, 0], PointBox[64]}, 
           {RGBColor[1, 1, 0], PointBox[65]}, 
           {RGBColor[1, 1, 0], PointBox[66]}, 
           {RGBColor[0, 1, 0], PointBox[67]}, 
           {RGBColor[1, 1, 0], PointBox[68]}, 
           {RGBColor[1, 0, 0], PointBox[69]}, 
           {RGBColor[0, 1, 0], PointBox[70]}, 
           {RGBColor[1, 1, 0], PointBox[71]}, 
           {RGBColor[0, 1, 0], PointBox[72]}, 
           {RGBColor[1, 1, 0], PointBox[73]}, 
           {RGBColor[1, 1, 0], PointBox[74]}, 
           {RGBColor[1, 0, 0], PointBox[75]}, 
           {RGBColor[0, 1, 0], PointBox[76]}, 
           {RGBColor[1, 1, 0], PointBox[77]}, 
           {RGBColor[1, 1, 0], PointBox[78]}, 
           {RGBColor[0, 1, 0], PointBox[79]}, 
           {RGBColor[0, 1, 0], PointBox[80]}, 
           {RGBColor[1, 0, 0], PointBox[81]}, 
           {RGBColor[0, 1, 0], PointBox[82]}, 
           {RGBColor[1, 1, 0], PointBox[83]}, 
           {RGBColor[1, 1, 0], PointBox[84]}, 
           {RGBColor[0, 1, 0], PointBox[85]}, 
           {RGBColor[0, 1, 0], PointBox[86]}, 
           {RGBColor[1, 0, 0], PointBox[87]}, 
           {RGBColor[0, 1, 0], PointBox[88]}, 
           {RGBColor[1, 0, 0], PointBox[89]}, 
           {RGBColor[0, 1, 0], PointBox[90]}, 
           {RGBColor[1, 1, 0], PointBox[91]}, 
           {RGBColor[1, 1, 0], PointBox[92]}, 
           {RGBColor[0, 1, 0], PointBox[93]}, 
           {RGBColor[1, 1, 0], PointBox[94]}, 
           {RGBColor[1, 0, 0], PointBox[95]}, 
           {RGBColor[0, 1, 0], PointBox[96]}, 
           {RGBColor[1, 1, 0], PointBox[97]}, 
           {RGBColor[0, 1, 0], PointBox[98]}, 
           {RGBColor[1, 1, 0], PointBox[99]}, 
           {RGBColor[1, 1, 0], PointBox[100]}, 
           {RGBColor[1, 0, 0], PointBox[101]}, 
           {RGBColor[0, 1, 0], PointBox[102]}, 
           {RGBColor[1, 1, 0], PointBox[103]}, 
           {RGBColor[1, 1, 0], PointBox[104]}, 
           {RGBColor[0, 1, 0], PointBox[105]}, 
           {RGBColor[0, 1, 0], PointBox[106]}, 
           {RGBColor[1, 0, 0], PointBox[107]}, 
           {RGBColor[0, 1, 0], PointBox[108]}, 
           {RGBColor[1, 1, 0], PointBox[109]}, 
           {RGBColor[1, 1, 0], PointBox[110]}, 
           {RGBColor[0, 1, 0], PointBox[111]}, 
           {RGBColor[1, 1, 0], PointBox[112]}, 
           {RGBColor[1, 0, 0], PointBox[113]}, 
           {RGBColor[0, 1, 0], PointBox[114]}, 
           {RGBColor[1, 0, 0], PointBox[115]}, 
           {RGBColor[0, 1, 0], PointBox[116]}, 
           {RGBColor[1, 0, 0], PointBox[117]}, 
           {RGBColor[0, 1, 0], PointBox[118]}, 
           {RGBColor[1, 1, 0], PointBox[119]}, 
           {RGBColor[1, 0, 0], PointBox[120]}, 
           {RGBColor[0, 1, 0], PointBox[121]}, 
           {RGBColor[1, 1, 0], PointBox[122]}, 
           {RGBColor[1, 0, 0], PointBox[123]}, 
           {RGBColor[0, 1, 0], PointBox[124]}, 
           {RGBColor[0, 1, 0], PointBox[125]}, 
           {RGBColor[1, 0, 0], PointBox[126]}, 
           {RGBColor[1, 1, 0], PointBox[127]}, 
           {RGBColor[1, 0, 0], PointBox[128]}, 
           {RGBColor[0, 1, 0], PointBox[129]}, 
           {RGBColor[1, 0, 0], PointBox[130]}, 
           {RGBColor[1, 1, 0], PointBox[131]}, 
           {RGBColor[1, 0, 0], PointBox[132]}, 
           {RGBColor[0, 1, 0], PointBox[133]}, 
           {RGBColor[0, 1, 0], PointBox[134]}, 
           {RGBColor[1, 0, 0], PointBox[135]}, 
           {RGBColor[0, 1, 0], PointBox[136]}, 
           {RGBColor[1, 1, 0], PointBox[137]}, 
           {RGBColor[1, 0, 0], PointBox[138]}, 
           {RGBColor[0, 1, 0], PointBox[139]}, 
           {RGBColor[1, 1, 0], PointBox[140]}, 
           {RGBColor[1, 0, 0], PointBox[141]}, 
           {RGBColor[0, 1, 0], PointBox[142]}, 
           {RGBColor[1, 0, 0], PointBox[143]}, 
           {RGBColor[0, 1, 0], PointBox[144]}, 
           {RGBColor[1, 1, 0], PointBox[145]}, 
           {RGBColor[1, 0, 0], PointBox[146]}, 
           {RGBColor[0, 1, 0], PointBox[147]}, 
           {RGBColor[1, 1, 0], PointBox[148]}, 
           {RGBColor[1, 0, 0], PointBox[149]}, 
           {RGBColor[0, 1, 0], PointBox[150]}, 
           {RGBColor[0, 1, 0], PointBox[151]}, 
           {RGBColor[1, 0, 0], PointBox[152]}, 
           {RGBColor[0, 1, 0], PointBox[153]}, 
           {RGBColor[1, 0, 0], PointBox[154]}, 
           {RGBColor[0, 1, 0], PointBox[155]}, 
           {RGBColor[1, 0, 0], PointBox[156]}, 
           {RGBColor[1, 1, 0], PointBox[157]}, 
           {RGBColor[1, 0, 0], PointBox[158]}, 
           {RGBColor[0, 1, 0], PointBox[159]}, 
           {RGBColor[1, 1, 0], PointBox[160]}, 
           {RGBColor[1, 0, 0], PointBox[161]}, 
           {RGBColor[0, 1, 0], PointBox[162]}, 
           {RGBColor[0, 1, 0], PointBox[163]}, 
           {RGBColor[1, 0, 0], PointBox[164]}, 
           {RGBColor[1, 1, 0], PointBox[165]}, 
           {RGBColor[1, 0, 0], PointBox[166]}, 
           {RGBColor[0, 1, 0], PointBox[167]}, 
           {RGBColor[1, 0, 0], PointBox[168]}, 
           {RGBColor[0, 1, 0], PointBox[169]}, 
           {RGBColor[1, 0, 0], PointBox[170]}, 
           {RGBColor[1, 1, 0], PointBox[171]}, 
           {RGBColor[1, 0, 0], PointBox[172]}, 
           {RGBColor[0, 1, 0], PointBox[173]}, 
           {RGBColor[1, 1, 0], PointBox[174]}, 
           {RGBColor[1, 0, 0], PointBox[175]}, 
           {RGBColor[0, 1, 0], PointBox[176]}, 
           {RGBColor[0, 1, 0], PointBox[177]}, 
           {RGBColor[1, 0, 0], PointBox[178]}, 
           {RGBColor[1, 1, 0], PointBox[179]}, 
           {RGBColor[1, 0, 0], PointBox[180]}, 
           {RGBColor[0, 1, 0], PointBox[181]}, 
           {RGBColor[1, 0, 0], PointBox[182]}, 
           {RGBColor[1, 1, 0], PointBox[183]}, 
           {RGBColor[1, 0, 0], PointBox[184]}, 
           {RGBColor[0, 1, 0], PointBox[185]}, 
           {RGBColor[0, 1, 0], PointBox[186]}, 
           {RGBColor[1, 0, 0], PointBox[187]}, 
           {RGBColor[0, 1, 0], PointBox[188]}, 
           {RGBColor[1, 1, 0], PointBox[189]}, 
           {RGBColor[1, 0, 0], PointBox[190]}, 
           {RGBColor[0, 1, 0], PointBox[191]}, 
           {RGBColor[0, 1, 0], PointBox[192]}, 
           {RGBColor[1, 0, 0], PointBox[193]}, 
           {RGBColor[0, 1, 0], PointBox[194]}, 
           {RGBColor[1, 0, 0], PointBox[195]}, 
           {RGBColor[0, 1, 0], PointBox[196]}, 
           {RGBColor[1, 1, 0], PointBox[197]}, 
           {RGBColor[1, 0, 0], PointBox[198]}, 
           {RGBColor[0, 1, 0], PointBox[199]}, 
           {RGBColor[1, 1, 0], PointBox[200]}, 
           {RGBColor[1, 0, 0], PointBox[201]}, 
           {RGBColor[0, 1, 0], PointBox[202]}, 
           {RGBColor[0, 1, 0], PointBox[203]}, 
           {RGBColor[1, 0, 0], PointBox[204]}, 
           {RGBColor[1, 1, 0], PointBox[205]}, 
           {RGBColor[1, 0, 0], PointBox[206]}, 
           {RGBColor[0, 1, 0], PointBox[207]}, 
           {RGBColor[1, 0, 0], PointBox[208]}, 
           {RGBColor[1, 1, 0], PointBox[209]}, 
           {RGBColor[1, 0, 0], PointBox[210]}, 
           {RGBColor[0, 1, 0], PointBox[211]}, 
           {RGBColor[0, 1, 0], PointBox[212]}, 
           {RGBColor[1, 0, 0], PointBox[213]}, 
           {RGBColor[0, 1, 0], PointBox[214]}, 
           {RGBColor[1, 1, 0], PointBox[215]}, 
           {RGBColor[1, 0, 0], PointBox[216]}, 
           {RGBColor[0, 1, 0], PointBox[217]}, 
           {RGBColor[1, 1, 0], PointBox[218]}, 
           {RGBColor[1, 0, 0], PointBox[219]}, 
           {RGBColor[1, 0, 0], PointBox[220]}, 
           {RGBColor[0, 1, 0], PointBox[221]}, 
           {RGBColor[1, 0, 0], PointBox[222]}, 
           {RGBColor[0, 1, 0], PointBox[223]}, 
           {RGBColor[1, 0, 0], PointBox[224]}, 
           {RGBColor[0, 1, 0], PointBox[225]}, 
           {RGBColor[1, 1, 0], PointBox[226]}, 
           {RGBColor[1, 1, 0], PointBox[227]}, 
           {RGBColor[0, 1, 0], PointBox[228]}, 
           {RGBColor[1, 1, 0], PointBox[229]}, 
           {RGBColor[1, 0, 0], PointBox[230]}, 
           {RGBColor[0, 1, 0], PointBox[231]}, 
           {RGBColor[1, 1, 0], PointBox[232]}, 
           {RGBColor[0, 1, 0], PointBox[233]}, 
           {RGBColor[1, 1, 0], PointBox[234]}, 
           {RGBColor[1, 1, 0], PointBox[235]}, 
           {RGBColor[1, 0, 0], PointBox[236]}, 
           {RGBColor[0, 1, 0], PointBox[237]}, 
           {RGBColor[1, 1, 0], PointBox[238]}, 
           {RGBColor[1, 1, 0], PointBox[239]}, 
           {RGBColor[0, 1, 0], PointBox[240]}, 
           {RGBColor[0, 1, 0], PointBox[241]}, 
           {RGBColor[1, 0, 0], PointBox[242]}, 
           {RGBColor[0, 1, 0], PointBox[243]}, 
           {RGBColor[1, 1, 0], PointBox[244]}, 
           {RGBColor[1, 1, 0], PointBox[245]}, 
           {RGBColor[0, 1, 0], PointBox[246]}, 
           {RGBColor[1, 1, 0], PointBox[247]}, 
           {RGBColor[1, 0, 0], PointBox[248]}, 
           {RGBColor[0, 1, 0], PointBox[249]}, 
           {RGBColor[1, 0, 0], PointBox[250]}, 
           {RGBColor[0, 1, 0], PointBox[251]}, 
           {RGBColor[1, 1, 0], PointBox[252]}, 
           {RGBColor[1, 1, 0], PointBox[253]}, 
           {RGBColor[0, 1, 0], PointBox[254]}, 
           {RGBColor[1, 1, 0], PointBox[255]}, 
           {RGBColor[1, 0, 0], PointBox[256]}, 
           {RGBColor[0, 1, 0], PointBox[257]}, 
           {RGBColor[1, 1, 0], PointBox[258]}, 
           {RGBColor[0, 1, 0], PointBox[259]}, 
           {RGBColor[1, 1, 0], PointBox[260]}, 
           {RGBColor[0, 1, 0], PointBox[261]}, 
           {RGBColor[1, 0, 0], PointBox[262]}, 
           {RGBColor[0, 1, 0], PointBox[263]}, 
           {RGBColor[1, 1, 0], PointBox[264]}, 
           {RGBColor[1, 1, 0], PointBox[265]}, 
           {RGBColor[0, 1, 0], PointBox[266]}, 
           {RGBColor[1, 1, 0], PointBox[267]}, 
           {RGBColor[1, 0, 0], PointBox[268]}, 
           {RGBColor[0, 1, 0], PointBox[269]}, 
           {RGBColor[1, 1, 0], PointBox[270]}, 
           {RGBColor[0, 1, 0], PointBox[271]}, 
           {RGBColor[1, 1, 0], PointBox[272]}, 
           {RGBColor[0, 1, 0], PointBox[273]}, 
           {RGBColor[1, 0, 0], PointBox[274]}, 
           {RGBColor[0, 1, 0], PointBox[275]}, 
           {RGBColor[1, 0, 0], PointBox[276]}, 
           {RGBColor[0, 1, 0], PointBox[277]}, 
           {RGBColor[1, 1, 0], PointBox[278]}, 
           {RGBColor[1, 1, 0], PointBox[279]}, 
           {RGBColor[0, 1, 0], PointBox[280]}, 
           {RGBColor[1, 1, 0], PointBox[281]}, 
           {RGBColor[1, 0, 0], PointBox[282]}, 
           {RGBColor[0, 1, 0], PointBox[283]}, 
           {RGBColor[1, 1, 0], PointBox[284]}, 
           {RGBColor[0, 1, 0], PointBox[285]}, 
           {RGBColor[1, 1, 0], PointBox[286]}, 
           {RGBColor[1, 1, 0], PointBox[287]}, 
           {RGBColor[1, 0, 0], PointBox[288]}, 
           {RGBColor[0, 1, 0], PointBox[289]}, 
           {RGBColor[1, 1, 0], PointBox[290]}, 
           {RGBColor[1, 1, 0], PointBox[291]}, 
           {RGBColor[0, 1, 0], PointBox[292]}, 
           {RGBColor[0, 1, 0], PointBox[293]}, 
           {RGBColor[1, 0, 0], PointBox[294]}, 
           {RGBColor[0, 1, 0], PointBox[295]}, 
           {RGBColor[1, 1, 0], PointBox[296]}, 
           {RGBColor[1, 1, 0], PointBox[297]}, 
           {RGBColor[0, 1, 0], PointBox[298]}, 
           {RGBColor[1, 1, 0], PointBox[299]}, 
           {RGBColor[1, 0, 0], PointBox[300]}, 
           {RGBColor[0, 1, 0], PointBox[301]}, 
           {RGBColor[1, 0, 0], PointBox[302]}, 
           {RGBColor[0, 1, 0], PointBox[303]}, 
           {RGBColor[1, 1, 0], PointBox[304]}, 
           {RGBColor[1, 1, 0], PointBox[305]}, 
           {RGBColor[0, 1, 0], PointBox[306]}, 
           {RGBColor[1, 1, 0], PointBox[307]}, 
           {RGBColor[1, 0, 0], PointBox[308]}, 
           {RGBColor[0, 1, 0], PointBox[309]}, 
           {RGBColor[1, 1, 0], PointBox[310]}, 
           {RGBColor[0, 1, 0], PointBox[311]}, 
           {RGBColor[1, 1, 0], PointBox[312]}, 
           {RGBColor[0, 1, 0], PointBox[313]}, 
           {RGBColor[1, 0, 0], PointBox[314]}, 
           {RGBColor[0, 1, 0], PointBox[315]}, 
           {RGBColor[1, 1, 0], PointBox[316]}, 
           {RGBColor[1, 1, 0], PointBox[317]}, 
           {RGBColor[0, 1, 0], PointBox[318]}, 
           {RGBColor[1, 1, 0], PointBox[319]}, 
           {RGBColor[1, 0, 0], PointBox[320]}, 
           {RGBColor[0, 1, 0], PointBox[321]}, 
           {RGBColor[1, 1, 0], PointBox[322]}, 
           {RGBColor[0, 1, 0], PointBox[323]}, 
           {RGBColor[1, 1, 0], PointBox[324]}, 
           {RGBColor[1, 1, 0], PointBox[325]}, 
           {RGBColor[1, 0, 0], PointBox[326]}, 
           {RGBColor[0, 1, 0], PointBox[327]}, 
           {RGBColor[1, 0, 0], PointBox[328]}, 
           {RGBColor[0, 1, 0], PointBox[329]}, 
           {RGBColor[1, 0, 0], PointBox[330]}, 
           {RGBColor[0, 1, 0], PointBox[331]}, 
           {RGBColor[1, 1, 0], PointBox[332]}, 
           {RGBColor[1, 0, 0], PointBox[333]}, 
           {RGBColor[0, 1, 0], PointBox[334]}, 
           {RGBColor[1, 1, 0], PointBox[335]}, 
           {RGBColor[1, 0, 0], PointBox[336]}, 
           {RGBColor[0, 1, 0], PointBox[337]}, 
           {RGBColor[0, 1, 0], PointBox[338]}, 
           {RGBColor[1, 0, 0], PointBox[339]}, 
           {RGBColor[1, 1, 0], PointBox[340]}, 
           {RGBColor[1, 0, 0], PointBox[341]}, 
           {RGBColor[0, 1, 0], PointBox[342]}, 
           {RGBColor[1, 0, 0], PointBox[343]}, 
           {RGBColor[1, 1, 0], PointBox[344]}, 
           {RGBColor[1, 0, 0], PointBox[345]}, 
           {RGBColor[0, 1, 0], PointBox[346]}, 
           {RGBColor[0, 1, 0], PointBox[347]}, 
           {RGBColor[1, 0, 0], PointBox[348]}, 
           {RGBColor[0, 1, 0], PointBox[349]}, 
           {RGBColor[1, 1, 0], PointBox[350]}, 
           {RGBColor[1, 0, 0], PointBox[351]}, 
           {RGBColor[0, 1, 0], PointBox[352]}, 
           {RGBColor[1, 1, 0], PointBox[353]}, 
           {RGBColor[1, 0, 0], PointBox[354]}, 
           {RGBColor[0, 1, 0], PointBox[355]}, 
           {RGBColor[1, 0, 0], PointBox[356]}, 
           {RGBColor[0, 1, 0], PointBox[357]}, 
           {RGBColor[1, 1, 0], PointBox[358]}, 
           {RGBColor[1, 0, 0], PointBox[359]}, 
           {RGBColor[0, 1, 0], PointBox[360]}, 
           {RGBColor[1, 1, 0], PointBox[361]}, 
           {RGBColor[1, 0, 0], PointBox[362]}, 
           {RGBColor[0, 1, 0], PointBox[363]}, 
           {RGBColor[0, 1, 0], PointBox[364]}, 
           {RGBColor[1, 0, 0], PointBox[365]}, 
           {RGBColor[0, 1, 0], PointBox[366]}, 
           {RGBColor[1, 0, 0], PointBox[367]}, 
           {RGBColor[0, 1, 0], PointBox[368]}, 
           {RGBColor[1, 0, 0], PointBox[369]}, 
           {RGBColor[1, 1, 0], PointBox[370]}, 
           {RGBColor[1, 0, 0], PointBox[371]}, 
           {RGBColor[0, 1, 0], PointBox[372]}, 
           {RGBColor[1, 1, 0], PointBox[373]}, 
           {RGBColor[1, 0, 0], PointBox[374]}, 
           {RGBColor[0, 1, 0], PointBox[375]}, 
           {RGBColor[0, 1, 0], PointBox[376]}, 
           {RGBColor[1, 0, 0], PointBox[377]}, 
           {RGBColor[0, 1, 0], PointBox[378]}, 
           {RGBColor[1, 0, 0], PointBox[379]}, 
           {RGBColor[0, 1, 0], PointBox[380]}, 
           {RGBColor[1, 0, 0], PointBox[381]}, 
           {RGBColor[0, 1, 0], PointBox[382]}, 
           {RGBColor[1, 0, 0], PointBox[383]}, 
           {RGBColor[1, 1, 0], PointBox[384]}, 
           {RGBColor[1, 0, 0], PointBox[385]}, 
           {RGBColor[0, 1, 0], PointBox[386]}, 
           {RGBColor[1, 1, 0], PointBox[387]}, 
           {RGBColor[1, 0, 0], PointBox[388]}, 
           {RGBColor[0, 1, 0], PointBox[389]}, 
           {RGBColor[0, 1, 0], PointBox[390]}, 
           {RGBColor[1, 0, 0], PointBox[391]}, 
           {RGBColor[1, 1, 0], PointBox[392]}, 
           {RGBColor[1, 0, 0], PointBox[393]}, 
           {RGBColor[0, 1, 0], PointBox[394]}, 
           {RGBColor[1, 0, 0], PointBox[395]}, 
           {RGBColor[1, 1, 0], PointBox[396]}, 
           {RGBColor[1, 0, 0], PointBox[397]}, 
           {RGBColor[0, 1, 0], PointBox[398]}, 
           {RGBColor[0, 1, 0], PointBox[399]}, 
           {RGBColor[1, 0, 0], PointBox[400]}, 
           {RGBColor[0, 1, 0], PointBox[401]}, 
           {RGBColor[1, 1, 0], PointBox[402]}, 
           {RGBColor[1, 0, 0], PointBox[403]}, 
           {RGBColor[0, 1, 0], PointBox[404]}, 
           {RGBColor[1, 1, 0], PointBox[405]}, 
           {RGBColor[1, 0, 0], PointBox[406]}, 
           {RGBColor[0, 1, 0], PointBox[407]}, 
           {RGBColor[1, 0, 0], PointBox[408]}, 
           {RGBColor[0, 1, 0], PointBox[409]}, 
           {RGBColor[1, 1, 0], PointBox[410]}, 
           {RGBColor[1, 0, 0], PointBox[411]}, 
           {RGBColor[0, 1, 0], PointBox[412]}, 
           {RGBColor[1, 1, 0], PointBox[413]}, 
           {RGBColor[1, 0, 0], PointBox[414]}, 
           {RGBColor[0, 1, 0], PointBox[415]}, 
           {RGBColor[0, 1, 0], PointBox[416]}, 
           {RGBColor[1, 0, 0], PointBox[417]}, 
           {RGBColor[0, 1, 0], PointBox[418]}, 
           {RGBColor[1, 0, 0], PointBox[419]}, 
           {RGBColor[0, 1, 0], PointBox[420]}, 
           {RGBColor[1, 0, 0], PointBox[421]}, 
           {RGBColor[1, 1, 0], PointBox[422]}, 
           {RGBColor[1, 0, 0], PointBox[423]}, 
           {RGBColor[0, 1, 0], PointBox[424]}, 
           {RGBColor[1, 1, 0], PointBox[425]}, 
           {RGBColor[1, 0, 0], PointBox[426]}, 
           {RGBColor[0, 1, 0], PointBox[427]}, 
           {RGBColor[0, 1, 0], PointBox[428]}, 
           {RGBColor[1, 0, 0], PointBox[429]}, 
           {RGBColor[1, 1, 0], PointBox[430]}, 
           {RGBColor[0, 1, 0], PointBox[431]}, 
           {RGBColor[1, 0, 0], PointBox[432]}, 
           {RGBColor[1, 0, 0], PointBox[433]}, 
           {RGBColor[0, 1, 0], PointBox[434]}, 
           {RGBColor[1, 0, 0], PointBox[435]}, 
           {RGBColor[0, 1, 0], PointBox[436]}, 
           {RGBColor[1, 0, 0], PointBox[437]}, 
           {RGBColor[0, 1, 0], PointBox[438]}, 
           {RGBColor[1, 1, 0], PointBox[439]}, 
           {RGBColor[0, 0, 1], PointBox[440]}, 
           {RGBColor[0, 1, 0], PointBox[441]}, 
           {RGBColor[1, 0, 0], PointBox[442]}, 
           {RGBColor[1, 0, 0], PointBox[443]}, 
           {RGBColor[0, 1, 0], PointBox[444]}, 
           {RGBColor[1, 0, 0], PointBox[445]}, 
           {RGBColor[0, 1, 0], PointBox[446]}, 
           {RGBColor[1, 0, 0], PointBox[447]}, 
           {RGBColor[0, 1, 0], PointBox[448]}, 
           {RGBColor[1, 1, 0], PointBox[449]}, 
           {RGBColor[0, 1, 0], PointBox[450]}, 
           {RGBColor[1, 0, 0], PointBox[451]}, 
           {RGBColor[1, 0, 0], PointBox[452]}, 
           {RGBColor[0, 1, 0], PointBox[453]}, 
           {RGBColor[1, 0, 0], PointBox[454]}, 
           {RGBColor[0, 1, 0], PointBox[455]}, 
           {RGBColor[1, 0, 0], PointBox[456]}, 
           {RGBColor[0, 1, 0], PointBox[457]}, 
           {RGBColor[0, 0, 1], PointBox[458]}, 
           {RGBColor[0, 0, 1], PointBox[459]}, 
           {RGBColor[0, 1, 0], PointBox[460]}, 
           {RGBColor[0, 0, 1], PointBox[461]}, 
           {RGBColor[1, 0, 0], PointBox[462]}, 
           {RGBColor[0, 1, 0], PointBox[463]}, 
           {RGBColor[0, 0, 1], PointBox[464]}, 
           {RGBColor[0, 1, 0], PointBox[465]}, 
           {RGBColor[0, 0, 1], PointBox[466]}, 
           {RGBColor[0, 0, 1], PointBox[467]}, 
           {RGBColor[1, 0, 0], PointBox[468]}, 
           {RGBColor[0, 1, 0], PointBox[469]}, 
           {RGBColor[0, 0, 1], PointBox[470]}, 
           {RGBColor[0, 0, 1], PointBox[471]}, 
           {RGBColor[0, 1, 0], PointBox[472]}, 
           {RGBColor[0, 1, 0], PointBox[473]}, 
           {RGBColor[1, 0, 0], PointBox[474]}, 
           {RGBColor[0, 1, 0], PointBox[475]}, 
           {RGBColor[0, 0, 1], PointBox[476]}, 
           {RGBColor[0, 0, 1], PointBox[477]}, 
           {RGBColor[0, 1, 0], PointBox[478]}, 
           {RGBColor[0, 0, 1], PointBox[479]}, 
           {RGBColor[1, 0, 0], PointBox[480]}, 
           {RGBColor[0, 1, 0], PointBox[481]}, 
           {RGBColor[1, 0, 0], PointBox[482]}, 
           {RGBColor[0, 1, 0], PointBox[483]}, 
           {RGBColor[0, 0, 1], PointBox[484]}, 
           {RGBColor[0, 0, 1], PointBox[485]}, 
           {RGBColor[0, 1, 0], PointBox[486]}, 
           {RGBColor[0, 0, 1], PointBox[487]}, 
           {RGBColor[1, 0, 0], PointBox[488]}, 
           {RGBColor[0, 1, 0], PointBox[489]}, 
           {RGBColor[0, 0, 1], PointBox[490]}, 
           {RGBColor[0, 1, 0], PointBox[491]}, 
           {RGBColor[0, 0, 1], PointBox[492]}, 
           {RGBColor[0, 1, 0], PointBox[493]}, 
           {RGBColor[1, 0, 0], PointBox[494]}, 
           {RGBColor[0, 1, 0], PointBox[495]}, 
           {RGBColor[0, 0, 1], PointBox[496]}, 
           {RGBColor[0, 0, 1], PointBox[497]}, 
           {RGBColor[0, 1, 0], PointBox[498]}, 
           {RGBColor[0, 0, 1], PointBox[499]}, 
           {RGBColor[1, 0, 0], PointBox[500]}, 
           {RGBColor[0, 1, 0], PointBox[501]}, 
           {RGBColor[0, 0, 1], PointBox[502]}, 
           {RGBColor[0, 1, 0], PointBox[503]}, 
           {RGBColor[0, 0, 1], PointBox[504]}, 
           {RGBColor[0, 0, 1], PointBox[505]}, 
           {RGBColor[1, 0, 0], PointBox[506]}, 
           {RGBColor[0, 1, 0], PointBox[507]}, 
           {RGBColor[1, 0, 0], PointBox[508]}, 
           {RGBColor[0, 1, 0], PointBox[509]}, 
           {RGBColor[0, 0, 1], PointBox[510]}, 
           {RGBColor[0, 0, 1], PointBox[511]}, 
           {RGBColor[0, 1, 0], PointBox[512]}, 
           {RGBColor[0, 0, 1], PointBox[513]}, 
           {RGBColor[1, 0, 0], PointBox[514]}, 
           {RGBColor[0, 1, 0], PointBox[515]}, 
           {RGBColor[0, 0, 1], PointBox[516]}, 
           {RGBColor[0, 1, 0], PointBox[517]}, 
           {RGBColor[0, 0, 1], PointBox[518]}, 
           {RGBColor[0, 0, 1], PointBox[519]}, 
           {RGBColor[1, 0, 0], PointBox[520]}, 
           {RGBColor[0, 1, 0], PointBox[521]}, 
           {RGBColor[0, 0, 1], PointBox[522]}, 
           {RGBColor[0, 0, 1], PointBox[523]}, 
           {RGBColor[0, 1, 0], PointBox[524]}, 
           {RGBColor[0, 1, 0], PointBox[525]}, 
           {RGBColor[1, 0, 0], PointBox[526]}, 
           {RGBColor[0, 1, 0], PointBox[527]}, 
           {RGBColor[0, 0, 1], PointBox[528]}, 
           {RGBColor[0, 0, 1], PointBox[529]}, 
           {RGBColor[0, 1, 0], PointBox[530]}, 
           {RGBColor[0, 1, 0], PointBox[531]}, 
           {RGBColor[1, 0, 0], PointBox[532]}, 
           {RGBColor[0, 1, 0], PointBox[533]}, 
           {RGBColor[1, 0, 0], PointBox[534]}, 
           {RGBColor[0, 1, 0], PointBox[535]}, 
           {RGBColor[0, 0, 1], PointBox[536]}, 
           {RGBColor[0, 0, 1], PointBox[537]}, 
           {RGBColor[0, 1, 0], PointBox[538]}, 
           {RGBColor[0, 0, 1], PointBox[539]}, 
           {RGBColor[1, 0, 0], PointBox[540]}, 
           {RGBColor[0, 1, 0], PointBox[541]}, 
           {RGBColor[0, 0, 1], PointBox[542]}, 
           {RGBColor[0, 1, 0], PointBox[543]}, 
           {RGBColor[0, 0, 1], PointBox[544]}, 
           {RGBColor[0, 0, 1], PointBox[545]}, 
           {RGBColor[1, 0, 0], PointBox[546]}, 
           {RGBColor[0, 1, 0], PointBox[547]}, 
           {RGBColor[0, 0, 1], PointBox[548]}, 
           {RGBColor[0, 0, 1], PointBox[549]}, 
           {RGBColor[0, 1, 0], PointBox[550]}, 
           {RGBColor[0, 1, 0], PointBox[551]}, 
           {RGBColor[1, 0, 0], PointBox[552]}, 
           {RGBColor[0, 1, 0], PointBox[553]}, 
           {RGBColor[0, 0, 1], PointBox[554]}, 
           {RGBColor[0, 0, 1], PointBox[555]}, 
           {RGBColor[0, 1, 0], PointBox[556]}, 
           {RGBColor[0, 0, 1], PointBox[557]}, 
           {RGBColor[1, 0, 0], PointBox[558]}, 
           {RGBColor[0, 1, 0], PointBox[559]}, 
           {RGBColor[1, 0, 0], PointBox[560]}, 
           {RGBColor[0, 1, 0], PointBox[561]}, 
           {RGBColor[1, 0, 0], PointBox[562]}, 
           {RGBColor[0, 1, 0], PointBox[563]}, 
           {RGBColor[0, 0, 1], PointBox[564]}, 
           {RGBColor[1, 0, 0], PointBox[565]}, 
           {RGBColor[0, 1, 0], PointBox[566]}, 
           {RGBColor[0, 0, 1], PointBox[567]}, 
           {RGBColor[1, 0, 0], PointBox[568]}, 
           {RGBColor[0, 1, 0], PointBox[569]}, 
           {RGBColor[0, 1, 0], PointBox[570]}, 
           {RGBColor[1, 0, 0], PointBox[571]}, 
           {RGBColor[0, 0, 1], PointBox[572]}, 
           {RGBColor[1, 0, 0], PointBox[573]}, 
           {RGBColor[0, 1, 0], PointBox[574]}, 
           {RGBColor[1, 0, 0], PointBox[575]}, 
           {RGBColor[0, 0, 1], PointBox[576]}, 
           {RGBColor[1, 0, 0], PointBox[577]}, 
           {RGBColor[0, 1, 0], PointBox[578]}, 
           {RGBColor[0, 1, 0], PointBox[579]}, 
           {RGBColor[1, 0, 0], PointBox[580]}, 
           {RGBColor[0, 1, 0], PointBox[581]}, 
           {RGBColor[0, 0, 1], PointBox[582]}, 
           {RGBColor[1, 0, 0], PointBox[583]}, 
           {RGBColor[0, 1, 0], PointBox[584]}, 
           {RGBColor[0, 0, 1], PointBox[585]}, 
           {RGBColor[1, 0, 0], PointBox[586]}, 
           {RGBColor[0, 1, 0], PointBox[587]}, 
           {RGBColor[1, 0, 0], PointBox[588]}, 
           {RGBColor[0, 1, 0], PointBox[589]}, 
           {RGBColor[0, 0, 1], PointBox[590]}, 
           {RGBColor[1, 0, 0], PointBox[591]}, 
           {RGBColor[0, 1, 0], PointBox[592]}, 
           {RGBColor[0, 0, 1], PointBox[593]}, 
           {RGBColor[1, 0, 0], PointBox[594]}, 
           {RGBColor[0, 1, 0], PointBox[595]}, 
           {RGBColor[0, 1, 0], PointBox[596]}, 
           {RGBColor[1, 0, 0], PointBox[597]}, 
           {RGBColor[0, 1, 0], PointBox[598]}, 
           {RGBColor[1, 0, 0], PointBox[599]}, 
           {RGBColor[0, 1, 0], PointBox[600]}, 
           {RGBColor[1, 0, 0], PointBox[601]}, 
           {RGBColor[0, 0, 1], PointBox[602]}, 
           {RGBColor[1, 0, 0], PointBox[603]}, 
           {RGBColor[0, 1, 0], PointBox[604]}, 
           {RGBColor[0, 0, 1], PointBox[605]}, 
           {RGBColor[1, 0, 0], PointBox[606]}, 
           {RGBColor[0, 1, 0], PointBox[607]}, 
           {RGBColor[0, 1, 0], PointBox[608]}, 
           {RGBColor[1, 0, 0], PointBox[609]}, 
           {RGBColor[0, 0, 1], PointBox[610]}, 
           {RGBColor[1, 0, 0], PointBox[611]}, 
           {RGBColor[0, 1, 0], PointBox[612]}, 
           {RGBColor[1, 0, 0], PointBox[613]}, 
           {RGBColor[0, 1, 0], PointBox[614]}, 
           {RGBColor[1, 0, 0], PointBox[615]}, 
           {RGBColor[0, 0, 1], PointBox[616]}, 
           {RGBColor[1, 0, 0], PointBox[617]}, 
           {RGBColor[0, 1, 0], PointBox[618]}, 
           {RGBColor[0, 0, 1], PointBox[619]}, 
           {RGBColor[1, 0, 0], PointBox[620]}, 
           {RGBColor[0, 1, 0], PointBox[621]}, 
           {RGBColor[0, 1, 0], PointBox[622]}, 
           {RGBColor[1, 0, 0], PointBox[623]}, 
           {RGBColor[0, 0, 1], PointBox[624]}, 
           {RGBColor[1, 0, 0], PointBox[625]}, 
           {RGBColor[0, 1, 0], PointBox[626]}, 
           {RGBColor[1, 0, 0], PointBox[627]}, 
           {RGBColor[0, 0, 1], PointBox[628]}, 
           {RGBColor[1, 0, 0], PointBox[629]}, 
           {RGBColor[0, 1, 0], PointBox[630]}, 
           {RGBColor[0, 1, 0], PointBox[631]}, 
           {RGBColor[1, 0, 0], PointBox[632]}, 
           {RGBColor[0, 1, 0], PointBox[633]}, 
           {RGBColor[0, 0, 1], PointBox[634]}, 
           {RGBColor[1, 0, 0], PointBox[635]}, 
           {RGBColor[0, 1, 0], PointBox[636]}, 
           {RGBColor[0, 1, 0], PointBox[637]}, 
           {RGBColor[1, 0, 0], PointBox[638]}, 
           {RGBColor[0, 1, 0], PointBox[639]}, 
           {RGBColor[1, 0, 0], PointBox[640]}, 
           {RGBColor[0, 1, 0], PointBox[641]}, 
           {RGBColor[0, 0, 1], PointBox[642]}, 
           {RGBColor[1, 0, 0], PointBox[643]}, 
           {RGBColor[0, 1, 0], PointBox[644]}, 
           {RGBColor[0, 0, 1], PointBox[645]}, 
           {RGBColor[1, 0, 0], PointBox[646]}, 
           {RGBColor[0, 1, 0], PointBox[647]}, 
           {RGBColor[0, 1, 0], PointBox[648]}, 
           {RGBColor[1, 0, 0], PointBox[649]}, 
           {RGBColor[0, 0, 1], PointBox[650]}, 
           {RGBColor[1, 0, 0], PointBox[651]}, 
           {RGBColor[0, 1, 0], PointBox[652]}, 
           {RGBColor[1, 0, 0], PointBox[653]}, 
           {RGBColor[0, 0, 1], PointBox[654]}, 
           {RGBColor[1, 0, 0], PointBox[655]}, 
           {RGBColor[0, 1, 0], PointBox[656]}, 
           {RGBColor[0, 1, 0], PointBox[657]}, 
           {RGBColor[1, 0, 0], PointBox[658]}, 
           {RGBColor[0, 1, 0], PointBox[659]}, 
           {RGBColor[0, 0, 1], PointBox[660]}, 
           {RGBColor[1, 0, 0], PointBox[661]}, 
           {RGBColor[0, 1, 0], PointBox[662]}, 
           {RGBColor[0, 0, 1], PointBox[663]}, 
           {RGBColor[1, 0, 0], PointBox[664]}, 
           {RGBColor[1, 0, 0], PointBox[665]}, 
           {RGBColor[0, 1, 0], PointBox[666]}, 
           {RGBColor[1, 0, 0], PointBox[667]}, 
           {RGBColor[0, 1, 0], PointBox[668]}, 
           {RGBColor[1, 0, 0], PointBox[669]}, 
           {RGBColor[0, 1, 0], PointBox[670]}, 
           {RGBColor[0, 0, 1], PointBox[671]}, 
           {RGBColor[0, 0, 1], PointBox[672]}, 
           {RGBColor[0, 1, 0], PointBox[673]}, 
           {RGBColor[0, 0, 1], PointBox[674]}, 
           {RGBColor[1, 0, 0], PointBox[675]}, 
           {RGBColor[0, 1, 0], PointBox[676]}, 
           {RGBColor[0, 0, 1], PointBox[677]}, 
           {RGBColor[0, 1, 0], PointBox[678]}, 
           {RGBColor[0, 0, 1], PointBox[679]}, 
           {RGBColor[0, 0, 1], PointBox[680]}, 
           {RGBColor[1, 0, 0], PointBox[681]}, 
           {RGBColor[0, 1, 0], PointBox[682]}, 
           {RGBColor[0, 0, 1], PointBox[683]}, 
           {RGBColor[0, 0, 1], PointBox[684]}, 
           {RGBColor[0, 1, 0], PointBox[685]}, 
           {RGBColor[0, 1, 0], PointBox[686]}, 
           {RGBColor[1, 0, 0], PointBox[687]}, 
           {RGBColor[0, 1, 0], PointBox[688]}, 
           {RGBColor[0, 0, 1], PointBox[689]}, 
           {RGBColor[0, 0, 1], PointBox[690]}, 
           {RGBColor[0, 1, 0], PointBox[691]}, 
           {RGBColor[0, 0, 1], PointBox[692]}, 
           {RGBColor[1, 0, 0], PointBox[693]}, 
           {RGBColor[0, 1, 0], PointBox[694]}, 
           {RGBColor[1, 0, 0], PointBox[695]}, 
           {RGBColor[0, 1, 0], PointBox[696]}, 
           {RGBColor[0, 0, 1], PointBox[697]}, 
           {RGBColor[0, 0, 1], PointBox[698]}, 
           {RGBColor[0, 1, 0], PointBox[699]}, 
           {RGBColor[0, 0, 1], PointBox[700]}, 
           {RGBColor[1, 0, 0], PointBox[701]}, 
           {RGBColor[0, 1, 0], PointBox[702]}, 
           {RGBColor[0, 0, 1], PointBox[703]}, 
           {RGBColor[0, 1, 0], PointBox[704]}, 
           {RGBColor[0, 0, 1], PointBox[705]}, 
           {RGBColor[0, 1, 0], PointBox[706]}, 
           {RGBColor[1, 0, 0], PointBox[707]}, 
           {RGBColor[0, 1, 0], PointBox[708]}, 
           {RGBColor[0, 0, 1], PointBox[709]}, 
           {RGBColor[0, 0, 1], PointBox[710]}, 
           {RGBColor[0, 1, 0], PointBox[711]}, 
           {RGBColor[0, 0, 1], PointBox[712]}, 
           {RGBColor[1, 0, 0], PointBox[713]}, 
           {RGBColor[0, 1, 0], PointBox[714]}, 
           {RGBColor[0, 0, 1], PointBox[715]}, 
           {RGBColor[0, 1, 0], PointBox[716]}, 
           {RGBColor[0, 0, 1], PointBox[717]}, 
           {RGBColor[0, 1, 0], PointBox[718]}, 
           {RGBColor[1, 0, 0], PointBox[719]}, 
           {RGBColor[0, 1, 0], PointBox[720]}, 
           {RGBColor[1, 0, 0], PointBox[721]}, 
           {RGBColor[0, 1, 0], PointBox[722]}, 
           {RGBColor[0, 0, 1], PointBox[723]}, 
           {RGBColor[0, 0, 1], PointBox[724]}, 
           {RGBColor[0, 1, 0], PointBox[725]}, 
           {RGBColor[0, 0, 1], PointBox[726]}, 
           {RGBColor[1, 0, 0], PointBox[727]}, 
           {RGBColor[0, 1, 0], PointBox[728]}, 
           {RGBColor[0, 0, 1], PointBox[729]}, 
           {RGBColor[0, 1, 0], PointBox[730]}, 
           {RGBColor[0, 0, 1], PointBox[731]}, 
           {RGBColor[0, 0, 1], PointBox[732]}, 
           {RGBColor[1, 0, 0], PointBox[733]}, 
           {RGBColor[0, 1, 0], PointBox[734]}, 
           {RGBColor[0, 0, 1], PointBox[735]}, 
           {RGBColor[0, 0, 1], PointBox[736]}, 
           {RGBColor[0, 1, 0], PointBox[737]}, 
           {RGBColor[0, 1, 0], PointBox[738]}, 
           {RGBColor[1, 0, 0], PointBox[739]}, 
           {RGBColor[0, 1, 0], PointBox[740]}, 
           {RGBColor[0, 0, 1], PointBox[741]}, 
           {RGBColor[0, 0, 1], PointBox[742]}, 
           {RGBColor[0, 1, 0], PointBox[743]}, 
           {RGBColor[0, 0, 1], PointBox[744]}, 
           {RGBColor[1, 0, 0], PointBox[745]}, 
           {RGBColor[0, 1, 0], PointBox[746]}, 
           {RGBColor[1, 0, 0], PointBox[747]}, 
           {RGBColor[0, 1, 0], PointBox[748]}, 
           {RGBColor[0, 0, 1], PointBox[749]}, 
           {RGBColor[0, 0, 1], PointBox[750]}, 
           {RGBColor[0, 1, 0], PointBox[751]}, 
           {RGBColor[0, 0, 1], PointBox[752]}, 
           {RGBColor[1, 0, 0], PointBox[753]}, 
           {RGBColor[0, 1, 0], PointBox[754]}, 
           {RGBColor[0, 0, 1], PointBox[755]}, 
           {RGBColor[0, 1, 0], PointBox[756]}, 
           {RGBColor[0, 0, 1], PointBox[757]}, 
           {RGBColor[0, 1, 0], PointBox[758]}, 
           {RGBColor[1, 0, 0], PointBox[759]}, 
           {RGBColor[0, 1, 0], PointBox[760]}, 
           {RGBColor[0, 0, 1], PointBox[761]}, 
           {RGBColor[0, 0, 1], PointBox[762]}, 
           {RGBColor[0, 1, 0], PointBox[763]}, 
           {RGBColor[0, 0, 1], PointBox[764]}, 
           {RGBColor[1, 0, 0], PointBox[765]}, 
           {RGBColor[0, 1, 0], PointBox[766]}, 
           {RGBColor[0, 0, 1], PointBox[767]}, 
           {RGBColor[0, 1, 0], PointBox[768]}, 
           {RGBColor[0, 0, 1], PointBox[769]}, 
           {RGBColor[0, 0, 1], PointBox[770]}, 
           {RGBColor[1, 0, 0], PointBox[771]}, 
           {RGBColor[0, 1, 0], PointBox[772]}, 
           {RGBColor[1, 0, 0], PointBox[773]}, 
           {RGBColor[0, 1, 0], PointBox[774]}, 
           {RGBColor[1, 0, 0], PointBox[775]}, 
           {RGBColor[0, 1, 0], PointBox[776]}, 
           {RGBColor[0, 0, 1], PointBox[777]}, 
           {RGBColor[1, 0, 0], PointBox[778]}, 
           {RGBColor[0, 1, 0], PointBox[779]}, 
           {RGBColor[0, 0, 1], PointBox[780]}, 
           {RGBColor[1, 0, 0], PointBox[781]}, 
           {RGBColor[0, 1, 0], PointBox[782]}, 
           {RGBColor[0, 1, 0], PointBox[783]}, 
           {RGBColor[1, 0, 0], PointBox[784]}, 
           {RGBColor[0, 0, 1], PointBox[785]}, 
           {RGBColor[1, 0, 0], PointBox[786]}, 
           {RGBColor[0, 1, 0], PointBox[787]}, 
           {RGBColor[1, 0, 0], PointBox[788]}, 
           {RGBColor[0, 0, 1], PointBox[789]}, 
           {RGBColor[1, 0, 0], PointBox[790]}, 
           {RGBColor[0, 1, 0], PointBox[791]}, 
           {RGBColor[0, 1, 0], PointBox[792]}, 
           {RGBColor[1, 0, 0], PointBox[793]}, 
           {RGBColor[0, 1, 0], PointBox[794]}, 
           {RGBColor[0, 0, 1], PointBox[795]}, 
           {RGBColor[1, 0, 0], PointBox[796]}, 
           {RGBColor[0, 1, 0], PointBox[797]}, 
           {RGBColor[0, 0, 1], PointBox[798]}, 
           {RGBColor[1, 0, 0], PointBox[799]}, 
           {RGBColor[0, 1, 0], PointBox[800]}, 
           {RGBColor[1, 0, 0], PointBox[801]}, 
           {RGBColor[0, 1, 0], PointBox[802]}, 
           {RGBColor[0, 0, 1], PointBox[803]}, 
           {RGBColor[1, 0, 0], PointBox[804]}, 
           {RGBColor[0, 1, 0], PointBox[805]}, 
           {RGBColor[0, 0, 1], PointBox[806]}, 
           {RGBColor[1, 0, 0], PointBox[807]}, 
           {RGBColor[0, 1, 0], PointBox[808]}, 
           {RGBColor[0, 1, 0], PointBox[809]}, 
           {RGBColor[1, 0, 0], PointBox[810]}, 
           {RGBColor[0, 1, 0], PointBox[811]}, 
           {RGBColor[1, 0, 0], PointBox[812]}, 
           {RGBColor[0, 1, 0], PointBox[813]}, 
           {RGBColor[1, 0, 0], PointBox[814]}, 
           {RGBColor[0, 0, 1], PointBox[815]}, 
           {RGBColor[1, 0, 0], PointBox[816]}, 
           {RGBColor[0, 1, 0], PointBox[817]}, 
           {RGBColor[0, 0, 1], PointBox[818]}, 
           {RGBColor[1, 0, 0], PointBox[819]}, 
           {RGBColor[0, 1, 0], PointBox[820]}, 
           {RGBColor[0, 1, 0], PointBox[821]}, 
           {RGBColor[1, 0, 0], PointBox[822]}, 
           {RGBColor[0, 1, 0], PointBox[823]}, 
           {RGBColor[1, 0, 0], PointBox[824]}, 
           {RGBColor[0, 1, 0], PointBox[825]}, 
           {RGBColor[1, 0, 0], PointBox[826]}, 
           {RGBColor[0, 1, 0], PointBox[827]}, 
           {RGBColor[1, 0, 0], PointBox[828]}, 
           {RGBColor[0, 0, 1], PointBox[829]}, 
           {RGBColor[1, 0, 0], PointBox[830]}, 
           {RGBColor[0, 1, 0], PointBox[831]}, 
           {RGBColor[0, 0, 1], PointBox[832]}, 
           {RGBColor[1, 0, 0], PointBox[833]}, 
           {RGBColor[0, 1, 0], PointBox[834]}, 
           {RGBColor[0, 1, 0], PointBox[835]}, 
           {RGBColor[1, 0, 0], PointBox[836]}, 
           {RGBColor[0, 0, 1], PointBox[837]}, 
           {RGBColor[1, 0, 0], PointBox[838]}, 
           {RGBColor[0, 1, 0], PointBox[839]}, 
           {RGBColor[1, 0, 0], PointBox[840]}, 
           {RGBColor[0, 0, 1], PointBox[841]}, 
           {RGBColor[1, 0, 0], PointBox[842]}, 
           {RGBColor[0, 1, 0], PointBox[843]}, 
           {RGBColor[0, 1, 0], PointBox[844]}, 
           {RGBColor[1, 0, 0], PointBox[845]}, 
           {RGBColor[0, 1, 0], PointBox[846]}, 
           {RGBColor[0, 0, 1], PointBox[847]}, 
           {RGBColor[1, 0, 0], PointBox[848]}, 
           {RGBColor[0, 1, 0], PointBox[849]}, 
           {RGBColor[0, 0, 1], PointBox[850]}, 
           {RGBColor[1, 0, 0], PointBox[851]}, 
           {RGBColor[0, 1, 0], PointBox[852]}, 
           {RGBColor[1, 0, 0], PointBox[853]}, 
           {RGBColor[0, 1, 0], PointBox[854]}, 
           {RGBColor[0, 0, 1], PointBox[855]}, 
           {RGBColor[1, 0, 0], PointBox[856]}, 
           {RGBColor[0, 1, 0], PointBox[857]}, 
           {RGBColor[0, 0, 1], PointBox[858]}, 
           {RGBColor[1, 0, 0], PointBox[859]}, 
           {RGBColor[0, 1, 0], PointBox[860]}, 
           {RGBColor[0, 1, 0], PointBox[861]}, 
           {RGBColor[1, 0, 0], PointBox[862]}, 
           {RGBColor[0, 1, 0], PointBox[863]}, 
           {RGBColor[1, 0, 0], PointBox[864]}, 
           {RGBColor[0, 1, 0], PointBox[865]}, 
           {RGBColor[1, 0, 0], PointBox[866]}, 
           {RGBColor[0, 0, 1], PointBox[867]}, 
           {RGBColor[1, 0, 0], PointBox[868]}, 
           {RGBColor[0, 1, 0], PointBox[869]}, 
           {RGBColor[0, 0, 1], PointBox[870]}, 
           {RGBColor[1, 0, 0], PointBox[871]}, 
           {RGBColor[0, 1, 0], PointBox[872]}, 
           {RGBColor[0, 1, 0], PointBox[873]}, 
           {RGBColor[1, 0, 0], PointBox[874]}, 
           {RGBColor[0, 0, 1], PointBox[875]}, 
           {RGBColor[0, 1, 0], PointBox[876]}, 
           {RGBColor[0, 1, 0], PointBox[877]}, 
           {RGBColor[0, 0, 1], PointBox[878]}, 
           {RGBColor[1, 0, 0], PointBox[879]}, 
           {RGBColor[1, 0, 0], PointBox[880]}, 
           {RGBColor[0, 0, 1], PointBox[881]}, 
           {RGBColor[1, 0, 0], PointBox[882]}, 
           {RGBColor[0, 0, 1], PointBox[883]}, 
           {RGBColor[1, 0, 0], PointBox[884]}, 
           {RGBColor[0, 0, 1], PointBox[885]}, 
           {RGBColor[1, 1, 0], PointBox[886]}, 
           {RGBColor[1, 1, 0], PointBox[887]}, 
           {RGBColor[0, 0, 1], PointBox[888]}, 
           {RGBColor[1, 1, 0], PointBox[889]}, 
           {RGBColor[1, 0, 0], PointBox[890]}, 
           {RGBColor[0, 0, 1], PointBox[891]}, 
           {RGBColor[1, 1, 0], PointBox[892]}, 
           {RGBColor[0, 0, 1], PointBox[893]}, 
           {RGBColor[1, 1, 0], PointBox[894]}, 
           {RGBColor[1, 1, 0], PointBox[895]}, 
           {RGBColor[1, 0, 0], PointBox[896]}, 
           {RGBColor[0, 0, 1], PointBox[897]}, 
           {RGBColor[1, 1, 0], PointBox[898]}, 
           {RGBColor[1, 1, 0], PointBox[899]}, 
           {RGBColor[0, 0, 1], PointBox[900]}, 
           {RGBColor[0, 0, 1], PointBox[901]}, 
           {RGBColor[1, 0, 0], PointBox[902]}, 
           {RGBColor[0, 0, 1], PointBox[903]}, 
           {RGBColor[1, 1, 0], PointBox[904]}, 
           {RGBColor[1, 1, 0], PointBox[905]}, 
           {RGBColor[0, 0, 1], PointBox[906]}, 
           {RGBColor[1, 1, 0], PointBox[907]}, 
           {RGBColor[1, 0, 0], PointBox[908]}, 
           {RGBColor[0, 0, 1], PointBox[909]}, 
           {RGBColor[1, 0, 0], PointBox[910]}, 
           {RGBColor[0, 0, 1], PointBox[911]}, 
           {RGBColor[1, 1, 0], PointBox[912]}, 
           {RGBColor[1, 1, 0], PointBox[913]}, 
           {RGBColor[0, 0, 1], PointBox[914]}, 
           {RGBColor[1, 1, 0], PointBox[915]}, 
           {RGBColor[1, 0, 0], PointBox[916]}, 
           {RGBColor[0, 0, 1], PointBox[917]}, 
           {RGBColor[1, 1, 0], PointBox[918]}, 
           {RGBColor[0, 0, 1], PointBox[919]}, 
           {RGBColor[1, 1, 0], PointBox[920]}, 
           {RGBColor[0, 0, 1], PointBox[921]}, 
           {RGBColor[1, 0, 0], PointBox[922]}, 
           {RGBColor[0, 0, 1], PointBox[923]}, 
           {RGBColor[1, 1, 0], PointBox[924]}, 
           {RGBColor[1, 1, 0], PointBox[925]}, 
           {RGBColor[0, 0, 1], PointBox[926]}, 
           {RGBColor[1, 1, 0], PointBox[927]}, 
           {RGBColor[1, 0, 0], PointBox[928]}, 
           {RGBColor[0, 0, 1], PointBox[929]}, 
           {RGBColor[1, 1, 0], PointBox[930]}, 
           {RGBColor[0, 0, 1], PointBox[931]}, 
           {RGBColor[1, 1, 0], PointBox[932]}, 
           {RGBColor[1, 1, 0], PointBox[933]}, 
           {RGBColor[1, 0, 0], PointBox[934]}, 
           {RGBColor[0, 0, 1], PointBox[935]}, 
           {RGBColor[1, 0, 0], PointBox[936]}, 
           {RGBColor[0, 0, 1], PointBox[937]}, 
           {RGBColor[1, 1, 0], PointBox[938]}, 
           {RGBColor[1, 1, 0], PointBox[939]}, 
           {RGBColor[0, 0, 1], PointBox[940]}, 
           {RGBColor[1, 1, 0], PointBox[941]}, 
           {RGBColor[1, 0, 0], PointBox[942]}, 
           {RGBColor[0, 0, 1], PointBox[943]}, 
           {RGBColor[1, 1, 0], PointBox[944]}, 
           {RGBColor[0, 0, 1], PointBox[945]}, 
           {RGBColor[1, 1, 0], PointBox[946]}, 
           {RGBColor[1, 1, 0], PointBox[947]}, 
           {RGBColor[1, 0, 0], PointBox[948]}, 
           {RGBColor[0, 0, 1], PointBox[949]}, 
           {RGBColor[1, 1, 0], PointBox[950]}, 
           {RGBColor[1, 1, 0], PointBox[951]}, 
           {RGBColor[0, 0, 1], PointBox[952]}, 
           {RGBColor[0, 0, 1], PointBox[953]}, 
           {RGBColor[1, 0, 0], PointBox[954]}, 
           {RGBColor[0, 0, 1], PointBox[955]}, 
           {RGBColor[1, 1, 0], PointBox[956]}, 
           {RGBColor[1, 1, 0], PointBox[957]}, 
           {RGBColor[0, 0, 1], PointBox[958]}, 
           {RGBColor[0, 0, 1], PointBox[959]}, 
           {RGBColor[1, 0, 0], PointBox[960]}, 
           {RGBColor[0, 0, 1], PointBox[961]}, 
           {RGBColor[1, 0, 0], PointBox[962]}, 
           {RGBColor[0, 0, 1], PointBox[963]}, 
           {RGBColor[1, 1, 0], PointBox[964]}, 
           {RGBColor[1, 1, 0], PointBox[965]}, 
           {RGBColor[0, 0, 1], PointBox[966]}, 
           {RGBColor[1, 1, 0], PointBox[967]}, 
           {RGBColor[1, 0, 0], PointBox[968]}, 
           {RGBColor[0, 0, 1], PointBox[969]}, 
           {RGBColor[1, 1, 0], PointBox[970]}, 
           {RGBColor[0, 0, 1], PointBox[971]}, 
           {RGBColor[1, 1, 0], PointBox[972]}, 
           {RGBColor[1, 1, 0], PointBox[973]}, 
           {RGBColor[1, 0, 0], PointBox[974]}, 
           {RGBColor[0, 0, 1], PointBox[975]}, 
           {RGBColor[1, 1, 0], PointBox[976]}, 
           {RGBColor[1, 1, 0], PointBox[977]}, 
           {RGBColor[0, 0, 1], PointBox[978]}, 
           {RGBColor[0, 0, 1], PointBox[979]}, 
           {RGBColor[1, 0, 0], PointBox[980]}, 
           {RGBColor[0, 0, 1], PointBox[981]}, 
           {RGBColor[1, 1, 0], PointBox[982]}, 
           {RGBColor[1, 1, 0], PointBox[983]}, 
           {RGBColor[0, 0, 1], PointBox[984]}, 
           {RGBColor[1, 1, 0], PointBox[985]}, 
           {RGBColor[1, 0, 0], PointBox[986]}, 
           {RGBColor[0, 0, 1], PointBox[987]}, 
           {RGBColor[1, 0, 0], PointBox[988]}, 
           {RGBColor[0, 0, 1], PointBox[989]}, 
           {RGBColor[1, 0, 0], PointBox[990]}, 
           {RGBColor[0, 0, 1], PointBox[991]}, 
           {RGBColor[1, 1, 0], PointBox[992]}, 
           {RGBColor[1, 0, 0], PointBox[993]}, 
           {RGBColor[0, 0, 1], PointBox[994]}, 
           {RGBColor[1, 1, 0], PointBox[995]}, 
           {RGBColor[1, 0, 0], PointBox[996]}, 
           {RGBColor[0, 0, 1], PointBox[997]}, 
           {RGBColor[0, 0, 1], PointBox[998]}, 
           {RGBColor[1, 0, 0], PointBox[999]}, 
           {RGBColor[1, 1, 0], PointBox[1000]}, 
           {RGBColor[1, 0, 0], PointBox[1001]}, 
           {RGBColor[0, 0, 1], PointBox[1002]}, 
           {RGBColor[1, 0, 0], PointBox[1003]}, 
           {RGBColor[1, 1, 0], PointBox[1004]}, 
           {RGBColor[1, 0, 0], PointBox[1005]}, 
           {RGBColor[0, 0, 1], PointBox[1006]}, 
           {RGBColor[0, 0, 1], PointBox[1007]}, 
           {RGBColor[1, 0, 0], PointBox[1008]}, 
           {RGBColor[0, 0, 1], PointBox[1009]}, 
           {RGBColor[1, 1, 0], PointBox[1010]}, 
           {RGBColor[1, 0, 0], PointBox[1011]}, 
           {RGBColor[0, 0, 1], PointBox[1012]}, 
           {RGBColor[1, 1, 0], PointBox[1013]}, 
           {RGBColor[1, 0, 0], PointBox[1014]}, 
           {RGBColor[0, 0, 1], PointBox[1015]}, 
           {RGBColor[1, 0, 0], PointBox[1016]}, 
           {RGBColor[0, 0, 1], PointBox[1017]}, 
           {RGBColor[1, 1, 0], PointBox[1018]}, 
           {RGBColor[1, 0, 0], PointBox[1019]}, 
           {RGBColor[0, 0, 1], PointBox[1020]}, 
           {RGBColor[1, 1, 0], PointBox[1021]}, 
           {RGBColor[1, 0, 0], PointBox[1022]}, 
           {RGBColor[0, 0, 1], PointBox[1023]}, 
           {RGBColor[0, 0, 1], PointBox[1024]}, 
           {RGBColor[1, 0, 0], PointBox[1025]}, 
           {RGBColor[0, 0, 1], PointBox[1026]}, 
           {RGBColor[1, 0, 0], PointBox[1027]}, 
           {RGBColor[0, 0, 1], PointBox[1028]}, 
           {RGBColor[1, 0, 0], PointBox[1029]}, 
           {RGBColor[1, 1, 0], PointBox[1030]}, 
           {RGBColor[1, 0, 0], PointBox[1031]}, 
           {RGBColor[0, 0, 1], PointBox[1032]}, 
           {RGBColor[1, 1, 0], PointBox[1033]}, 
           {RGBColor[1, 0, 0], PointBox[1034]}, 
           {RGBColor[0, 0, 1], PointBox[1035]}, 
           {RGBColor[0, 0, 1], PointBox[1036]}, 
           {RGBColor[1, 0, 0], PointBox[1037]}, 
           {RGBColor[1, 1, 0], PointBox[1038]}, 
           {RGBColor[1, 0, 0], PointBox[1039]}, 
           {RGBColor[0, 0, 1], PointBox[1040]}, 
           {RGBColor[1, 0, 0], PointBox[1041]}, 
           {RGBColor[0, 0, 1], PointBox[1042]}, 
           {RGBColor[1, 0, 0], PointBox[1043]}, 
           {RGBColor[1, 1, 0], PointBox[1044]}, 
           {RGBColor[1, 0, 0], PointBox[1045]}, 
           {RGBColor[0, 0, 1], PointBox[1046]}, 
           {RGBColor[1, 1, 0], PointBox[1047]}, 
           {RGBColor[1, 0, 0], PointBox[1048]}, 
           {RGBColor[0, 0, 1], PointBox[1049]}, 
           {RGBColor[0, 0, 1], PointBox[1050]}, 
           {RGBColor[1, 0, 0], PointBox[1051]}, 
           {RGBColor[1, 1, 0], PointBox[1052]}, 
           {RGBColor[1, 0, 0], PointBox[1053]}, 
           {RGBColor[0, 0, 1], PointBox[1054]}, 
           {RGBColor[1, 0, 0], PointBox[1055]}, 
           {RGBColor[1, 1, 0], PointBox[1056]}, 
           {RGBColor[1, 0, 0], PointBox[1057]}, 
           {RGBColor[0, 0, 1], PointBox[1058]}, 
           {RGBColor[0, 0, 1], PointBox[1059]}, 
           {RGBColor[1, 0, 0], PointBox[1060]}, 
           {RGBColor[0, 0, 1], PointBox[1061]}, 
           {RGBColor[1, 1, 0], PointBox[1062]}, 
           {RGBColor[1, 0, 0], PointBox[1063]}, 
           {RGBColor[0, 0, 1], PointBox[1064]}, 
           {RGBColor[0, 0, 1], PointBox[1065]}, 
           {RGBColor[1, 0, 0], PointBox[1066]}, 
           {RGBColor[0, 0, 1], PointBox[1067]}, 
           {RGBColor[1, 0, 0], PointBox[1068]}, 
           {RGBColor[0, 0, 1], PointBox[1069]}, 
           {RGBColor[1, 1, 0], PointBox[1070]}, 
           {RGBColor[1, 0, 0], PointBox[1071]}, 
           {RGBColor[0, 0, 1], PointBox[1072]}, 
           {RGBColor[1, 1, 0], PointBox[1073]}, 
           {RGBColor[1, 0, 0], PointBox[1074]}, 
           {RGBColor[0, 0, 1], PointBox[1075]}, 
           {RGBColor[0, 0, 1], PointBox[1076]}, 
           {RGBColor[1, 0, 0], PointBox[1077]}, 
           {RGBColor[1, 1, 0], PointBox[1078]}, 
           {RGBColor[1, 0, 0], PointBox[1079]}, 
           {RGBColor[0, 0, 1], PointBox[1080]}, 
           {RGBColor[1, 0, 0], PointBox[1081]}, 
           {RGBColor[1, 1, 0], PointBox[1082]}, 
           {RGBColor[1, 0, 0], PointBox[1083]}, 
           {RGBColor[0, 0, 1], PointBox[1084]}, 
           {RGBColor[0, 0, 1], PointBox[1085]}, 
           {RGBColor[1, 0, 0], PointBox[1086]}, 
           {RGBColor[0, 0, 1], PointBox[1087]}, 
           {RGBColor[1, 1, 0], PointBox[1088]}, 
           {RGBColor[1, 0, 0], PointBox[1089]}, 
           {RGBColor[0, 0, 1], PointBox[1090]}, 
           {RGBColor[1, 1, 0], PointBox[1091]}, 
           {RGBColor[1, 0, 0], PointBox[1092]}, 
           {RGBColor[1, 0, 0], PointBox[1093]}, 
           {RGBColor[0, 0, 1], PointBox[1094]}, 
           {RGBColor[1, 0, 0], PointBox[1095]}, 
           {RGBColor[0, 0, 1], PointBox[1096]}, 
           {RGBColor[1, 0, 0], PointBox[1097]}, 
           {RGBColor[0, 0, 1], PointBox[1098]}, 
           {RGBColor[1, 1, 0], PointBox[1099]}, 
           {RGBColor[1, 1, 0], PointBox[1100]}, 
           {RGBColor[0, 0, 1], PointBox[1101]}, 
           {RGBColor[1, 1, 0], PointBox[1102]}, 
           {RGBColor[1, 0, 0], PointBox[1103]}, 
           {RGBColor[0, 0, 1], PointBox[1104]}, 
           {RGBColor[1, 1, 0], PointBox[1105]}, 
           {RGBColor[0, 0, 1], PointBox[1106]}, 
           {RGBColor[1, 1, 0], PointBox[1107]}, 
           {RGBColor[1, 1, 0], PointBox[1108]}, 
           {RGBColor[1, 0, 0], PointBox[1109]}, 
           {RGBColor[0, 0, 1], PointBox[1110]}, 
           {RGBColor[1, 1, 0], PointBox[1111]}, 
           {RGBColor[1, 1, 0], PointBox[1112]}, 
           {RGBColor[0, 0, 1], PointBox[1113]}, 
           {RGBColor[0, 0, 1], PointBox[1114]}, 
           {RGBColor[1, 0, 0], PointBox[1115]}, 
           {RGBColor[0, 0, 1], PointBox[1116]}, 
           {RGBColor[1, 1, 0], PointBox[1117]}, 
           {RGBColor[1, 1, 0], PointBox[1118]}, 
           {RGBColor[0, 0, 1], PointBox[1119]}, 
           {RGBColor[1, 1, 0], PointBox[1120]}, 
           {RGBColor[1, 0, 0], PointBox[1121]}, 
           {RGBColor[0, 0, 1], PointBox[1122]}, 
           {RGBColor[1, 0, 0], PointBox[1123]}, 
           {RGBColor[0, 0, 1], PointBox[1124]}, 
           {RGBColor[1, 1, 0], PointBox[1125]}, 
           {RGBColor[1, 1, 0], PointBox[1126]}, 
           {RGBColor[0, 0, 1], PointBox[1127]}, 
           {RGBColor[1, 1, 0], PointBox[1128]}, 
           {RGBColor[1, 0, 0], PointBox[1129]}, 
           {RGBColor[0, 0, 1], PointBox[1130]}, 
           {RGBColor[1, 1, 0], PointBox[1131]}, 
           {RGBColor[0, 0, 1], PointBox[1132]}, 
           {RGBColor[1, 1, 0], PointBox[1133]}, 
           {RGBColor[0, 0, 1], PointBox[1134]}, 
           {RGBColor[1, 0, 0], PointBox[1135]}, 
           {RGBColor[0, 0, 1], PointBox[1136]}, 
           {RGBColor[1, 1, 0], PointBox[1137]}, 
           {RGBColor[1, 1, 0], PointBox[1138]}, 
           {RGBColor[0, 0, 1], PointBox[1139]}, 
           {RGBColor[1, 1, 0], PointBox[1140]}, 
           {RGBColor[1, 0, 0], PointBox[1141]}, 
           {RGBColor[0, 0, 1], PointBox[1142]}, 
           {RGBColor[1, 1, 0], PointBox[1143]}, 
           {RGBColor[0, 0, 1], PointBox[1144]}, 
           {RGBColor[1, 1, 0], PointBox[1145]}, 
           {RGBColor[0, 0, 1], PointBox[1146]}, 
           {RGBColor[1, 0, 0], PointBox[1147]}, 
           {RGBColor[0, 0, 1], PointBox[1148]}, 
           {RGBColor[1, 0, 0], PointBox[1149]}, 
           {RGBColor[0, 0, 1], PointBox[1150]}, 
           {RGBColor[1, 1, 0], PointBox[1151]}, 
           {RGBColor[1, 1, 0], PointBox[1152]}, 
           {RGBColor[0, 0, 1], PointBox[1153]}, 
           {RGBColor[1, 1, 0], PointBox[1154]}, 
           {RGBColor[1, 0, 0], PointBox[1155]}, 
           {RGBColor[0, 0, 1], PointBox[1156]}, 
           {RGBColor[1, 1, 0], PointBox[1157]}, 
           {RGBColor[0, 0, 1], PointBox[1158]}, 
           {RGBColor[1, 1, 0], PointBox[1159]}, 
           {RGBColor[1, 1, 0], PointBox[1160]}, 
           {RGBColor[1, 0, 0], PointBox[1161]}, 
           {RGBColor[0, 0, 1], PointBox[1162]}, 
           {RGBColor[1, 1, 0], PointBox[1163]}, 
           {RGBColor[1, 1, 0], PointBox[1164]}, 
           {RGBColor[0, 0, 1], PointBox[1165]}, 
           {RGBColor[0, 0, 1], PointBox[1166]}, 
           {RGBColor[1, 0, 0], PointBox[1167]}, 
           {RGBColor[0, 0, 1], PointBox[1168]}, 
           {RGBColor[1, 1, 0], PointBox[1169]}, 
           {RGBColor[1, 1, 0], PointBox[1170]}, 
           {RGBColor[0, 0, 1], PointBox[1171]}, 
           {RGBColor[1, 1, 0], PointBox[1172]}, 
           {RGBColor[1, 0, 0], PointBox[1173]}, 
           {RGBColor[0, 0, 1], PointBox[1174]}, 
           {RGBColor[1, 0, 0], PointBox[1175]}, 
           {RGBColor[0, 0, 1], PointBox[1176]}, 
           {RGBColor[1, 1, 0], PointBox[1177]}, 
           {RGBColor[1, 1, 0], PointBox[1178]}, 
           {RGBColor[0, 0, 1], PointBox[1179]}, 
           {RGBColor[1, 1, 0], PointBox[1180]}, 
           {RGBColor[1, 0, 0], PointBox[1181]}, 
           {RGBColor[0, 0, 1], PointBox[1182]}, 
           {RGBColor[1, 1, 0], PointBox[1183]}, 
           {RGBColor[0, 0, 1], PointBox[1184]}, 
           {RGBColor[1, 1, 0], PointBox[1185]}, 
           {RGBColor[0, 0, 1], PointBox[1186]}, 
           {RGBColor[1, 0, 0], PointBox[1187]}, 
           {RGBColor[0, 0, 1], PointBox[1188]}, 
           {RGBColor[1, 1, 0], PointBox[1189]}, 
           {RGBColor[1, 1, 0], PointBox[1190]}, 
           {RGBColor[0, 0, 1], PointBox[1191]}, 
           {RGBColor[1, 1, 0], PointBox[1192]}, 
           {RGBColor[1, 0, 0], PointBox[1193]}, 
           {RGBColor[0, 0, 1], PointBox[1194]}, 
           {RGBColor[1, 1, 0], PointBox[1195]}, 
           {RGBColor[0, 0, 1], PointBox[1196]}, 
           {RGBColor[1, 1, 0], PointBox[1197]}, 
           {RGBColor[1, 1, 0], PointBox[1198]}, 
           {RGBColor[1, 0, 0], PointBox[1199]}, 
           {RGBColor[0, 0, 1], PointBox[1200]}, 
           {RGBColor[1, 0, 0], PointBox[1201]}, 
           {RGBColor[0, 0, 1], PointBox[1202]}, 
           {RGBColor[1, 0, 0], PointBox[1203]}, 
           {RGBColor[0, 0, 1], PointBox[1204]}, 
           {RGBColor[1, 1, 0], PointBox[1205]}, 
           {RGBColor[1, 0, 0], PointBox[1206]}, 
           {RGBColor[0, 0, 1], PointBox[1207]}, 
           {RGBColor[1, 1, 0], PointBox[1208]}, 
           {RGBColor[1, 0, 0], PointBox[1209]}, 
           {RGBColor[0, 0, 1], PointBox[1210]}, 
           {RGBColor[0, 0, 1], PointBox[1211]}, 
           {RGBColor[1, 0, 0], PointBox[1212]}, 
           {RGBColor[1, 1, 0], PointBox[1213]}, 
           {RGBColor[1, 0, 0], PointBox[1214]}, 
           {RGBColor[0, 0, 1], PointBox[1215]}, 
           {RGBColor[1, 0, 0], PointBox[1216]}, 
           {RGBColor[1, 1, 0], PointBox[1217]}, 
           {RGBColor[1, 0, 0], PointBox[1218]}, 
           {RGBColor[0, 0, 1], PointBox[1219]}, 
           {RGBColor[0, 0, 1], PointBox[1220]}, 
           {RGBColor[1, 0, 0], PointBox[1221]}, 
           {RGBColor[0, 0, 1], PointBox[1222]}, 
           {RGBColor[1, 1, 0], PointBox[1223]}, 
           {RGBColor[1, 0, 0], PointBox[1224]}, 
           {RGBColor[0, 0, 1], PointBox[1225]}, 
           {RGBColor[1, 1, 0], PointBox[1226]}, 
           {RGBColor[1, 0, 0], PointBox[1227]}, 
           {RGBColor[0, 0, 1], PointBox[1228]}, 
           {RGBColor[1, 0, 0], PointBox[1229]}, 
           {RGBColor[0, 0, 1], PointBox[1230]}, 
           {RGBColor[1, 1, 0], PointBox[1231]}, 
           {RGBColor[1, 0, 0], PointBox[1232]}, 
           {RGBColor[0, 0, 1], PointBox[1233]}, 
           {RGBColor[1, 1, 0], PointBox[1234]}, 
           {RGBColor[1, 0, 0], PointBox[1235]}, 
           {RGBColor[0, 0, 1], PointBox[1236]}, 
           {RGBColor[0, 0, 1], PointBox[1237]}, 
           {RGBColor[1, 0, 0], PointBox[1238]}, 
           {RGBColor[0, 0, 1], PointBox[1239]}, 
           {RGBColor[1, 0, 0], PointBox[1240]}, 
           {RGBColor[0, 0, 1], PointBox[1241]}, 
           {RGBColor[1, 0, 0], PointBox[1242]}, 
           {RGBColor[1, 1, 0], PointBox[1243]}, 
           {RGBColor[1, 0, 0], PointBox[1244]}, 
           {RGBColor[0, 0, 1], PointBox[1245]}, 
           {RGBColor[1, 1, 0], PointBox[1246]}, 
           {RGBColor[1, 0, 0], PointBox[1247]}, 
           {RGBColor[0, 0, 1], PointBox[1248]}, 
           {RGBColor[0, 0, 1], PointBox[1249]}, 
           {RGBColor[1, 0, 0], PointBox[1250]}, 
           {RGBColor[0, 0, 1], PointBox[1251]}, 
           {RGBColor[1, 0, 0], PointBox[1252]}, 
           {RGBColor[0, 0, 1], PointBox[1253]}, 
           {RGBColor[1, 0, 0], PointBox[1254]}, 
           {RGBColor[0, 0, 1], PointBox[1255]}, 
           {RGBColor[1, 0, 0], PointBox[1256]}, 
           {RGBColor[1, 1, 0], PointBox[1257]}, 
           {RGBColor[1, 0, 0], PointBox[1258]}, 
           {RGBColor[0, 0, 1], PointBox[1259]}, 
           {RGBColor[1, 1, 0], PointBox[1260]}, 
           {RGBColor[1, 0, 0], PointBox[1261]}, 
           {RGBColor[0, 0, 1], PointBox[1262]}, 
           {RGBColor[0, 0, 1], PointBox[1263]}, 
           {RGBColor[1, 0, 0], PointBox[1264]}, 
           {RGBColor[1, 1, 0], PointBox[1265]}, 
           {RGBColor[1, 0, 0], PointBox[1266]}, 
           {RGBColor[0, 0, 1], PointBox[1267]}, 
           {RGBColor[1, 0, 0], PointBox[1268]}, 
           {RGBColor[1, 1, 0], PointBox[1269]}, 
           {RGBColor[1, 0, 0], PointBox[1270]}, 
           {RGBColor[0, 0, 1], PointBox[1271]}, 
           {RGBColor[0, 0, 1], PointBox[1272]}, 
           {RGBColor[1, 0, 0], PointBox[1273]}, 
           {RGBColor[0, 0, 1], PointBox[1274]}, 
           {RGBColor[1, 1, 0], PointBox[1275]}, 
           {RGBColor[1, 0, 0], PointBox[1276]}, 
           {RGBColor[0, 0, 1], PointBox[1277]}, 
           {RGBColor[1, 1, 0], PointBox[1278]}, 
           {RGBColor[1, 0, 0], PointBox[1279]}, 
           {RGBColor[0, 0, 1], PointBox[1280]}, 
           {RGBColor[1, 0, 0], PointBox[1281]}, 
           {RGBColor[0, 0, 1], PointBox[1282]}, 
           {RGBColor[1, 1, 0], PointBox[1283]}, 
           {RGBColor[1, 0, 0], PointBox[1284]}, 
           {RGBColor[0, 0, 1], PointBox[1285]}, 
           {RGBColor[1, 1, 0], PointBox[1286]}, 
           {RGBColor[1, 0, 0], PointBox[1287]}, 
           {RGBColor[0, 0, 1], PointBox[1288]}, 
           {RGBColor[0, 0, 1], PointBox[1289]}, 
           {RGBColor[1, 0, 0], PointBox[1290]}, 
           {RGBColor[0, 0, 1], PointBox[1291]}, 
           {RGBColor[1, 0, 0], PointBox[1292]}, 
           {RGBColor[0, 0, 1], PointBox[1293]}, 
           {RGBColor[1, 0, 0], PointBox[1294]}, 
           {RGBColor[1, 1, 0], PointBox[1295]}, 
           {RGBColor[1, 0, 0], PointBox[1296]}, 
           {RGBColor[0, 0, 1], PointBox[1297]}, 
           {RGBColor[1, 1, 0], PointBox[1298]}, 
           {RGBColor[1, 0, 0], PointBox[1299]}, 
           {RGBColor[0, 0, 1], PointBox[1300]}, 
           {RGBColor[0, 0, 1], PointBox[1301]}, 
           {RGBColor[1, 0, 0], PointBox[1302]}, 
           {RGBColor[1, 1, 0], PointBox[1303]}, 
           {RGBColor[0, 0, 1], PointBox[1304]}, 
           {RGBColor[1, 0, 0], PointBox[1305]}, 
           {RGBColor[1, 0, 0], PointBox[1306]}, 
           {RGBColor[0, 0, 1], PointBox[1307]}, 
           {RGBColor[1, 0, 0], PointBox[1308]}, 
           {RGBColor[0, 0, 1], PointBox[1309]}, 
           {RGBColor[1, 0, 0], PointBox[1310]}, 
           {RGBColor[0, 0, 1], PointBox[1311]}, 
           {RGBColor[1, 1, 0], PointBox[1312]}, 
           {RGBColor[0, 1, 0], PointBox[1313]}, 
           {RGBColor[0, 0, 1], PointBox[1314]}, 
           {RGBColor[1, 0, 0], PointBox[1315]}, 
           {RGBColor[1, 0, 0], PointBox[1316]}, 
           {RGBColor[0, 0, 1], PointBox[1317]}, 
           {RGBColor[1, 0, 0], PointBox[1318]}, 
           {RGBColor[0, 0, 1], PointBox[1319]}, 
           {RGBColor[1, 0, 0], PointBox[1320]}, 
           {RGBColor[0, 0, 1], PointBox[1321]}, 
           {RGBColor[1, 1, 0], PointBox[1322]}, 
           {RGBColor[0, 1, 0], PointBox[1323]}, 
           {RGBColor[1, 0, 0], PointBox[1324]}, 
           {RGBColor[1, 0, 0], PointBox[1325]}, 
           {RGBColor[0, 1, 0], PointBox[1326]}, 
           {RGBColor[1, 0, 0], PointBox[1327]}, 
           {RGBColor[0, 1, 0], PointBox[1328]}, 
           {RGBColor[1, 0, 0], PointBox[1329]}, 
           {RGBColor[0, 1, 0], PointBox[1330]}, 
           {RGBColor[0, 0, 1], PointBox[1331]}, 
           {RGBColor[0, 0, 1], PointBox[1332]}, 
           {RGBColor[0, 1, 0], PointBox[1333]}, 
           {RGBColor[0, 0, 1], PointBox[1334]}, 
           {RGBColor[1, 0, 0], PointBox[1335]}, 
           {RGBColor[0, 1, 0], PointBox[1336]}, 
           {RGBColor[0, 0, 1], PointBox[1337]}, 
           {RGBColor[0, 1, 0], PointBox[1338]}, 
           {RGBColor[0, 0, 1], PointBox[1339]}, 
           {RGBColor[0, 0, 1], PointBox[1340]}, 
           {RGBColor[1, 0, 0], PointBox[1341]}, 
           {RGBColor[0, 1, 0], PointBox[1342]}, 
           {RGBColor[0, 0, 1], PointBox[1343]}, 
           {RGBColor[0, 0, 1], PointBox[1344]}, 
           {RGBColor[0, 1, 0], PointBox[1345]}, 
           {RGBColor[0, 1, 0], PointBox[1346]}, 
           {RGBColor[1, 0, 0], PointBox[1347]}, 
           {RGBColor[0, 1, 0], PointBox[1348]}, 
           {RGBColor[0, 0, 1], PointBox[1349]}, 
           {RGBColor[0, 0, 1], PointBox[1350]}, 
           {RGBColor[0, 1, 0], PointBox[1351]}, 
           {RGBColor[0, 0, 1], PointBox[1352]}, 
           {RGBColor[1, 0, 0], PointBox[1353]}, 
           {RGBColor[0, 1, 0], PointBox[1354]}, 
           {RGBColor[1, 0, 0], PointBox[1355]}, 
           {RGBColor[0, 1, 0], PointBox[1356]}, 
           {RGBColor[0, 0, 1], PointBox[1357]}, 
           {RGBColor[0, 0, 1], PointBox[1358]}, 
           {RGBColor[0, 1, 0], PointBox[1359]}, 
           {RGBColor[0, 0, 1], PointBox[1360]}, 
           {RGBColor[1, 0, 0], PointBox[1361]}, 
           {RGBColor[0, 1, 0], PointBox[1362]}, 
           {RGBColor[0, 0, 1], PointBox[1363]}, 
           {RGBColor[0, 1, 0], PointBox[1364]}, 
           {RGBColor[0, 0, 1], PointBox[1365]}, 
           {RGBColor[0, 1, 0], PointBox[1366]}, 
           {RGBColor[1, 0, 0], PointBox[1367]}, 
           {RGBColor[0, 1, 0], PointBox[1368]}, 
           {RGBColor[0, 0, 1], PointBox[1369]}, 
           {RGBColor[0, 0, 1], PointBox[1370]}, 
           {RGBColor[0, 1, 0], PointBox[1371]}, 
           {RGBColor[0, 0, 1], PointBox[1372]}, 
           {RGBColor[1, 0, 0], PointBox[1373]}, 
           {RGBColor[0, 1, 0], PointBox[1374]}, 
           {RGBColor[0, 0, 1], PointBox[1375]}, 
           {RGBColor[0, 1, 0], PointBox[1376]}, 
           {RGBColor[0, 0, 1], PointBox[1377]}, 
           {RGBColor[0, 0, 1], PointBox[1378]}, 
           {RGBColor[1, 0, 0], PointBox[1379]}, 
           {RGBColor[0, 1, 0], PointBox[1380]}, 
           {RGBColor[1, 0, 0], PointBox[1381]}, 
           {RGBColor[0, 1, 0], PointBox[1382]}, 
           {RGBColor[0, 0, 1], PointBox[1383]}, 
           {RGBColor[0, 0, 1], PointBox[1384]}, 
           {RGBColor[0, 1, 0], PointBox[1385]}, 
           {RGBColor[0, 0, 1], PointBox[1386]}, 
           {RGBColor[1, 0, 0], PointBox[1387]}, 
           {RGBColor[0, 1, 0], PointBox[1388]}, 
           {RGBColor[0, 0, 1], PointBox[1389]}, 
           {RGBColor[0, 1, 0], PointBox[1390]}, 
           {RGBColor[0, 0, 1], PointBox[1391]}, 
           {RGBColor[0, 0, 1], PointBox[1392]}, 
           {RGBColor[1, 0, 0], PointBox[1393]}, 
           {RGBColor[0, 1, 0], PointBox[1394]}, 
           {RGBColor[0, 0, 1], PointBox[1395]}, 
           {RGBColor[0, 0, 1], PointBox[1396]}, 
           {RGBColor[0, 1, 0], PointBox[1397]}, 
           {RGBColor[0, 1, 0], PointBox[1398]}, 
           {RGBColor[1, 0, 0], PointBox[1399]}, 
           {RGBColor[0, 1, 0], PointBox[1400]}, 
           {RGBColor[0, 0, 1], PointBox[1401]}, 
           {RGBColor[0, 0, 1], PointBox[1402]}, 
           {RGBColor[0, 1, 0], PointBox[1403]}, 
           {RGBColor[0, 1, 0], PointBox[1404]}, 
           {RGBColor[1, 0, 0], PointBox[1405]}, 
           {RGBColor[0, 1, 0], PointBox[1406]}, 
           {RGBColor[1, 0, 0], PointBox[1407]}, 
           {RGBColor[0, 1, 0], PointBox[1408]}, 
           {RGBColor[0, 0, 1], PointBox[1409]}, 
           {RGBColor[0, 0, 1], PointBox[1410]}, 
           {RGBColor[0, 1, 0], PointBox[1411]}, 
           {RGBColor[0, 0, 1], PointBox[1412]}, 
           {RGBColor[1, 0, 0], PointBox[1413]}, 
           {RGBColor[0, 1, 0], PointBox[1414]}, 
           {RGBColor[0, 0, 1], PointBox[1415]}, 
           {RGBColor[0, 1, 0], PointBox[1416]}, 
           {RGBColor[0, 0, 1], PointBox[1417]}, 
           {RGBColor[0, 0, 1], PointBox[1418]}, 
           {RGBColor[1, 0, 0], PointBox[1419]}, 
           {RGBColor[0, 1, 0], PointBox[1420]}, 
           {RGBColor[0, 0, 1], PointBox[1421]}, 
           {RGBColor[0, 0, 1], PointBox[1422]}, 
           {RGBColor[0, 1, 0], PointBox[1423]}, 
           {RGBColor[0, 1, 0], PointBox[1424]}, 
           {RGBColor[1, 0, 0], PointBox[1425]}, 
           {RGBColor[0, 1, 0], PointBox[1426]}, 
           {RGBColor[0, 0, 1], PointBox[1427]}, 
           {RGBColor[0, 0, 1], PointBox[1428]}, 
           {RGBColor[0, 1, 0], PointBox[1429]}, 
           {RGBColor[0, 1, 0], PointBox[1430]}, 
           {RGBColor[1, 0, 0], PointBox[1431]}, 
           {RGBColor[0, 1, 0], PointBox[1432]}, 
           {RGBColor[1, 0, 0], PointBox[1433]}, 
           {RGBColor[0, 1, 0], PointBox[1434]}, 
           {RGBColor[1, 0, 0], PointBox[1435]}, 
           {RGBColor[0, 0, 1], PointBox[1436]}, 
           {RGBColor[0, 0, 1], PointBox[1437]}, 
           {RGBColor[1, 0, 0], PointBox[1438]}, 
           {RGBColor[0, 0, 1], PointBox[1439]}, 
           {RGBColor[1, 0, 0], PointBox[1440]}, 
           {RGBColor[0, 0, 1], PointBox[1441]}, 
           {RGBColor[0, 1, 0], PointBox[1442]}, 
           {RGBColor[1, 0, 0], PointBox[1443]}, 
           {RGBColor[0, 0, 1], PointBox[1444]}, 
           {RGBColor[0, 0, 1], PointBox[1445]}, 
           {RGBColor[1, 0, 0], PointBox[1446]}, 
           {RGBColor[0, 1, 0], PointBox[1447]}, 
           {RGBColor[1, 0, 0], PointBox[1448]}, 
           {RGBColor[0, 0, 1], PointBox[1449]}, 
           {RGBColor[0, 0, 1], PointBox[1450]}, 
           {RGBColor[1, 0, 0], PointBox[1451]}, 
           {RGBColor[0, 1, 0], PointBox[1452]}, 
           {RGBColor[1, 0, 0], PointBox[1453]}, 
           {RGBColor[0, 0, 1], PointBox[1454]}, 
           {RGBColor[0, 0, 1], PointBox[1455]}, 
           {RGBColor[1, 0, 0], PointBox[1456]}, 
           {RGBColor[0, 0, 1], PointBox[1457]}, 
           {RGBColor[1, 0, 0], PointBox[1458]}, 
           {RGBColor[0, 1, 0], PointBox[1459]}, 
           {RGBColor[1, 0, 0], PointBox[1460]}, 
           {RGBColor[0, 0, 1], PointBox[1461]}, 
           {RGBColor[0, 0, 1], PointBox[1462]}, 
           {RGBColor[1, 0, 0], PointBox[1463]}, 
           {RGBColor[0, 0, 1], PointBox[1464]}, 
           {RGBColor[1, 0, 0], PointBox[1465]}, 
           {RGBColor[0, 0, 1], PointBox[1466]}, 
           {RGBColor[0, 1, 0], PointBox[1467]}, 
           {RGBColor[1, 0, 0], PointBox[1468]}, 
           {RGBColor[0, 0, 1], PointBox[1469]}, 
           {RGBColor[0, 1, 0], PointBox[1470]}, 
           {RGBColor[1, 0, 0], PointBox[1471]}, 
           {RGBColor[0, 1, 0], PointBox[1472]}, 
           {RGBColor[1, 0, 0], PointBox[1473]}, 
           {RGBColor[0, 0, 1], PointBox[1474]}, 
           {RGBColor[0, 0, 1], PointBox[1475]}, 
           {RGBColor[1, 0, 0], PointBox[1476]}, 
           {RGBColor[0, 0, 1], PointBox[1477]}, 
           {RGBColor[1, 0, 0], PointBox[1478]}, 
           {RGBColor[0, 0, 1], PointBox[1479]}, 
           {RGBColor[0, 1, 0], PointBox[1480]}, 
           {RGBColor[1, 0, 0], PointBox[1481]}, 
           {RGBColor[0, 0, 1], PointBox[1482]}, 
           {RGBColor[0, 0, 1], PointBox[1483]}, 
           {RGBColor[1, 0, 0], PointBox[1484]}, 
           {RGBColor[0, 1, 0], PointBox[1485]}, 
           {RGBColor[1, 0, 0], PointBox[1486]}, 
           {RGBColor[0, 1, 0], PointBox[1487]}, 
           {RGBColor[1, 0, 0], PointBox[1488]}, 
           {RGBColor[0, 0, 1], PointBox[1489]}, 
           {RGBColor[0, 0, 1], PointBox[1490]}, 
           {RGBColor[1, 0, 0], PointBox[1491]}, 
           {RGBColor[0, 0, 1], PointBox[1492]}, 
           {RGBColor[1, 0, 0], PointBox[1493]}, 
           {RGBColor[0, 0, 1], PointBox[1494]}, 
           {RGBColor[0, 1, 0], PointBox[1495]}, 
           {RGBColor[1, 0, 0], PointBox[1496]}, 
           {RGBColor[0, 0, 1], PointBox[1497]}, 
           {RGBColor[0, 0, 1], PointBox[1498]}, 
           {RGBColor[1, 0, 0], PointBox[1499]}, 
           {RGBColor[0, 1, 0], PointBox[1500]}, 
           {RGBColor[1, 0, 0], PointBox[1501]}, 
           {RGBColor[0, 0, 1], PointBox[1502]}, 
           {RGBColor[0, 0, 1], PointBox[1503]}, 
           {RGBColor[1, 0, 0], PointBox[1504]}, 
           {RGBColor[0, 1, 0], PointBox[1505]}, 
           {RGBColor[1, 0, 0], PointBox[1506]}, 
           {RGBColor[0, 0, 1], PointBox[1507]}, 
           {RGBColor[0, 0, 1], PointBox[1508]}, 
           {RGBColor[1, 0, 0], PointBox[1509]}, 
           {RGBColor[0, 1, 0], PointBox[1510]}, 
           {RGBColor[1, 0, 0], PointBox[1511]}, 
           {RGBColor[0, 1, 0], PointBox[1512]}, 
           {RGBColor[1, 0, 0], PointBox[1513]}, 
           {RGBColor[0, 0, 1], PointBox[1514]}, 
           {RGBColor[0, 0, 1], PointBox[1515]}, 
           {RGBColor[1, 0, 0], PointBox[1516]}, 
           {RGBColor[0, 0, 1], PointBox[1517]}, 
           {RGBColor[1, 0, 0], PointBox[1518]}, 
           {RGBColor[0, 0, 1], PointBox[1519]}, 
           {RGBColor[0, 1, 0], PointBox[1520]}, 
           {RGBColor[1, 0, 0], PointBox[1521]}, 
           {RGBColor[0, 0, 1], PointBox[1522]}, 
           {RGBColor[0, 0, 1], PointBox[1523]}, 
           {RGBColor[1, 0, 0], PointBox[1524]}, 
           {RGBColor[0, 1, 0], PointBox[1525]}, 
           {RGBColor[1, 0, 0], PointBox[1526]}, 
           {RGBColor[0, 0, 1], PointBox[1527]}, 
           {RGBColor[0, 0, 1], PointBox[1528]}, 
           {RGBColor[1, 0, 0], PointBox[1529]}, 
           {RGBColor[0, 1, 0], PointBox[1530]}, 
           {RGBColor[1, 0, 0], PointBox[1531]}, 
           {RGBColor[0, 0, 1], PointBox[1532]}, 
           {RGBColor[0, 0, 1], PointBox[1533]}, 
           {RGBColor[1, 0, 0], PointBox[1534]}, 
           {RGBColor[0, 0, 1], PointBox[1535]}, 
           {RGBColor[1, 0, 0], PointBox[1536]}, 
           {RGBColor[1, 0, 0], PointBox[1537]}, 
           {RGBColor[0, 1, 0], PointBox[1538]}, 
           {RGBColor[1, 0, 0], PointBox[1539]}, 
           {RGBColor[0, 1, 0], PointBox[1540]}, 
           {RGBColor[1, 0, 0], PointBox[1541]}, 
           {RGBColor[0, 1, 0], PointBox[1542]}, 
           {RGBColor[0, 0, 1], PointBox[1543]}, 
           {RGBColor[0, 0, 1], PointBox[1544]}, 
           {RGBColor[0, 1, 0], PointBox[1545]}, 
           {RGBColor[0, 0, 1], PointBox[1546]}, 
           {RGBColor[1, 0, 0], PointBox[1547]}, 
           {RGBColor[0, 1, 0], PointBox[1548]}, 
           {RGBColor[0, 0, 1], PointBox[1549]}, 
           {RGBColor[0, 1, 0], PointBox[1550]}, 
           {RGBColor[0, 0, 1], PointBox[1551]}, 
           {RGBColor[0, 0, 1], PointBox[1552]}, 
           {RGBColor[1, 0, 0], PointBox[1553]}, 
           {RGBColor[0, 1, 0], PointBox[1554]}, 
           {RGBColor[0, 0, 1], PointBox[1555]}, 
           {RGBColor[0, 0, 1], PointBox[1556]}, 
           {RGBColor[0, 1, 0], PointBox[1557]}, 
           {RGBColor[0, 1, 0], PointBox[1558]}, 
           {RGBColor[1, 0, 0], PointBox[1559]}, 
           {RGBColor[0, 1, 0], PointBox[1560]}, 
           {RGBColor[0, 0, 1], PointBox[1561]}, 
           {RGBColor[0, 0, 1], PointBox[1562]}, 
           {RGBColor[0, 1, 0], PointBox[1563]}, 
           {RGBColor[0, 0, 1], PointBox[1564]}, 
           {RGBColor[1, 0, 0], PointBox[1565]}, 
           {RGBColor[0, 1, 0], PointBox[1566]}, 
           {RGBColor[1, 0, 0], PointBox[1567]}, 
           {RGBColor[0, 1, 0], PointBox[1568]}, 
           {RGBColor[0, 0, 1], PointBox[1569]}, 
           {RGBColor[0, 0, 1], PointBox[1570]}, 
           {RGBColor[0, 1, 0], PointBox[1571]}, 
           {RGBColor[0, 0, 1], PointBox[1572]}, 
           {RGBColor[1, 0, 0], PointBox[1573]}, 
           {RGBColor[0, 1, 0], PointBox[1574]}, 
           {RGBColor[0, 0, 1], PointBox[1575]}, 
           {RGBColor[0, 1, 0], PointBox[1576]}, 
           {RGBColor[0, 0, 1], PointBox[1577]}, 
           {RGBColor[0, 1, 0], PointBox[1578]}, 
           {RGBColor[1, 0, 0], PointBox[1579]}, 
           {RGBColor[0, 1, 0], PointBox[1580]}, 
           {RGBColor[0, 0, 1], PointBox[1581]}, 
           {RGBColor[0, 0, 1], PointBox[1582]}, 
           {RGBColor[0, 1, 0], PointBox[1583]}, 
           {RGBColor[0, 0, 1], PointBox[1584]}, 
           {RGBColor[1, 0, 0], PointBox[1585]}, 
           {RGBColor[0, 1, 0], PointBox[1586]}, 
           {RGBColor[0, 0, 1], PointBox[1587]}, 
           {RGBColor[0, 1, 0], PointBox[1588]}, 
           {RGBColor[0, 0, 1], PointBox[1589]}, 
           {RGBColor[0, 1, 0], PointBox[1590]}, 
           {RGBColor[1, 0, 0], PointBox[1591]}, 
           {RGBColor[0, 1, 0], PointBox[1592]}, 
           {RGBColor[1, 0, 0], PointBox[1593]}, 
           {RGBColor[0, 1, 0], PointBox[1594]}, 
           {RGBColor[0, 0, 1], PointBox[1595]}, 
           {RGBColor[0, 0, 1], PointBox[1596]}, 
           {RGBColor[0, 1, 0], PointBox[1597]}, 
           {RGBColor[0, 0, 1], PointBox[1598]}, 
           {RGBColor[1, 0, 0], PointBox[1599]}, 
           {RGBColor[0, 1, 0], PointBox[1600]}, 
           {RGBColor[0, 0, 1], PointBox[1601]}, 
           {RGBColor[0, 1, 0], PointBox[1602]}, 
           {RGBColor[0, 0, 1], PointBox[1603]}, 
           {RGBColor[0, 0, 1], PointBox[1604]}, 
           {RGBColor[1, 0, 0], PointBox[1605]}, 
           {RGBColor[0, 1, 0], PointBox[1606]}, 
           {RGBColor[0, 0, 1], PointBox[1607]}, 
           {RGBColor[0, 0, 1], PointBox[1608]}, 
           {RGBColor[0, 1, 0], PointBox[1609]}, 
           {RGBColor[0, 1, 0], PointBox[1610]}, 
           {RGBColor[1, 0, 0], PointBox[1611]}, 
           {RGBColor[0, 1, 0], PointBox[1612]}, 
           {RGBColor[0, 0, 1], PointBox[1613]}, 
           {RGBColor[0, 0, 1], PointBox[1614]}, 
           {RGBColor[0, 1, 0], PointBox[1615]}, 
           {RGBColor[0, 0, 1], PointBox[1616]}, 
           {RGBColor[1, 0, 0], PointBox[1617]}, 
           {RGBColor[0, 1, 0], PointBox[1618]}, 
           {RGBColor[1, 0, 0], PointBox[1619]}, 
           {RGBColor[0, 1, 0], PointBox[1620]}, 
           {RGBColor[0, 0, 1], PointBox[1621]}, 
           {RGBColor[0, 0, 1], PointBox[1622]}, 
           {RGBColor[0, 1, 0], PointBox[1623]}, 
           {RGBColor[0, 0, 1], PointBox[1624]}, 
           {RGBColor[1, 0, 0], PointBox[1625]}, 
           {RGBColor[0, 1, 0], PointBox[1626]}, 
           {RGBColor[0, 0, 1], PointBox[1627]}, 
           {RGBColor[0, 1, 0], PointBox[1628]}, 
           {RGBColor[0, 0, 1], PointBox[1629]}, 
           {RGBColor[0, 1, 0], PointBox[1630]}, 
           {RGBColor[1, 0, 0], PointBox[1631]}, 
           {RGBColor[0, 1, 0], PointBox[1632]}, 
           {RGBColor[0, 0, 1], PointBox[1633]}, 
           {RGBColor[0, 0, 1], PointBox[1634]}, 
           {RGBColor[0, 1, 0], PointBox[1635]}, 
           {RGBColor[0, 0, 1], PointBox[1636]}, 
           {RGBColor[1, 0, 0], PointBox[1637]}, 
           {RGBColor[0, 1, 0], PointBox[1638]}, 
           {RGBColor[0, 0, 1], PointBox[1639]}, 
           {RGBColor[0, 1, 0], PointBox[1640]}, 
           {RGBColor[0, 0, 1], PointBox[1641]}, 
           {RGBColor[0, 1, 0], PointBox[1642]}, 
           {RGBColor[1, 0, 0], PointBox[1643]}, 
           {RGBColor[0, 1, 0], PointBox[1644]}, 
           {RGBColor[1, 0, 0], PointBox[1645]}, 
           {RGBColor[0, 1, 0], PointBox[1646]}, 
           {RGBColor[1, 0, 0], PointBox[1647]}, 
           {RGBColor[0, 0, 1], PointBox[1648]}, 
           {RGBColor[0, 0, 1], PointBox[1649]}, 
           {RGBColor[1, 0, 0], PointBox[1650]}, 
           {RGBColor[0, 0, 1], PointBox[1651]}, 
           {RGBColor[1, 0, 0], PointBox[1652]}, 
           {RGBColor[0, 0, 1], PointBox[1653]}, 
           {RGBColor[0, 1, 0], PointBox[1654]}, 
           {RGBColor[1, 0, 0], PointBox[1655]}, 
           {RGBColor[0, 0, 1], PointBox[1656]}, 
           {RGBColor[0, 0, 1], PointBox[1657]}, 
           {RGBColor[1, 0, 0], PointBox[1658]}, 
           {RGBColor[0, 1, 0], PointBox[1659]}, 
           {RGBColor[1, 0, 0], PointBox[1660]}, 
           {RGBColor[0, 0, 1], PointBox[1661]}, 
           {RGBColor[0, 0, 1], PointBox[1662]}, 
           {RGBColor[1, 0, 0], PointBox[1663]}, 
           {RGBColor[0, 1, 0], PointBox[1664]}, 
           {RGBColor[1, 0, 0], PointBox[1665]}, 
           {RGBColor[0, 0, 1], PointBox[1666]}, 
           {RGBColor[0, 0, 1], PointBox[1667]}, 
           {RGBColor[1, 0, 0], PointBox[1668]}, 
           {RGBColor[0, 0, 1], PointBox[1669]}, 
           {RGBColor[1, 0, 0], PointBox[1670]}, 
           {RGBColor[0, 1, 0], PointBox[1671]}, 
           {RGBColor[1, 0, 0], PointBox[1672]}, 
           {RGBColor[0, 0, 1], PointBox[1673]}, 
           {RGBColor[0, 0, 1], PointBox[1674]}, 
           {RGBColor[1, 0, 0], PointBox[1675]}, 
           {RGBColor[0, 0, 1], PointBox[1676]}, 
           {RGBColor[1, 0, 0], PointBox[1677]}, 
           {RGBColor[0, 0, 1], PointBox[1678]}, 
           {RGBColor[0, 1, 0], PointBox[1679]}, 
           {RGBColor[1, 0, 0], PointBox[1680]}, 
           {RGBColor[0, 0, 1], PointBox[1681]}, 
           {RGBColor[0, 1, 0], PointBox[1682]}, 
           {RGBColor[1, 0, 0], PointBox[1683]}, 
           {RGBColor[0, 1, 0], PointBox[1684]}, 
           {RGBColor[1, 0, 0], PointBox[1685]}, 
           {RGBColor[0, 0, 1], PointBox[1686]}, 
           {RGBColor[0, 0, 1], PointBox[1687]}, 
           {RGBColor[1, 0, 0], PointBox[1688]}, 
           {RGBColor[0, 0, 1], PointBox[1689]}, 
           {RGBColor[1, 0, 0], PointBox[1690]}, 
           {RGBColor[0, 0, 1], PointBox[1691]}, 
           {RGBColor[0, 1, 0], PointBox[1692]}, 
           {RGBColor[1, 0, 0], PointBox[1693]}, 
           {RGBColor[0, 0, 1], PointBox[1694]}, 
           {RGBColor[0, 1, 0], PointBox[1695]}, 
           {RGBColor[1, 0, 0], PointBox[1696]}, 
           {RGBColor[0, 1, 0], PointBox[1697]}, 
           {RGBColor[1, 0, 0], PointBox[1698]}, 
           {RGBColor[0, 1, 0], PointBox[1699]}, 
           {RGBColor[1, 0, 0], PointBox[1700]}, 
           {RGBColor[0, 0, 1], PointBox[1701]}, 
           {RGBColor[0, 0, 1], PointBox[1702]}, 
           {RGBColor[1, 0, 0], PointBox[1703]}, 
           {RGBColor[0, 0, 1], PointBox[1704]}, 
           {RGBColor[1, 0, 0], PointBox[1705]}, 
           {RGBColor[0, 0, 1], PointBox[1706]}, 
           {RGBColor[0, 1, 0], PointBox[1707]}, 
           {RGBColor[1, 0, 0], PointBox[1708]}, 
           {RGBColor[0, 0, 1], PointBox[1709]}, 
           {RGBColor[0, 0, 1], PointBox[1710]}, 
           {RGBColor[1, 0, 0], PointBox[1711]}, 
           {RGBColor[0, 1, 0], PointBox[1712]}, 
           {RGBColor[1, 0, 0], PointBox[1713]}, 
           {RGBColor[0, 0, 1], PointBox[1714]}, 
           {RGBColor[0, 0, 1], PointBox[1715]}, 
           {RGBColor[1, 0, 0], PointBox[1716]}, 
           {RGBColor[0, 1, 0], PointBox[1717]}, 
           {RGBColor[1, 0, 0], PointBox[1718]}, 
           {RGBColor[0, 0, 1], PointBox[1719]}, 
           {RGBColor[0, 0, 1], PointBox[1720]}, 
           {RGBColor[1, 0, 0], PointBox[1721]}, 
           {RGBColor[0, 0, 1], PointBox[1722]}, 
           {RGBColor[1, 0, 0], PointBox[1723]}, 
           {RGBColor[0, 1, 0], PointBox[1724]}, 
           {RGBColor[1, 0, 0], PointBox[1725]}, 
           {RGBColor[0, 0, 1], PointBox[1726]}, 
           {RGBColor[0, 0, 1], PointBox[1727]}, 
           {RGBColor[1, 0, 0], PointBox[1728]}, 
           {RGBColor[0, 0, 1], PointBox[1729]}, 
           {RGBColor[1, 0, 0], PointBox[1730]}, 
           {RGBColor[0, 0, 1], PointBox[1731]}, 
           {RGBColor[0, 1, 0], PointBox[1732]}, 
           {RGBColor[1, 0, 0], PointBox[1733]}, 
           {RGBColor[0, 0, 1], PointBox[1734]}, 
           {RGBColor[0, 1, 0], PointBox[1735]}, 
           {RGBColor[1, 0, 0], PointBox[1736]}, 
           {RGBColor[0, 1, 0], PointBox[1737]}, 
           {RGBColor[1, 0, 0], PointBox[1738]}, 
           {RGBColor[0, 0, 1], PointBox[1739]}, 
           {RGBColor[0, 0, 1], PointBox[1740]}, 
           {RGBColor[1, 0, 0], PointBox[1741]}, 
           {RGBColor[0, 0, 1], PointBox[1742]}, 
           {RGBColor[1, 0, 0], PointBox[1743]}, 
           {RGBColor[0, 0, 1], PointBox[1744]}, 
           {RGBColor[0, 1, 0], PointBox[1745]}, 
           {RGBColor[1, 0, 0], PointBox[1746]}, 
           {RGBColor[0, 0, 1], PointBox[1747]}, 
           {RGBColor[1, 1, 0], PointBox[1748]}, 
           {RGBColor[0, 1, 0], PointBox[1749]}, 
           {RGBColor[0, 1, 0], PointBox[1750]}, 
           {RGBColor[0, 0, 1], PointBox[1751]}, 
           {RGBColor[1, 0, 0], PointBox[1752]}, 
           {RGBColor[1, 0, 0], PointBox[1753]}, 
           {RGBColor[0, 0, 1], PointBox[1754]}, 
           {RGBColor[1, 0, 0], PointBox[1755]}, 
           {RGBColor[0, 0, 1], PointBox[1756]}, 
           {RGBColor[1, 0, 0], PointBox[1757]}, 
           {RGBColor[0, 0, 1], PointBox[1758]}, 
           {RGBColor[1, 1, 0], PointBox[1759]}, 
           {RGBColor[1, 1, 0], PointBox[1760]}, 
           {RGBColor[0, 0, 1], PointBox[1761]}, 
           {RGBColor[1, 1, 0], PointBox[1762]}, 
           {RGBColor[1, 0, 0], PointBox[1763]}, 
           {RGBColor[0, 0, 1], PointBox[1764]}, 
           {RGBColor[1, 1, 0], PointBox[1765]}, 
           {RGBColor[0, 0, 1], PointBox[1766]}, 
           {RGBColor[1, 1, 0], PointBox[1767]}, 
           {RGBColor[1, 1, 0], PointBox[1768]}, 
           {RGBColor[1, 0, 0], PointBox[1769]}, 
           {RGBColor[0, 0, 1], PointBox[1770]}, 
           {RGBColor[1, 1, 0], PointBox[1771]}, 
           {RGBColor[1, 1, 0], PointBox[1772]}, 
           {RGBColor[0, 0, 1], PointBox[1773]}, 
           {RGBColor[0, 0, 1], PointBox[1774]}, 
           {RGBColor[1, 0, 0], PointBox[1775]}, 
           {RGBColor[0, 0, 1], PointBox[1776]}, 
           {RGBColor[1, 1, 0], PointBox[1777]}, 
           {RGBColor[1, 1, 0], PointBox[1778]}, 
           {RGBColor[0, 0, 1], PointBox[1779]}, 
           {RGBColor[1, 1, 0], PointBox[1780]}, 
           {RGBColor[1, 0, 0], PointBox[1781]}, 
           {RGBColor[0, 0, 1], PointBox[1782]}, 
           {RGBColor[1, 0, 0], PointBox[1783]}, 
           {RGBColor[0, 0, 1], PointBox[1784]}, 
           {RGBColor[1, 1, 0], PointBox[1785]}, 
           {RGBColor[1, 1, 0], PointBox[1786]}, 
           {RGBColor[0, 0, 1], PointBox[1787]}, 
           {RGBColor[1, 1, 0], PointBox[1788]}, 
           {RGBColor[1, 0, 0], PointBox[1789]}, 
           {RGBColor[0, 0, 1], PointBox[1790]}, 
           {RGBColor[1, 1, 0], PointBox[1791]}, 
           {RGBColor[0, 0, 1], PointBox[1792]}, 
           {RGBColor[1, 1, 0], PointBox[1793]}, 
           {RGBColor[0, 0, 1], PointBox[1794]}, 
           {RGBColor[1, 0, 0], PointBox[1795]}, 
           {RGBColor[0, 0, 1], PointBox[1796]}, 
           {RGBColor[1, 1, 0], PointBox[1797]}, 
           {RGBColor[1, 1, 0], PointBox[1798]}, 
           {RGBColor[0, 0, 1], PointBox[1799]}, 
           {RGBColor[1, 1, 0], PointBox[1800]}, 
           {RGBColor[1, 0, 0], PointBox[1801]}, 
           {RGBColor[0, 0, 1], PointBox[1802]}, 
           {RGBColor[1, 1, 0], PointBox[1803]}, 
           {RGBColor[0, 0, 1], PointBox[1804]}, 
           {RGBColor[1, 1, 0], PointBox[1805]}, 
           {RGBColor[1, 1, 0], PointBox[1806]}, 
           {RGBColor[1, 0, 0], PointBox[1807]}, 
           {RGBColor[0, 0, 1], PointBox[1808]}, 
           {RGBColor[1, 0, 0], PointBox[1809]}, 
           {RGBColor[0, 0, 1], PointBox[1810]}, 
           {RGBColor[1, 1, 0], PointBox[1811]}, 
           {RGBColor[1, 1, 0], PointBox[1812]}, 
           {RGBColor[0, 0, 1], PointBox[1813]}, 
           {RGBColor[1, 1, 0], PointBox[1814]}, 
           {RGBColor[1, 0, 0], PointBox[1815]}, 
           {RGBColor[0, 0, 1], PointBox[1816]}, 
           {RGBColor[1, 1, 0], PointBox[1817]}, 
           {RGBColor[0, 0, 1], PointBox[1818]}, 
           {RGBColor[1, 1, 0], PointBox[1819]}, 
           {RGBColor[1, 1, 0], PointBox[1820]}, 
           {RGBColor[1, 0, 0], PointBox[1821]}, 
           {RGBColor[0, 0, 1], PointBox[1822]}, 
           {RGBColor[1, 1, 0], PointBox[1823]}, 
           {RGBColor[1, 1, 0], PointBox[1824]}, 
           {RGBColor[0, 0, 1], PointBox[1825]}, 
           {RGBColor[0, 0, 1], PointBox[1826]}, 
           {RGBColor[1, 0, 0], PointBox[1827]}, 
           {RGBColor[0, 0, 1], PointBox[1828]}, 
           {RGBColor[1, 1, 0], PointBox[1829]}, 
           {RGBColor[1, 1, 0], PointBox[1830]}, 
           {RGBColor[0, 0, 1], PointBox[1831]}, 
           {RGBColor[0, 0, 1], PointBox[1832]}, 
           {RGBColor[1, 0, 0], PointBox[1833]}, 
           {RGBColor[0, 0, 1], PointBox[1834]}, 
           {RGBColor[1, 0, 0], PointBox[1835]}, 
           {RGBColor[0, 0, 1], PointBox[1836]}, 
           {RGBColor[1, 1, 0], PointBox[1837]}, 
           {RGBColor[1, 1, 0], PointBox[1838]}, 
           {RGBColor[0, 0, 1], PointBox[1839]}, 
           {RGBColor[1, 1, 0], PointBox[1840]}, 
           {RGBColor[1, 0, 0], PointBox[1841]}, 
           {RGBColor[0, 0, 1], PointBox[1842]}, 
           {RGBColor[1, 1, 0], PointBox[1843]}, 
           {RGBColor[0, 0, 1], PointBox[1844]}, 
           {RGBColor[1, 1, 0], PointBox[1845]}, 
           {RGBColor[1, 1, 0], PointBox[1846]}, 
           {RGBColor[1, 0, 0], PointBox[1847]}, 
           {RGBColor[0, 0, 1], PointBox[1848]}, 
           {RGBColor[1, 1, 0], PointBox[1849]}, 
           {RGBColor[1, 1, 0], PointBox[1850]}, 
           {RGBColor[0, 0, 1], PointBox[1851]}, 
           {RGBColor[0, 0, 1], PointBox[1852]}, 
           {RGBColor[1, 0, 0], PointBox[1853]}, 
           {RGBColor[0, 0, 1], PointBox[1854]}, 
           {RGBColor[1, 1, 0], PointBox[1855]}, 
           {RGBColor[1, 1, 0], PointBox[1856]}, 
           {RGBColor[0, 0, 1], PointBox[1857]}, 
           {RGBColor[0, 0, 1], PointBox[1858]}, 
           {RGBColor[1, 0, 0], PointBox[1859]}, 
           {RGBColor[0, 0, 1], PointBox[1860]}, 
           {RGBColor[1, 0, 0], PointBox[1861]}, 
           {RGBColor[0, 0, 1], PointBox[1862]}, 
           {RGBColor[1, 0, 0], PointBox[1863]}, 
           {RGBColor[1, 1, 0], PointBox[1864]}, 
           {RGBColor[1, 1, 0], PointBox[1865]}, 
           {RGBColor[1, 0, 0], PointBox[1866]}, 
           {RGBColor[1, 1, 0], PointBox[1867]}, 
           {RGBColor[1, 0, 0], PointBox[1868]}, 
           {RGBColor[1, 1, 0], PointBox[1869]}, 
           {RGBColor[0, 0, 1], PointBox[1870]}, 
           {RGBColor[1, 0, 0], PointBox[1871]}, 
           {RGBColor[1, 1, 0], PointBox[1872]}, 
           {RGBColor[1, 1, 0], PointBox[1873]}, 
           {RGBColor[1, 0, 0], PointBox[1874]}, 
           {RGBColor[0, 0, 1], PointBox[1875]}, 
           {RGBColor[1, 0, 0], PointBox[1876]}, 
           {RGBColor[1, 1, 0], PointBox[1877]}, 
           {RGBColor[1, 1, 0], PointBox[1878]}, 
           {RGBColor[1, 0, 0], PointBox[1879]}, 
           {RGBColor[0, 0, 1], PointBox[1880]}, 
           {RGBColor[1, 0, 0], PointBox[1881]}, 
           {RGBColor[1, 1, 0], PointBox[1882]}, 
           {RGBColor[1, 1, 0], PointBox[1883]}, 
           {RGBColor[1, 0, 0], PointBox[1884]}, 
           {RGBColor[1, 1, 0], PointBox[1885]}, 
           {RGBColor[1, 0, 0], PointBox[1886]}, 
           {RGBColor[0, 0, 1], PointBox[1887]}, 
           {RGBColor[1, 0, 0], PointBox[1888]}, 
           {RGBColor[1, 1, 0], PointBox[1889]}, 
           {RGBColor[1, 1, 0], PointBox[1890]}, 
           {RGBColor[1, 0, 0], PointBox[1891]}, 
           {RGBColor[1, 1, 0], PointBox[1892]}, 
           {RGBColor[1, 0, 0], PointBox[1893]}, 
           {RGBColor[1, 1, 0], PointBox[1894]}, 
           {RGBColor[0, 0, 1], PointBox[1895]}, 
           {RGBColor[1, 0, 0], PointBox[1896]}, 
           {RGBColor[1, 1, 0], PointBox[1897]}, 
           {RGBColor[0, 0, 1], PointBox[1898]}, 
           {RGBColor[1, 0, 0], PointBox[1899]}, 
           {RGBColor[0, 0, 1], PointBox[1900]}, 
           {RGBColor[1, 0, 0], PointBox[1901]}, 
           {RGBColor[1, 1, 0], PointBox[1902]}, 
           {RGBColor[1, 1, 0], PointBox[1903]}, 
           {RGBColor[1, 0, 0], PointBox[1904]}, 
           {RGBColor[1, 1, 0], PointBox[1905]}, 
           {RGBColor[1, 0, 0], PointBox[1906]}, 
           {RGBColor[1, 1, 0], PointBox[1907]}, 
           {RGBColor[0, 0, 1], PointBox[1908]}, 
           {RGBColor[1, 0, 0], PointBox[1909]}, 
           {RGBColor[1, 1, 0], PointBox[1910]}, 
           {RGBColor[1, 1, 0], PointBox[1911]}, 
           {RGBColor[1, 0, 0], PointBox[1912]}, 
           {RGBColor[0, 0, 1], PointBox[1913]}, 
           {RGBColor[1, 0, 0], PointBox[1914]}, 
           {RGBColor[0, 0, 1], PointBox[1915]}, 
           {RGBColor[1, 0, 0], PointBox[1916]}, 
           {RGBColor[1, 1, 0], PointBox[1917]}, 
           {RGBColor[1, 1, 0], PointBox[1918]}, 
           {RGBColor[1, 0, 0], PointBox[1919]}, 
           {RGBColor[1, 1, 0], PointBox[1920]}, 
           {RGBColor[1, 0, 0], PointBox[1921]}, 
           {RGBColor[1, 1, 0], PointBox[1922]}, 
           {RGBColor[0, 0, 1], PointBox[1923]}, 
           {RGBColor[1, 0, 0], PointBox[1924]}, 
           {RGBColor[1, 1, 0], PointBox[1925]}, 
           {RGBColor[1, 1, 0], PointBox[1926]}, 
           {RGBColor[1, 0, 0], PointBox[1927]}, 
           {RGBColor[0, 0, 1], PointBox[1928]}, 
           {RGBColor[1, 0, 0], PointBox[1929]}, 
           {RGBColor[1, 1, 0], PointBox[1930]}, 
           {RGBColor[1, 1, 0], PointBox[1931]}, 
           {RGBColor[1, 0, 0], PointBox[1932]}, 
           {RGBColor[0, 0, 1], PointBox[1933]}, 
           {RGBColor[1, 0, 0], PointBox[1934]}, 
           {RGBColor[1, 1, 0], PointBox[1935]}, 
           {RGBColor[1, 1, 0], PointBox[1936]}, 
           {RGBColor[1, 0, 0], PointBox[1937]}, 
           {RGBColor[0, 0, 1], PointBox[1938]}, 
           {RGBColor[1, 0, 0], PointBox[1939]}, 
           {RGBColor[0, 0, 1], PointBox[1940]}, 
           {RGBColor[1, 0, 0], PointBox[1941]}, 
           {RGBColor[1, 1, 0], PointBox[1942]}, 
           {RGBColor[1, 1, 0], PointBox[1943]}, 
           {RGBColor[1, 0, 0], PointBox[1944]}, 
           {RGBColor[1, 1, 0], PointBox[1945]}, 
           {RGBColor[1, 0, 0], PointBox[1946]}, 
           {RGBColor[1, 1, 0], PointBox[1947]}, 
           {RGBColor[0, 0, 1], PointBox[1948]}, 
           {RGBColor[1, 0, 0], PointBox[1949]}, 
           {RGBColor[1, 1, 0], PointBox[1950]}, 
           {RGBColor[1, 1, 0], PointBox[1951]}, 
           {RGBColor[1, 0, 0], PointBox[1952]}, 
           {RGBColor[0, 0, 1], PointBox[1953]}, 
           {RGBColor[1, 0, 0], PointBox[1954]}, 
           {RGBColor[1, 1, 0], PointBox[1955]}, 
           {RGBColor[1, 1, 0], PointBox[1956]}, 
           {RGBColor[1, 0, 0], PointBox[1957]}, 
           {RGBColor[0, 0, 1], PointBox[1958]}, 
           {RGBColor[1, 0, 0], PointBox[1959]}, 
           {RGBColor[1, 1, 0], PointBox[1960]}, 
           {RGBColor[1, 1, 0], PointBox[1961]}, 
           {RGBColor[1, 0, 0], PointBox[1962]}, 
           {RGBColor[1, 1, 0], PointBox[1963]}, 
           {RGBColor[1, 0, 0], PointBox[1964]}, 
           {RGBColor[1, 0, 0], PointBox[1965]}, 
           {RGBColor[0, 0, 1], PointBox[1966]}, 
           {RGBColor[1, 0, 0], PointBox[1967]}, 
           {RGBColor[0, 0, 1], PointBox[1968]}, 
           {RGBColor[1, 0, 0], PointBox[1969]}, 
           {RGBColor[0, 0, 1], PointBox[1970]}, 
           {RGBColor[1, 1, 0], PointBox[1971]}, 
           {RGBColor[1, 1, 0], PointBox[1972]}, 
           {RGBColor[0, 0, 1], PointBox[1973]}, 
           {RGBColor[1, 1, 0], PointBox[1974]}, 
           {RGBColor[1, 0, 0], PointBox[1975]}, 
           {RGBColor[0, 0, 1], PointBox[1976]}, 
           {RGBColor[1, 1, 0], PointBox[1977]}, 
           {RGBColor[0, 0, 1], PointBox[1978]}, 
           {RGBColor[1, 1, 0], PointBox[1979]}, 
           {RGBColor[1, 1, 0], PointBox[1980]}, 
           {RGBColor[1, 0, 0], PointBox[1981]}, 
           {RGBColor[0, 0, 1], PointBox[1982]}, 
           {RGBColor[1, 1, 0], PointBox[1983]}, 
           {RGBColor[1, 1, 0], PointBox[1984]}, 
           {RGBColor[0, 0, 1], PointBox[1985]}, 
           {RGBColor[0, 0, 1], PointBox[1986]}, 
           {RGBColor[1, 0, 0], PointBox[1987]}, 
           {RGBColor[0, 0, 1], PointBox[1988]}, 
           {RGBColor[1, 1, 0], PointBox[1989]}, 
           {RGBColor[1, 1, 0], PointBox[1990]}, 
           {RGBColor[0, 0, 1], PointBox[1991]}, 
           {RGBColor[1, 1, 0], PointBox[1992]}, 
           {RGBColor[1, 0, 0], PointBox[1993]}, 
           {RGBColor[0, 0, 1], PointBox[1994]}, 
           {RGBColor[1, 0, 0], PointBox[1995]}, 
           {RGBColor[0, 0, 1], PointBox[1996]}, 
           {RGBColor[1, 1, 0], PointBox[1997]}, 
           {RGBColor[1, 1, 0], PointBox[1998]}, 
           {RGBColor[0, 0, 1], PointBox[1999]}, 
           {RGBColor[1, 1, 0], PointBox[2000]}, 
           {RGBColor[1, 0, 0], PointBox[2001]}, 
           {RGBColor[0, 0, 1], PointBox[2002]}, 
           {RGBColor[1, 1, 0], PointBox[2003]}, 
           {RGBColor[0, 0, 1], PointBox[2004]}, 
           {RGBColor[1, 1, 0], PointBox[2005]}, 
           {RGBColor[0, 0, 1], PointBox[2006]}, 
           {RGBColor[1, 0, 0], PointBox[2007]}, 
           {RGBColor[0, 0, 1], PointBox[2008]}, 
           {RGBColor[1, 1, 0], PointBox[2009]}, 
           {RGBColor[1, 1, 0], PointBox[2010]}, 
           {RGBColor[0, 0, 1], PointBox[2011]}, 
           {RGBColor[1, 1, 0], PointBox[2012]}, 
           {RGBColor[1, 0, 0], PointBox[2013]}, 
           {RGBColor[0, 0, 1], PointBox[2014]}, 
           {RGBColor[1, 1, 0], PointBox[2015]}, 
           {RGBColor[0, 0, 1], PointBox[2016]}, 
           {RGBColor[1, 1, 0], PointBox[2017]}, 
           {RGBColor[0, 0, 1], PointBox[2018]}, 
           {RGBColor[1, 0, 0], PointBox[2019]}, 
           {RGBColor[0, 0, 1], PointBox[2020]}, 
           {RGBColor[1, 0, 0], PointBox[2021]}, 
           {RGBColor[0, 0, 1], PointBox[2022]}, 
           {RGBColor[1, 1, 0], PointBox[2023]}, 
           {RGBColor[1, 1, 0], PointBox[2024]}, 
           {RGBColor[0, 0, 1], PointBox[2025]}, 
           {RGBColor[1, 1, 0], PointBox[2026]}, 
           {RGBColor[1, 0, 0], PointBox[2027]}, 
           {RGBColor[0, 0, 1], PointBox[2028]}, 
           {RGBColor[1, 1, 0], PointBox[2029]}, 
           {RGBColor[0, 0, 1], PointBox[2030]}, 
           {RGBColor[1, 1, 0], PointBox[2031]}, 
           {RGBColor[1, 1, 0], PointBox[2032]}, 
           {RGBColor[1, 0, 0], PointBox[2033]}, 
           {RGBColor[0, 0, 1], PointBox[2034]}, 
           {RGBColor[1, 1, 0], PointBox[2035]}, 
           {RGBColor[1, 1, 0], PointBox[2036]}, 
           {RGBColor[0, 0, 1], PointBox[2037]}, 
           {RGBColor[0, 0, 1], PointBox[2038]}, 
           {RGBColor[1, 0, 0], PointBox[2039]}, 
           {RGBColor[0, 0, 1], PointBox[2040]}, 
           {RGBColor[1, 1, 0], PointBox[2041]}, 
           {RGBColor[1, 1, 0], PointBox[2042]}, 
           {RGBColor[0, 0, 1], PointBox[2043]}, 
           {RGBColor[1, 1, 0], PointBox[2044]}, 
           {RGBColor[1, 0, 0], PointBox[2045]}, 
           {RGBColor[0, 0, 1], PointBox[2046]}, 
           {RGBColor[1, 0, 0], PointBox[2047]}, 
           {RGBColor[0, 0, 1], PointBox[2048]}, 
           {RGBColor[1, 1, 0], PointBox[2049]}, 
           {RGBColor[1, 1, 0], PointBox[2050]}, 
           {RGBColor[0, 0, 1], PointBox[2051]}, 
           {RGBColor[1, 1, 0], PointBox[2052]}, 
           {RGBColor[1, 0, 0], PointBox[2053]}, 
           {RGBColor[0, 0, 1], PointBox[2054]}, 
           {RGBColor[1, 1, 0], PointBox[2055]}, 
           {RGBColor[0, 0, 1], PointBox[2056]}, 
           {RGBColor[1, 1, 0], PointBox[2057]}, 
           {RGBColor[0, 0, 1], PointBox[2058]}, 
           {RGBColor[1, 0, 0], PointBox[2059]}, 
           {RGBColor[0, 0, 1], PointBox[2060]}, 
           {RGBColor[1, 1, 0], PointBox[2061]}, 
           {RGBColor[1, 1, 0], PointBox[2062]}, 
           {RGBColor[0, 0, 1], PointBox[2063]}, 
           {RGBColor[1, 1, 0], PointBox[2064]}, 
           {RGBColor[1, 0, 0], PointBox[2065]}, 
           {RGBColor[0, 0, 1], PointBox[2066]}, 
           {RGBColor[1, 1, 0], PointBox[2067]}, 
           {RGBColor[0, 0, 1], PointBox[2068]}, 
           {RGBColor[1, 1, 0], PointBox[2069]}, 
           {RGBColor[0, 0, 1], PointBox[2070]}, 
           {RGBColor[1, 0, 0], PointBox[2071]}, 
           {RGBColor[0, 0, 1], PointBox[2072]}, 
           {RGBColor[1, 0, 0], PointBox[2073]}, 
           {RGBColor[0, 0, 1], PointBox[2074]}, 
           {RGBColor[1, 0, 0], PointBox[2075]}, 
           {RGBColor[1, 1, 0], PointBox[2076]}, 
           {RGBColor[1, 1, 0], PointBox[2077]}, 
           {RGBColor[1, 0, 0], PointBox[2078]}, 
           {RGBColor[1, 1, 0], PointBox[2079]}, 
           {RGBColor[1, 0, 0], PointBox[2080]}, 
           {RGBColor[1, 1, 0], PointBox[2081]}, 
           {RGBColor[0, 0, 1], PointBox[2082]}, 
           {RGBColor[1, 0, 0], PointBox[2083]}, 
           {RGBColor[1, 1, 0], PointBox[2084]}, 
           {RGBColor[1, 1, 0], PointBox[2085]}, 
           {RGBColor[1, 0, 0], PointBox[2086]}, 
           {RGBColor[0, 0, 1], PointBox[2087]}, 
           {RGBColor[1, 0, 0], PointBox[2088]}, 
           {RGBColor[1, 1, 0], PointBox[2089]}, 
           {RGBColor[1, 1, 0], PointBox[2090]}, 
           {RGBColor[1, 0, 0], PointBox[2091]}, 
           {RGBColor[0, 0, 1], PointBox[2092]}, 
           {RGBColor[1, 0, 0], PointBox[2093]}, 
           {RGBColor[1, 1, 0], PointBox[2094]}, 
           {RGBColor[1, 1, 0], PointBox[2095]}, 
           {RGBColor[1, 0, 0], PointBox[2096]}, 
           {RGBColor[1, 1, 0], PointBox[2097]}, 
           {RGBColor[1, 0, 0], PointBox[2098]}, 
           {RGBColor[0, 0, 1], PointBox[2099]}, 
           {RGBColor[1, 0, 0], PointBox[2100]}, 
           {RGBColor[1, 1, 0], PointBox[2101]}, 
           {RGBColor[1, 1, 0], PointBox[2102]}, 
           {RGBColor[1, 0, 0], PointBox[2103]}, 
           {RGBColor[1, 1, 0], PointBox[2104]}, 
           {RGBColor[1, 0, 0], PointBox[2105]}, 
           {RGBColor[1, 1, 0], PointBox[2106]}, 
           {RGBColor[0, 0, 1], PointBox[2107]}, 
           {RGBColor[1, 0, 0], PointBox[2108]}, 
           {RGBColor[1, 1, 0], PointBox[2109]}, 
           {RGBColor[0, 0, 1], PointBox[2110]}, 
           {RGBColor[1, 0, 0], PointBox[2111]}, 
           {RGBColor[0, 0, 1], PointBox[2112]}, 
           {RGBColor[1, 0, 0], PointBox[2113]}, 
           {RGBColor[1, 1, 0], PointBox[2114]}, 
           {RGBColor[1, 1, 0], PointBox[2115]}, 
           {RGBColor[1, 0, 0], PointBox[2116]}, 
           {RGBColor[1, 1, 0], PointBox[2117]}, 
           {RGBColor[1, 0, 0], PointBox[2118]}, 
           {RGBColor[1, 1, 0], PointBox[2119]}, 
           {RGBColor[0, 0, 1], PointBox[2120]}, 
           {RGBColor[1, 0, 0], PointBox[2121]}, 
           {RGBColor[1, 1, 0], PointBox[2122]}, 
           {RGBColor[0, 0, 1], PointBox[2123]}, 
           {RGBColor[1, 0, 0], PointBox[2124]}, 
           {RGBColor[0, 0, 1], PointBox[2125]}, 
           {RGBColor[1, 0, 0], PointBox[2126]}, 
           {RGBColor[0, 0, 1], PointBox[2127]}, 
           {RGBColor[1, 0, 0], PointBox[2128]}, 
           {RGBColor[1, 1, 0], PointBox[2129]}, 
           {RGBColor[1, 1, 0], PointBox[2130]}, 
           {RGBColor[1, 0, 0], PointBox[2131]}, 
           {RGBColor[1, 1, 0], PointBox[2132]}, 
           {RGBColor[1, 0, 0], PointBox[2133]}, 
           {RGBColor[1, 1, 0], PointBox[2134]}, 
           {RGBColor[0, 0, 1], PointBox[2135]}, 
           {RGBColor[1, 0, 0], PointBox[2136]}, 
           {RGBColor[1, 1, 0], PointBox[2137]}, 
           {RGBColor[1, 1, 0], PointBox[2138]}, 
           {RGBColor[1, 0, 0], PointBox[2139]}, 
           {RGBColor[0, 0, 1], PointBox[2140]}, 
           {RGBColor[1, 0, 0], PointBox[2141]}, 
           {RGBColor[1, 1, 0], PointBox[2142]}, 
           {RGBColor[1, 1, 0], PointBox[2143]}, 
           {RGBColor[1, 0, 0], PointBox[2144]}, 
           {RGBColor[0, 0, 1], PointBox[2145]}, 
           {RGBColor[1, 0, 0], PointBox[2146]}, 
           {RGBColor[1, 1, 0], PointBox[2147]}, 
           {RGBColor[1, 1, 0], PointBox[2148]}, 
           {RGBColor[1, 0, 0], PointBox[2149]}, 
           {RGBColor[1, 1, 0], PointBox[2150]}, 
           {RGBColor[1, 0, 0], PointBox[2151]}, 
           {RGBColor[0, 0, 1], PointBox[2152]}, 
           {RGBColor[1, 0, 0], PointBox[2153]}, 
           {RGBColor[1, 1, 0], PointBox[2154]}, 
           {RGBColor[1, 1, 0], PointBox[2155]}, 
           {RGBColor[1, 0, 0], PointBox[2156]}, 
           {RGBColor[1, 1, 0], PointBox[2157]}, 
           {RGBColor[1, 0, 0], PointBox[2158]}, 
           {RGBColor[1, 1, 0], PointBox[2159]}, 
           {RGBColor[0, 0, 1], PointBox[2160]}, 
           {RGBColor[1, 0, 0], PointBox[2161]}, 
           {RGBColor[1, 1, 0], PointBox[2162]}, 
           {RGBColor[0, 0, 1], PointBox[2163]}, 
           {RGBColor[1, 0, 0], PointBox[2164]}, 
           {RGBColor[0, 0, 1], PointBox[2165]}, 
           {RGBColor[1, 0, 0], PointBox[2166]}, 
           {RGBColor[1, 1, 0], PointBox[2167]}, 
           {RGBColor[1, 1, 0], PointBox[2168]}, 
           {RGBColor[1, 0, 0], PointBox[2169]}, 
           {RGBColor[1, 1, 0], PointBox[2170]}, 
           {RGBColor[1, 0, 0], PointBox[2171]}, 
           {RGBColor[1, 1, 0], PointBox[2172]}, 
           {RGBColor[0, 0, 1], PointBox[2173]}, 
           {RGBColor[1, 0, 0], PointBox[2174]}, 
           {RGBColor[1, 1, 0], PointBox[2175]}, 
           {RGBColor[0, 0, 1], PointBox[2176]}, 
           {RGBColor[1, 1, 0], PointBox[2177]}, 
           {RGBColor[1, 0, 0], PointBox[2178]}, 
           {RGBColor[1, 0, 0], PointBox[2179]}, 
           {RGBColor[1, 1, 0], PointBox[2180]}, 
           {RGBColor[1, 0, 0], PointBox[2181]}, 
           {RGBColor[1, 1, 0], PointBox[2182]}, 
           {RGBColor[1, 0, 0], PointBox[2183]}, 
           {RGBColor[1, 1, 0], PointBox[2184]}, 
           {RGBColor[0, 0, 1], PointBox[2185]}, 
           {RGBColor[0, 1, 0], PointBox[2186]}, 
           {RGBColor[1, 1, 0], PointBox[2187]}, 
           {RGBColor[1, 0, 0], PointBox[2188]}, 
           {RGBColor[1, 0, 0], PointBox[2189]}, 
           {RGBColor[1, 1, 0], PointBox[2190]}, 
           {RGBColor[1, 0, 0], PointBox[2191]}, 
           {RGBColor[1, 1, 0], PointBox[2192]}, 
           {RGBColor[1, 0, 0], PointBox[2193]}, 
           {RGBColor[1, 1, 0], PointBox[2194]}, 
           {RGBColor[0, 0, 1], PointBox[2195]}, 
           {RGBColor[0, 1, 0], PointBox[2196]}, 
           {RGBColor[1, 0, 0], PointBox[2197]}, 
           {RGBColor[1, 0, 0], PointBox[2198]}, 
           {RGBColor[0, 1, 0], PointBox[2199]}, 
           {RGBColor[1, 0, 0], PointBox[2200]}, 
           {RGBColor[0, 1, 0], PointBox[2201]}, 
           {RGBColor[1, 0, 0], PointBox[2202]}, 
           {RGBColor[0, 1, 0], PointBox[2203]}, 
           {RGBColor[1, 1, 0], PointBox[2204]}, 
           {RGBColor[1, 1, 0], PointBox[2205]}, 
           {RGBColor[0, 1, 0], PointBox[2206]}, 
           {RGBColor[1, 1, 0], PointBox[2207]}, 
           {RGBColor[1, 0, 0], PointBox[2208]}, 
           {RGBColor[0, 1, 0], PointBox[2209]}, 
           {RGBColor[1, 1, 0], PointBox[2210]}, 
           {RGBColor[0, 1, 0], PointBox[2211]}, 
           {RGBColor[1, 1, 0], PointBox[2212]}, 
           {RGBColor[1, 1, 0], PointBox[2213]}, 
           {RGBColor[1, 0, 0], PointBox[2214]}, 
           {RGBColor[0, 1, 0], PointBox[2215]}, 
           {RGBColor[1, 1, 0], PointBox[2216]}, 
           {RGBColor[1, 1, 0], PointBox[2217]}, 
           {RGBColor[0, 1, 0], PointBox[2218]}, 
           {RGBColor[0, 1, 0], PointBox[2219]}, 
           {RGBColor[1, 0, 0], PointBox[2220]}, 
           {RGBColor[0, 1, 0], PointBox[2221]}, 
           {RGBColor[1, 1, 0], PointBox[2222]}, 
           {RGBColor[1, 1, 0], PointBox[2223]}, 
           {RGBColor[0, 1, 0], PointBox[2224]}, 
           {RGBColor[1, 1, 0], PointBox[2225]}, 
           {RGBColor[1, 0, 0], PointBox[2226]}, 
           {RGBColor[0, 1, 0], PointBox[2227]}, 
           {RGBColor[1, 0, 0], PointBox[2228]}, 
           {RGBColor[0, 1, 0], PointBox[2229]}, 
           {RGBColor[1, 1, 0], PointBox[2230]}, 
           {RGBColor[1, 1, 0], PointBox[2231]}, 
           {RGBColor[0, 1, 0], PointBox[2232]}, 
           {RGBColor[1, 1, 0], PointBox[2233]}, 
           {RGBColor[1, 0, 0], PointBox[2234]}, 
           {RGBColor[0, 1, 0], PointBox[2235]}, 
           {RGBColor[1, 1, 0], PointBox[2236]}, 
           {RGBColor[0, 1, 0], PointBox[2237]}, 
           {RGBColor[1, 1, 0], PointBox[2238]}, 
           {RGBColor[0, 1, 0], PointBox[2239]}, 
           {RGBColor[1, 0, 0], PointBox[2240]}, 
           {RGBColor[0, 1, 0], PointBox[2241]}, 
           {RGBColor[1, 1, 0], PointBox[2242]}, 
           {RGBColor[1, 1, 0], PointBox[2243]}, 
           {RGBColor[0, 1, 0], PointBox[2244]}, 
           {RGBColor[1, 1, 0], PointBox[2245]}, 
           {RGBColor[1, 0, 0], PointBox[2246]}, 
           {RGBColor[0, 1, 0], PointBox[2247]}, 
           {RGBColor[1, 1, 0], PointBox[2248]}, 
           {RGBColor[0, 1, 0], PointBox[2249]}, 
           {RGBColor[1, 1, 0], PointBox[2250]}, 
           {RGBColor[1, 1, 0], PointBox[2251]}, 
           {RGBColor[1, 0, 0], PointBox[2252]}, 
           {RGBColor[0, 1, 0], PointBox[2253]}, 
           {RGBColor[1, 0, 0], PointBox[2254]}, 
           {RGBColor[0, 1, 0], PointBox[2255]}, 
           {RGBColor[1, 1, 0], PointBox[2256]}, 
           {RGBColor[1, 1, 0], PointBox[2257]}, 
           {RGBColor[0, 1, 0], PointBox[2258]}, 
           {RGBColor[1, 1, 0], PointBox[2259]}, 
           {RGBColor[1, 0, 0], PointBox[2260]}, 
           {RGBColor[0, 1, 0], PointBox[2261]}, 
           {RGBColor[1, 1, 0], PointBox[2262]}, 
           {RGBColor[0, 1, 0], PointBox[2263]}, 
           {RGBColor[1, 1, 0], PointBox[2264]}, 
           {RGBColor[1, 1, 0], PointBox[2265]}, 
           {RGBColor[1, 0, 0], PointBox[2266]}, 
           {RGBColor[0, 1, 0], PointBox[2267]}, 
           {RGBColor[1, 1, 0], PointBox[2268]}, 
           {RGBColor[1, 1, 0], PointBox[2269]}, 
           {RGBColor[0, 1, 0], PointBox[2270]}, 
           {RGBColor[0, 1, 0], PointBox[2271]}, 
           {RGBColor[1, 0, 0], PointBox[2272]}, 
           {RGBColor[0, 1, 0], PointBox[2273]}, 
           {RGBColor[1, 1, 0], PointBox[2274]}, 
           {RGBColor[1, 1, 0], PointBox[2275]}, 
           {RGBColor[0, 1, 0], PointBox[2276]}, 
           {RGBColor[0, 1, 0], PointBox[2277]}, 
           {RGBColor[1, 0, 0], PointBox[2278]}, 
           {RGBColor[0, 1, 0], PointBox[2279]}, 
           {RGBColor[1, 0, 0], PointBox[2280]}, 
           {RGBColor[0, 1, 0], PointBox[2281]}, 
           {RGBColor[1, 1, 0], PointBox[2282]}, 
           {RGBColor[1, 1, 0], PointBox[2283]}, 
           {RGBColor[0, 1, 0], PointBox[2284]}, 
           {RGBColor[1, 1, 0], PointBox[2285]}, 
           {RGBColor[1, 0, 0], PointBox[2286]}, 
           {RGBColor[0, 1, 0], PointBox[2287]}, 
           {RGBColor[1, 1, 0], PointBox[2288]}, 
           {RGBColor[0, 1, 0], PointBox[2289]}, 
           {RGBColor[1, 1, 0], PointBox[2290]}, 
           {RGBColor[1, 1, 0], PointBox[2291]}, 
           {RGBColor[1, 0, 0], PointBox[2292]}, 
           {RGBColor[0, 1, 0], PointBox[2293]}, 
           {RGBColor[1, 1, 0], PointBox[2294]}, 
           {RGBColor[1, 1, 0], PointBox[2295]}, 
           {RGBColor[0, 1, 0], PointBox[2296]}, 
           {RGBColor[0, 1, 0], PointBox[2297]}, 
           {RGBColor[1, 0, 0], PointBox[2298]}, 
           {RGBColor[0, 1, 0], PointBox[2299]}, 
           {RGBColor[1, 1, 0], PointBox[2300]}, 
           {RGBColor[1, 1, 0], PointBox[2301]}, 
           {RGBColor[0, 1, 0], PointBox[2302]}, 
           {RGBColor[0, 1, 0], PointBox[2303]}, 
           {RGBColor[1, 0, 0], PointBox[2304]}, 
           {RGBColor[0, 1, 0], PointBox[2305]}, 
           {RGBColor[1, 0, 0], PointBox[2306]}, 
           {RGBColor[0, 1, 0], PointBox[2307]}, 
           {RGBColor[1, 0, 0], PointBox[2308]}, 
           {RGBColor[1, 1, 0], PointBox[2309]}, 
           {RGBColor[1, 1, 0], PointBox[2310]}, 
           {RGBColor[1, 0, 0], PointBox[2311]}, 
           {RGBColor[1, 1, 0], PointBox[2312]}, 
           {RGBColor[1, 0, 0], PointBox[2313]}, 
           {RGBColor[1, 1, 0], PointBox[2314]}, 
           {RGBColor[0, 1, 0], PointBox[2315]}, 
           {RGBColor[1, 0, 0], PointBox[2316]}, 
           {RGBColor[1, 1, 0], PointBox[2317]}, 
           {RGBColor[1, 1, 0], PointBox[2318]}, 
           {RGBColor[1, 0, 0], PointBox[2319]}, 
           {RGBColor[0, 1, 0], PointBox[2320]}, 
           {RGBColor[1, 0, 0], PointBox[2321]}, 
           {RGBColor[1, 1, 0], PointBox[2322]}, 
           {RGBColor[1, 1, 0], PointBox[2323]}, 
           {RGBColor[1, 0, 0], PointBox[2324]}, 
           {RGBColor[0, 1, 0], PointBox[2325]}, 
           {RGBColor[1, 0, 0], PointBox[2326]}, 
           {RGBColor[1, 1, 0], PointBox[2327]}, 
           {RGBColor[1, 1, 0], PointBox[2328]}, 
           {RGBColor[1, 0, 0], PointBox[2329]}, 
           {RGBColor[1, 1, 0], PointBox[2330]}, 
           {RGBColor[1, 0, 0], PointBox[2331]}, 
           {RGBColor[0, 1, 0], PointBox[2332]}, 
           {RGBColor[1, 0, 0], PointBox[2333]}, 
           {RGBColor[1, 1, 0], PointBox[2334]}, 
           {RGBColor[1, 1, 0], PointBox[2335]}, 
           {RGBColor[1, 0, 0], PointBox[2336]}, 
           {RGBColor[1, 1, 0], PointBox[2337]}, 
           {RGBColor[1, 0, 0], PointBox[2338]}, 
           {RGBColor[1, 1, 0], PointBox[2339]}, 
           {RGBColor[0, 1, 0], PointBox[2340]}, 
           {RGBColor[1, 0, 0], PointBox[2341]}, 
           {RGBColor[1, 1, 0], PointBox[2342]}, 
           {RGBColor[0, 1, 0], PointBox[2343]}, 
           {RGBColor[1, 0, 0], PointBox[2344]}, 
           {RGBColor[0, 1, 0], PointBox[2345]}, 
           {RGBColor[1, 0, 0], PointBox[2346]}, 
           {RGBColor[1, 1, 0], PointBox[2347]}, 
           {RGBColor[1, 1, 0], PointBox[2348]}, 
           {RGBColor[1, 0, 0], PointBox[2349]}, 
           {RGBColor[1, 1, 0], PointBox[2350]}, 
           {RGBColor[1, 0, 0], PointBox[2351]}, 
           {RGBColor[1, 1, 0], PointBox[2352]}, 
           {RGBColor[0, 1, 0], PointBox[2353]}, 
           {RGBColor[1, 0, 0], PointBox[2354]}, 
           {RGBColor[1, 1, 0], PointBox[2355]}, 
           {RGBColor[1, 1, 0], PointBox[2356]}, 
           {RGBColor[1, 0, 0], PointBox[2357]}, 
           {RGBColor[0, 1, 0], PointBox[2358]}, 
           {RGBColor[1, 0, 0], PointBox[2359]}, 
           {RGBColor[0, 1, 0], PointBox[2360]}, 
           {RGBColor[1, 0, 0], PointBox[2361]}, 
           {RGBColor[1, 1, 0], PointBox[2362]}, 
           {RGBColor[1, 1, 0], PointBox[2363]}, 
           {RGBColor[1, 0, 0], PointBox[2364]}, 
           {RGBColor[1, 1, 0], PointBox[2365]}, 
           {RGBColor[1, 0, 0], PointBox[2366]}, 
           {RGBColor[1, 1, 0], PointBox[2367]}, 
           {RGBColor[0, 1, 0], PointBox[2368]}, 
           {RGBColor[1, 0, 0], PointBox[2369]}, 
           {RGBColor[1, 1, 0], PointBox[2370]}, 
           {RGBColor[1, 1, 0], PointBox[2371]}, 
           {RGBColor[1, 0, 0], PointBox[2372]}, 
           {RGBColor[0, 1, 0], PointBox[2373]}, 
           {RGBColor[1, 0, 0], PointBox[2374]}, 
           {RGBColor[1, 1, 0], PointBox[2375]}, 
           {RGBColor[1, 1, 0], PointBox[2376]}, 
           {RGBColor[1, 0, 0], PointBox[2377]}, 
           {RGBColor[0, 1, 0], PointBox[2378]}, 
           {RGBColor[1, 0, 0], PointBox[2379]}, 
           {RGBColor[1, 1, 0], PointBox[2380]}, 
           {RGBColor[1, 1, 0], PointBox[2381]}, 
           {RGBColor[1, 0, 0], PointBox[2382]}, 
           {RGBColor[0, 1, 0], PointBox[2383]}, 
           {RGBColor[1, 0, 0], PointBox[2384]}, 
           {RGBColor[0, 1, 0], PointBox[2385]}, 
           {RGBColor[1, 0, 0], PointBox[2386]}, 
           {RGBColor[1, 1, 0], PointBox[2387]}, 
           {RGBColor[1, 1, 0], PointBox[2388]}, 
           {RGBColor[1, 0, 0], PointBox[2389]}, 
           {RGBColor[1, 1, 0], PointBox[2390]}, 
           {RGBColor[1, 0, 0], PointBox[2391]}, 
           {RGBColor[1, 1, 0], PointBox[2392]}, 
           {RGBColor[0, 1, 0], PointBox[2393]}, 
           {RGBColor[1, 0, 0], PointBox[2394]}, 
           {RGBColor[1, 1, 0], PointBox[2395]}, 
           {RGBColor[1, 1, 0], PointBox[2396]}, 
           {RGBColor[1, 0, 0], PointBox[2397]}, 
           {RGBColor[0, 1, 0], PointBox[2398]}, 
           {RGBColor[1, 0, 0], PointBox[2399]}, 
           {RGBColor[1, 1, 0], PointBox[2400]}, 
           {RGBColor[1, 1, 0], PointBox[2401]}, 
           {RGBColor[1, 0, 0], PointBox[2402]}, 
           {RGBColor[0, 1, 0], PointBox[2403]}, 
           {RGBColor[1, 0, 0], PointBox[2404]}, 
           {RGBColor[1, 1, 0], PointBox[2405]}, 
           {RGBColor[1, 1, 0], PointBox[2406]}, 
           {RGBColor[1, 0, 0], PointBox[2407]}, 
           {RGBColor[1, 1, 0], PointBox[2408]}, 
           {RGBColor[1, 0, 0], PointBox[2409]}, 
           {RGBColor[1, 0, 0], PointBox[2410]}, 
           {RGBColor[0, 1, 0], PointBox[2411]}, 
           {RGBColor[1, 0, 0], PointBox[2412]}, 
           {RGBColor[0, 1, 0], PointBox[2413]}, 
           {RGBColor[1, 0, 0], PointBox[2414]}, 
           {RGBColor[0, 1, 0], PointBox[2415]}, 
           {RGBColor[1, 1, 0], PointBox[2416]}, 
           {RGBColor[1, 1, 0], PointBox[2417]}, 
           {RGBColor[0, 1, 0], PointBox[2418]}, 
           {RGBColor[1, 1, 0], PointBox[2419]}, 
           {RGBColor[1, 0, 0], PointBox[2420]}, 
           {RGBColor[0, 1, 0], PointBox[2421]}, 
           {RGBColor[1, 1, 0], PointBox[2422]}, 
           {RGBColor[0, 1, 0], PointBox[2423]}, 
           {RGBColor[1, 1, 0], PointBox[2424]}, 
           {RGBColor[1, 1, 0], PointBox[2425]}, 
           {RGBColor[1, 0, 0], PointBox[2426]}, 
           {RGBColor[0, 1, 0], PointBox[2427]}, 
           {RGBColor[1, 1, 0], PointBox[2428]}, 
           {RGBColor[1, 1, 0], PointBox[2429]}, 
           {RGBColor[0, 1, 0], PointBox[2430]}, 
           {RGBColor[0, 1, 0], PointBox[2431]}, 
           {RGBColor[1, 0, 0], PointBox[2432]}, 
           {RGBColor[0, 1, 0], PointBox[2433]}, 
           {RGBColor[1, 1, 0], PointBox[2434]}, 
           {RGBColor[1, 1, 0], PointBox[2435]}, 
           {RGBColor[0, 1, 0], PointBox[2436]}, 
           {RGBColor[1, 1, 0], PointBox[2437]}, 
           {RGBColor[1, 0, 0], PointBox[2438]}, 
           {RGBColor[0, 1, 0], PointBox[2439]}, 
           {RGBColor[1, 0, 0], PointBox[2440]}, 
           {RGBColor[0, 1, 0], PointBox[2441]}, 
           {RGBColor[1, 1, 0], PointBox[2442]}, 
           {RGBColor[1, 1, 0], PointBox[2443]}, 
           {RGBColor[0, 1, 0], PointBox[2444]}, 
           {RGBColor[1, 1, 0], PointBox[2445]}, 
           {RGBColor[1, 0, 0], PointBox[2446]}, 
           {RGBColor[0, 1, 0], PointBox[2447]}, 
           {RGBColor[1, 1, 0], PointBox[2448]}, 
           {RGBColor[0, 1, 0], PointBox[2449]}, 
           {RGBColor[1, 1, 0], PointBox[2450]}, 
           {RGBColor[0, 1, 0], PointBox[2451]}, 
           {RGBColor[1, 0, 0], PointBox[2452]}, 
           {RGBColor[0, 1, 0], PointBox[2453]}, 
           {RGBColor[1, 1, 0], PointBox[2454]}, 
           {RGBColor[1, 1, 0], PointBox[2455]}, 
           {RGBColor[0, 1, 0], PointBox[2456]}, 
           {RGBColor[1, 1, 0], PointBox[2457]}, 
           {RGBColor[1, 0, 0], PointBox[2458]}, 
           {RGBColor[0, 1, 0], PointBox[2459]}, 
           {RGBColor[1, 1, 0], PointBox[2460]}, 
           {RGBColor[0, 1, 0], PointBox[2461]}, 
           {RGBColor[1, 1, 0], PointBox[2462]}, 
           {RGBColor[0, 1, 0], PointBox[2463]}, 
           {RGBColor[1, 0, 0], PointBox[2464]}, 
           {RGBColor[0, 1, 0], PointBox[2465]}, 
           {RGBColor[1, 0, 0], PointBox[2466]}, 
           {RGBColor[0, 1, 0], PointBox[2467]}, 
           {RGBColor[1, 1, 0], PointBox[2468]}, 
           {RGBColor[1, 1, 0], PointBox[2469]}, 
           {RGBColor[0, 1, 0], PointBox[2470]}, 
           {RGBColor[1, 1, 0], PointBox[2471]}, 
           {RGBColor[1, 0, 0], PointBox[2472]}, 
           {RGBColor[0, 1, 0], PointBox[2473]}, 
           {RGBColor[1, 1, 0], PointBox[2474]}, 
           {RGBColor[0, 1, 0], PointBox[2475]}, 
           {RGBColor[1, 1, 0], PointBox[2476]}, 
           {RGBColor[1, 1, 0], PointBox[2477]}, 
           {RGBColor[1, 0, 0], PointBox[2478]}, 
           {RGBColor[0, 1, 0], PointBox[2479]}, 
           {RGBColor[1, 1, 0], PointBox[2480]}, 
           {RGBColor[1, 1, 0], PointBox[2481]}, 
           {RGBColor[0, 1, 0], PointBox[2482]}, 
           {RGBColor[0, 1, 0], PointBox[2483]}, 
           {RGBColor[1, 0, 0], PointBox[2484]}, 
           {RGBColor[0, 1, 0], PointBox[2485]}, 
           {RGBColor[1, 1, 0], PointBox[2486]}, 
           {RGBColor[1, 1, 0], PointBox[2487]}, 
           {RGBColor[0, 1, 0], PointBox[2488]}, 
           {RGBColor[1, 1, 0], PointBox[2489]}, 
           {RGBColor[1, 0, 0], PointBox[2490]}, 
           {RGBColor[0, 1, 0], PointBox[2491]}, 
           {RGBColor[1, 0, 0], PointBox[2492]}, 
           {RGBColor[0, 1, 0], PointBox[2493]}, 
           {RGBColor[1, 1, 0], PointBox[2494]}, 
           {RGBColor[1, 1, 0], PointBox[2495]}, 
           {RGBColor[0, 1, 0], PointBox[2496]}, 
           {RGBColor[1, 1, 0], PointBox[2497]}, 
           {RGBColor[1, 0, 0], PointBox[2498]}, 
           {RGBColor[0, 1, 0], PointBox[2499]}, 
           {RGBColor[1, 1, 0], PointBox[2500]}, 
           {RGBColor[0, 1, 0], PointBox[2501]}, 
           {RGBColor[1, 1, 0], PointBox[2502]}, 
           {RGBColor[0, 1, 0], PointBox[2503]}, 
           {RGBColor[1, 0, 0], PointBox[2504]}, 
           {RGBColor[0, 1, 0], PointBox[2505]}, 
           {RGBColor[1, 1, 0], PointBox[2506]}, 
           {RGBColor[1, 1, 0], PointBox[2507]}, 
           {RGBColor[0, 1, 0], PointBox[2508]}, 
           {RGBColor[1, 1, 0], PointBox[2509]}, 
           {RGBColor[1, 0, 0], PointBox[2510]}, 
           {RGBColor[0, 1, 0], PointBox[2511]}, 
           {RGBColor[1, 1, 0], PointBox[2512]}, 
           {RGBColor[0, 1, 0], PointBox[2513]}, 
           {RGBColor[1, 1, 0], PointBox[2514]}, 
           {RGBColor[0, 1, 0], PointBox[2515]}, 
           {RGBColor[1, 0, 0], PointBox[2516]}, 
           {RGBColor[0, 1, 0], PointBox[2517]}, 
           {RGBColor[1, 0, 0], PointBox[2518]}, 
           {RGBColor[0, 1, 0], PointBox[2519]}, 
           {RGBColor[1, 0, 0], PointBox[2520]}, 
           {RGBColor[1, 1, 0], PointBox[2521]}, 
           {RGBColor[1, 1, 0], PointBox[2522]}, 
           {RGBColor[1, 0, 0], PointBox[2523]}, 
           {RGBColor[1, 1, 0], PointBox[2524]}, 
           {RGBColor[1, 0, 0], PointBox[2525]}, 
           {RGBColor[1, 1, 0], PointBox[2526]}, 
           {RGBColor[0, 1, 0], PointBox[2527]}, 
           {RGBColor[1, 0, 0], PointBox[2528]}, 
           {RGBColor[1, 1, 0], PointBox[2529]}, 
           {RGBColor[1, 1, 0], PointBox[2530]}, 
           {RGBColor[1, 0, 0], PointBox[2531]}, 
           {RGBColor[0, 1, 0], PointBox[2532]}, 
           {RGBColor[1, 0, 0], PointBox[2533]}, 
           {RGBColor[1, 1, 0], PointBox[2534]}, 
           {RGBColor[1, 1, 0], PointBox[2535]}, 
           {RGBColor[1, 0, 0], PointBox[2536]}, 
           {RGBColor[0, 1, 0], PointBox[2537]}, 
           {RGBColor[1, 0, 0], PointBox[2538]}, 
           {RGBColor[1, 1, 0], PointBox[2539]}, 
           {RGBColor[1, 1, 0], PointBox[2540]}, 
           {RGBColor[1, 0, 0], PointBox[2541]}, 
           {RGBColor[1, 1, 0], PointBox[2542]}, 
           {RGBColor[1, 0, 0], PointBox[2543]}, 
           {RGBColor[0, 1, 0], PointBox[2544]}, 
           {RGBColor[1, 0, 0], PointBox[2545]}, 
           {RGBColor[1, 1, 0], PointBox[2546]}, 
           {RGBColor[1, 1, 0], PointBox[2547]}, 
           {RGBColor[1, 0, 0], PointBox[2548]}, 
           {RGBColor[1, 1, 0], PointBox[2549]}, 
           {RGBColor[1, 0, 0], PointBox[2550]}, 
           {RGBColor[1, 1, 0], PointBox[2551]}, 
           {RGBColor[0, 1, 0], PointBox[2552]}, 
           {RGBColor[1, 0, 0], PointBox[2553]}, 
           {RGBColor[1, 1, 0], PointBox[2554]}, 
           {RGBColor[0, 1, 0], PointBox[2555]}, 
           {RGBColor[1, 0, 0], PointBox[2556]}, 
           {RGBColor[0, 1, 0], PointBox[2557]}, 
           {RGBColor[1, 0, 0], PointBox[2558]}, 
           {RGBColor[1, 1, 0], PointBox[2559]}, 
           {RGBColor[1, 1, 0], PointBox[2560]}, 
           {RGBColor[1, 0, 0], PointBox[2561]}, 
           {RGBColor[1, 1, 0], PointBox[2562]}, 
           {RGBColor[1, 0, 0], PointBox[2563]}, 
           {RGBColor[1, 1, 0], PointBox[2564]}, 
           {RGBColor[0, 1, 0], PointBox[2565]}, 
           {RGBColor[1, 0, 0], PointBox[2566]}, 
           {RGBColor[1, 1, 0], PointBox[2567]}, 
           {RGBColor[0, 1, 0], PointBox[2568]}, 
           {RGBColor[1, 0, 0], PointBox[2569]}, 
           {RGBColor[0, 1, 0], PointBox[2570]}, 
           {RGBColor[1, 0, 0], PointBox[2571]}, 
           {RGBColor[0, 1, 0], PointBox[2572]}, 
           {RGBColor[1, 0, 0], PointBox[2573]}, 
           {RGBColor[1, 1, 0], PointBox[2574]}, 
           {RGBColor[1, 1, 0], PointBox[2575]}, 
           {RGBColor[1, 0, 0], PointBox[2576]}, 
           {RGBColor[1, 1, 0], PointBox[2577]}, 
           {RGBColor[1, 0, 0], PointBox[2578]}, 
           {RGBColor[1, 1, 0], PointBox[2579]}, 
           {RGBColor[0, 1, 0], PointBox[2580]}, 
           {RGBColor[1, 0, 0], PointBox[2581]}, 
           {RGBColor[1, 1, 0], PointBox[2582]}, 
           {RGBColor[1, 1, 0], PointBox[2583]}, 
           {RGBColor[1, 0, 0], PointBox[2584]}, 
           {RGBColor[0, 1, 0], PointBox[2585]}, 
           {RGBColor[1, 0, 0], PointBox[2586]}, 
           {RGBColor[1, 1, 0], PointBox[2587]}, 
           {RGBColor[1, 1, 0], PointBox[2588]}, 
           {RGBColor[1, 0, 0], PointBox[2589]}, 
           {RGBColor[0, 1, 0], PointBox[2590]}, 
           {RGBColor[1, 0, 0], PointBox[2591]}, 
           {RGBColor[1, 1, 0], PointBox[2592]}, 
           {RGBColor[1, 1, 0], PointBox[2593]}, 
           {RGBColor[1, 0, 0], PointBox[2594]}, 
           {RGBColor[1, 1, 0], PointBox[2595]}, 
           {RGBColor[1, 0, 0], PointBox[2596]}, 
           {RGBColor[0, 1, 0], PointBox[2597]}, 
           {RGBColor[1, 0, 0], PointBox[2598]}, 
           {RGBColor[1, 1, 0], PointBox[2599]}, 
           {RGBColor[1, 1, 0], PointBox[2600]}, 
           {RGBColor[1, 0, 0], PointBox[2601]}, 
           {RGBColor[1, 1, 0], PointBox[2602]}, 
           {RGBColor[1, 0, 0], PointBox[2603]}, 
           {RGBColor[1, 1, 0], PointBox[2604]}, 
           {RGBColor[0, 1, 0], PointBox[2605]}, 
           {RGBColor[1, 0, 0], PointBox[2606]}, 
           {RGBColor[1, 1, 0], PointBox[2607]}, 
           {RGBColor[0, 1, 0], PointBox[2608]}, 
           {RGBColor[1, 0, 0], PointBox[2609]}, 
           {RGBColor[0, 1, 0], PointBox[2610]}, 
           {RGBColor[1, 0, 0], PointBox[2611]}, 
           {RGBColor[1, 1, 0], PointBox[2612]}, 
           {RGBColor[1, 1, 0], PointBox[2613]}, 
           {RGBColor[1, 0, 0], PointBox[2614]}, 
           {RGBColor[1, 1, 0], PointBox[2615]}, 
           {RGBColor[1, 0, 0], PointBox[2616]}, 
           {RGBColor[1, 1, 0], PointBox[2617]}, 
           {RGBColor[0, 1, 0], PointBox[2618]}, 
           {RGBColor[1, 0, 0], PointBox[2619]}, 
           {RGBColor[1, 1, 0], PointBox[2620]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{946., Automatic},
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"172", ",", "\"10-10-4-4-4-4-4-4-4-4-4-4\""}], "}"}], 
      TraditionalForm],
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXncXlV5LvyS93mnvJmAKIhYUrHVo62t7bHUHq1aW6ui1Lac035O1da2
aB0QEFEBQYYAEuYAYZ7nkAQIgUASwhCmMMsskyJSQVrlnOPxs5/P915rrWvt
a937Xvt5A/T3/fP9fkb2u5+9117Dve7rntdHPrPHLv/4xc/s8bl/+MyCP9/t
M7vu8rl/2H3B+7+829St4c2GhoYvn/q3bsEQrvtDQ/y//tT/5P+uxP/ht///
7it4d124/sO9+gsX4t4J/V122Ste9k/YZZd+cZ2euaW/ww752QHv3bJsh8Ht
LuwvnOrL0C07LFxm752wS3+X8jq1G7tQbcu+F8a6Vsa9IlzvPGis2m/95hP9
BQvwx8/74+NPxMv+z8fH+8V1euZX/c02y88OeO9XT242uN0F/QUY1682W/Ck
vffz8f54eZ3ajV2otmXfa8a8rHMd7JyHuV0u83xhuP5sMZ/O9c8WzH6+aw51
PnQsH+ivWrWu/573fLp/+ukfWLWqv+497+l/+vTT+8V1emZRf7fd8rMD3lu0
erfB7a7qr1r3nv57Fu22arW99+nT+6eX16nd3XbrbMu+14z5yc711bX8Za/f
89epuQ5rc4Gs05nh+tc2ie6d61+sGt2paw10PnUu/jB+vvlpdec06pQ9N78/
35+O5noQOYcpOEOmY0m4fo3LxmSKNok8K9dDW4VvbTv+f37xS1zhv73/+I//
B9fzX/jp/+L1gqef/Tf8F39v+6PnforrrZ974cV5P/2fP8f1G5784U/47Jse
+8FzfBb3cY13tK0Z4bOjaIKPahdir15Tn/3mehCRusAgRBWn/ESZ/mPD9atr
6OJyS1mKQdQ2N1KbzrROw3+975Ef4hoz+4d3PfgDXP/FtTc/xJn+5/Ov3Ih3
MaMfv2zdvbj3nlvvfeKdG7/7FJ/93Qce+xGe//KZy2/hjP/dpdfejesZeHho
e1ziFn7SR/Wav+Ma99gFXuOTobWpezuuu+2R33rkyX/F9T9cfPWds/7X//4F
uvk3K9d/1w4H3eNqh/YjNQzzXvg3O67CoE3p4phsgk5MPkZW/Ttp1Ws4TKzo
z57tYaTLu4USZoXme7rqYR+EMW/NWcTW4bXO7reOPfc6uzq6qN5KgUCwEs2i
T+DyfRvufhxN15oais9u/koQSGrr13Dvr6+68QESyO6nXroBBAIO8y/nXH6b
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
q62JHozLgXTTQcVFRlL03AfDtGraaEMsGoB8O9mdRGrupTpRejm8jBLKLjM8
lNjyKFnRg5xaA9MLOKxqjcIeiHLsqC7H+C6cCxbDy1y0cAVGiqHgnwQ/XXAI
Ys1veSQfLUmNShDt7/dDUqPJLns9zKl3Q0uRytQQLKfRE+w5znxIy+qemIEX
FIQa2/eEWSy+Z+9WtbHCuz7vrz9+s/4Ww3rjWz/4yV+9+Jq7qFqwdKhIRdGD
1Ovg3cF8IRE155zyJPWwW9Vkco1h2mWSzDop2NRCBE9PkPCaVkA20EtOOef6
hg21SJPapnkYGT4GAfNLV95yHxXAcPlRU9SGOWSWw23Ks5P1SiYH4r1m2RNO
VaVTOSUHqtBJHkpWPDk3pQskYbSh0FTw20es5YYNfArc4p5JmmW881vYksNg
b4SnsuTc1//2fbv+MXvlFYkrX5zn2ryUjGqjdplI8izHyzHU3IxSGNw45gI6
wDeee8YnbnGujr4xgaJqIfpdJsXUxJay0+x2VFIiRMm6bTDhdaSwi36cKOhG
Hestz6MCzVPPAyfB4EmH1pcSgHnTmz/4yfblA4WIWik0iYn4UFe7Xrx0NREp
qBmJcRa9ulR+TqO9/bVRKLF9hcahe6mulP32e7/69X/x4ZgGg1R9DXtPrPY1
BTRYi2+4Sgkg7dCNzVGKbdTgK7kyOYNbmSoVHD7snyq5KOI5gx+L5MciWmS4
82e//c2PX/k5dOQQ87JtmN/9myFjqIHrF73/ozcwmiaxbgzb6x6xV0wR8fhX
GR89YAquWog/DQURC31feO8pLwtkhehxL0+IlkWsL4qz5B6BgyeL3YhdG2BN
APtRo1ikK0PFOFT4jqqMgsQffrtnipkuuwZVNK1si2gK6ZQop8e1J4Jw2Jf5
ADOBLNVSdmsiZKJL+h/5/KGH6ErmuqIl6rLf+8glnxYuJL13fvncGxLf+Ynb
71aLbJm7/FsHV56WWoa0amM6PbgSIltyz8491ccbSH6KSJreK2M1SzIQWzQ8
B0Z+E9YSYEgske17J7zmpIuF97ksrIlhhC5Lc4lFCI/JOfLgSeHpeO65qAJx
3SPVI5ReHrgxecr54e+ljvIPP3zRbVrgiWtvP+7US9vxO1AIsv1dMLpWkhIY
N85NU4WKNZuK4P/Na6rAd1rRrK93JenhJWENcu21l0e2vclgNx3oOxDYxtyP
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
7+FFQ0yNXmvqYAZiMu+ryyodBOxQfsOX//Y977ngxrayJwFPeKlPuf/hHzl5
UTS3OaOabx5+uth3Ce3Ntqp+c774zHY97vLmD336NpTdhtpY1UNo32QZFXfm
q38sBqMmsqZ0zfgNhciSLcU4sfiyE4Y8Ga/H/3fgOM2WZN7vRbfd+x2kEXNM
c67nSIktiVqq9777ght7T7IK33IVykE7IWONFgtfuwoc08sG95OJKwJlX13Q
fmcvHUvnrHecd32TmKtSUqLt52qjFbnHUJLmIjduCrMZSuJ3OJFBf27V44GI
XdKs0pAdISJx4vi4jFtNS8VnAzYupLTNapRRHVicxzbCZDYaJJLdyj25NdDT
vf8qCDrcZlSJwFFVAG4Pk8y34wIVqOWguGgppYpum55fCh/w9l5+093N5bBU
kU4fsQ4PWMGfxIZZ4b6uOn27tqpSSzcf+oADpU5SRv7yVV42VAd8KKoxUhlq
9L81BZ5ceysHQyNmbA/ov2LbmTXT23QVro2poJsqDhQ2YO9nF9SjVtvrhv9q
p/6VwbAgQW0gpVMnAaNu4rYIl68f/CPlyvdRUUnEz/Ozl+69+6FOpK36fjMf
ccyhnVrk8parKl3WF/CkEy5GIrJ2Z7HyJlhQgFZOOVPkRH5UJoNaodqKlEWG
/nEJ0osxcflclnKqCZc+jY5CoLplPuGAIOoujFG1hmmrJLibL/bz1tg1/J5n
cHbG9106aFe8JU+eSBTMMzqGk4l0tDqkW/E7BhnVlNpTXGbLTJwsckjZ27ek
vEZEPcVj30+xyorcLnW7fgoYV1+NTLeMt8WZ56mkubgGa5oY/U1vzUx+XAuS
Q23LFuRSRshF56WC0dRQRgxaN+CHIbRcANbTqy/fe7/XUknzLLpoysExoZZe
8X+KxciDvdmpVQRAPC+0Ff3AO8+7LizGPT25Bp9WcEjhrVkWI22RFhLvvHGx
SOf4JJ3kTFpehpz/zo6Acbf6pjytBFUtgyI40zbE05Hq1FHappiV81TZRYEQ
WtELE8qdOylEaln5X7vhzgehCxwZ7sqWnNMYZLtjM9ZW0jG8GgEJ91ZWIySk
nVc5Eg/EWFCZPjqeANOv+nAf/Jtb/uLcS78U+Fu2h8fdu54m2coxoQB1btxF
X4lTHu2vfueyL369ZNxId6+eRZiY8dtiRxG1HWAsjZOCgcb4SUFDA6FkLxpx
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
qQS78Uk8MqnpxuDyXnHNLRs4RaFRNlWchQLNlz9+4mUfOvnb30+bLXBLbbEw
+9LHy4+/anZ/E98ARZMSaWI3wQPhBkQHWOKvxbiYM6GdMA14pFYaWweCb0Je
5Tv/IhDyNwUKwr5XMULsGigmu2+V8ZhwQ8t9K6fE2N+8pj+fkMm2C2SFYCZ4
uj5T7Ieh7bKeeB43HDWSaemG2cUJheHcd6ufoxMG0euXjzjxMgzD44E1mog2
EGHI1oeXnvAnoUnCerJEdab+wE1FdQ4JULhCPFsy8Mut1y0bXvCDux7SOnUr
eCoNNURrkmTI1NFV0PXUSj1EiIqWwou1U8onXw0tQ1M2bTOlY+6ojHI6+NNU
x2clJ4hG2ARVZUQMYtE6L/j7c++4P3Hsk7jQt3yyqNSTwWx+zg1oAUedJknV
jJvNAote3nUeaCIFh0XdQthAPrph6VWGCNICSnJtnFkShc9Xb8wo5lqkcNKc
U/2qo0p4Pj347C98TQWI9SZ3eUouwb5XYcBNFVVRz5P8eYpgNQFE66wajuzn
ASiKeMl0fFbUmk+Cy6EWkvQ9WWuHZkrwzlrHjafFEiacoswwc9YPEaLbTyzo
FZIilRS5KZY2bNFO0BZAJRglTf9qOJYFruREP3X8Weug0WDrQD9CxWIMt4pJ
wtpBjonBdEqa30IgdGEKJS9gDAnNaoUShDCzeKwON+h8rr5q14R4Q4PWmU9H
pnFRlc5H/A6dylp+2tPgwfBJId2t34JWXzULybG0wEaTkCAXWHDybj/stPOL
T2Ll3ogNr9jadBhrHdpCV8fdrKlC2sgdrU4ZZc6NE/af7c8rXEeV5q8/FebT
6u2trXebZ4FFcQOqVpkH0y/4c+HN3T1wQ16cP6tKrG8MPjP9UvWJ7BbcY2vf
0pIFkhJ41OZr0JYAVjWhfgD+/4raneNWznV9nzKwq+keK4ua9ykSasAscCKy
LunNOdcvOOiHn3L+jW8/74o7K3oC6RRpwxudIcNOWq1rRLiqLACpJ4GTKJAu
xaxgzUWaYmnFl7jrEbTYE4o9x1OVAEZiOFMoRicSVBSm6Y3gX616K7pX8ieR
Sy8Fj04RZax7dJQOvwwiEi1ozWFtzhE/QfMB89l8OzIwSGtSoCUEPxVPXnrI
aM7Y8lhLJtXUYLmYtFzdu5/JRygmYLkbVGbfzchWLRV4CtZfhQFuoH5sUeri
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
2AJpiau8lR3rr9Y8XDWMcd9A61hauQrxDJZUke6bZqtQBvsGvpzMCmAyDNd4
Wn1rxR+FIfDj+tUWYzUWIzZxr7AoQ2Md4iHHZ+zgLKZWCA1bb1qb3cW+lbyA
QGEBBvjKP3/pUpTopX99WmM9jtTqdKGYwmqrc1r4KcuVBiqexBYijc9yemJI
Farss55gqnw9vKY3XrzuHq7UNemMirKSjLdemIwVKFWVKD1u2sp4YIOu8w7V
jLCCVywjDZBgSpNCmKKH/rRAN+nOtmmqui23pd+rWAi75H8ldOINhcwsbfIl
6+9FOpq5ZvszNxjFCtCsv++Mi2/GG57xDW2cqql2rl2bupCvqXZihqRuma1T
GZvUqoRXnAhkccuuLMLAmKNWZXd2dC1R3APLZVcJo31q3ylpI4Etljy44ZOq
fLl0eRRg5j6usUria5Xft3SUPC3QYrP+eOpJNFpJLHbJc9G5lElIDfRhijEy
HSWqibrG0JlepovxFz3Ocokgy1MkifIc6szFn5x2N4T5QZJedGCJppjabDhx
vkHmvE77WLWdlA7FVZzPcUjbr9RopeT1NESDCf2Sr8orKB466jYrLH+SFN+z
0kCjOtmj2mDIcjDuzin/9uw77//l826+6+FAA7Vo2+RFCpAedauvffCYi9C7
Z6YHq2l76tVvxSWl75lbAzX4svW3PVCo+EznENGE+PO9Z158CwarJnpWP09M
8ylxSjV6dz6o2AxixYNPdYLWisAT3MjFTYE5g0DxbOFvSc2rpFnqHNQOvl8a
jKwNPKm9XXmVNOuWfsmCA3hh8Nst/VUVJbJ34FoZTVfbSWI6sgKRz7knRecA
T7Glb0oJcO38qGnAijdyrVgWsNLdEyyWbS+6n42HNGgrr4s4xtHwoiEfGPSy
H1gIkqiVbLYRlqfaE59qSpeSYrLGDLnmoLARTRRXIboks9LhTpeYSPuwhf9D
9wb8a4piFgDidIdTZT4HwtokF2rMSjFNtD225vxpW3xbFZACQtspg8SZRp7i
OBVOx4IDze+L+hQkLMAPHHTh1XeLpxdA5ifalzKolbrunoZ0prk0gffaS6+/
D02OJUdU+KbEYRyRY2rHGjACj1RT27XAyK3yW7O2KANaKQgN9YbopwmNNvB3
QT2WIOWpLuCczojPzXOooq/nuh9U2jcss1OBJp/vtymZ78e7f1O6dO16FTRK
xpto6uup/pAFcLXC9Y1GslsGitFUE4Nr6paNAttsqolfZTAWqqYGmKYQjlbV
k0mlupepJbJXIp2BCI4nw9SSlhspzdpYUHdRFKNM15zC0uW3SztfZk5JCKG0
KmO+dV1a5Y5WQkKsBxewXAlbdFiEook6mXHTSCSb6iK+RyWLplult9Hv//Bf
nQFU4/ETTvjLwWWBej/+U1/93ltMB/XjBjpIQtNBiuLAzXd48Be/JYjbkQiT
is0CcZmGWeEoloGrZc0ctajtgYuLqh87ClW3grkw+DNwm+nlbOS71I0wi/ZJ
J2lzd6SwID5fhHDc3j0RlSDJppQa23NqlyMtNBfn6y4R0z5V18kT/IEKb7Jd
r8qSb+TOV1HlTw2+l5VElfbH64mImAa11qabuCawvqvcc8Eqk5UOelka9dOZ
EodPNXc0CG6Vz9HQm2YzkU6jeahKigmbr0vjtYsSNeHUHrZImpJgNCqG8d9Y
7RvUfM8dzQPRbkerqd7X0UFRDvuZlaKpikv2dejfkvERJLeikcia2yqZ8di3
E2wSfg2/FB2HQAt5B3T6M493FxaQ0pnMzS4TXUP7gCMHvaxGsiGKw5+gjqrw
ytpxcbzAU8nUR5Xel5hZ9ZRmUz0I7ugeewDOqkuaW6Y94IpwIErssqb28Xi3
yVoHJRnYJDC3gp9N/4X/rXKJL7mi7WtVR0crJZ8TKvw59Q3TUcuIxTrRY6qo
Cqi28pf2/3P25tG7XVWVaMav+37d7XPTJ0BCJxFQLLBQUVALFURReVV2haiU
RVmKiqIoNmCD9DwEQk8CFNJEpEsQAoEQEpqEHmliIDEYKQZFMarK8YZVY1SN
7925z5przbXO+n763h8Xcr/7fefss8/ec69mrrncBvu2xmA6GSCqFSV390Ec
C5yjSd0qwW3GhTTiYj9P3snx/D406HAAAK1r0fJpa9OZyhiR5IwXtbYFWnvI
rgl1YKHPe6+bbv1KoxLs2UVuLuFMkwdT4iKHuQ6uWH7poZrgwyJVxps2ExQM
qnqdTWlbyentdhOGy2jUWrjQvIPSqpL1b/hEqeC5Dtyujoa2V4dFzRstdtNC
M//IW/3mSy6/3o93iRPRnIvwWbYz5YTSeUIaYh7b3a6BPdSJqFdlCQ9sAzBa
X/DkF1yJcqSx3xcxcJrstcOBBigaFKLLMY5dayBFPh3Ia7DOyaU81ht6ovjp
QMS273r6nh5YgUGMd37XuCSxDdexmHISDLl/DNjj8hc233tQwJRn3+4Ut/YC
jm9rYOqMgFotHzEx+0QPOBYQ6iG7TvlaZDNpl+Ia5tbiYclIw39LWbP7VaWs
vsGirdoKm5tASpFAin3R7z8vkmUGPXxWrBeclwl6RGtJ62ZFJ0GVLDoSotXE
t/VUyyyJHpdICmxVh2SWQ5Jku87PlI3b0FR+NOHJR+S/TCjTuFu7lOJUlD0A
Zbr0H1FGq1qh9o6aQl9ZgjIayupS+BLzVSWbGsiVMDLdME0nJj7QdkANXgro
koAaqeXupHE3ZnZQjzgWokxspSnQuqVFWDyH8TDH4gZ87VJ6mxI8ZzUnu/Cq
c3e7NUz2OYFbLrJ4/9h/TtC0irAkofagxoC6MIDHyzPu3/zWRkrfaLx3adGN
z8bb8DiNHC1nBsJ48KihcGPck1mziZcLpt+vXvamqBc8FPOKr7MmcAXSSCQn
peVELSNtp82wTJgJwzEiiLLgAafFSxV1dLPHiTUoxXT4ZoGTaTjnUIazYoYK
ua7CGK0T0e933Jpi9SSVoOVUp8lqDjlzE0Am7DGW9oVu5UjwWRWVV8COxscq
TUrpksjQg3bgM97ATmzkwZ296Etf/jr+Ns/O7yi3rwrV+IpbD9NCCw1J9rGU
RqqDs5wZjVPkzJ7w4svfz5ysLUgGhYqKrTIKiFM9IM04SdbypebXMVwqkmgu
SfkzIpHkefQzwm5xCLDPUgz4ogZgz29gxnz1RBW8cwNlD2qMlosCEL1k41/G
mN2FOzuulzVkS7ij6298VjzbMCrHAp6mS8NoYVCO1O6vXvbmD4GkwdlmNI4d
0ySkOpM4UXyiHz6hw/JP18buWh9bjcvBljXTD0948RuuQzKW61f0H5gbwFXr
6tmOGzIOFYnyLgJ0Hn0Lt94KOvmzNCjUWUD6/cpaDnbbou5qXn4cULY1KpAa
Kn3bSosoBaCLylPfKkZGQ/Lj/T/2uS+pRFhn6vqoJaoF2vZ/+vVn/CUCeFY4
VzWZtP9ErSZgnJzepzZTqEwPSsHQzQbt8ZFvnlzliHKPFBovgVARQtRVBbcu
IBH2cXtowp5UrUQGG9YhIepo3k804Dr4ORlTitdEt2bAzslmS9+Zr1xi7QZD
yVUyGkeqtTCISBr5QtV2aLpr81u7nos54W/nNhbQnRvoNFOn8pjHGCJ+ZSxt
9ZViLrfovv7AtTferHoAhwK+nTgkukazLWAuOc/4/3Pq5o+yyA+Zqvb7LVYt
wyUDSY2WiOhM6Bm6AoDomswS8LOK4LMJOq0rucK0OAh0lDRUyJKeUcvR55mJ
0QWl75/ApwtKY8EX0EmSwhEx36bZRtsMhgw5RvG1mc0rkLOJrz3xktdeSz5z
6jvU1PZqNCNiRGlGJAeVfHdBG0aZHnLNtBgjqZFYglgVnZy+CO7MQScV+ovN
U1PnTIWMVXs88MqDySLuXxGHgQW8J+gOjLSUUPM8BnSXZvTC9nOxNen568bL
3RsDqaNGWwQnGU33i7XkBMdOz/LOcV/3Ik8GAEOvnnH8MyrY6HGCL08WzxZ9
XAZceF2pOVGG0EF4Q0Vp9XtlHTZNPHhqQIUKRLV0ShtdQ4+L2te2iBcPNqiH
wCYz7Fw8nGa8/zmIo1L7al1UCf6ZpyUAMJf3yGujA0eDG+NlNMzolLoLrs92
1XhDVQlhEueEFGXMnl00C7D4fvcFr7sWorz4Dp6jawdtWiGYUmWid5afltgo
H2ORtzneENINyjlhiUVH7uFbiXI48frtbQbDOssZmWWjYumkO2LuyI0+wiNf
riw1/A4yU3AkJU7wOlIDv9ObjXtRmB6+KCw5lXLdBg74jYdyDWy6uo4Ugb57
/NbNpfs29zi3N1vGdS/KZoc8zxaPFzTfIcDi3086+OwFymIyBvJOyLNgZBkT
RcvBeRZGQ+U7Eup74oeGRN+I4yjXLpF/LMHBV4xL3uevv/DlGowxyKE1RP8e
n9YIc9v9cLrNGXpm/nNgpxZXrPpcCIrcM3HmbnYCZrRS0iL+9oQyDft54Bfv
EKKVO5X4rNDosC11crM2t7ZZacSh3uF3Xvj69+P/JSybuP+M6ikWFr8v9Y8V
nW49cLZiAag7h1rW77Oq+ODozKg8PIMOip6t0C0SPcDab4O0M7zmY80V9zPY
SCTWmwBrlaWDjVk2yS+5U8w8vTd8Qu2OC5qffEuzdKxKIgkfPSC2uEdtLuZv
xV36lsaQukMYPoz8MnidDsuCN5g52gSY2cAbU0qsdLYxAOtHy6g4PVgaIfTJ
BbIAScMgW8QZSRzVFbkRL7nSdeZEoG2ViDr3K1/779WfMTuKda5T08CwoxSF
uiaKW/88EKpddDpw6mwcIQupapAMkD5NFJTmdZ3wZ1F7f+FTjFd2864aFnTp
qwkaDmdvnRr2MCAEqQHW6EZyatZejDu9AUlM0jzyPetzuRWrrnp1tEpibezo
2uDbqYqGdPiSoW2GTnKTduOdNH02WMY2ztbJ2Nli2g5/08vvNVA0RVxTcJLr
hg6w2wIlsmNoRN4KzXp+x1AhlUx8S7OQvjE2ijMNH+BQ8I38hThQ/6LBrymk
tMnxMsw79oxhUUqjGwTrXNS4Pe09DMMdv66J2RTx2WZAn09bCTZ7AZNeWeld
w2aNMbeZ8iCU65IUPqyuq5omjvJPX9BcKyugaEVfRjRHQ8pNKl2ProImPvZB
hWICQbWAQzwN5RGb/geeiHbxLFlnkPSAZk4t7V5lhxjdr+0FJO2uXGPNf3F3
oGYd1fNNdupQVX/SqeBTzJDTMCCFcUSqsZpjLC0s/tZORTAiciJCi8IGwg5D
8Xo7FowWme4EXmoZ+1r+Ng0mqypg3hsB9m//6Gduk1Z9ziA+EUDmcXtJujlS
daGeCYIWmBPfUjbHTpu7oLFsqCqs2PuNjWVjSynVZVzM34qX9S8aa2dCpC0N
BxFh8E7vFLfzfNTJOSjhE5ULISjhEn6rvWZIx7I1Q6Cs1Bv7KVu2qFReCqAt
Vq8qWsC+qmwF6q0Y05nZLRt5odDXK1qxA36NTYLb/d7zX/u+l//2//0WZE+U
TVcxySyPLmOlxWMFkrR4Q7CSFOocEM5HwXckCGo0PHbIM1aJoVkir1GNLjLg
C43+MqRbXLTdWvNboRjflxB/QkzRuFUnXOK9avEKX9U9fTugKpeMS4gZLwss
Yw6gKPmsP33pO0FZ3I51XtW8KiXJXgTX0Pj64ZhBnCw4vH7hdW//6Ig2CQq5
u9VUTMk6TDvSku0pEW7GDpM+WhqY4sYXNJ89ujFPvj3ui3kaf/v5uIdnviaQ
GR4xZkMBENdn7esdY4Zc+38Cm+00C8spk6uur8Cz441N4EW3/eevQ/VU6sgG
QGDC3RFc5nTPgHcJZuNWXIY78YCQqBK5xQMtaqebiQQHowY84GdGyUa8CFfW
dUrarCByUArAq0S3YaTXpA37CtCZZaaaj6PP5IpqjnU6OnoqJpg3wPnOZuiF
hEN/tsGWEvZJAZahNPfpm/5eK3Rsy/ZFUHtRDhM+KH7V9VTUTeJCoJvxHjui
Fd/lAJTNWMUpVrjMTvt6vEbQM174B8+/EooEkqLolED75jc25MTfMaaz8nfu
96mbbqciU4c4xkXkTwib642ZE2mgO8aFnOu3HpaEY8AdGoz65theXub1TXE9
F+Aw7El5rG+K1+TZdLteyrBLgarj21oe89g6d2y+d7KZJPFy/bcdIlm9Cz6D
rZnIiR3zR9wfPSBFytzpmtuxFFA5jS5i4LrJSm0jjZrrsAVdE/D4tIaBqwYJ
V5iHMIatodKimxgtap7+8Lmvfi+8ka5m65+PTSyskm/Xco5OofoBCYdWKVSz
kDHumRqCVByq/uxdb7n9a3O5rSQGGDi0w5CgWn2Kerp5mnqL3VWUKS1JH287
H1EOY8sphJJgSaL8j3rjuz7+lGe98urHnTrqpBdC1wEtteWUQjgNBGN0hkK6
HBmdwR2lILWikLL2g7nbEg+ZflG7hxk3OYZzOanZPSnVNeGHq9MTQzBiDNHU
pVPtvFE4UkxpElAcpFI6OXrJb3bsvEODV2v9RNpXE0HJ4CnFqcrP6SsLs6Ei
FIaJTfqjV13/WbeHitjJsAJF00G5HzthF7ixaBU9GBlsFNQ+lpxZ2/xxpgQj
nW3Ubyux4lKuygUmfkvbZOh+n/r87Z7V34hXjymHuB8sPqdO/7PBSz5e8W01
UoRgfquGIBN4rVK2Vi5xDZuFE5XaAmAWkZyiHErk+lPgrWCWyg5wNTMKJTZP
V70x60Ms4RlVFJQYUe3eoPxTVeXmakFDKKywYRrYamw6pLmAQuZ+59D2tCcW
NYCQtOcsgU8fYfztSDwVY5rRpTSDltEAWQ2upScM/Y/L3iFjoxo9CaDWHE4M
n5IW7P1jT3hWfpKlXiQwsN3nNobdKVXqX9CMSKDV349Aq8sxntEA0Hq8AGfc
rAYqz9KhvbOuh0MBEhrwk6J0pcbuNqaCpeEImsgbI3/Dmn4pMFLhBXxKN9xT
+iIVoR5fUwofEfOumnkkm6BL8YInX3IlmxBRg58jAUIhjpCa68pzr4Cq5uMK
pWuxD2rO04PbhlHGD2mC27PyOWMVVVUgmkA8ChpACuTwQrUa5Wf8hW9N+Ed8
hHlpRwJjoVTRoxMyrKc/6ILQ7GCMeBrfFseCVfSbL7n8Oh7BoqgBR+8n4dzs
5COVSjBy7ClzyBTXa9oFn+JrpMfeKW8rBWj81HV2zHxIFIg75N8KPyYn8e17
KUJk8IMheM3aegWnBCj3bwBLZP0rpy3BqAEU6urpXhN4ko+5ke87RivMbrcH
hU3KJAPuI0WwXttihwSJp5iUmVl9KH7nk2GvtWbhXFxfzn8zoPDzUTdyxURK
lKDQTlURx6eztnklZkprsnGjkn7GrLx1rOp/dd1Hv/D8J1/y9mc+9aXvbAS2
JmB71ycgrkhhHokPr0KkAz7uMuZqYnxnQqAmtu3qfmLA7swEgf53IxEsdjS9
M8EgTaN1SlJFHgT/CdY9GiXiavZxrehYCw7QxgqXrjba05fuSoV2gnCdPfoN
7/woBM/G4lnEGjxlM13z7Ke85B0X3fb3/3U7jnYPzRtmKJ2IS79G0DnNqjKU
cOVoTCf79eC/i8aZKnw05RkbNYgsIqVuNlkcJzlp98qLIUKlA5kMSZIL963x
C49gdc2FOq/03g02GjKl6LkIeOC7mBf89/nN9EW4bTMD9JjwYzEN47/wx5qC
YLbIgFeNXKn5YPqvc7ZEojplJicjaosWIzK1CLtnSarcmmVtMk54SmtISDdg
bIFt9ShpfFyxfMxDOYrNGMSPXPWBzyFNg2LcgkyMuaAv2IOvK7LX/3+Q6Z+W
9DBYemDzIkVkVuNsKnuq5U4NCuGVFEcyE3BSaCaUSIZBicZNSGmhs+W3/PXN
X25rPISf0XhonSpVFRO2Wdmia/UTb7vm07/4minQFvt2tFX6pVe/9QZoU//8
X1jyvTOJt/NhKnX13n5Gw+yk2OH9HWnQ5EhenmMpFr0zlfjoyja44aWkJW/4
OzTmTgdDmxWGUpD7W2O3ezC8g6GNvJ3HRNjdUnSoiyJtxfc8UXpeM2s2G8kM
LIYq3d5jzcq3kwPDZt6SDnx5pw7zLh873wWikQAmENTshL20xfTFfT91098r
//uAKMPMu5O7qoDm6urXMa21HBwLCZyAJz/31e+FR8BNuZkPUug5g46SosP/
39Cpi4F/V0KixkXbofGgIelZNalZPaskTvpot3veuRBuiyF0CC+i4/gPvO/G
m3Ellvk0xXDJG2veIdeyxg9F+3KLUqLoE/lDV09qx9HRY5PjhzuN2PfYxB77
FltYKgU00mB67hUZ1wICPMJroQxWnuFvCi8WyqDJlfFyAAd5sTSTRu0srRYz
HVJ1w3ZjedzRQcfAJNWzziAp6VN/awN2HSRtxn2dp3DPAFn4bQpJyYaTVqwe
Iju3AeOzmrGYVaW1ebhmdw4YcTu9oOVc4FdqRtwn3owRehxiO+78lGdddjV0
ZaSORLmcvFSNiddyNh1NiTB52HI4sOuNFSK+RyqmmFYghsB+QmhdmMmZ27q7
Lj4FEZUTeSA0+QIc507nVCZcOsR3evkjrrhU/aFRL2hGbc06qFCjWquKSfNo
dhLRjSSmV478zgtfd+2fPvOydyOdKrW7xJUxGNmMRWJ/1hYdn2rWVSijhKnv
uHE6qZziuxkIwReAvByP1m2+abHGN7OtMbbCXhylKsAqFYO+Kw/Fu0SD4ye+
8PXXyo7hUSpNt7MFczLOSVwSfcGxfs+LAWih505jgZjLlirM7tls7S0HJkv0
JxbkfWNsLrb4TQ0wba0Gpo5Alewdm33aOmM9nB+g5mOx0Frig2/mN0KAPtzg
2pFAF5ZS09FIHGxpquA4uU0zQNLHUl0Lgb0nPe8/DbEkUX8YZW4MVFX9AMJT
R2mZBR+E++HtnaVKSqXrq0FnPELOEGDpJ01bqLAzXRuXa6aqWx+ITwu+p86r
JDZ9Nw+MOy676ve537WrSNtpCzDHUYJvDPoWKAI4Q7MFkRt5Ir1JJCa7132s
CxDOBNGWOXiO3iKawCLbjMvuoe/98E3IOIylthXmAdp8gHOurprngwyLanBy
PTaYy85bnRUzMdAieOypn4zLCINbY5mrMWlTSUmOONJ0g53rtMg/G0mF3Nih
0qKiknYEVVRyA6tDJZFc9cbX3+hXvmNgDJ5nvM2dQH23gc8NjHnQhz55K1P3
J5spWtGE2nRzARM+3v24O+PdKoynuYj9AEgv3NmiASAek8k2YnCY3F9+1Vs/
zIg79UVUuVxvMx5UmLxar1hTMh1/UsCsRlLrxtYez+TsPsTabxfe5iZ3G13N
CbRHznXbTzr7U3Pqa80MPSjB0Jy/sBZWzVHdwVW95CBNyhxb31I8hs8KAA6T
cVWDisYT3upSpSGCtqN9XTQbgqbAfriJOBrf03fe+Om/zSW1gwT3A+/7yM2X
/MELrgQIjUffjvPTM/SWaquhqvVY2xjbuLMRY2i5/chV13/OqUSiK6gRj53m
wJ9YgS7CxUsw62Q4xE7Z41C02odECJK977aJVYakxNm2o8XLGnwRJQtnWl0c
SOi5rY4GuRPPrFqK1iwJX0PoQj1iFSZwj9WGkGpHDsdbRAQQMo6OG4fifHDu
tpRhq5ruXjyd26q2QKr2gBgkW3QwWXzOU1HsFX3JvRBa279qFiXt2JJWQ1Xz
gfh0Vte9HqDI5cteNwWJtqt3qSLXkeIegXE/xJY5OU70+R7i56xK/miX7uL8
zor3bUbIOipal8QcbDSYO25fFgpHDmiP/CvmoH0A+w7pzhyZ9jKsXXrxDiFw
YkqNKZ1il9PXCpklfNPX5maYOX/0nFeCmP8OdDPeaubQLKIarxK6EAY+Bmn6
sXzxeACkMnhXSeR4qmW3sVIMjFIybznZg3iIc8Jw0FyU7avE+Plhx5ld/6/7
2DOqFXqf5rnv0yDTToNMDwv48Ko5G0siTZ8dEMtNqRl3aVHmG1FEDbWoxIxL
LLFHv/4dH6Wtfihu6keArEo1Z23W6QeLzus6lKl/55RbrRY1fgZ7Aha1s59M
F0072uETFUCLMLY361Q9EXoVUirUcR+hS+gLfC1evoZSSpyZboRUe/Hx2bS7
oFXSyqcPXfmA4gmk0PV3JwRqCuWPsH6yUxbofDDVDzitgZ/vve5jX0SHDvdb
VhBe1+PMQtgecvVPffor3qXVAWkjWMRt1tLQJmOCm2GY8Cuh4u0arbRoU82C
HXEYFOy1pz7jFe/GKTomY9FM3G4+gYXc5KRZcdi21Mi56LYv/1caSNJuzNfQ
zkrMWaS0nZ0EXkhyduCXr/hDq62gNLEXO/7sVSRKRul9mqnokEj64nrG7GEN
Au7lMY+VbUiE+SD3WD3MDol2YgjVHsJPEPWDG+au+H7zptbnWxfX2Yvb+RFm
uIPP0PYAxaql4MgPGZyqmBW+NemGpwXY+JRqIqXkbZWzn96fDR6Rjst+61lv
fvi7PyAAM0v3Fa51TpFvqwuEe9fIj6W71COiV6ahYgkt54h1gqONWiI//WK/
QyENlundo0zU9fLxMSxphFCLYOws5iQghDs99ZmvePef/dGL/gqAdNrqFOU+
nlM9XrVAsHC4Zkk7MhRS7MJPuArkjW8SLaAjieIfOdA2maFKUc7tML90BW02
R64BkrJe1Ehiu2k1NfYdEk7ECkk+ir0oGgtnx3b07SUsPkeJOzWze48AVicU
zjAp2af8TCekw6S95rNvaI7LOzWYKTkAZU1NWbOFhppqlJ4VbYnXJMWwtA9J
M6I2BgXbeMYVzSOtUa25rr3mHVq+FWEBlLk+9ZmXviuiOgslTuF4SrFOc+ES
t9xeOI+/CG2sEz0my795wbbGkQp7zlNe/A5waAq9cbd6h3o7dYakkkxDJH0x
y3531ZGnW8HKNpz63ubIs3ESsVeJVJZx1pozCJ1qwL8EAgmsIiyLpNozn/by
qyAAPG5YPPPLl494RDkTEpxTdE6zJpuxhjWIl1JgmzEEeJUIpnvSxpwyfB/J
ot9+0evfzxrwVuJtbQRI1j2aNAY5jaGWWqXz+VDzHgIYbJcx7Cwk1RxJOjPm
mAgmvl8iKV7YYM03NBgS8PiyxurZb35x9+ZUvFN+gPE3G1UqCDbISVGlZcRB
x8LuIKcDdjsLeE9cn149riOmjwf0NuOkYa5VcpHp5SziMMN6hWIpDDGprV1w
A9HbTEb9ZtgZmDkH1GXOA42j3SyyyEI9NHqYmUWGa8IcAFFGyY1mzsz0LYuR
ISvKA9TcKxqgVrVV/OF1udK6APX3JKTphEV48FTNJdU1Oq2BGYy60h7ER02A
Gnsc0erfe8Fr3/fYUkj7T2L7WhwVarFWBknJPCr/UYOENiLGmX/u1J/HGlyq
CY55efrTX34VOEeazsFDeYCqkBKHv7YXW0npa8lc2o83PrO6ImhzIu7oPkan
EHJmbHLH1iPN9x7WgMYhv9s3x/b2lXa/sCgcWY1LlArWDFKSeXU3Ap0QIQz8
ErnAAvYMyzDPNT3UIsHscvIFPD4m8OxMga5R737YI/gerkc72q1/+10KZhf6
M7moVkSf3tpyyp9o3gz0/d89ZWeXWo8F2QBEuUR0tBXFiKqGQdkTjwv7AKJj
8iIs5cMgxCnT/xoQHWlGSNFFDdbQk/D1bkhVIyVjN09ItVWRio1ZOx62IdS/
4iEyVyKpMkcrwIgDpa1mPll1RW0mOLn/8TVX3ADph1yQtsIzHtbQF2974IXL
R13qepWnWYc3niYZYxJJi+udC2/cdBoP4QZF3igk4lW2YjyPe8VffhCF2hiT
FUOmM9d2BoYrSX9Pk5oYLRFCXV5d8BL1BhMTJDlctTM2pC2a6vFIhbeDw5lh
vziMSYTKLSMRKnF+9T2aWx92yJry9JsKcpjmYVJMvtqmXs0tqG9qRhlXvUeA
euUaJS1s4V95RFIED6pwSE0zHm/Aa7c5q42XjZ97++3lJFVTlM2zSy6yW3Rj
cK+dGM0pd+3dSOgJ05avHtsCNrlEMTfIQGKmzdIwmitWKRIN3kthBr2BlhIp
u17xxfYt3h+K7ZBGVkfIEIwzUuO3Kv9By6fbmVWz5DSn7ogb/70JspquROvM
wAoxe4ZXeqJE3W0qgI9Am7fiAHo/xjzQ+OftGQHVUIZf66Ta1mI9u/fdVNFy
GpnTiRyYF6/9kJ0Paj/RQ0OPYbf2Ot1SSXo7NEwLNEm2a985+gz7AfFcE6Pl
3kqsciKOBDmyZtJZjbVjmzwVfUxgsKmiKJ7ivXs8kSfLjji0TLbTVuJS2yrF
KCbM2kox+lN/GDPqLK+49t1jDXH7DYX9sGucJXkkJsSrVs5oJqTU/4/XeDwG
4Tyo/VhNP/nWaz4lwfCF1j1zWL5QdzMsSPbNSfnjZVmxLcYEJTWEmn7o6g/d
JEyBsRxhqieiUpHn5pz2AoUe5xffxC30Jiy+nbgTy0hfZyqvJ2ke+8q3fOin
3hotloQvSKmOQj6cM5Ba54ZkIUxrx+VOkLXJZOPlU0wnUa4qTOlkef5AatsY
VRF2JB1T5OkgWJM1TFqJBuWOiZW5slzYU1riY1eiGJeam/I2PPWxEYrnwS3e
PKNYj3zT1Z/MSradvKnL0I25kVQ5Q3BaG+8h1r04bfFbkGgB7mMl7Ye5VBGM
PXu0zEAj5K4YoCfW8UC1Il0yVL+JUvrvd2tA7GgBscxtsodMxf6TlbWVynYF
7Do0O9qA1dSpbZMInDiSXW2KPW8yjy27l5KEUjrg+pvHmwffi/UOgGHbUMO3
1M5pGem2sX1286sXhn40KtBhGuUTj/6kP3vNNSD743pGhqJFj4UJ2yz7J54+
0YiW0i/FHlQ/e3UwfUe1nysDs/Cmtuha4N9UOkQMQvUkhbowd+/2ux1d4+lK
CTeE+z5aGHcMo8wKzDpkC77jQtfnCqd3oR0CUBSSZPkKQ4NJzq4mwCjuGIXS
ThuC+KqCtUQxEJ4ESzXv9fmpn1IpWdmkeQmlA+eIb8d5e4+b//ar01oKaME1
h28lYt4qEFBq6ISdsMnz9L6fvOl2Xy6HYtfxyWmOMC4ydqKZASn8c7I53I43
iDHV8m+lBku2GfC9Dt2OObpZVW6KmItl76/s3rG38bb1e2nQ92xgzuA82Xl3
iU3OUj6FujvEaePxPPaOUYs6OqJsxpnhyljH4mzxVIK9LTwIFgUCEM4fsI5Z
6e3aiY3B8/S0Yy+FQVeb+8OogjUE98BtNbPj8NIwDCgWFGPdeZM0uCqv056Y
BVHjsl3YydgSlR+GT2fIsx4nJW4N0j7BQcRAqpu5FkCusfQCB+Pdd5H7Byc8
a+hhA4y4dGb2k2T81LKUsRJU7vX5W74yQeDxFPddNko1y4n0WnFZi1jkGZuo
pEdAsh5TUvSRKJ2eXap2K6oSLPsGwjDhs4iLQnTiRb//vCvQZXC7WaI7+XUI
7SzX34mYBoMaTGdj1pgYVwA/FgZHlWlKW/gMLk8Jkh8LZMFvx+RfEJvZA+w2
04lRcJdALx/+8YptqYquSygcIKSSTK0O246vxjY1+hXbLojjxoOBx7j2xeK2
yUq10NI6zNe/SEL5YxrK8f1/z/Ufv8W3YCFBTNHsuK5HN6bMDBZ/1+5gWk1b
jFHAStMwii1bnitYk1Qnj1jOTrXO8OkKCbtcPbEZcwgXWHWBe6NkFmQzZMH4
aUh882e+8GXVDagelxau1Trf0+R6vjyXhQRuQPf9toM0AVCUBcYl1wNW5wyH
hSrFgQeS6himn57sYmU1QqpHS/VTeaw3VPYR/igST7nkV0oEqIhy7leCNa5E
P44ds65BY1HKhK8FYRZ8ZTdG4Bhu2YNKGOuK+nbzIYerU4MLP+kaGB2JtaVK
IFsNIpweyDG+9r+i/CRZVOcHcgwTUDAuWWMdxp1wjLtnIG/VwExaL50I1Ea9
SnqOE82Yp8a8M94E0W1c2eAtGV0yJ/7CjscR5eaL6G95+z5z3hl+ut8nPn+7
kj53m5OupCB4lMoB6DNpn6GKzkHWfFbaZmCleljWOBdainPfT/7N7V3JsSYQ
tEe3mhmdupBteyDqqx7/zDf92zdf/ckCmZQ95/adhfdLdQ42gzY+lpDfTk0a
Eg4SK7UjxH9fArPGCx1LlvvwtMYFFrosHVZCr1JjAvPaeFrFe9491WKKKVoo
9/mh7H0ogYLIXnFTkwRKWOawT//6f/PMp60oYgKwzMuIFxyG2FPbeQHTppLi
QC983Y3RaQoKo3N3z7zQhOKiqO2Ka0XnZGzXaeu6fgkUjHDdQhUbf5MW4o4z
G4G/7rDeuUG00x2LpMuU19rIce9aCoZoSXNBgoRuWn3jamxLwbU7B0a5xbfW
PJHhW7JDrTfORJz+yM3MAMgkufDwVgaH8XhHm5VonBkeDwyCjO1oFpwHK+Lo
8HpSbpzteHrPfdjqgnzm8/7whW8HqT8O2y3mjWANqadTljhqbLR6bT0viIrD
3KGjzRUPWAlsSNUyhGqgMgxxOMnLtIHvFfE5J1LQKJ7YGvu1i/dMZlMuKRGo
NNKEezMpdOmvqUS4A4gcKuZ1YFztsDYyVA++amD0Wp2djGqWNLJTQ7k/s8SC
kXrUbMZEJYFeIQUhcEvlnfF7F5edFd97tewYS1Eql6ZIyW7DJ+yqux9mjwOC
7SyS6McSEYEGZzFPKLdJ0wDY7UZJZwidmwFEoS6Bz53zY4TOsUJdMqcMH5LT
2ulUiUyem1kXN1B3eh6pQl16IqFSuYF4XrwYB48J6oZniZeApgV+VnR9Z0qC
c9yP4le6IE2JDNPCdYvxEX2k74wfa2JnEVo0lsuNTrzDraHLjynEd6XZMTMi
XFr4/8LqxwTAhlIvVgEOg6bbshZHiTsdTquS0Mdy8nbJA/muGz51K1RDUa0i
xQBNOH2jYqHhixKzcGWuhCLVpyG0IMdvVO6+Id0P2Nuac/fXaYiKuN220oq5
kuZqqie6gJtmYBigU3uX23rmrkruGZ3x8Ded6Omf9zAbLugk2EnTNwGLvX5+
RtK/Fq4o/4PDRl5TJVySzSU5KS4pkXBMum+TXzIz62iJDIzcj/WPdQ3hQm38
gFnj8uskQaedvMXFS4hnOP9Es/nPDSDCA8tEZQ/0ogb2QjP44tgeWWJPo3bp
egbZyea6RwN2Iizjy/Ki5nobq8EugaKBHe9B42qMweYnWbYiyKjKFG5/y963
SiW103X97cao3Uxs2Gb4b1fYmnWQGCsTqQdAnoPWIpAWDwWJAc1umJ2nBicN
D6y0QpLRJZBcGIFGJtCkWHkwC1/39o9A+gutLbS0sAb4DwzgbWt4Cb9coU6q
9YqrKgi+X/FuESqAy0co8VR8wlS+SRtSUUWciMNdLI6/V6kOtUslqZrcWVu/
KM5EleWvv+yNH3B3dq6N4b3L+YpnqDI9scp84itJVFiCIjTSisE3YAHRihG2
2c7rRCh3Oduwk3GWRh23kIoHMmP6C6/7qxGLFV6X62pI2YKbVAZ0DDaTxUEz
5fQGXM7JQKcJjQQQFzZAd2YFukQdEWEth617NlBi30sOdgd5Z+SRjie4MGDQ
LdHNBvLObe4RocXwDsbjHm+wdTssFA+XHI1p8i1gRSK4Dg/Pugb55hLGbsSC
KZoU2XiUDoTYXo9+wzs/Vr7vpXn4f/53LVVQo/Pof/+Hf2TsRVMkHPdY5F1N
grS40AiWAR+GBKILuDXFfEn98WprqxLac6UxvktVxQiH05kePByuWH4paroM
7x5qDzEnzKZ26sS3mUG2FrtTjTLBLc9o2GVr+w98WnGcpwG+i9ISNPpAxGKj
Ga2Zf75Ul0FMinhDotgSbLXiz3hHGsODRU6kklwEe8hhdrdjWTgVTIJebv9P
39tmaFurvtWcEm1CDB+xGYG6RL7fCTRwauq0ST3nolpnTuQ/0RhE5wSOOQ52
3SwubNDGeMSJM/wNDbKIa+ZBvHs22GvfS7SSb2iQ78zVyJeQVJDPEy3nNt8T
e9gVtcxrxneEWEhFDRWzLqVog6n9hBe//v0/9xdXfTzqyZ1WxY3JyMR4U1LR
7mtZuh9oHyCqk8+7YIz6ELghDCxJgfGCZyCNKLI/RaEsHcU0CUonhSzzPX02
UzYTQkmqk4xoobMaoJmPhgx0/NbnOMHNQkPONaklNaBmLCeXimQ6+nR2PCSh
YMPCHROi4j2pTWQpBKWJZkS8LjwXRLwtdXLVbxcrGdW+z/7Tl77zMTlHNpP8
WM/rhIoIos7telzW+kQTmVrfy+QHM0b4u5Qh4+ooo0FrJflp9j+kUtQzFTt5
KMLdybizm++FJ0GjlLF3j8Re9sNjJ67hkSjDQcbzlFXpzC5JArjBYTjIZS/6
n9mkvDDG4bjVqb8bbiUOh403RfgujvnyCJ+ggeNvh4NnZRwcf+sK4UOu+tzm
yifCYPCCiOVUL+dn2LHmxNnO647fPRwoiDo/5FHx38awY6CHG5XvrmQtFH65
zLh8RDxt/XGveNMH4HiMQdtSdSqLcVfHyjdbUCkG1enRslUt9eOJrNHp5GsJ
ELzo9553BeQdAspSA1xpPsGnecQ7rvvMnBk8K8UVhUBFFWHJVbjEpCsvPx0Y
Bn0/yKeZ8VFS1+O4k2ciOmDW90rrNfOg15Pxuh7bHc8DWw+2lYpPEJWGzd3V
d3XB6+L7qlGtju1WfhGYKx7neEqx+pDLgKeNUXZOiPRgKIJ76fQWGjG35xiX
wZ5SaGBOD9g7Glt8/Ncym1Pujx2LZaMhPbtd8kNPj9H6Jc/K5sz4N7tNstAe
0Ey3VYIlqzJq+7/xwH/tUO0BzX1nCIa35bhqCJYyIrYDPGJ7rMFy0T3zl2G6
Z7g2ei/86FXXf841hkqZg8S+nYur1lxC0I04Zjk+jZqZsYftgz0AP0MyFTTe
IIquDAWz7VIOzh68hF62KOeA73BzYnAsi5hvqkFagGDki3/veW9DiLk6Z5qR
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
ErHb3KLq3ivkSNwendSyok1nHm9ySElIzPBQSzB5CBEftYrUcCvV/BsOCNcx
rfjf0VNhkve97YEXLh91qVDm9/Qe+KQr93VVLxuEpo9pB8YUDNVFPfV4PsN1
LDjsJWsEDW4q3p7kVDt7kdyuge70Du0kxTSprpAG8+vxgA1TEp6zDke0w/V4
aFShNljYRh/WUD5FLruKY2lD4VEmcUsr4TrlY20aUgR2EduI9kbtrsrNTF3G
/WZYEkNwpNtrUG2rwZG9wAKfpfXmlLAToSpB8XGa6I9bpAbfXDNUgLEToSHG
56eTE4HU846b47c7HFvQq2yXYaV1gfyOkt61HLEJTEeqfc9DHPFeW+YVrv8j
p0748aIsWcO1k6wMUbBQJMkxpbYmNjV0kZ5hHjbrFP4WsYyf8OLXv19C5mMJ
QsCSUnySzMNt0PtXbPGUmJJGhKn9guJJi/txICw0eoc/DXVl15PF9oiqjaJB
KjkUsExzbmFdI131UECSu4QpjtR+f8niXWbrXeGtlQJeTjx7Ow1+1w6KOc9+
F1fnnKjmjx5L0TFqV0lFnQYQTw0h6eCZSNI56BRQF0OPYlsJmLIX/f7zr0AO
si1z68RcCuonxqBkLdQ3IQYp6ieWu6D+/8vamwd7dhZXghVvr/dqkUpCcltu
7GkiZiLsCXrGEzgGh9vTbrtx0xgHxoRNeGGGHsbGmyyDWCUBsha0on1D+y6B
dkq7VFKV9gUEEtoooIDGWI3bjNuOjhiHPfGbd76bmffkuXnvK8b9R0nv3XfX
b8mTy8lMfJYjjG0DjOWpJ196H3qPcahObYDKmk4sHMnaa4+umvUIc6v9VriI
Q/wSv9tFdyivVcWaQ/pj2tE5cTfp2pAwFEcJqUfVySJoYN+QHF/mSuJj4a3f
3ks/fF8rF3xAD1Fw9LbN/792x7rUxcdebjvJwrcID2M8msDf3q9Wf89A223F
N9j7VtlaY2q1GgiVcZXG7p8Vc2FF1V3rR+kXvCdNqT8moNOMgYTIs54etdIL
as19TfhBlNZ4o8X+S4LaRDw3xKyyktjic3ANIKRFQj47RvsS1MuqkSWRMUcb
1OVF+208ayolWjH+zfWwK1kwbZ+//cEnXxGLw4MWHDd1gQg/piRIbVPauOOI
a28cPXDZS27GfazjH8VSvU4/6i5b9pq4PmepGpi9NQclwo4ipo8XF/LzHXe8
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
I0ttQkpNuijMV/ZF5ZLh/ozKmitqeIyWYpyIRjLbsSq6i39s9fH8iF2TqCYK
g+pNFBhkeFAY5L2lMMivqt5ZHiGtK8x/C8E5gMGkq43E+nIB0USpCY/qyPRI
DmYicdpmhGS12dvf6uH8hIgQ8kJbKBakRSrTwjUxBI2OK/ChIZdUJ2/4B5xE
QhC5BPHKCBqyVaiMbKF4ImgYCr79zZdxQaVpWoD3SHBZzueFuBmxDnPhlxX+
s3r2SCMuuh5IMkpzPu1Q8T/mYlWzBo9HNRdw1LEkuscu45Q3Pf/qX1S1yaxW
8gpbWIxEucjnFvbP875V7qKvOts3ZfTUYPLe7pSIlc3Iodo99SDcnRMM2Mcy
5d+dyHzfxiKA94iadq4pvHX3M3vDCufdnnqpGEBWiRNQAGEfsjPC3aGOu2Vr
gKVeDIf7dGEo/9TsY8SMn23juezyDxdeTVFdN4w8X39i++WODFWJpSZhsDKb
WWNS4dSTL72vtekjqfNr9z3+8pknWFdqd5zueXbvn5919UPtt6pfpWntVZ5f
FSCqbMSiBWXWYiZsSY0G+jlLw3kSLn/6m8KfMngE/hg1wq4pUBX/qAxagr8w
NAv4i68v4C9nOfKGSNrhoARLGr0RCAvuV/dnxU5fprYxNixYV8WU7bzkGJ9Y
V2gy8/7r7nyW7/eBy299om1oOob6W+cde/6d7OTEiP3htTuf0VpHx5x33W6v
A0iMfry66KRa+14S2fMuDtJk5mMmfUiK7ybaM9sQdinPqJfhnGiNcBDQ2CdL
xRyjBC99XpNpx3I0DAeROuimGw0bDrkXy8CKl6vG3yJb8h+1gnEUK1PTUm/R
Mpv/cbq6yz0dxt3vYn3QR2Mz47+aeWrM+hhJG1GWEq4SGK6vqXWHW6DgCKsN
VaQWzrvDr6S2tkNvJubllFMuu49srRVeZPxlXvzNbpXiCDPUmR4mGLHbZ4xv
I1Ygrydx40bpdVfTCIV9jDRjgkvbkh8Gv/7Ll7/5miPkXP++UZDJ4AOT9J5b
H/xKGwaCQTQSZnopXgjVDFsI1q498wQ0wn5yEKeJMakU8rVeyMrYla2hqzIw
SSGt+BR2XpVdoXHBHHoaOPt8HY+AaC5fsqSIJmDIJqnkGNamaUHuFDJLArwA
yhH3sQcvl+ql6uhjan/686h3uXf6+W2olP3ADVNQhIvncDH8dAU5Q2PtbC7W
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
SylZW+0g8aYjbrr1L1V9wqKh36PyIRM3P9WhuXPnJN6EKuyal8WVcI43fPtT
r7tptzjPenEmQmZojyoiUvpInFN3CufDaR/8Ztv6K42/blE3ABvXUCVJy+Oq
uOGcV/gT79Th5kzo0gTDeSRty4dFJUdfUp0FssThoSzHxebWfe5jg0WeMrZy
hRS+khxxIW9dH1SR6ljJds47fJU+pc7a3/YzXFGspmM3qyJh19+mwa4NbQnT
hjznyDrH78Ija856vuZByjLCvILBeCqDMlSVkr0Fr9YSyUsZGvLuMXyoGvKO
7eozFT60SAbgVzDuSraP8gwSiP+oqIW3P+aH0C6eH7+/zhkvwTmy8SheE07t
luU1Um64trgPZSa4/oYexDfrHDgpRajWGp22vEmDLlQHzSLZjCpJLipwqRV0
oWTl7jF+Jie7mYRPb3HxJWTLae5qVxJWJ8YrT5wclyWNwT//smu+qtHu2rNP
2BmegIh7xeRGkREM+Tc/etkuzY7l4FyvGwIWnyDKhBMKbHy70+iG3e44lWMU
xhY5bQdlPYk2MmOyG1RtojNpb6+qB04XQjXO9smOJ+97z3d/KNpUfYZJeyjP
MN3RyzySiqyEP49LoRyotQwL9vgvf+3bODfMDxpIPrYjX+ePV3ltol1oeIkQ
6RvXDgmjMEXiCCVFdZqPeh1rHEUJo8At6N7D1+nro+yzwq98x+jIq9C/zfYA
cjuWj5nMoTMNpYrbPfQ1tY5X4INSj4EmdykUpdEOM+oV1vVXhXVFRRnz7Ydi
KN5JbygtYGscbovxDtObeI8an900pQr9MKeGwRgi6rkQ9yoVcozZZzmrj9GS
C4F4wr3iRjRrWmWVWeiE+UW1VO/2yc69Go5r8TTNdmy5Gqu6pJws4Ex+V4ZB
GEXo5PxHcYW6Pk59coWSQ43LKTxWlaiLY0sqJD2IqVs+KMyVJMJDkZmkl5Is
LOuspjHXWJsT6iL6TVccp9G4J/DDXQw3/3Rh+phU+HokFq/nLRL+BVecqsd4
L4IztIEDb28MwLVYID+1SVrTTAxy5Q6pzVJyKFcTFiwQruVVupN9DqGn4ooY
+dG1HI/nOZ4CPKq7SsIkeNXI9FZ7+ZSW+S0jWTSRvQObbRwU2cBUtcOwqtrq
kIjTwM9hAc1yl0eiAL/UY9swKbHTRksFIyK7dikH6DWt45rf4gxurSQojXDH
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
8d0=\
\>"]]}], "}"}]], "Output",
 CellChangeTimes->{3.6626460042698045`*^9, 3.662646063002327*^9}]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
PrintingPageRange->{Automatic, Automatic},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 253, 6, 31, "Input"],
Cell[836, 30, 665, 12, 24, "Message"],
Cell[1504, 44, 574, 11, 21, "Message"],
Cell[2081, 57, 610, 12, 21, "Message"],
Cell[2694, 71, 610, 12, 21, "Message"],
Cell[3307, 85, 555, 11, 21, "Message"],
Cell[3865, 98, 562, 11, 21, "Message"],
Cell[4430, 111, 531, 11, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4998, 127, 272, 7, 31, "Input"],
Cell[5273, 136, 1817434, 29079, 2264, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

