(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    128052,       2539]
NotebookOptionsPosition[    124415,       2443]
NotebookOutlinePosition[    124757,       2458]
CellTagsIndexPosition[    124714,       2455]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Keys", "[", 
  RowBox[{"allGraphs6", "[", "0", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7427223112258277`*^9, 3.7427223171424847`*^9}, 
   3.7427226682013054`*^9},ExpressionUUID->"9134c66f-1088-4b5f-a95b-\
f5b3cd3256c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"signature\"\>", ",", "\<\"matrix\"\>", ",", "\<\"graph\"\>", 
   ",", "\<\"vertexsets\"\>", ",", "\<\"vertices\"\>", ",", "\<\"edges\"\>", 
   ",", "\<\"relations\"\>", ",", "\<\"links\"\>", ",", "\<\"parents\"\>", 
   ",", "\<\"children\"\>", ",", "\<\"comp\"\>", ",", "\<\"compwhy\"\>", 
   ",", "\<\"colofour\"\>", ",", "\<\"colortable\"\>", 
   ",", "\<\"colofourrealnull\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.742722317977274*^9, 3.7427226689674625`*^9, 
  3.742722810444762*^9},ExpressionUUID->"33c44996-267c-4c97-986e-\
c215beb93347"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"allGraphs6Bis", "=", 
   RowBox[{"Get", "[", "\"\<d:\\\\Saved\\\\Complete6bbb.m\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7427227066344967`*^9, 
  3.7427227315962596`*^9}},ExpressionUUID->"50e72f75-783d-4820-9a7c-\
05d8279ad08f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", 
  RowBox[{"allGraphs6Bis", "[", "0", "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.742722744744749*^9},ExpressionUUID->"08e16cc8-0b81-49c1-a15c-\
617f085d75a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"signature\"\>", ",", "\<\"matrix\"\>", ",", "\<\"graph\"\>", 
   ",", "\<\"vertexsets\"\>", ",", "\<\"vertices\"\>", ",", "\<\"edges\"\>", 
   ",", "\<\"relations\"\>", ",", "\<\"links\"\>", ",", "\<\"parents\"\>", 
   ",", "\<\"children\"\>", ",", "\<\"comp\"\>", ",", "\<\"compwhy\"\>", 
   ",", "\<\"colofour\"\>", ",", "\<\"colortable\"\>", 
   ",", "\<\"colofourrealnull\"\>", ",", "\<\"colofourgenerator\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.742722798097726*^9},ExpressionUUID->"b8b1a885-703f-43c9-8d35-\
3174e184875b"]
}, Open  ]],

Cell[BoxData["Has"], "Input",
 CellChangeTimes->{{3.7427223556558895`*^9, 3.7427223601883717`*^9}, {
  3.74272349318029*^9, 
  3.74272349380599*^9}},ExpressionUUID->"2675625b-9f09-4426-b311-\
cb88e997dbfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"ListofVars", "[", 
         RowBox[{"allGraphs6Bis", "[", 
          RowBox[{"k", ",", "\"\<colofourgenerator\>\""}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"SymbolLevel", "[", "#", "]"}], "\[Equal]", "4"}], "&"}]}], 
       "]"}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"Keys", "[", "allGraphs6Bis", "]"}]}], "}"}]}], "]"}], "//", 
   "Tally"}], "//", "Sort"}]], "Input",
 CellChangeTimes->{{3.7427223005987387`*^9, 3.7427224104850197`*^9}, {
  3.7427228212292657`*^9, 
  3.7427228403977575`*^9}},ExpressionUUID->"fe961035-7519-4290-a0c5-\
cb1fb8e27a18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "469"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2160"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3915"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4995"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5895"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5022"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3435"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3285"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2400"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2850"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2940"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "1090"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "960"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "1110"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "2070"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "1260"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "1005"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "540"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "1245"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "1280"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "600"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "180"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "765"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "495"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "690"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "348"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "240"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "180"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "465"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "315"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "180"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"49", ",", "60"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"51", ",", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"53", ",", "90"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"55", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"64", ",", "65"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"65", ",", "122"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.742722338180301*^9, 3.742722410988678*^9}, 
   3.7427228668536377`*^9},ExpressionUUID->"9bba41d6-8b3f-4aa0-b7b3-\
236db770308a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"def", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "allGraphs6Bis", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"ListofVars", "[", 
           RowBox[{"allGraphs6Bis", "[", 
            RowBox[{"#", ",", "\"\<colofour\>\""}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"SymbolLevel", "[", "#", "]"}], "\[Equal]", "4"}], "&&", 
            RowBox[{"HasQuadrilateralPattern", "[", 
             RowBox[{"SymbolToSets", "[", "#", "]"}], "]"}]}], "&"}]}], "]"}],
         "]"}], ">=", "5"}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7427229195842786`*^9, 3.742722928539297*^9}, {
   3.7427230010406914`*^9, 3.7427230195438147`*^9}, {3.742723063448365*^9, 
   3.7427230670152245`*^9}, {3.742733597124213*^9, 3.7427336137244368`*^9}, 
   3.742733655166979*^9, {3.7427366308757987`*^9, 3.7427366312225847`*^9}, 
   3.742737007166954*^9},ExpressionUUID->"9ff66f6b-6de8-4ad8-be29-\
a93f7c841645"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "def", "]"}]], "Input",
 CellChangeTimes->{{3.742733619476884*^9, 
  3.7427336219178047`*^9}},ExpressionUUID->"4ff0a7f5-e304-4b7f-964e-\
c4c222dcd9ec"],

Cell[BoxData["13152"], "Output",
 CellChangeTimes->{3.7427337224685125`*^9, 3.7427366997559843`*^9, 
  3.742737061464753*^9},ExpressionUUID->"5eec783a-5bf4-4bd6-a594-\
f99ec062bba5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"def", ",", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vars", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"ListofVars", "[", 
           RowBox[{"allGraphs6Bis", "[", 
            RowBox[{"#", ",", "\"\<colofour\>\""}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolLevel", "[", "#", "]"}], "\[Equal]", "4"}], 
           "&"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Map", " ", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"WhichQuadrilateralPattern", "[", 
               RowBox[{"SymbolToSets", "[", "#", "]"}], "]"}], "&"}], ",", 
             "vars"}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "\[GreaterEqual]", "0"}], "&"}]}], "]"}], "]"}], 
        "]"}], "\[Equal]", "5"}]}], "\[IndentingNewLine]", "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.742733759214157*^9, 3.7427337898432655`*^9}, {
   3.742736095700761*^9, 3.7427362278134146`*^9}, {3.7427365046060534`*^9, 
   3.7427365276009893`*^9}, {3.742736571377531*^9, 3.7427365764968705`*^9}, 
   3.742737042969452*^9},ExpressionUUID->"fe0d4033-e5a3-47bc-ac4b-\
9991ed6666e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "4782969", ",", "4960116", ",", "5019165", ",", "5038848", ",", 
   "5039577", ",", "5039820", ",", "5039847", ",", "5039856", ",", "5039829", 
   ",", "5039832", ",", "5039830", ",", "5039823", ",", "5039821", ",", 
   "5039604", ",", "5039613", ",", "5039586", ",", "5039589", ",", "5039587", 
   ",", "5039580", ",", "5039578", ",", "5040333", ",", "5040576", ",", 
   "5040585", ",", "5040342", ",", "5039091", ",", "5039118", ",", "5039127", 
   ",", "5039130", ",", "5039128", ",", "5039121", ",", "5039119", ",", 
   "5039100", ",", "5039103", ",", "5039104", ",", "5039105", ",", "5039101", 
   ",", "5039094", ",", "5039095", ",", "5039092", ",", "5039093", ",", 
   "5038875", ",", "5038884", ",", "5038887", ",", "5038885", ",", "5038878", 
   ",", "5038876", ",", "5038857", ",", "5038860", ",", "5038861", ",", 
   "5038862", ",", "5038858", ",", "5038851", ",", "5038852", ",", "5038849", 
   ",", "5038850", ",", "5019894", ",", "5020137", ",", "5020164", ",", 
   "5020173", ",", "5020146", ",", "5020149", ",", "5020147", ",", "5020140", 
   ",", "5020138", ",", "5019921", ",", "5019930", ",", "5019903", ",", 
   "5019906", ",", "5019904", ",", "5019897", ",", "5019895", ",", "5020623", 
   ",", "5020866", ",", "5020875", ",", "5020632", ",", "5019408", ",", 
   "5019435", ",", "5019444", ",", "5019447", ",", "5019445", ",", "5019438", 
   ",", "5019436", ",", "5019417", ",", "5019420", ",", "5019421", ",", 
   "5019422", ",", "5019418", ",", "5019411", ",", "5019412", ",", "5019409", 
   ",", "5019410", ",", "5019192", ",", "5019201", ",", "5019204", ",", 
   "5019202", ",", "5019195", ",", "5019193", ",", "5019174", ",", "5019177", 
   ",", "5019178", ",", "5019179", ",", "5019175", ",", "5019168", ",", 
   "5019169", ",", "5019166", ",", "5019167", ",", "5078944", ",", "5098627", 
   ",", "5098870", ",", "5098879", ",", "5098636", ",", "5079187", ",", 
   "5079196", ",", "5078953", ",", "4979799", ",", "4980528", ",", "4980771", 
   ",", "4980798", ",", "4980807", ",", "4980810", ",", "4980808", ",", 
   "4980801", ",", "4980799", ",", "4980828", ",", "4980837", ",", "4980780", 
   ",", "4980783", ",", "4980784", ",", "4980781", ",", "4980774", ",", 
   "4980775", ",", "4980772", ",", "4980555", ",", "4980564", ",", "4980567", 
   ",", "4980565", ",", "4980558", ",", "4980556", ",", "4980582", ",", 
   "4980591", ",", "4980537", ",", "4980540", ",", "4980541", ",", "4980538", 
   ",", "4980531", ",", "4980532", ",", "4980529", ",", "4980042", ",", 
   "4980069", ",", "4980078", ",", "4980081", ",", "4980082", ",", "4980085", 
   ",", "4980079", ",", "4980072", ",", "4980073", ",", "4980075", ",", 
   "4980070", ",", "4980051", ",", "4980054", ",", "4980055", ",", "4980052", 
   ",", "4980045", ",", "4980046", ",", "4980043", ",", "4979826", ",", 
   "4979835", ",", "4979838", ",", "4979839", ",", "4979836", ",", "4979829", 
   ",", "4979830", ",", "4979827", ",", "4979808", ",", "4979811", ",", 
   "4979812", ",", "4979815", ",", "4979809", ",", "4979802", ",", "4979803", 
   ",", "4979805", ",", "4979800", ",", "4960845", ",", "4961088", ",", 
   "4961115", ",", "4961124", ",", "4961127", ",", "4961125", ",", "4961118", 
   ",", "4961116", ",", "4961097", ",", "4961100", ",", "4961101", ",", 
   "4961098", ",", "4961091", ",", "4961092", ",", "4961089", ",", "4960872", 
   ",", "4960881", ",", "4960884", ",", "4960882", ",", "4960875", ",", 
   "4960873", ",", "4960854", ",", "4960857", ",", "4960858", ",", "4960855", 
   ",", "4960848", ",", "4960849", ",", "4960846", ",", "4960359", ",", 
   "4960386", ",", "4960395", ",", "4960398", ",", "4960399", ",", "4960402", 
   ",", "4960396", ",", "4960389", ",", "4960390", ",", "4960392", ",", 
   "4960387", ",", "4960416", ",", "4960425", ",", "4960368", ",", "4960371", 
   ",", "4960372", ",", "4960369", ",", "4960362", ",", "4960363", ",", 
   "4960360", ",", "4960143", ",", "4960152", ",", "4960155", ",", "4960156", 
   ",", "4960153", ",", "4960146", ",", "4960147", ",", "4960144", ",", 
   "4960170", ",", "4960179", ",", "4960125", ",", "4960128", ",", "4960129", 
   ",", "4960132", ",", "4960126", ",", "4960119", ",", "4960120", ",", 
   "4960122", ",", "4960117", ",", "4842018", ",", "4861701", ",", "4862430", 
   ",", "4862673", ",", "4862700", ",", "4862709", ",", "4862682", ",", 
   "4862685", ",", "4862683", ",", "4862676", ",", "4862674", ",", "4862457", 
   ",", "4862466", ",", "4862439", ",", "4862442", ",", "4862440", ",", 
   "4862433", ",", "4862431", ",", "4863186", ",", "4863429", ",", "4863438", 
   ",", "4863195", ",", "4861944", ",", "4861971", ",", "4861980", ",", 
   "4861983", ",", "4861981", ",", "4861974", ",", "4861972", ",", "4861953", 
   ",", "4861956", ",", "4861957", ",", "4861954", ",", "4861947", ",", 
   "4861948", ",", "4861945", ",", "4861728", ",", "4861737", ",", "4861740", 
   ",", "4861738", ",", "4861731", ",", "4861729", ",", "4861710", ",", 
   "4861713", ",", "4861714", ",", "4861711", ",", "4861704", ",", "4861705", 
   ",", "4861702", ",", "4842747", ",", "4842990", ",", "4843017", ",", 
   "4843026", ",", "4842999", ",", "4843002", ",", "4843000", ",", "4842993", 
   ",", "4842991", ",", "4842774", ",", "4842783", ",", "4842756", ",", 
   "4842759", ",", "4842757", ",", "4842750", ",", "4842748", ",", "4843476", 
   ",", "4843719", ",", "4843728", ",", "4843485", ",", "4842261", ",", 
   "4842288", ",", "4842297", ",", "4842300", ",", "4842298", ",", "4842291", 
   ",", "4842289", ",", "4842270", ",", "4842273", ",", "4842274", ",", 
   "4842271", ",", "4842264", ",", "4842265", ",", "4842262", ",", "4842045", 
   ",", "4842054", ",", "4842057", ",", "4842055", ",", "4842048", ",", 
   "4842046", ",", "4842027", ",", "4842030", ",", "4842031", ",", "4842028", 
   ",", "4842021", ",", "4842022", ",", "4842019", ",", "4901796", ",", 
   "4921479", ",", "4921722", ",", "4921731", ",", "4921488", ",", "4902039", 
   ",", "4902048", ",", "4901805", ",", "4802652", ",", "4803381", ",", 
   "4803624", ",", "4803651", ",", "4803660", ",", "4803663", ",", "4803661", 
   ",", "4803654", ",", "4803652", ",", "4803681", ",", "4803690", ",", 
   "4803633", ",", "4803636", ",", "4803637", ",", "4803634", ",", "4803627", 
   ",", "4803628", ",", "4803625", ",", "4803408", ",", "4803417", ",", 
   "4803420", ",", "4803418", ",", "4803411", ",", "4803409", ",", "4803435", 
   ",", "4803444", ",", "4803390", ",", "4803393", ",", "4803394", ",", 
   "4803391", ",", "4803384", ",", "4803385", ",", "4803382", ",", "4802895", 
   ",", "4802922", ",", "4802931", ",", "4802934", ",", "4802935", ",", 
   "4802938", ",", "4802932", ",", "4802925", ",", "4802926", ",", "4802928", 
   ",", "4802923", ",", "4802904", ",", "4802907", ",", "4802908", ",", 
   "4802909", ",", "4802905", ",", "4802898", ",", "4802899", ",", "4802896", 
   ",", "4802897", ",", "4802679", ",", "4802688", ",", "4802691", ",", 
   "4802692", ",", "4802689", ",", "4802682", ",", "4802683", ",", "4802680", 
   ",", "4802661", ",", "4802664", ",", "4802665", ",", "4802666", ",", 
   "4802668", ",", "4802662", ",", "4802655", ",", "4802656", ",", "4802658", 
   ",", "4802653", ",", "4802654", ",", "4783698", ",", "4783941", ",", 
   "4783968", ",", "4783977", ",", "4783980", ",", "4783978", ",", "4783971", 
   ",", "4783969", ",", "4783950", ",", "4783953", ",", "4783954", ",", 
   "4783951", ",", "4783944", ",", "4783945", ",", "4783942", ",", "4783725", 
   ",", "4783734", ",", "4783737", ",", "4783735", ",", "4783728", ",", 
   "4783726", ",", "4783707", ",", "4783710", ",", "4783711", ",", "4783708", 
   ",", "4783701", ",", "4783702", ",", "4783699", ",", "4783212", ",", 
   "4783239", ",", "4783248", ",", "4783251", ",", "4783252", ",", "4783255", 
   ",", "4783249", ",", "4783242", ",", "4783243", ",", "4783245", ",", 
   "4783240", ",", "4783269", ",", "4783278", ",", "4783221", ",", "4783224", 
   ",", "4783225", ",", "4783226", ",", "4783222", ",", "4783215", ",", 
   "4783216", ",", "4783213", ",", "4783214", ",", "4782996", ",", "4783005", 
   ",", "4783008", ",", "4783009", ",", "4783006", ",", "4782999", ",", 
   "4783000", ",", "4782997", ",", "4783023", ",", "4783032", ",", "4782978", 
   ",", "4782981", ",", "4782982", ",", "4782983", ",", "4782985", ",", 
   "4782979", ",", "4782972", ",", "4782973", ",", "4782975", ",", "4782970", 
   ",", "4782971", ",", "177147", ",", "236196", ",", "255879", ",", "256608",
    ",", "256851", ",", "256878", ",", "256887", ",", "256860", ",", "256863",
    ",", "256861", ",", "256854", ",", "256852", ",", "256635", ",", "256644",
    ",", "256617", ",", "256620", ",", "256618", ",", "256611", ",", "256609",
    ",", "256122", ",", "256149", ",", "256158", ",", "256161", ",", "256159",
    ",", "256152", ",", "256150", ",", "256131", ",", "256134", ",", "256135",
    ",", "256136", ",", "256132", ",", "256125", ",", "256126", ",", "256123",
    ",", "256124", ",", "255906", ",", "255915", ",", "255918", ",", "255916",
    ",", "255909", ",", "255907", ",", "255888", ",", "255891", ",", "255892",
    ",", "255893", ",", "255889", ",", "255882", ",", "255883", ",", "255880",
    ",", "255881", ",", "236925", ",", "237168", ",", "237195", ",", "237204",
    ",", "237177", ",", "237180", ",", "237178", ",", "237171", ",", "237169",
    ",", "236952", ",", "236961", ",", "236934", ",", "236937", ",", "236935",
    ",", "236928", ",", "236926", ",", "236439", ",", "236466", ",", "236475",
    ",", "236478", ",", "236476", ",", "236469", ",", "236467", ",", "236448",
    ",", "236451", ",", "236452", ",", "236453", ",", "236449", ",", "236442",
    ",", "236443", ",", "236440", ",", "236441", ",", "236223", ",", "236232",
    ",", "236235", ",", "236233", ",", "236226", ",", "236224", ",", "236205",
    ",", "236208", ",", "236209", ",", "236210", ",", "236206", ",", "236199",
    ",", "236200", ",", "236197", ",", "236198", ",", "295246", ",", "314929",
    ",", "315172", ",", "315181", ",", "314938", ",", "295489", ",", "295498",
    ",", "295255", ",", "196830", ",", "197559", ",", "197802", ",", "197829",
    ",", "197838", ",", "197841", ",", "197839", ",", "197832", ",", "197830",
    ",", "197859", ",", "197868", ",", "197811", ",", "197814", ",", "197815",
    ",", "197812", ",", "197805", ",", "197806", ",", "197803", ",", "197586",
    ",", "197595", ",", "197598", ",", "197596", ",", "197589", ",", "197587",
    ",", "197613", ",", "197622", ",", "197568", ",", "197571", ",", "197572",
    ",", "197569", ",", "197562", ",", "197563", ",", "197560", ",", "198315",
    ",", "198558", ",", "198567", ",", "198324", ",", "197073", ",", "197100",
    ",", "197109", ",", "197112", ",", "197113", ",", "197116", ",", "197110",
    ",", "197103", ",", "197104", ",", "197106", ",", "197101", ",", "197082",
    ",", "197085", ",", "197086", ",", "197083", ",", "197076", ",", "197077",
    ",", "197074", ",", "196857", ",", "196866", ",", "196869", ",", "196870",
    ",", "196867", ",", "196860", ",", "196861", ",", "196858", ",", "196839",
    ",", "196842", ",", "196843", ",", "196846", ",", "196840", ",", "196833",
    ",", "196834", ",", "196836", ",", "196831", ",", "177876", ",", "178119",
    ",", "178146", ",", "178155", ",", "178158", ",", "178156", ",", "178149",
    ",", "178147", ",", "178128", ",", "178131", ",", "178132", ",", "178129",
    ",", "178122", ",", "178123", ",", "178120", ",", "177903", ",", "177912",
    ",", "177915", ",", "177913", ",", "177906", ",", "177904", ",", "177885",
    ",", "177888", ",", "177889", ",", "177886", ",", "177879", ",", "177880",
    ",", "177877", ",", "178605", ",", "178848", ",", "178857", ",", "178614",
    ",", "177390", ",", "177417", ",", "177426", ",", "177429", ",", "177430",
    ",", "177433", ",", "177427", ",", "177420", ",", "177421", ",", "177423",
    ",", "177418", ",", "177447", ",", "177456", ",", "177399", ",", "177402",
    ",", "177403", ",", "177400", ",", "177393", ",", "177394", ",", "177391",
    ",", "177174", ",", "177183", ",", "177186", ",", "177187", ",", "177184",
    ",", "177177", ",", "177178", ",", "177175", ",", "177201", ",", "177210",
    ",", "177156", ",", "177159", ",", "177160", ",", "177163", ",", "177157",
    ",", "177150", ",", "177151", ",", "177153", ",", "177148", ",", "59049", 
   ",", "78732", ",", "79461", ",", "79704", ",", "79731", ",", "79740", ",", 
   "79713", ",", "79716", ",", "79714", ",", "79707", ",", "79705", ",", 
   "79488", ",", "79497", ",", "79470", ",", "79473", ",", "79471", ",", 
   "79464", ",", "79462", ",", "78975", ",", "79002", ",", "79011", ",", 
   "79014", ",", "79012", ",", "79005", ",", "79003", ",", "78984", ",", 
   "78987", ",", "78988", ",", "78985", ",", "78978", ",", "78979", ",", 
   "78976", ",", "78759", ",", "78768", ",", "78771", ",", "78769", ",", 
   "78762", ",", "78760", ",", "78741", ",", "78744", ",", "78745", ",", 
   "78742", ",", "78735", ",", "78736", ",", "78733", ",", "59778", ",", 
   "60021", ",", "60048", ",", "60057", ",", "60030", ",", "60033", ",", 
   "60031", ",", "60024", ",", "60022", ",", "59805", ",", "59814", ",", 
   "59787", ",", "59790", ",", "59788", ",", "59781", ",", "59779", ",", 
   "59292", ",", "59319", ",", "59328", ",", "59331", ",", "59329", ",", 
   "59322", ",", "59320", ",", "59301", ",", "59304", ",", "59305", ",", 
   "59302", ",", "59295", ",", "59296", ",", "59293", ",", "59076", ",", 
   "59085", ",", "59088", ",", "59086", ",", "59079", ",", "59077", ",", 
   "59058", ",", "59061", ",", "59062", ",", "59059", ",", "59052", ",", 
   "59053", ",", "59050", ",", "118098", ",", "137781", ",", "138024", ",", 
   "138033", ",", "137790", ",", "118341", ",", "118350", ",", "118107", ",", 
   "19683", ",", "20412", ",", "20655", ",", "20682", ",", "20691", ",", 
   "20694", ",", "20692", ",", "20685", ",", "20683", ",", "20712", ",", 
   "20721", ",", "20664", ",", "20667", ",", "20668", ",", "20665", ",", 
   "20658", ",", "20659", ",", "20656", ",", "20439", ",", "20448", ",", 
   "20451", ",", "20449", ",", "20442", ",", "20440", ",", "20466", ",", 
   "20475", ",", "20421", ",", "20424", ",", "20425", ",", "20422", ",", 
   "20415", ",", "20416", ",", "20413", ",", "21168", ",", "21411", ",", 
   "21420", ",", "21177", ",", "19926", ",", "19953", ",", "19962", ",", 
   "19965", ",", "19966", ",", "19969", ",", "19963", ",", "19956", ",", 
   "19957", ",", "19959", ",", "19954", ",", "19935", ",", "19938", ",", 
   "19939", ",", "19940", ",", "19936", ",", "19929", ",", "19930", ",", 
   "19927", ",", "19928", ",", "19710", ",", "19719", ",", "19722", ",", 
   "19723", ",", "19720", ",", "19713", ",", "19714", ",", "19711", ",", 
   "19692", ",", "19695", ",", "19696", ",", "19697", ",", "19699", ",", 
   "19693", ",", "19686", ",", "19687", ",", "19689", ",", "19684", ",", 
   "19685", ",", "729", ",", "972", ",", "999", ",", "1008", ",", "1011", ",",
    "1009", ",", "1002", ",", "1000", ",", "981", ",", "984", ",", "985", ",",
    "982", ",", "975", ",", "976", ",", "973", ",", "756", ",", "765", ",", 
   "768", ",", "766", ",", "759", ",", "757", ",", "738", ",", "741", ",", 
   "742", ",", "739", ",", "732", ",", "733", ",", "730", ",", "1458", ",", 
   "1701", ",", "1710", ",", "1467", ",", "243", ",", "270", ",", "279", ",", 
   "282", ",", "283", ",", "286", ",", "280", ",", "273", ",", "274", ",", 
   "276", ",", "271", ",", "300", ",", "309", ",", "252", ",", "255", ",", 
   "256", ",", "257", ",", "253", ",", "246", ",", "247", ",", "244", ",", 
   "245", ",", "27", ",", "36", ",", "39", ",", "40", ",", "37", ",", "30", 
   ",", "31", ",", "28", ",", "54", ",", "63", ",", "9", ",", "12", ",", "13",
    ",", "14", ",", "16", ",", "10", ",", "3", ",", "4", ",", "6", ",", "1", 
   ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.7427337843913794`*^9, 3.742733793088888*^9}, 
   3.7427362358604307`*^9, 3.7427365431103115`*^9, 3.742736582535372*^9, 
   3.74273673222394*^9, {3.7427370878573914`*^9, 
   3.7427371134813576`*^9}},ExpressionUUID->"f172413b-602c-4efd-8c63-\
1b39ed27f01f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vars", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"ListofVars", "[", 
          RowBox[{"allGraphs6Bis", "[", 
           RowBox[{"d", ",", "\"\<colofourgenerator\>\""}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"SymbolLevel", "[", "#", "]"}], "\[Equal]", "4"}], "&"}]}],
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Map", " ", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"WhichQuadrilateralPattern", "[", 
            RowBox[{"SymbolToSets", "[", "#", "]"}], "]"}], "&"}], ",", 
          "vars"}], "]"}], ",", 
        RowBox[{
         RowBox[{"#", "\[GreaterEqual]", "0"}], "&"}]}], "]"}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", 
     RowBox[{"{", 
      RowBox[{
      "8050374", ",", "8051841", ",", "8050377", ",", "8050375", ",", 
       "5083561", ",", "4965220", ",", "4965247", ",", "4965223", ",", 
       "4842018", ",", "4842534", ",", "4842208", ",", "4842045", ",", 
       "4842040", ",", "4783698", ",", "4784214", ",", "4783888", ",", 
       "4783720", ",", "4783699", ",", "4783417", ",", "4782996", ",", 
       "4782972", ",", "4782970", ",", "9625986", ",", "9625962", ",", 
       "9625728", ",", "9625726", ",", "3247734", ",", "3247732", ",", 
       "1299090", ",", "1318775", ",", "1299819", ",", "1299117", ",", 
       "1142346", ",", "1141644", ",", "236196", ",", "276318", ",", "250050",
        ",", "236712", ",", "236199", ",", "210981", ",", "217270", ",", 
       "191002", ",", "177876", ",", "177877", ",", "177664", ",", "177174", 
       ",", "177150", ",", "177148", ",", "433756", ",", "433054", ",", 
       "413614", ",", "413590", ",", "78732", ",", "92829", ",", "78759", ",",
        "59292", ",", "59491", ",", "59058", ",", "59061", ",", "33780", ",", 
       "33781", ",", "20412", ",", "20434", ",", "20415", ",", "19710", ",", 
       "19732", ",", "19686", ",", "19684", ",", "40134", ",", "40132", ",", 
       "5374", ",", "5350", ",", "972", ",", "1171", ",", "975", ",", "738", 
       ",", "442", ",", "270", ",", "271", ",", "246", ",", "244", ",", "36", 
       ",", "37", ",", "12", ",", "10"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.742736252606249*^9, 3.742736483847973*^9}, 
   3.7427365527179656`*^9, 
   3.7427365918156466`*^9},ExpressionUUID->"51ae6b71-dc0a-4074-bc40-\
6f30cdcd9f2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5", ",", "4", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7427364189575624`*^9, 3.742736484603504*^9}, 
   3.7427365537661934`*^9, 
   3.742736592500842*^9},ExpressionUUID->"7899c08f-03a1-4a34-ac31-\
871adc5b2dca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"def", ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ChromaticPolynomial", "[", 
       RowBox[{
        RowBox[{"allGraphs6Bis", "[", 
         RowBox[{"#", ",", "\"\<graph\>\""}], "]"}], ",", "3"}], "]"}], "==", 
      "0"}], "&&", 
     RowBox[{"PlanarGraphQ", "[", 
      RowBox[{"allGraphs6Bis", "[", 
       RowBox[{"#", ",", "\"\<graph\>\""}], "]"}], "]"}]}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.742733874290534*^9, 
  3.7427338804429617`*^9}},ExpressionUUID->"c36e51cf-aa0f-4ecb-8b65-\
7a1b1354689b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7113106", ",", "7113097", ",", "7112404", ",", "7112395", ",", "7106628", 
   ",", "7106626", ",", "7086945", ",", "7086943", ",", "6935959", ",", 
   "6935950", ",", "6935257", ",", "6935248", ",", "6635694", ",", "6635685", 
   ",", "6635451", ",", "6635442", ",", "6577374", ",", "6577365", ",", 
   "6577131", ",", "6577122", ",", "5579316", ",", "5579073", ",", "5559633", 
   ",", "5559390", ",", "5520268", ",", "5520025", ",", "5500585", ",", 
   "5500342", ",", "5047956", ",", "5047932", ",", "4870809", ",", "4870785", 
   ",", "2323659", ",", "2323657", ",", "2303976", ",", "2303974", ",", 
   "264987", ",", "264963", ",", "87840", ",", "87816"}], "}"}]], "Output",
 CellChangeTimes->{
  3.742733883848153*^9},ExpressionUUID->"e6eb22e3-c71d-4452-991b-\
76f6f3ec0484"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"SymbolLevel", ",", 
     RowBox[{"ListofVars", "[", 
      RowBox[{"allGraphs6Bis", "[", 
       RowBox[{"k", ",", "\"\<colofourgenerator\>\""}], "]"}], "]"}]}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"Take", "[", 
      RowBox[{"def", ",", "3"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.742723128106383*^9, 
  3.742723205557342*^9}},ExpressionUUID->"3229901e-3195-42d8-b1ea-\
c106173fc0c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "5", ",", "5", ",", "5", ",", "5", ",", "4", ",", "4",
      ",", "4", ",", "4", ",", "4", ",", "5", ",", "4", ",", "4", ",", "5", 
     ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "5", ",", "5", ",", "4", ",", "4", ",", "4", ",", "5",
      ",", "4", ",", "4", ",", "4", ",", "4", ",", "5", ",", "4", ",", "5", 
     ",", "4", ",", "4", ",", "5", ",", "5", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "5", ",", "5", ",", "4", ",", "4", ",", "4", ",", "5",
      ",", "4", ",", "4", ",", "5", ",", "4", ",", "4", ",", "4", ",", "5", 
     ",", "4", ",", "4", ",", "5", ",", "5", ",", "5", ",", "6"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.742723156809202*^9, 3.7427232060753098`*^9}, 
   3.742733731758785*^9},ExpressionUUID->"108e14c7-8ccd-4f38-b81e-\
fc856c58051c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"def", ",", "3"}], "]"}]], "Input",ExpressionUUID->"48d58e02-a43b-\
4da1-92dd-ba06f882be7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7171173", ",", "7171258", ",", "7171210"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7427232156699624`*^9},ExpressionUUID->"4c0ba37f-ca64-45e6-9a15-\
b55ddcccbf5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanarGraphQ", "[", 
  RowBox[{"allGraphs6Bis", "[", 
   RowBox[{"8050374", ",", "\"\<graph\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7427369230764437`*^9, 
  3.742736930515033*^9}},ExpressionUUID->"21df87c1-2abd-4e72-bad2-\
c80d9946d75d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.7427369312312574`*^9},ExpressionUUID->"49a4eb5e-31e3-40ee-b4a9-\
6e052d41b960"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"FormulaGraphReverse2", "[", 
      RowBox[{"allGraphs6Bis", "[", 
       RowBox[{"8050374", ",", "\"\<colofour\>\""}], "]"}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Graph", "[", 
    RowBox[{"g", ",", 
     RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ChangeSymbol", "[", 
             RowBox[{"#", ",", "\"\<v\>\""}], "]"}], "\[Rule]", "Red"}], 
           "&"}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"ListofVars", "[", 
             RowBox[{"allGraphs6Bis", "[", 
              RowBox[{"8050374", ",", "\"\<colofour\>\""}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"SymbolLevel", "[", "#", "]"}], "\[Equal]", "4"}], "&&", 
              RowBox[{"HasQuadrilateralPattern", "[", 
               RowBox[{"SymbolToSets", "[", "#", "]"}], "]"}]}], "&"}]}], 
           "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"ChangeSymbol", "[", 
             RowBox[{"#", ",", "\"\<v\>\""}], "]"}], "\[Rule]", "Green"}], 
           "&"}], ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"ListofVars", "[", 
             RowBox[{"allGraphs6Bis", "[", 
              RowBox[{"8050374", ",", "\"\<colofour\>\""}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"SymbolLevel", "[", "#", "]"}], "\[Equal]", "4"}], "&&", 
              RowBox[{"HasTrianglePattern", "[", 
               RowBox[{"SymbolToSets", "[", "#", "]"}], "]"}]}], "&"}]}], 
           "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7427232200130053`*^9, 3.742723257762579*^9}, 
   3.742733801021506*^9, 3.742736600804268*^9, {3.7427367479095163`*^9, 
   3.742736907371955*^9}, {3.742736950329726*^9, 
   3.7427369898698363`*^9}},ExpressionUUID->"509d9f1f-03bf-44c5-8fc6-\
fda305903c63"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`v1345x26, $CellContext`v1345x2x6, \
$CellContext`v134x256, $CellContext`v134x25x6, $CellContext`v134x26x5, \
$CellContext`v134x2x56, $CellContext`v134x2x5x6, $CellContext`v135x246, \
$CellContext`v135x24x6, $CellContext`v135x26x4, $CellContext`v135x2x46, \
$CellContext`v135x2x4x6, $CellContext`v13x2456, $CellContext`v13x245x6, \
$CellContext`v13x246x5, $CellContext`v13x24x56, $CellContext`v13x24x5x6, \
$CellContext`v13x256x4, $CellContext`v13x25x46, $CellContext`v13x25x4x6, \
$CellContext`v13x26x45, $CellContext`v13x26x4x5, $CellContext`v13x2x456, \
$CellContext`v13x2x45x6, $CellContext`v13x2x46x5, $CellContext`v13x2x4x56, \
$CellContext`v13x2x4x5x6}, {{{2, 1}, {5, 1}, {10, 1}, {21, 1}, {7, 2}, {12, 
       2}, {24, 2}, {4, 3}, {5, 3}, {6, 3}, {18, 3}, {7, 4}, {20, 4}, {7, 
       5}, {22, 5}, {7, 6}, {26, 6}, {27, 7}, {9, 8}, {10, 8}, {11, 8}, {15, 
       8}, {12, 9}, {17, 9}, {12, 10}, {22, 10}, {12, 11}, {25, 11}, {27, 
       12}, {14, 13}, {15, 13}, {16, 13}, {18, 13}, {19, 13}, {21, 13}, {23, 
       13}, {17, 14}, {20, 14}, {24, 14}, {17, 15}, {22, 15}, {25, 15}, {17, 
       16}, {26, 16}, {27, 17}, {20, 18}, {22, 18}, {26, 18}, {20, 19}, {25, 
       19}, {27, 20}, {22, 21}, {24, 21}, {27, 22}, {24, 23}, {25, 23}, {26, 
       23}, {27, 24}, {27, 25}, {27, 26}}, Null}, {
      GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       VertexLabels -> {$CellContext`v13x26x45 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "26", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "45"}], Rational[1, 6] 
           Pi], $CellContext`v13x2456 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2456"}], Rational[1, 6] 
           Pi], $CellContext`v13x2x456 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "456"}], Rational[1, 6] 
           Pi], $CellContext`v13x2x4x56 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "56"}], Rational[1, 6] 
           Pi], $CellContext`v135x2x4x6 -> Rotate[
           Row[{"135"}], Rational[1, 6] Pi], $CellContext`v135x24x6 -> Rotate[
           Row[{"135", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24"}], Rational[1, 6] 
           Pi], $CellContext`v13x26x4x5 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "26"}], Rational[1, 6] 
           Pi], $CellContext`v134x256 -> Rotate[
           Row[{"134", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "256"}], Rational[1, 6] 
           Pi], $CellContext`v135x2x46 -> Rotate[
           Row[{"135", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46"}], Rational[1, 6] 
           Pi], $CellContext`v13x2x46x5 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46"}], Rational[1, 6] 
           Pi], $CellContext`v134x26x5 -> Rotate[
           Row[{"134", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "26"}], Rational[1, 6] 
           Pi], $CellContext`v13x24x56 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "56"}], Rational[1, 6] 
           Pi], $CellContext`v13x256x4 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "256"}], Rational[1, 6] 
           Pi], $CellContext`v135x26x4 -> Rotate[
           Row[{"135", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "26"}], Rational[1, 6] 
           Pi], $CellContext`v13x245x6 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "245"}], Rational[1, 6] 
           Pi], $CellContext`v13x24x5x6 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24"}], Rational[1, 6] 
           Pi], $CellContext`v13x246x5 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "246"}], Rational[1, 6] 
           Pi], $CellContext`v13x25x46 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46"}], Rational[1, 6] 
           Pi], $CellContext`v134x2x56 -> Rotate[
           Row[{"134", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "56"}], Rational[1, 6] 
           Pi], $CellContext`v13x2x45x6 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "45"}], Rational[1, 6] 
           Pi], $CellContext`v134x25x6 -> Rotate[
           Row[{"134", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25"}], Rational[1, 6] 
           Pi], $CellContext`v134x2x5x6 -> Rotate[
           Row[{"134"}], Rational[1, 6] Pi], $CellContext`v13x2x4x5x6 -> 
         Rotate[
           Row[{"13"}], Rational[1, 6] Pi], $CellContext`v13x25x4x6 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25"}], Rational[1, 6] 
           Pi], $CellContext`v1345x2x6 -> Rotate[
           Row[{"1345"}], Rational[1, 6] Pi], $CellContext`v135x246 -> Rotate[
           Row[{"135", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "246"}], Rational[1, 6] 
           Pi], $CellContext`v1345x26 -> Rotate[
           Row[{"1345", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "26"}], Rational[1, 6] Pi]}, 
       VertexStyle -> {$CellContext`v13x25x4x6 -> 
         RGBColor[0, 1, 0], $CellContext`v13x26x4x5 -> 
         RGBColor[1, 0, 0], $CellContext`v13x24x5x6 -> 
         RGBColor[0, 1, 0], $CellContext`v13x2x46x5 -> 
         RGBColor[1, 0, 0], $CellContext`v13x2x4x56 -> RGBColor[1, 0, 0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.014441083261307979`], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.07509363295880149], 
        ArrowBox[{{2., 1.}, {2., 0.}}, 0.07509363295880149], 
        ArrowBox[{{-1., 1.}, {0., 0.}}, 0.07509363295880149], 
        ArrowBox[{{-1., 1.}, {2., 0.}}, 0.07509363295880149], 
        ArrowBox[{{4., 1.}, {2., 0.}}, 0.07509363295880149], 
        ArrowBox[{{2., 2.}, {0., 1.}}, 0.07509363295880149], 
        ArrowBox[{{2., 2.}, {2., 1.}}, 0.07509363295880149], 
        ArrowBox[{{2., 2.}, {-1., 1.}}, 0.07509363295880149], 
        ArrowBox[{{2., 2.}, {4., 1.}}, 0.07509363295880149], 
        ArrowBox[{{5., 1.}, {5., 0.}}, 0.07509363295880149], 
        ArrowBox[{{1., 1.}, {0., 0.}}, 0.07509363295880149], 
        ArrowBox[{{1., 1.}, {5., 0.}}, 0.07509363295880149], 
        ArrowBox[{{6., 1.}, {5., 0.}}, 0.07509363295880149], 
        ArrowBox[{{4., 2.}, {0., 1.}}, 0.07509363295880149], 
        ArrowBox[{{4., 2.}, {5., 1.}}, 0.07509363295880149], 
        ArrowBox[{{4., 2.}, {1., 1.}}, 0.07509363295880149], 
        ArrowBox[{{4., 2.}, {6., 1.}}, 0.07509363295880149], 
        ArrowBox[{{8., 1.}, {9., 0.}}, 0.07509363295880149], 
        ArrowBox[{{9., 1.}, {5., 0.}}, 0.07509363295880149], 
        ArrowBox[{{9., 1.}, {9., 0.}}, 0.07509363295880149], 
        ArrowBox[{{10., 1.}, {9., 0.}}, 0.07509363295880149], 
        ArrowBox[{{8., 2.}, {5., 1.}}, 0.07509363295880149], 
        ArrowBox[{{8., 2.}, {8., 1.}}, 0.07509363295880149], 
        ArrowBox[{{8., 2.}, {9., 1.}}, 0.07509363295880149], 
        ArrowBox[{{8., 2.}, {10., 1.}}, 0.07509363295880149], 
        ArrowBox[{{7., 1.}, {2., 0.}}, 0.07509363295880149], 
        ArrowBox[{{7., 1.}, {9., 0.}}, 0.07509363295880149], 
        ArrowBox[{{12., 1.}, {9., 0.}}, 0.07509363295880149], 
        ArrowBox[{{7., 2.}, {2., 1.}}, 0.07509363295880149], 
        ArrowBox[{{7., 2.}, {8., 1.}}, 0.07509363295880149], 
        ArrowBox[{{7., 2.}, {7., 1.}}, 0.07509363295880149], 
        ArrowBox[{{7., 2.}, {12., 1.}}, 0.07509363295880149], 
        ArrowBox[{{3., 1.}, {0., 0.}}, 0.07509363295880149], 
        ArrowBox[{{3., 1.}, {9., 0.}}, 0.07509363295880149], 
        ArrowBox[{{5., 2.}, {-1., 1.}}, 0.07509363295880149], 
        ArrowBox[{{5., 2.}, {1., 1.}}, 0.07509363295880149], 
        ArrowBox[{{5., 2.}, {9., 1.}}, 0.07509363295880149], 
        ArrowBox[{{5., 2.}, {7., 1.}}, 0.07509363295880149], 
        ArrowBox[{{5., 2.}, {3., 1.}}, 0.07509363295880149], 
        ArrowBox[{{11., 1.}, {9., 0.}}, 0.07509363295880149], 
        ArrowBox[{{6., 2.}, {0., 1.}}, 0.07509363295880149], 
        ArrowBox[{{6., 2.}, {8., 1.}}, 0.07509363295880149], 
        ArrowBox[{{6., 2.}, {3., 1.}}, 0.07509363295880149], 
        ArrowBox[{{6., 2.}, {11., 1.}}, 0.07509363295880149], 
        ArrowBox[{{10., 2.}, {6., 1.}}, 0.07509363295880149], 
        ArrowBox[{{10., 2.}, {9., 1.}}, 0.07509363295880149], 
        ArrowBox[{{10., 2.}, {12., 1.}}, 0.07509363295880149], 
        ArrowBox[{{10., 2.}, {11., 1.}}, 0.07509363295880149], 
        ArrowBox[{{9., 2.}, {4., 1.}}, 0.07509363295880149], 
        ArrowBox[{{9., 2.}, {10., 1.}}, 0.07509363295880149], 
        ArrowBox[{{9., 2.}, {7., 1.}}, 0.07509363295880149], 
        ArrowBox[{{9., 2.}, {11., 1.}}, 0.07509363295880149], 
        ArrowBox[{{7., 3.}, {2., 2.}}, 0.07509363295880149], 
        ArrowBox[{{7., 3.}, {4., 2.}}, 0.07509363295880149], 
        ArrowBox[{{7., 3.}, {8., 2.}}, 0.07509363295880149], 
        ArrowBox[{{7., 3.}, {7., 2.}}, 0.07509363295880149], 
        ArrowBox[{{7., 3.}, {5., 2.}}, 0.07509363295880149], 
        ArrowBox[{{7., 3.}, {6., 2.}}, 0.07509363295880149], 
        ArrowBox[{{7., 3.}, {10., 2.}}, 0.07509363295880149], 
        ArrowBox[{{7., 3.}, {9., 2.}}, 0.07509363295880149]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.07509363295880149], InsetBox[
          RotationBox[
           TemplateBox[{"\"1345\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.07509363295880149, 0.07509363295880149}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1345\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.07509363295880149, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"134\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"256\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0750936329588017, 0.07509363295880149}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"134\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0750936329588017, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"134\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9249063670411986, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"134\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"56\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.075093632958802, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"134\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0750936329588017, 2.0750936329588017}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., 0.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"135\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"246\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.075093632958802, 0.07509363295880149}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"135\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.075093632958802, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"135\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0750936329588014, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{6., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"135\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.075093632958802, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 2.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"135\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.075093632958802, 2.0750936329588017}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{9., 0.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2456\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {9.0750936329588, 0.07509363295880149}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{8., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"245\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {8.0750936329588, 1.0750936329588014}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{9., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"246\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {9.0750936329588, 1.0750936329588014}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{10., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"56\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {10.0750936329588, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], DiskBox[{8., 2.}, 0.07509363295880149]}, InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {8.0750936329588, 2.0750936329588017}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{7., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"256\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.075093632958802, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{12., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {12.0750936329588, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], DiskBox[{7., 2.}, 0.07509363295880149]}, InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.075093632958802, 2.0750936329588017}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"45\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.0750936329588017, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], DiskBox[{5., 2.}, 0.07509363295880149]}, InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.075093632958802, 2.0750936329588017}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{11., 1.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"456\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {11.0750936329588, 1.0750936329588014}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{6., 2.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"45\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.075093632958802, 2.0750936329588017}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], DiskBox[{10., 2.}, 0.07509363295880149]}, 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {10.0750936329588, 2.0750936329588017}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], DiskBox[{9., 2.}, 0.07509363295880149]}, InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"56\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {9.0750936329588, 2.0750936329588017}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{7., 3.}, 0.07509363295880149], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"13\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.075093632958802, 3.0750936329588017}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{961., Automatic}]], "Output",
 CellChangeTimes->{{3.7427368333136253`*^9, 3.74273686569036*^9}, {
  3.742736898487179*^9, 3.7427369082628384`*^9}, {3.7427369654178553`*^9, 
  3.742736990671107*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
8CvaDsoDTRw0JfB5tfK/v127djVv3pQeLeCKDVx1SPUuuCfPS45PUY3r1xGS
a0CK5Qxhzc+/eahbPypIcIy6mGHUYd5QopJwoFKXlViVUlPUrLS0NIsTLocd
JvJvB1yMMmGlPyYMY5Jays3o66740dZeY8G4lQMHvW0st5HJtUgwDhc3Uzsi
FlX3ktBCNH6Gbdxz4YfS5SojiDDxUi17AC3wZVtHzt+Hr9OG1ejQ8BvOsNUl
mou1DRPewgIw8Y9ZfPdmCFX3zY8fP24B0RThqQPjwaObNWvWFAGXzJQQJvEW
YjFgk4IhN+MoszWJ9bOzszvs3Xew44GjZ+5XqJSqG8jvK1Wvd7pt5wEXm7zc
ZmO/t0eSgfSZgpFC3uCe32kU3502d9XXqU8+bQzv8puNYpQ3o6jCF72EwCBK
i6dl79+/r7YFewaYagLStXxWnIF36mBW1MpMXbbtHApkr7wxYsPIDXsvo7sK
NmCON2/eXDOIUfphjpT5RpZcFXR6Xf+ItMd8JzU1VYxZ4Qh2EFtoPn+l//JD
A6ZvpyCxAjPGIkHH6LFGwFntoqTkiA7Uc9BfKIUWjbjocK6348wcNMDFkXaL
cEaLQzbtu/S4YJGSe/tNWKNbRhVy0w3DeAUh0FEa+WylJZsB77xuwOBR+IqJ
sXG2bUSL9Ayawe/w0KAbzfDV5dxH7ahpWn8mBkL/IkIwiWp1Cj1aFrmIwSSq
oBAsGpueLq86d5jEGODS+sj/A2gDp/Bi+Luw2Uqq0BgGNbt+/fpEmGRmvB5Z
/lS8ZFnTlNnnkssv4k0fkp3GX3BHVai2OX7mEgAyaf7KbUGnyMlmGxrtzYZq
VQ+BSuHYRimUJwziURn1QPZLg5roFZUER+H7wmxziFmBMFam8FNN8wI/C5Nz
aLY4sYwr18NT79y5A2DBgbI3dqjnIFArvSRNkOfrL9G+C/MwSZHGIjpwfo53
jfWKpZ267crMfAZmJnmDrWpWr71j405pZaMdiu//gd5NnTJlipiKudjvSP7t
eI8iUS7PsVwiKYzXF2HdsgCIi9a91W+gz0VG5XLbe/xQFa6cQsai1VePnsmG
00ULdPYtiQNgM4pDjjZZN/54B78Xz1pzwotuqZyLkIEAdYAMxHv5jczWXYBi
SJwa+TfBbL+6whe8s6JhzV6nZWVl2ZjnvYE6aR7YtTKSAbgWjJTTXFX7F4m3
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
V+aVyu1IlBAdcSKjg9y0s6hZB0PZGsltg+Tmn4xbxQweldQ47GafnwHIs5Ne
uky5uYofl02X4d5wyyVkUhiljDIo5T6plJfNSmkqpODWfUzobeVtcGFmpZRp
QKs2BbsuOKeKW35Q0v9+lzEbsUjtjIs9rnHy4yjmroWoosZGH5z6QLdNay7U
9aBW8AMHn7EuVO4DSNSxop9KZnSVIS6U5md0MZLRRRUlQ5TDN+67gtOfLnQZ
vdFvFbefUoei6QrHhV3cGYuqtCOQ65Cxl5RvAV6pijD6F8k/GusNooWY8SQx
+hdp0D+51On7wKx/JuudwFBhwu1r0m16SU27nm7AnaQXYWskvoPLYTDR8Brm
RnrTyOCrSYX1z5BdbXcm+3MvPjJYgBpkO3V5HkvyW7nuznFTPa/PuV/+y+1y
NvrDN8UO931X2OVRTmcjGZ01eQjmFBaT/rpMPQsy+uuy+pLsTX+5sSUw+hth
0N9DUn+vyy+76S8+dS8W5s5k4TmZJnUs2MDc9LYwAxCXZGyUe9Ab/Ngjj8ee
mNLeJiQJnwutnrY08xyiVdzQ8qBR94W4AwHnEtFNLVpNkqvauixoJirM/uXx
P3GuMqp4TvWauAXxHm7FQbCL90AZjjwtyaij+0kNoRwR7BrpcpMh7uSB4JG/
Z810qfzJx2imSwo34DIbNwBz5YZxjGaajik+IjXzhoSMa6bXPZshup+yaOMh
bWLAs7GbDM1Mo0IFDOtK1SSk5IMHD8Rftsi4K4Jy6amMNwqFqqf4VtBCBlMK
LZYh25Q1l20VDJoEygmt9CHGrNxJDJXRPDLj/lf99LLJC7Msw8CJN18IhiHJ
bBgSGfSqaXFgIb0hhRRilaJLDM3i2mEowvivl/BmKLjgN9y9Z4fxCDMYD1km
4ftEsoIzHtxmEHXXer5ffvll3vSZs79+vtGL37dsl3a3UZNme/oPfEdQZAqU
+kin6zbo/tuPfohjIQNtyP9X2rWHV1Fk+d7cR25uIIQEQngKChFEBUEgvhAV
BkRhcCLIa0IQRVASea4C8hZR8AOVlwjy0DDAAGvigCgyoOgQlRUf4wjICO7n
+Lmoo/PN4rpZd7+791dVp7u6c6pv984fN/fe3O6q8zvnd06denSVGjekalHd
mWHDx+jVep/h8IYR1er67oHmjSPpa3/yjR9+UHVVLZ858/SQkpIzkzt2xPue
mWVlGVWlEo1gE7bhhspi/jEl4TYyp21TXhryHJSQvXa1pF8INnP5zNMlQ0q+
bDuh/ZmOt3XaUzazzEuDxiEiTpF/xEloBEzX/Od0jagZElDNeuRhDRpyHaYh
itNunT608h7zYppDuChYBJJxzj4l2K9mV/RJyRkRb+R5VQaeT2RG4Q086VT0
U+/WCbiyw9mzZ98ZXT4h9cgTG61I6sV9/2olUsuf3fvp8NHjS48fP85p/H7p
Ghw+rOB4+tENB2hTbTtZUaGVqS4iqxtVsW36ovVWluxauCKMHLFrHSTCDDt0
7BT2rZi045XjpiWWpoWTQraqPn1SRy0rLRXOVG6aOmVZn1Z16VL6fl2d6b6M
mcn/f9TdGEqiRnXGdOsRS30eHQ+5T0Tgy3M0CftU9UlZR6FUK63VaMo6ZX3a
pbLLtqolzziXBosn7fzjSdRYawK1ftVmwsWVz+3cw5ny4nBhhHkuibSrE0ny
KAYenZlccun6eY+uR+VGo3QKFjvU4GfFrpePnCnvcoVG2Ryi7KaHF64Vm0Fw
WcpBGSxOSs3rwWLN4nX7scJn+4wVeyf+Zt+xN8dW3JNaW30wjUHSa0tN3RdD
ysbuqFy02faCqXz6gQme3VXLfnto3JxttH9x0bff/UBlakWeunNUxZzVW/fZ
Tl/ipP0mp0ewWfzUi4exKxYOhtv14OO/JWfHkC9ZWMCo6ts3dR6WgJIapeot
64t7L+lEKDCD5efDMqQXBnVh1M4+knThwgWPQvOB/vSvRo5Doq+zKKijtQvn
lyoQC0n6VvVNWUIp8JC0n9QLv9QSkWBOKW2VY5zdblhXDHV90eG+Ti4ayQe6
8oO6IEU3XLNi2YZ9xyZfe51j4xhs/Nn9JZe6FHuFf6Ksj2ELsV20iaPITyu7
dJm2cceruj/JRWHWZzLtJHfaPHtVzcFR986qnzF/lZWtGrvH1uzcPXmKdJhZ
MiHUhXnlnvnb3x41a/OXvQdV/Dxj/kr9voNjx08Sd0gQjTnfqLl/8U6Ugce1
Do6fuw2rZuHSuyonTq+vjcfT5QFJdupjyzoxou8v2AZL2qGRH9vRm8Be9nhk
9L3bRk0BRilqEqIeHlk+MRMTOwcj7jPTl86rj9fGswVxkinrY2v3iFl3ZSKl
XEMe0zlZM2pqFUqysonvsihxZbdg4f/ZudNn/3dNPC7VGIEa90/5ZZm4uUdD
cxK39k6e8KCmfnHfwYm3DRPB+LBkjxoOR1cAbbhQZlxZf9Oet04MHiKPZ5it
eqnpat66c/R4XGuzRL+up+puaCzBemmIdHz0Df3RTtjiXEg3T7dfepmwvrwv
7rX+h4PvGIO6slXQTlf1Ve/r+7tmC6UGYrpJP+kx8kY0vUrpace/YJ0pGXqZ
K4CoA3mQ8uNacWWcjHTBOnHVSHmigzrzQTfSiRHX3eyFcmLkVfL63pqqKm4e
aLzObYG6YWUjUs/uPCyAKs2eHjy0DBm6M04g2+0YOgWQg174rg46y1xQH3Vd
eWlp6nvLUq4p5DtdXlJiX9c7YHl0XWl5acr6XupRkf10SXlJg3ozXdc7pHyZ
rvu9S8+bZj00J7Xk6WoX09PwPhp0+x3wNysJx7YiYCwFZavS/973ht4xXFBR
He+2acGECan3lUhxZfq0iBBVV4WpPKjcdd2EBRNS1vsein5vQZXiitKA1/UJ
KJ9SLQLF3ql3jca1NoX169wUHrr/lVe+m/jgXA1OrP6hJWvmrXzqaXgnmIrQ
ZiWkitGQ2TlopbGMKJWBwID7s8TtUXS1KAte+Ez1ETETKAfX7Ma6qyr1QG3t
d2sLC3XA9Qfi8XULps4ShutjrD1CtesKHFp7oPa7wrWFuqLr4wfi8xavXawb
JON1StGIR1Of27AVMpKiId+8tYvldXIr0ijFH7zQ2EdFMp8NpUAn9ELwn7x1
c7WxOGW3sxoN0505qW2nf3xw3N0T4/X19fpwpG3DmDBCDFk2VhdBGmhe9Hcr
jeXGXeWqfiyMlyMpYY+K4tVVY+tRxdao0984WDVgQI9PPvsS4sBbUYwrU+sZ
EN41uvcctai/KL3nlHVwQNUAcZ06JXbz+Pl3+14nGySxUpFLGCAbYVI5XoTw
iPsVbqiGsh8rW/yNoxeCNpV0ROVwxRzRjZyDxBKaOF8xaUZqwZNbkDAh9vx4
39T5ex6omlZ0/vx5mip3GToiak6inwNEcFpYCd5HeZlu/EkhqlMdZxQJYJJR
kggoloa81ObajUSZacDnlxcVperShEjnMwhNP25MJvfMLisTZaIrnBYDhIjK
OAEdIi2C3oBAJV2ZJLx71+/eRmZ+jQYozZDzRcuLUladhTwOsfbH5MbknrLZ
snJ5rdi5DANDXU+f/SrjPTJnjHp1K/XQSB/6C4L/Cif58KoU3LMXSmRpqDKp
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\
\>"],ExpressionUUID->"37887007-e65c-4437-87bb-ae71d3b77e9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"allGraphs6Bis", "[", 
   RowBox[{"7113106", ",", "\"\<colofour\>\""}], "]"}], "//", 
  "FormulaGraphReverse2"}]], "Input",
 CellChangeTimes->{3.7427232776798887`*^9, 
  3.742733824168313*^9},ExpressionUUID->"be768d1b-44aa-4a22-8bb0-\
b46b93752cb0"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`v16x25x3x4, $CellContext`v16x2x35x4, \
$CellContext`v16x2x3x4x5, $CellContext`v1x25x36x4, $CellContext`v1x25x3x46, \
$CellContext`v1x25x3x4x6, $CellContext`v1x2x35x46, $CellContext`v1x2x35x4x6, \
$CellContext`v1x2x36x4x5, $CellContext`v1x2x3x46x5, \
$CellContext`v1x2x3x4x5x6}, {{{3, 1}, {6, 1}, {3, 2}, {8, 2}, {11, 3}, {6, 
       4}, {9, 4}, {6, 5}, {10, 5}, {11, 6}, {8, 7}, {10, 7}, {11, 8}, {11, 
       9}, {11, 10}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {$CellContext`v1x25x3x46 -> Rotate[
           Row[{"25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x3x4x5 -> Rotate[
           Row[{"16"}], Rational[1, 6] Pi], $CellContext`v1x2x3x4x5x6 -> 
         Rotate[
           Style[
            OverHat[1], 
            RGBColor[
             Rational[4, 9], 0, 0], 12], Rational[1, 6] 
           Pi], $CellContext`v1x2x35x4x6 -> Rotate[
           Row[{"35"}], Rational[1, 6] Pi], $CellContext`v1x25x36x4 -> Rotate[
           Row[{"25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "36"}], Rational[1, 6] 
           Pi], $CellContext`v16x25x3x4 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x36x4x5 -> Rotate[
           Row[{"36"}], Rational[1, 6] Pi], $CellContext`v1x2x35x46 -> Rotate[
           Row[{"35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46"}], Rational[1, 6] 
           Pi], $CellContext`v16x2x35x4 -> Rotate[
           Row[{"16", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x46x5 -> Rotate[
           Row[{"46"}], Rational[1, 6] Pi], $CellContext`v1x25x3x4x6 -> Rotate[
           Row[{"25"}], Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.03700564971751412], 
        ArrowBox[{{0., 1.}, {1., 0.}}, 0.03700564971751412], 
        ArrowBox[{{1., 1.}, {0., 0.}}, 0.03700564971751412], 
        ArrowBox[{{1., 1.}, {2., 0.}}, 0.03700564971751412], 
        ArrowBox[{{1., 1.}, {3., 0.}}, 0.03700564971751412], 
        ArrowBox[{{3., 1.}, {1., 0.}}, 0.03700564971751412], 
        ArrowBox[{{3., 1.}, {4., 0.}}, 0.03700564971751412], 
        ArrowBox[{{2., 1.}, {2., 0.}}, 0.03700564971751412], 
        ArrowBox[{{4., 1.}, {3., 0.}}, 0.03700564971751412], 
        ArrowBox[{{4., 1.}, {4., 0.}}, 0.03700564971751412], 
        ArrowBox[{{2., 2.}, {0., 1.}}, 0.03700564971751412], 
        ArrowBox[{{2., 2.}, {1., 1.}}, 0.03700564971751412], 
        ArrowBox[{{2., 2.}, {3., 1.}}, 0.03700564971751412], 
        ArrowBox[{{2., 2.}, {2., 1.}}, 0.03700564971751412], 
        ArrowBox[{{2., 2.}, {4., 1.}}, 0.03700564971751412]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.03700564971751412], InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 0.03700564971751412}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0370056497175142, 0.03700564971751412}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"16\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.03700564971751412, 1.0370056497175142}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"25\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"36\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.037005649717514, 0.03700564971751412}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 0.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"25\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.037005649717514, 0.03700564971751412}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"25\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0370056497175142, 1.0370056497175142}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 0.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"35\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.037005649717514, 0.03700564971751412}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"35\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.037005649717514, 1.0370056497175142}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"36\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.037005649717514, 1.0370056497175142}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"46\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.037005649717514, 1.0370056497175142}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.03700564971751412], 
         InsetBox[
          RotationBox[
           StyleBox[
            OverscriptBox["1", "^"],
            StripOnInput->False,
            LineColor->RGBColor[
              Rational[4, 9], 0, 0],
            FrontFaceColor->RGBColor[
              Rational[4, 9], 0, 0],
            BackFaceColor->RGBColor[
              Rational[4, 9], 0, 0],
            GraphicsColor->RGBColor[
              Rational[4, 9], 0, 0],
            FontSize->12,
            FontColor->RGBColor[
              Rational[4, 9], 0, 0]],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.037005649717514, 2.037005649717514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.742723278414179*^9, 
  3.7427338247995167`*^9},ExpressionUUID->"103634e7-733a-487c-a2f5-\
e4393cfa217f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"WhichQuadrilateralPattern", "[", "#", "]"}], "&"}], ",", 
   RowBox[{"Map", "[", 
    RowBox[{"SymbolToSets", ",", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"ListofVars", "[", 
        RowBox[{"allGraphs6Bis", "[", 
         RowBox[{"7113106", ",", "\"\<colofourgenerator\>\""}], "]"}], "]"}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"SymbolLevel", "[", "#", "]"}], "\[Equal]", "4"}], "&"}]}], 
      "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7427233672314854`*^9, 3.7427234231948967`*^9}, 
   3.742733814794506*^9, 
   3.7427339566627474`*^9},ExpressionUUID->"d8e8c730-aff6-428f-87ce-\
44db79b470fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "1", ",", "4", ",", "4", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.7427233895288944`*^9, 3.7427234239911113`*^9}, 
   3.7427338153167067`*^9, 
   3.742733957147443*^9},ExpressionUUID->"7dc22056-138e-4701-ab9d-\
edfc1dea2c9d"]
}, Open  ]]
},
WindowSize->{1520, 781},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 249, 5, 30, "Input", "ExpressionUUID" -> \
"9134c66f-1088-4b5f-a95b-f5b3cd3256c5"],
Cell[832, 29, 593, 10, 30, "Output", "ExpressionUUID" -> \
"33c44996-267c-4c97-986e-c215beb93347"]
}, Open  ]],
Cell[1440, 42, 279, 7, 30, "Input", "ExpressionUUID" -> \
"50e72f75-783d-4820-9a7c-05d8279ad08f"],
Cell[CellGroupData[{
Cell[1744, 53, 199, 5, 30, "Input", "ExpressionUUID" -> \
"08e16cc8-0b81-49c1-a15c-617f085d75a3"],
Cell[1946, 60, 584, 11, 30, "Output", "ExpressionUUID" -> \
"b8b1a885-703f-43c9-8d35-3174e184875b"]
}, Open  ]],
Cell[2545, 74, 206, 4, 30, "Input", "ExpressionUUID" -> \
"2675625b-9f09-4426-b311-cb88e997dbfb"],
Cell[CellGroupData[{
Cell[2776, 82, 834, 22, 69, "Input", "ExpressionUUID" -> \
"fe961035-7519-4290-a0c5-cb1fb8e27a18"],
Cell[3613, 106, 2866, 91, 69, "Output", "ExpressionUUID" -> \
"9bba41d6-8b3f-4aa0-b7b3-236db770308a"]
}, Open  ]],
Cell[6494, 200, 1143, 26, 50, "Input", "ExpressionUUID" -> \
"9ff66f6b-6de8-4ad8-be29-a93f7c841645"],
Cell[CellGroupData[{
Cell[7662, 230, 189, 4, 30, "Input", "ExpressionUUID" -> \
"4ff0a7f5-e304-4b7f-964e-c4c222dcd9ec"],
Cell[7854, 236, 182, 3, 30, "Output", "ExpressionUUID" -> \
"5eec783a-5bf4-4bd6-a594-f99ec062bba5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8073, 244, 1424, 36, 69, "Input", "ExpressionUUID" -> \
"fe0d4033-e5a3-47bc-ac4b-9991ed6666e9"],
Cell[9500, 282, 16122, 214, 881, "Output", "ExpressionUUID" -> \
"f172413b-602c-4efd-8c63-1b39ed27f01f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25659, 501, 2636, 54, 126, "Input", "ExpressionUUID" -> \
"51ae6b71-dc0a-4074-bc40-6f30cdcd9f2f"],
Cell[28298, 557, 7800, 177, 145, "Output", "ExpressionUUID" -> \
"7899c08f-03a1-4a34-ac31-871adc5b2dca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36135, 739, 586, 17, 30, "Input", "ExpressionUUID" -> \
"c36e51cf-aa0f-4ecb-8b65-7a1b1354689b"],
Cell[36724, 758, 824, 14, 50, "Output", "ExpressionUUID" -> \
"e6eb22e3-c71d-4452-991b-76f6f3ec0484"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37585, 777, 525, 15, 30, "Input", "ExpressionUUID" -> \
"3229901e-3195-42d8-b1ea-c106173fc0c7"],
Cell[38113, 794, 955, 21, 30, "Output", "ExpressionUUID" -> \
"108e14c7-8ccd-4f38-b81e-fc856c58051c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39105, 820, 139, 3, 30, "Input", "ExpressionUUID" -> \
"48d58e02-a43b-4da1-92dd-ba06f882be7d"],
Cell[39247, 825, 205, 5, 30, "Output", "ExpressionUUID" -> \
"4c0ba37f-ca64-45e6-9a15-b55ddcccbf5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39489, 835, 275, 6, 30, "Input", "ExpressionUUID" -> \
"21df87c1-2abd-4e72-bad2-c80d9946d75d"],
Cell[39767, 843, 135, 3, 30, "Output", "ExpressionUUID" -> \
"49a4eb5e-31e3-40ee-b4a9-6e052d41b960"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39939, 851, 2367, 57, 164, "Input", "ExpressionUUID" -> \
"509d9f1f-03bf-44c5-8fc6-fda305903c63"],
Cell[42309, 910, 72391, 1298, 264, 23388, 495, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "37887007-e65c-4437-87bb-ae71d3b77e9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114737, 2213, 283, 7, 30, "Input", "ExpressionUUID" -> \
"be768d1b-44aa-4a22-8bb0-b46b93752cb0"],
Cell[115023, 2222, 8322, 185, 207, "Output", "ExpressionUUID" -> \
"103634e7-733a-487c-a2f5-e4393cfa217f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123382, 2412, 730, 20, 30, "Input", "ExpressionUUID" -> \
"d8e8c730-aff6-428f-87ce-44db79b470fc"],
Cell[124115, 2434, 284, 6, 30, "Output", "ExpressionUUID" -> \
"7dc22056-138e-4701-ab9d-edfc1dea2c9d"]
}, Open  ]]
}
]
*)

