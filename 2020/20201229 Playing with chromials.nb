(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1616750,      29858]
NotebookOptionsPosition[   1613255,      29789]
NotebookOutlinePosition[   1613652,      29805]
CellTagsIndexPosition[   1613609,      29802]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"k", ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"Keys", "[", "allGraphs2", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.818267037883855*^9, 3.8182670558676844`*^9}},
 CellLabel->
  "In[666]:=",ExpressionUUID->"e083b20e-88cd-4649-91b1-2bb4f516fcf0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8182670563552704`*^9},
 CellLabel->
  "Out[666]=",ExpressionUUID->"7aec5841-1b94-490a-8f5d-bc56e6c7c51d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"allGraphs2", "[", 
    RowBox[{"k", ",", "\"\<graph\>\""}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"Keys", "[", "allGraphs2", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8182670646462574`*^9, 3.818267072885898*^9}},
 CellLabel->
  "In[667]:=",ExpressionUUID->"aa4d8fa3-2548-44ee-9738-dabb47b05b50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2}, {}, {EdgeStyle -> {
           RGBColor[0, 
            Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
         VertexCoordinates -> {{0., 1.}, {0., -1.}}, 
         VertexLabels -> {2 -> "2", 1 -> "1"}, VertexSize -> {0.1}, 
         VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{{}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 1.}, 0.1], 
           InsetBox["\<\"1\"\>", Offset[{2, 2}, {0.1, 1.1}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{0., -1.}, 0.1], 
           InsetBox["\<\"2\"\>", Offset[{2, 2}, {0.1, -0.9}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{50, 50}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2}, {Null, {{1, 2}}}, {EdgeStyle -> {
           RGBColor[0, 
            Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
         VertexCoordinates -> {{0., 1.}, {0., -1.}}, 
         VertexLabels -> {2 -> "2", 1 -> "1"}, VertexSize -> {0.1}, 
         VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {RGBColor[0, 
           NCache[
            Rational[4, 9], 0.4444444444444444], 0], Opacity[0.7], 
          LineBox[{{0., 1.}, {0., -1.}}]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 1.}, 0.1], 
           InsetBox["\<\"1\"\>", Offset[{2, 2}, {0.1, 1.1}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{0., -1.}, 0.1], 
           InsetBox["\<\"2\"\>", Offset[{2, 2}, {0.1, -0.9}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{50, 50}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1}, {}, {EdgeStyle -> {
           RGBColor[0, 
            Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
         VertexCoordinates -> {{0., 1.}}, VertexLabels -> {1 -> "1,2"}, 
         VertexSize -> {0.1}, VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{{}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          DiskBox[{0., 1.}, 0.05], 
          InsetBox["\<\"1,2\"\>", Offset[{2, 2}, {0.05, 1.05}], ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{50, 50},
    PlotRangePadding->0.1]}], "}"}]], "Output",
 CellChangeTimes->{3.818267073892585*^9},
 CellLabel->
  "Out[667]=",ExpressionUUID->"34c4f3cb-cadf-4a12-9d5c-a9381964139d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ff", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ChromaticPolynomial", "[", 
     RowBox[{
      RowBox[{"allGraphs2", "[", 
       RowBox[{"k", ",", "\"\<graph\>\""}], "]"}], ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"Keys", "[", "allGraphs2", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.818267363975232*^9, 3.818267365006526*^9}},
 CellLabel->
  "In[680]:=",ExpressionUUID->"8591d090-f6ba-4b82-a185-006fb2ae5812"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{
    RowBox[{"-", "x"}], "+", 
    SuperscriptBox["x", "2"]}], ",", "x"}], "}"}]], "Output",
 CellChangeTimes->{{3.818267338150254*^9, 3.818267365372985*^9}},
 CellLabel->
  "Out[680]=",ExpressionUUID->"6ca578a1-821a-4bc4-9d4b-08b5d5e7e5b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{"ff", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.818267347919676*^9, 3.818267371640395*^9}},
 CellLabel->
  "In[681]:=",ExpressionUUID->"e7ebe876-25ef-47ff-95f3-2c3521a6de56"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$70995#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$70995#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFxWlIkwEYAODpPGrOcgqRmNuniMt5pD+CjDzSIPMi0yVNOjZ1s7xSHJiz
yzQdoa0ST2RM0xBxZszAjmVqmtdCV1bMSJxLWgra+tKpueqH7/vj4fEQ5J5K
t6ZQKHH//L/pmsAuKE0Suv2glohNJs6EbW8ZUt8iiItwU18ly5a4AmeFiLNX
WVJYu5FRvcyqh+11c+wlVjusGJXn/WD1wsouqS4rYBQWhU3WL+Zr4RyDj16l
/AzTPErZXw/NwlVOYxzFBT0s0CW9oo5/g/PelApy2Ua4+zI9ce+JJVghyTQG
Ji/DJfLNhF+LKzBFOxv+osgEexcIC5M4JDxP1p52ePkbjjZcuno/bw2On5f5
MpnrsHFAcONt5wYcwJh2jzz/B6aFkfwZ0xZ8fIm36smlhG//qT/NiudnBfdU
DJ4jSFxoK57VaKzh1HxJD72BCh8Q+Wpi+TbwO2c/B3GwLfxcWdLoR7WDJVac
k+NfcNpMUVSOyh42tHlUy4t3wNX7XW16uTthWYNwmE/QYF71WQ19AV871mqW
qx1gvSGisL+cDjeHBLlN8B3hzjIxQ+S/Cy7npsZQSfzgjKK9fGI3XOfT2DkR
4wRf76usi+nF49y4raNeDPhoznAKQ4rL9wm8xknca+BRTXyKMyzz7+dMqXGh
yWZyhOMCC7p/EtK7eFZJ4mb0PVycqPpIf4BXkOIqWQ2uDDZv1Dbh5teW6bYO
XDZFrxwcxhtasjNuj+AtBZrIqDH86R7Z+pgGn+G5ZGg/4Gy9a+ScHg9UFTEf
GvDDZTpz+gIey256/N2I52cSzJUVvPjITfMTE17mOPe+gMTrulrurK3hzTds
RM/W8Y6E9IjiTVzlOeQeuoWrTd5miwX/C0XwNRU=
          "]]}, Annotation[#, "Charting`Private`Tag$70995#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 5}, {-0.24999988510311194`, 24.999998979591844`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8182673488567486`*^9, 3.8182673723398094`*^9}},
 CellLabel->
  "Out[681]=",ExpressionUUID->"2d2f4019-c0ff-4351-a300-760719dd028d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"formulae", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ChromaticPolynomial", "[", 
         RowBox[{
          RowBox[{"allGraphs2", "[", 
           RowBox[{"k", ",", "\"\<graph\>\""}], "]"}], ",", "x"}], "]"}], 
        "\[Rule]", 
        RowBox[{"allGraphs2", "[", 
         RowBox[{"k", ",", "\"\<graph\>\""}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Keys", "[", "allGraphs2", "]"}]}], "}"}]}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"short", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"First", ",", "formulae"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{"short", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", "formulae"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8182670848103666`*^9, 3.818267125581687*^9}, {
  3.8182671755892973`*^9, 3.8182673220116053`*^9}, {3.818267377618511*^9, 
  3.8182674163728323`*^9}, {3.818267475872371*^9, 3.8182675495126038`*^9}},
 CellLabel->
  "In[687]:=",ExpressionUUID->"cfbb0bd4-b2f2-44a4-881a-e96dbf6d564f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$81917#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$81917#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFxWlIkwEYAODpPGrOcgqRmNuniMt5pD+CjDzSIPMi0yVNOjZ1s7xSHJiz
yzQdoa0ST2RM0xBxZszAjmVqmtdCV1bMSJxLWgra+tKpueqH7/vj4fEQ5J5K
t6ZQKHH//L/pmsAuKE0Suv2glohNJs6EbW8ZUt8iiItwU18ly5a4AmeFiLNX
WVJYu5FRvcyqh+11c+wlVjusGJXn/WD1wsouqS4rYBQWhU3WL+Zr4RyDj16l
/AzTPErZXw/NwlVOYxzFBT0s0CW9oo5/g/PelApy2Ua4+zI9ce+JJVghyTQG
Ji/DJfLNhF+LKzBFOxv+osgEexcIC5M4JDxP1p52ePkbjjZcuno/bw2On5f5
MpnrsHFAcONt5wYcwJh2jzz/B6aFkfwZ0xZ8fIm36smlhG//qT/NiudnBfdU
DJ4jSFxoK57VaKzh1HxJD72BCh8Q+Wpi+TbwO2c/B3GwLfxcWdLoR7WDJVac
k+NfcNpMUVSOyh42tHlUy4t3wNX7XW16uTthWYNwmE/QYF71WQ19AV871mqW
qx1gvSGisL+cDjeHBLlN8B3hzjIxQ+S/Cy7npsZQSfzgjKK9fGI3XOfT2DkR
4wRf76usi+nF49y4raNeDPhoznAKQ4rL9wm8xknca+BRTXyKMyzz7+dMqXGh
yWZyhOMCC7p/EtK7eFZJ4mb0PVycqPpIf4BXkOIqWQ2uDDZv1Dbh5teW6bYO
XDZFrxwcxhtasjNuj+AtBZrIqDH86R7Z+pgGn+G5ZGg/4Gy9a+ScHg9UFTEf
GvDDZTpz+gIey256/N2I52cSzJUVvPjITfMTE17mOPe+gMTrulrurK3hzTds
RM/W8Y6E9IjiTVzlOeQeuoWrTd5miwX/C0XwNRU=
          "]]}, Annotation[#, "Charting`Private`Tag$81917#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 5}, {-0.24999988510311194`, 24.999998979591844`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SuperscriptBox[
          TagBox["x", HoldForm], "2"], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2}, {}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {0., -1.}}, 
                 VertexLabels -> {2 -> "2", 1 -> "1"}, VertexSize -> {0.1}, 
                 VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.1], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.1, 1.1}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.1], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {0.1, -0.9}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "2"], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2}, {Null, {{1, 2}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {0., -1.}}, 
                 VertexLabels -> {2 -> "2", 1 -> "1"}, VertexSize -> {0.1}, 
                 VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{0., 1.}, {0., -1.}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.1], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.1, 1.1}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.1], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {0.1, -0.9}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         TagBox["x", HoldForm], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1}, {}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}}, 
                 VertexLabels -> {1 -> "1,2"}, VertexSize -> {0.1}, 
                 VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.05], 
                 InsetBox[
                  FormBox["\"1,2\"", TraditionalForm], 
                  Offset[{2, 2}, {0.05, 1.05}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, PlotRangePadding -> 0.1, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8182674096772547`*^9, 3.8182674176265936`*^9}, {
   3.818267489792009*^9, 3.8182675150850086`*^9}, 3.818267549996584*^9},
 CellLabel->
  "Out[687]=",ExpressionUUID->"c72f34d1-9f14-4be7-a7cc-bb89d21925a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"formulae", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ChromaticPolynomial", "[", 
         RowBox[{
          RowBox[{"allGraphs3", "[", 
           RowBox[{"k", ",", "\"\<graph\>\""}], "]"}], ",", "x"}], "]"}], 
        "\[Rule]", 
        RowBox[{"allGraphs3", "[", 
         RowBox[{"k", ",", "\"\<graph\>\""}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Keys", "[", "allGraphs3", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"VertexCount", "[", 
              RowBox[{"allGraphs3", "[", 
               RowBox[{"#", ",", "\"\<graph\>\""}], "]"}], "]"}], "\[Equal]", 
             "3"}], "&"}]}], "]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"short", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"First", ",", "formulae"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{"short", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", "formulae"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.818267573351637*^9, 3.818267743065654*^9}},
 CellLabel->
  "In[695]:=",ExpressionUUID->"58c8ba08-66fa-47e2-afb4-71a64a29eedd"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
KJP/AWgnTAc=
          "]]}, Annotation[#, "Charting`Private`Tag$96846#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
57Z3WydixUbNK1tbBEyJdn9ya4uI/Q+Bkay/
          "]]}, Annotation[#, "Charting`Private`Tag$96846#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Y1Qx9fcvjWowX/3571956n/8vfsv
          "]]}, Annotation[#, "Charting`Private`Tag$96846#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
zdy/fzi//u8t//4JEf8DVYVxAA==
          "]]}, Annotation[#, "Charting`Private`Tag$96846#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Y1Qx9fcvjWowX/3571956n/8vfsv
          "]]}, Annotation[#, "Charting`Private`Tag$96846#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
57Z3WydixUbNK1tbBEyJdn9ya4uI/Q+Bkay/
          "]]}, Annotation[#, "Charting`Private`Tag$96846#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Y1Qx9fcvjWowX/3571956n/8vfsv
          "]]}, Annotation[#, "Charting`Private`Tag$96846#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
57Z3WydixUbNK1tbBEyJdn9ya4uI/Q+Bkay/
          "]]}, Annotation[#, "Charting`Private`Tag$96846#8"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SuperscriptBox[
          TagBox["x", HoldForm], "3"], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {
                  0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
                 VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  
                  Offset[{2, 
                   2}, {-0.7794228634059948, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "3"], "-", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3}, {Null, {{1, 2}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {
                  0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
                 VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{0., 1.}, {0.8660254037844386, -0.5}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  
                  Offset[{2, 
                   2}, {-0.7794228634059948, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "3"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "+", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {
                  0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
                 VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0.8660254037844386, -0.5}}, {{0., 
                 1.}, {-0.8660254037844386, -0.5}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  
                  Offset[{2, 
                   2}, {-0.7794228634059948, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "3"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "+", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {
                  0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
                 VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0.8660254037844386, -0.5}}, {{0., 
                 1.}, {-0.8660254037844386, -0.5}}, {{
                 0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  
                  Offset[{2, 
                   2}, {-0.7794228634059948, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "3"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "+", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {
                  0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
                 VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0.8660254037844386, -0.5}}, {{
                 0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  
                  Offset[{2, 
                   2}, {-0.7794228634059948, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "3"], "-", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3}, {Null, {{1, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {
                  0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
                 VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{0., 1.}, {-0.8660254037844386, -0.5}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  
                  Offset[{2, 
                   2}, {-0.7794228634059948, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "3"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "+", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3}, {Null, {{1, 3}, {2, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {
                  0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
                 VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {-0.8660254037844386, -0.5}}, {{
                 0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  
                  Offset[{2, 
                   2}, {-0.7794228634059948, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "3"], "-", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3}, {Null, {{2, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {
                  0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}, 
                 VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{
                 0.8660254037844386, -0.5}, {-0.8660254037844386, -0.5}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.08660254037844387, 1.0866025403784438`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {0.9526279441628824, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-0.8660254037844386, -0.5}, 0.08660254037844387], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  
                  Offset[{2, 
                   2}, {-0.7794228634059948, -0.41339745962155616`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.818267577358294*^9, 3.818267646784235*^9}, {
  3.8182677101691055`*^9, 3.8182677441405306`*^9}},
 CellLabel->
  "Out[695]=",ExpressionUUID->"522f5575-8fab-44ff-8cf2-5942e185cba5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"formulae", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ChromaticPolynomial", "[", 
         RowBox[{
          RowBox[{"allGraphs4", "[", 
           RowBox[{"k", ",", "\"\<graph\>\""}], "]"}], ",", "x"}], "]"}], 
        "\[Rule]", 
        RowBox[{"allGraphs4", "[", 
         RowBox[{"k", ",", "\"\<graph\>\""}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Keys", "[", "allGraphs4", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"VertexCount", "[", 
              RowBox[{"allGraphs4", "[", 
               RowBox[{"#", ",", "\"\<graph\>\""}], "]"}], "]"}], "\[Equal]", 
             "4"}], "&"}]}], "]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"short", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"First", ",", "formulae"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{"short", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", "formulae"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "800"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.81826778929436*^9, 3.818267802656968*^9}},
 CellLabel->
  "In[696]:=",ExpressionUUID->"20783a90-507f-4648-b673-877d868b4166"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
oqmj/XJaZIZO9eLa2r9+hJUG16BF/g8oEVpZ
          "]]}, Annotation[#, "Charting`Private`Tag$100624#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
07a17W0CxvKf08D2ti72P0VTWvs=
          "]]}, Annotation[#, "Charting`Private`Tag$100624#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV13c8VW8cB3ARV6nIyqqQUBoqCeFzlBKVUVaR7JCQrJRISmZGJFtkZFxZ
IRV+ZbQoZHOJkpC9x+/469736/M93+ec5zzPOfcKmdqfs6Cno6P7vYaObvVz
9rRdnKa9g+L5wTMP03pG5R+Yi4nXiapD9khOcphBluKXkT6bIFEjLBqzvCs5
+1kxk6s9sTXWEjZC3FcVaroVR/OPB9qK2qFyKlzh08EhRb5dP16vNDtiu/OD
hqNLU4oKbv4HamNd4Lxz9wxnzIqicbViWpiJO2LbFWLk3BjhzT0hYCh6B7oZ
ttMOSyz4nne+NmzKC8pim6xnszfDvG2vz0yzN3bnqDKilgtTa5hhWOoDwc15
fiMafHiwq3euPPYBDuoV3bJW2o4tWmUFOz0fQjP/sK6fujDS3SLt/U384UZ/
Mlb0wE58qlbrPy8ajMOSAuLe4RLIcWXXNFwbAjPv1yop7PvhGuCZHTwVgpgK
E/NM0wNgzr9gNdEcht8mVkL8podRX1X1YWdtOFjddwj3+R7B07ZDO/RLH2Nr
G4NhW5UsdtNv6iqLjYTGw+zzBY8UMc516+i/oCeIfuAR+TyQwOtdA1FCnlGo
3HH0dWmnEs5oVZ5/YBKNjiP3cp1TlGGf6FKrIRqP0X6/SZ5KNcgU/BT13pIA
tZtzfgJXzoDOXPzYxbWJUAm52vhtizpqXSMSAqcSMep7dCvDV01cTLC/ONb8
DFb2tXHvI7WhuEvUz18zGRnuqeFMT3QgnN/xakdtMiR42UN/xOrib5Uql25p
Ct6/HA1bKNbH7ZEd9aWxqcDpzep6By/B2K1t+TxXGmj6IfNMRkZQpg/dOxyU
BpGaY+sXgi9jI/ey/3bPdIxHOA2foDNBvELLCR+TF6ji/7iSHmKGisDA12dF
c3AyVPtXlbg13g62fmbJyAGX4P7wV9PWKDsl1lUrQUWnt1fp1WobGNCb0CXz
5EJ0fNMK5botdN4uCG/f9hLVr23e3+izh5r0Aastu/JB3fltY0LyDRwSjR2n
4BWyLSVE5P/ewsGmYwuWXq/gJ1UYzHvzNiR9/jBUVbxCtLvR8BpmD+zrleby
US7Gh3JN/j/idyAe/+0InVoJ9sq4aJkf9YIAN8VjVvs1KlKF7p1M9AYjkyPl
j807NK98Wjn2xhcDqp6sE2nvoHr2b23lhof4GBS4ZanvHQJcJ5kfGz5EtX9D
+MP95XikkroouvQQAewjybEZ5QhWc/aYUPIHp/CO9+/jKuBtb8+o0RoIUaWg
tVwP/sOviqN9MgKhUPU0uV+oW43Rs3Zcbysj8eqmRefzb18RS4n8PcafhFTF
q81841+xMdbXw18qCZEM1789Yq9DUdiIp8DZJLgE3f5w83wduHz/W5C4kwTp
pPDss011GHooLT3RnQSDPtpbd9t6jMZfCJtOeoY2FtZHwg7fsH3M4pD7thS0
Xry639G1AQyDQ2KW/1Lh36ti++RBA1Rncv45MaRBzkYkoyyiAcp7HbY6bUlD
7M1OYUpBA4YKbfccRxqMozS4Y0cboFcnkikYnIbfTYeWPlg3IrmrhHgrno4p
zcWPvIZNsLZZNizQzEBqSwsFV5twdpjJOcI0A7rGhcrm7k2gqducMnPKQLG9
3ducqCa8PMRQ9P5JBm4H014eb2qClLp0VUxnBhg+v4+6pv4DT3Z3MPlYvMBm
lSDLCqIZSqVy5x5ZZEI5owwSWs2Ii2c9sNUlE24sQzwRJs14fF+6IeRBJmh1
ap+svJuxvC5+TDwtE7n6zJJs75vx1dsunPd3JjRt7s0ZqbTgDkV3uc8kCz6f
877X6LUgbPiBeaVDFor39WYetGqBaX3Or3ueWRCcIIyY/Fqw54xWR15sFkZv
LVdmf2yBq4T3rzdNWQgJuhm4eLYVizuYx28cy8b7f+kWlkatuF4QNuurkY1Z
rRbFertW/PLqSb9jmA1j7iNjyY9awZlw7yWHSzYkEyZ1Tn9rha/bXd62tGzU
59pvj9ZuQxH9hvQqxhys5UiYZbBog7mMY+kCWw5knL9+u+bcBpd9YbLsAjlI
lN3roxRJ5oprpH8eyIFD5eDAQHMbzo+oHuUwzAFbo0XeEYN26JSY/Bf7IgfE
sNKg9tV2hDc6pxbmk/VM24Qdb7VDUYidI7csB99kfoRmxbTDY6emlurXHITF
nbwu1NGO4woZv1lGc1BZJJyhONQO5ie2MftnczBRt0wzWGzH7S8RdlJ0VGjT
v9KMFOiAxUSeUg8rFVxXxCRZLnVgOI7rTNVeKk56MViJX+vAhrTMF2NSVLg8
7U444dGB3/WdH5eOUvHj0xNWr7gOENPtIsWqVERJMv+b7OzAIs8N/gIzKmpU
+0TZRzrQwfzepM+ailnTcqP9yx24PA2eKXsqLkS4fbXe1oltD17kvrpFBd/8
QHaXUSfGBAsiy0OpUOP40L9g14n4KVvziUgq3PckbeX17ESGgswlplgq2o0u
BJ1P6MRGSZGXn59TscHt8AcHaidctDWWPF9QIR+6eSnoXSdsaEm6HFQqYv+r
ta3p7oT2pTHOtldUfO54ntL/rxO32u/ZbiyjYnHqbgc9XRf82q2KBMupuCQu
d0ZBsAtripyYf1dTsS3ohUSecRdiX1gzjDdRoZ76wKzOoQt3L21QE2ml4s47
05ghry68lI3Wle6gonuMj0UsqQvjm0Zy5nqoYGOZOab8sgv3vw6OveijghBp
cDep6IKxMvHn6G8qEnUDBmN6uiDG592/+JeKevsrwiVjXSg8L/lzzwgVa/yO
X/yxphvF06UP5EepOPhse9jE5m6ssVz+LDFOhenrhVo24W7kWzLnz09QEdbY
vGbfwW7oC/JIZ0xRUTmcL3v6WDe6BeLPH5mhYpwp5LrVuW48OyW/7vksFTsE
bTPum3bjzPgH7fE5KgK7hJKCrnfDzLNuhWWBiunY5qgIr26sO+h9Y90iFZcN
gkLiHnXD72pwziDpGt7jD5/Hd0N9tJZKXaLiQMusZ3Z2N9YP7HfRX6YiOjLH
tbCsGwmdNLp+0gw65vZvPnVD/J2whs4KFbYcfFc+tHVjutPYOIN007c6oy9/
uhE6IiHVQ1ox5L5u02w3ipjlPi6S1k7bmjbCQIN+mqXwqh8+mH3myEJDVnqe
fDfpNxYN8dPsNGxQV+ZNJT2unBPtzkcDj/yVYk3SoiJ+kctCNLxwD+TrJs/H
gME8zHsXDQVOaoQW6ZBexWCmAzR4zRruTiOv530Fr7+/DA2BR5630sjrnUuc
vL+JoMGpapfGMjk/+7zq7oap0CAZxx24Mk/ej8svPLg1aKjhfhPaR87nE8X7
N6N1aYgeCzfJJuebbknu+jMLsr7AynKQvD9SHVzXRK/RkMvMmmA0SYX161Gr
F040fHwinVFE3t/vN1ON8+6R5+s9Jcf+jwrKhbuG0gE0fDc3ruYaJte7jKF+
aRh5PsET+5YGqXg+vVmzMokGI+amaNdfVLQ1DZ0+mUFD+azQ8/Xk+ttUWK3y
MZeGPofHkXfJ9el2wwPf39Gw6ba3PD+5frPO6R/VraZhoEZsVoFc3z0HDh1p
+0qDzOaTGco/yP05OrCvt5OGY6c7FpbqyPVf999uy34aItkynud+piI/J150
cIgGd7coHZVaKgSuaW8bX6DhIZ9Im2AlFSN/3m2k5+uB1IflJZ88KoRro9c9
EOqBPNPfy/o5VOilOzOu39UDy+8ao6zkfi63lFjaLNODwEtO+RJJVIT/jBwS
0u1B1p7Rq9zBVMh0XvukFNaDU6lPLN+aUpGzy5HLKroH/sWuC7qGVIi4uFwO
ftYDYwNZgzodcj+yek605fXAfSU95fIpKv4QIfxODT3oOHQnYIX8XRSdknc1
lbMXje/LC04Ok8/nsaLCzwK9KEsQke3py8EDhdcr4yK9KJiaVDbsyIHjj//C
cbgXTmtYd01+zMFp5qbXLTq9ONbam5GVmoPFqzMsLE964ebsdu2sPllfvKBz
IKEXanfe7p05m4OBtXSJemm9oE1mWXgfz0FjHLNUyqte8Bkmeyrsy0F2Ha+h
QksvTgqLKpyiz4HRIfkse96fqBlKDH2Xko2Kea8zjTE/wflcpOFNQxYaeR2n
7ZN/YnTlBPuLqiz8kjFLZMn8Ce2qxk6PkixscD0xeaz0Jx7GfbLoiM+C7sS6
2JctPxFlnHXO1SoLg3/D/gZz9UFm7Z3hwzOZ4OxM8Vd91IfHLtXxVgyZsHpX
U/PWux/lkZGexe3pmJNlE5by70eu3MWXYbXp8C/Qu5UR2g+HiFgOg1fpyMz4
tfdxYj86IqubisLSMRK+Ntz6bT/cIj+fjTuVDicr4hLnfD8GqhRsFV+mwWtz
8Zj19V/Ys7evLsYlFU/N0vi4jH9DfE4jKqglGXv1e6aXLf5gdGYuWMUpBrHs
WA649gchNt0vv5yIwfovsYy8zn+QyGAlpbslBgNK+pyHfP6AsPjSZF8ajRSJ
ugNXnv2BccEd5nq6aPCtlNnWdf2BV9hugafBUWBKjepN0BsE7cQudsaXEeia
0PhKqP6FYJx1/7RYCIL5m3c4aP1FeT1v+tGJR1A8bnQz4cJfeF1Jzfwc+QgJ
YbYiy9Z/Qaf9Ir+sKxjGB/zcX/v/JcdnbZm8HoSfdpWi0p/JPEjiRU2qPwb+
SHlKaAyhPEhF7/i5+4jaXNZ4UW8IdCet9eTo7uOU7PHd/peHQLDHe0bn+CDj
oVbTgD2ZZ/ohZoMPbMTsJFJDyPz0VbuKL94YNk9rFvw+BK+6ospSCy+Md/NK
cusMg65cwr1s0BWCZjNS2y+RTnC8rG7lCo1fjbLiFsPwyt7nPf/LBVlDj47L
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1nc81d8fB/CbXRSVbEKiqAhRyn1/kjIqNIwiZCWEVLaMKDuzVESIlGSG
m+6xQjYRGpKVlb1Hfud+f/+4no/X+7zPeR/38fkQMXM4b0lHIpHk8Q/a5+Jp
+wQdB0eylO5nG/xJvW8hsadJXAu+l292DtiqhRrG+23CxI3hCf+daobVK2gy
70Sonbg9fOq4t9W/5Qby45oRMBK/CwyxHd1SXl6orlpz4IJ4OEin05Xc/BqK
HJKcP2uLP4eDYkVvHCKeocP5feJ+3IlQOsY0e9IgHpEs9qhcZkiCpYTrNQNC
CeizS2xi6FwSsHrS5wS8eo4uJzpcnupIhkecO7refU1CnuO7minxaZAfEuQj
ilJQWWjoh7PiWeD7Ufybv0gGoo501bNmZAHplUJIoVsGKlGX6P4s9Q60AnVc
VVsykCHdVVIKTzZEHGxXcrj7GulSV0R3CuXAVjfeCu6WN0hT4aA19948OH2m
U1XaIAupD3Q4OtvkwQNefWu1tCykFnPXrf1NHhgfXfcpn8lCqtN1wdEH8uHa
q/GivtB3iJxl9ZZdvgDMjg2nThpmIznx+GlmKITdUsSxJNccJNuusmLlUwgZ
fKps/U9zkIz/MH1VWSGEZ5558rMkBx3oVdjhr1oEniZ3FqbXc9Ce5y2KJM1i
uJ2Rw5vll4sEuJi9Fi9+AJslvzNJ7nmIkcmJedgGwbVGx0/HFQrQkIY3+0w6
grnvhufZtQpQbVgo91o/AgfurydTLAtQdfCX6EDpUnA16pfZGVOAQraNp8Rn
lILQAmOV3XgB4hTdVVmZUAZfWncJh8a9R4yVe2s0SspAVzn2UmfmezRvKVPf
+K0MAuzUZMdL36PODOW2Tu5yKHfvC3UZeo8SDhr0j0WWA/NahxPToUIkfjyM
Ycf9CtC2d9l5vLIQcfdFszxNrYDcHU9XyO2FiCXgKdvOigowDP/ybONgIRqp
SefcS6qED04bJxiZi9A7nXIxZfdKOOv5XCPpVBE6bLqgamn/CfK6ZDrulxSh
vXT/1EdCP8HcsvMW69oixJfKcNbhzSfodWjk4+0sQqt/tuq6DX0C56nDt0en
i1Cpwz7LMLMqUHl0yVFPvBhpeF8NKNCrhnqhEG8H/2Ik+7Ds1Ivb1XBp//Dc
/ofFSCBRhCUsqhr8X/T8K31SjCapv4MtGquBmnTW3TKrGD36dzVi+6kacFhY
Gs9sL0Y+W8rPrZvXgNITr1bOX8XIRkh0+6hvDeg4i7w+P1SMlMm9seUfayC8
VGZAZ7kY9XuZPbt56DOcvqx03kiAghrDyo2uXPgMZxk3J7qKUVBRgqiQxs3P
4JQzecxuHwWFfOxNEn6L6/uYeL8dpSDZNbO0JrFaoCgd2NRuQEECmyuufVCp
hZmBmsfZJhTEJLhrb7ppLRxTb2q0sKKgrmN9b+7G14IyabJP/xYF+Xia5+zn
rIOpaLnzN0IoyCa0wolXtg60Co2/bIukoIvxu+QZdeqgVpFyLuoRBUmU9L3/
EVIHd7gCx3e+oCCO+hOuNRl1IOXBfvVAGgUtf085kl9dB9yaU67cb/A8K+Yl
IfT10GstRrjn43lYK71cROpBZ21BZbaIgpL5xcAc6oEtQDJK4yMF3TnaX6bk
UQ+t+/58uP8Jz+NhUT08XQ+6lXqV2m14npDKwHaOBig+oZT7qoOCJp+KaZYd
wD62Q7H7GwVVUPrr42waYP3ci4xfPRSUWasa7h/YAD12AsNv+ijo0bdUbce0
Boj6J2quO4jnXbZoVettgO9F8RnEKJ5306doOVIjbBVSq/b7S0HKfLt1dwo1
woVbo2XJExQkLhnAxXqsEc66L5QlTeH5lQY65i81wp34qgnPGTy/xsknvS6N
MDfy4pbiHAX1X3p5uTG2ESqESu80z+P7uM4oQMlrhKi4k0LqixRU6Gb582VL
I7SYqsY+X6KgNLJtB990I5T1iRWPLePz0t9sebitCU7UMchwrlLQ/RrnOga5
JpANL923Y42CnMM8P7ldaIKvx/h7J7Ctzvuh8VtNQPKl+qX+oyA97sBi85gm
mE9QOi63TkGnfoTldeY3gYcjk048tsKL6Ldn25ug1t779y9scasn6eVzTZD4
aljiH3ZIbFMzP2szHKh20F3ApndtPavH3wzim3fF12F7XG6vjZBqhhy9lf0e
2DPHOtXqjjaDC2/HMSZs253fKxnPNEO8hceyHT5P34bu44RRM+T3RMe9w+c1
7O+huts1w8+mXPVGPF9rVd/RAs9myNp87tjnFQrSzBgsmghtBmn2xtQkfB/l
IcOHJBOaYbzXIe8ivi8l+7Fci7fNMCFj/mRggYJydSakEz82Q4HShwcX8H1L
yk1ndjU0g+L3m++ez1IQ3+JCmtZ4M3w5bW7fMElBUd+WdwX9a4azLduu5YxT
0KaPa0kVW1rghMEmo1tj+O/pS//ssHQLlN1IWY38Q0FOFkw8t6AFfLzGWSb6
KWjk1MbYt9otoBjZ1irZS0HfWNkfijq2gKrJWxP4QUHnx7eyXfFpgXdWd/14
uiiotpkz6HFEC5DZ0kVb2imIEst3jy2nBQ5YpD753UhBT3eKu8xPtcCLoyej
/REFbaPbOytD1woDc+6txh8oKLhf6qbttlZAGtSNfIUU5J5x0LZHthXYhAf5
5bMo6LKcskntrVbYU+08vPIU3+cO4geDfyvUGD5g6IvF97mocgliWoHcvyE0
MwLf30f1C/n5rcBg5hP3JwDfj9pFtedzrTAbvzuTzgE/Ly7bSju5fIFxtobw
Wfy8Ce5Vs3t8/wuwvyweDDuE19uIZZTEfoHf28ym2KUpKN7tpyhz/hcwnY95
1yhCQaZx2lzxk1/Ax31rqRITBf1pl1v7dL0NLIySnMdqi1HcFQ6lUdc2qPHs
qhKpKMbv2zFnjsA22KHfQK/yoRi9nn05eTmtDTwflDedeFOM7Lfz9E/0tkHv
n6K7OsHFaE5ntZbXqB1Oi55xzFQtRmmdncxg2w481kdrko4WIz3TAlUL93Zg
vZ4o5ydbjIoc7KlZce2QntNSxyZcjDzDe3JOtLcD0+/VLNXlIkRfXxl3Q+sr
BHzeaWP0pghtVQuzKiM6gER9sHnrhiKkmlECUuc6wLpGf3xhthC5so7xxF7t
gCteJ8wahgpRT5NmnbVfB9Su/UtWbS5E2QYsMhyVHZAeuf+X9fNCpGNzb8lY
rRP6KHaprxULUUSYW+jq2S4ofyW9LmzyHnG0WeYqGn4HFplnL8eD8tEuYbuM
ALNfsLwgcMY2IRsd/nmj7njUb+Dpo7tL+ZSBypZ9zrQ96wMG8oWdLorJqI3X
ad4hpQ9krtcp0Qkmo8HD5kmsb/og0+ns43i6ZMTmcnJWhdIHPpvobqw3vEB6
Mxvjczr7gIP+2Zy35Qs0Mho1Gr6jH1xP79byfpyEOH+mBms87IfFGSV1Vo7n
yBrV1FD9BkCnzfGROjkOLR3hEJUPHgCfq7m2bNvjUHC+vkdG5ACQxqyZ5/88
Rm8yBvfHJA3A4ja2KaWox2g8miH6OhXnSwd2hA89QretiSucywNQOsw+Yxcf
i3y2Fk1dvzkIh0eG38eJRKOtoeuav1wHoTT576TyShRKZlJLvegzCKYJ3VdY
26NQxUq7HjzElhBg3RkUhZgGZz5wvsUuk1WWmolEoRTp+2hoEIRnlM17GyPQ
E/N0vh2mf0B4+eqAtGYYsjvNU77P+g+YMtmqbKMLQ2S5oOuqjjgP3aujRwlF
vXS2Rbd8cM54+T39vlC0L/mAXmsS9o2YzXPbQxC1pyDy4W9cXy99UWk+EPVd
qWTZZD4ERLW8/XWGAPT+5KFsEdshKK1+eSu8xh8F7k/TP3JrCEhiMg47wvzR
vrUHadb3hkC4NElAg9sfOcefVq1OGYIeitXUSZl7iOV7q7d/P67XiJp+cNsX
7Tf4Pf/PchhK42blpEM8Ufw2+BdyYxgIvZVYNllPtKkhnpH3zjCQVPdGPuzy
QEPHDTjl/LHte6wDJD1QqlTTwWvJ2G6XZve2uSG+9RK7pu5h8OE2VRc85YKC
ivluGw3i/kSLnsKCM1q85eox/Bd78k/d5Ctn1D4kF0y/hutfU/LUtzijiNbX
6Yr8I0B4Hvvg0XMbMaXF9Sbqj4DPtcG61GQndMd0fnifyQiUso86vr3ihPr5
Lk4VW2E3aPOe53VCZQ/ZSW138HrTj1M3om4iT7f7giwxI0DS4f3bH+KIps/c
NnBsxi5+tWlU4Qa6ytxqstaBHZyrLFhqh5rLpK8F/8IWstF217RDbxVG76SO
Y5sH3swxs0XWwmbRnWyjQPqV/3Mp6TrqntFuJDSw5S0mBC5aoXD+jl2O57BV
14bE/1gi8gljt8RL2Acms708LFFilJ3Yv+vY7i5n2V5ZINODQe4fgrGF6e0e
cJijPvtycYV6bNFnm4sETVHMIw1Pyzbsw/P8jUEmSJXa3BLzA7vVru7xN2OU
uvmX58wYduhA29V7V5BV5kpr9uYxIFXmOrtOXUZDw/LeUtrYMU2BXcf0UNzW
krbL+tilNdY3s3WR+pETksEm2Fs8nAlxXZQReK59yAE7IpfTmecispGwl0qL
wBb6hr5znUd82nM+7XHYwlsSPz87h+qcPb8yvMA2MpptET2H9lUF+5rnYPeH
79mlqIP+WqR3CLdiq8vml0yeQc9DD+zX+YZd03PnBv8ZpJVf4Ofdi13EaMul
eRpl0Vfu757GDvR9cjBPAzkm99x7tv0vkAye1mXlnULCtde6avmxbxtrnFg7
iZqnxg8s78Iuubz4UPMkOnh8rctAHrto04TM5Ak0/YtXhksXm2Tql251HAmb
L8jvvILtWcT/vYlA2oNtR/ZYYl90zjY/RqDMsYcnlO5gC/dwpZHJyGqJUd84
FltHfH8AtxKK8ewzvJaAHffol53gEVSxXmrq+BK7Z3GT297DSJjJ08avgOZI
ZcoFBfRt27RXWjt2tkzL8rgsYnnU5PfuJ7ajeoGImCxS5H37oGgAW0bZ7bfx
QRSz0zqydg6bOMZS81kalSeffPRlDTvpvDej6QE0tXvXsx+M40AyfRHYT9qP
tPZ1p47vwHZkZp27Kok8333IWBDEJsIHf4jsRW9kn2SRxLGT9vF+GZVALEcu
Fm1TwPaRldZN2I3KTtbWKehhZ6vvjHASQZM16c1gTOtnvan+rjASOhPQrm5F
68ds2CCxE7mfJ35ddqat79c/ks2PXrUL9pvfpeURr79s5kMdBitDdvexhY+9
nPbgQfIm76fvPqLt3//YN3AHMuuNXnjwnFavJnRenBNFWt5cjUjDLnW+bv1l
Gxq33ceU8p5Wf+7wrsscSGBiI2smlVYf5KZptQWddvrDXlBF238Pu448G3rl
msxb/fW/fncbRFjQ1xVvoeZuWs5LXgYmxOh9ZVfXIM3a+lEuDEie7uie3nGa
H14cr6ZDZgE8+0fnaeZas5TZgCJY5g/O/qP5bkaS6ToVhXxRWGOawJ5VZA5f
pQpEhRPs3DSjC/J2C1TNHXYneXZik+qIM3xzVLc4DU0RCVpuXh83OU19xS+h
LSlNy83aqX8nqV+fM1yUU6Q5+lqF8DiVQbTX4BjQnHrzVNYIVe4lunJSjebq
K2q+f6hmexLMtLRplsqjf9xPjXjjfk1fn2ar0YKx31TDDSfr241plhGS0P5F
FddnP3jRima/mkrJ79SpzK7Y1hs0f7UtvNZBLaFLXda5Q3Plut2GNuoDA3uT
Jk+ahX9qzTRTz2cdrjzrT3Om572b9VRBBvq99SE0x989/bSaOnSpIUwzmuZQ
SqZ+BTXv3ePpmqc0v/qeQSDqXUYzfbVkmpsPtrQXUTUM95V8yqB5cY3RKI/K
mTMvrJpDs2lcp89b6i+msoDyIpo5rkj1vKS+NgoZIUpp7plmME2k3s7V1UbV
/9Xr2MfEUoFFOF+5iebS0nmRUOom4xGekq80E2GxW32pbXn5XkrdNPusVlKc
qIkbvXuLBmgm9dRnXKXamGioKf79z/lxbRrUQwXbMwtm/3Nz921xKom1m0N+
9T+Tnl/6/tFKpk2pa8Pkfz6j1qV82vDIjTjG/ywc+3c3Web+80T9jf/3QJAG
mSuHvpVr83+e1o++Sl79bs3wleM/u9YXOpF/MzUqxHLS7NM4KuhLrjood/0i
z38mPz4dSs40inu2XYBmwoWrIpYc9WCtoXXnfw4sL0wku+SakaJ20dwz7CeZ
Rjb6WS17ToLmJBGZ+bdkFZb9lhxS/+03OpiXR5aQi3rcdIBmx2nZi8VkNuOF
z+GyNOtERE8i8nSg0epZBZrVL3Y1VpA78soObFb6z2fED9eQS7rFr9Yr02wt
EEduICdvDI0OOU5z/3tt5xZyoPzUJ82TNMtvN0xrI98w0VvcqEHzbP47+U7y
+eAPkp/P0GxUHy3+g3y4QPhKoA7NfJwZRA9ZqCfgodpFmif5BF/2kulZR8uY
DP6bh6RzYoDcaFogHmBCcxVbmuIoOT+E75KqOc1RdXuix8lP3nuH0F+jeaI+
hneKfPd3/8dyG5pXGaQ3z5At2DQnfe1prvxH3T1H1lR8J3rciebS1hcWC2Rp
M05dkjPN9GWH6pbIy4XdxXe9aF7OneBcJ/f0nhhT9sX2uf/Pdo0EnzZnCK35
08y9sHyfDiLMb93zCKVZkT63hxGcwzsLlCJo6x90Qi4zGBYrDy1F09zNIJ+w
EcTZWc66PqPV7yVEyjdD5qRvWmAiNpGREcXNAbKtK+txKbT6hylFxlsBYidy
i99gl64yVwhzQpXzdbbad7R69vLI+B1wxqDP8lserT6ItUuSGwz4O3hWPtDy
Vp3XPnzQvarjxFpKW2/bKKIhABbdtXX8lTTPd4/tFoKbL6h3j9XT6isiDrCL
QLBEWr/XD+weDfmxkN3AsVGYHN5D6z82v7lGHB6NPHn8vJ92fg1BMsceSHkb
ponGsIU3ZKFPkiD5kDm1aZKWx6WGyu2DbEfftV+z2KbXuE2y9kOJ3J1s0hq2
jkE3k5UMqOyY2Lh1wxQ+z4ngPMWDUDNvbS7CiJ2UxmvKIQvtxUZcKptp+W0R
xQ45GAdVz3uCtNx7lx5VEW6LUNujRbB93O+71x2GZbrD0qm7sSfXexN6jgBz
lVRv5X5sx/tLZruOgfCZ7epMZFq/Y7uPPiAgbX/YCy4V7GwTSoT0cdjHzrwi
fgpbPSzI+sdxONK6/FZNC3soVuL3iRNw3qB3e5Axbf+91z+fPgWdR4xuPDHD
tp72oOdTA2P+r1UZVrT91YpO/lUD2+7PbrX22BGqceIpGuBvkfOL1ZtWL7bv
sNZZ2HRK6ojAPWxXZ+vIU1oQIfEyat8DWv32SQ9VbUgYiTt59iG2gafsy1c6
8N7R5014Ijbb1G7DzvMQ/GEy/1IKdv8JuY6rF8CE6SpVLB07/s/71b8XgCX+
eAslC3tMn+XqFl24XE23MPiRVr9R4bKjPhzYdouUW0a7H36Fv+wGQH+lb6PX
J2wx9iXzXAPInK4Q2N6AbbRDk490Gf4JBqjAD9p8kcVuyAharedOb+rB3vde
e9n5CqTnWeq292HbNUs9PWgMOhqnrG1HsS8mfdHNNoHk28zhj5exbQpM1W2u
wsm6oK4JnmkgOQWsX/1lAXxcy70UAez7DcoDupYwbmozFiCMzTZ061CjJTya
11zn34P9KOfmmUorGBJh262uiO1I7i2vsoZQ13DHJF3sEWm603tugGnFPzfb
S7R+n3JdP96AQ1sc7ilcwQ7eKJh30R66U7Qf1Vtgb1oxNw5yAJkmjpLFW9g9
bjEkppvQtjua+VwU9qqC68aPt0BDgufwjUfY/Xs1i4VvA3VPgnXQU2yvCcXK
gNuQIZX+uSwZu+q82PyFO3D34IcQ2Tzslg91Oza4wB7lPnbONuw6JJWW5A4J
ZGtCphO77bzZWX4P2Eb8dTzzA1tB2s7jsQesqSy0+Pdjz0iIusR4Qqs6a8zc
LPY7l4dHX9wFz4tyPB07ZoCkH9px2N8XpnSL1Gd4sSW5xe0afcFKX9mNXQib
YVOEG68fnLus9k1NHDvru/eeXD8QNzWML1LAJo/5rv+9B82294Sf6mM/njf/
FnEfxO592XPlCbbM4u7csFAwyKU/aJWAveNmoeBsKIT+ljvi8AKb+JIRZBgG
cxCj4ZuBLV4SYb0/HKpWL9q8LMbu8cqy/fkQrjt/ffO3C1v66eJwYSQ8f8mU
P/8TWzDxrcdMJLS2KZSs/8bWWrz7RDoKlOQe128dwfZX9PbMiAK2Sf2/h5ax
k5+ozaVEQ9b1rgN3+WaB1JlbdyU/FnrjNio+EMIeLOTcvBQL3DVHIEJ0Fnxu
mXy+SH4EPuJPtZMlcV654XF27SM413fZsUoJW/RkxbuRxzBr9CNniyF21JMU
L/WncETnl3ziM2w6MtO8TyKUDDH+NUvE/c6YiR9tSwSy776X4ik4V2DL2MyZ
BKq5bjuyXs9C6cMI1GGdBFqcnPMlxTi3UdwmyPUCzDrVC7914PXHC+OLvJMh
xDT3CBfnHP7+q91JiHwJW5Y6p7q458BHrrLr6aeXEBG5npHAPweluvYdk0sv
4VH5Gb7du3C9VtSmV+ZpkCT2Z1lOFrtGU+vs0XTIH+IvOaczB0TQs6KKlVfw
0zGAHBaK+ym+VBqtyMTPvVLB5AicZxRJbNv4FsTYV1ffx+D1AkrLWVpvweat
04eeeLwfy5Dime9vYXHY5LD8W5zLLXmILmfBNnMl2e8N2IUrJN30bFDXndi9
l30eenjeq6pJ5YFtqiQjefs8mC7zn8zRzYPwGcv+89zzQLjrshr75EF75I9k
z53YnM4jPl/zwKzx885m6XkQ/uG7YSYgH7zUUnlddHC/kgqDsqkCyD1yafOn
SFzv9e1g678iEJsOjo+JxfVVgzmvDxRD7OsSKYsn85B0XyCi0rgYXPmFNelf
zINP9KDKR1QM5LXB+8ez8fotLkE1/hSoK71NojbiPNGd24W/BPrVImbesy7g
70PYvhJPBHqkcr/77AtA7G6y3leAoLpoZqvedmyjFeaBvwhe79WXmeNbgNJQ
O0kemVJwZBW6ISe5AD3G7yh8qaWw1vhm8J06rR/bMa7oMuDSq+56FbAASSpk
87ywCjh1LJWwDML9qm4s0GdVgIuob7pIGPZIYpd7YwV0jivdeRqzAD7Pphe/
s1fCswdZHKEpuP+n5x/sYypBuDhWzaFsAYQ/3Tw4kfoJJAUsCg6t4fOcsioT
66+Gy3THBaZJiyAczOnkvLEGQoYE72UxLELp8NWN0wdqYCy/Q0eCbRFIxueu
XnOvgXdnT4/x8C9CEkfV+Nntn0HeW3bX6mGc93Oaip2tBeglRZbfXgSfXyKe
1b/rgcN7WqjZFfd3ZlyR5WiAXv7+zJ+e2BzP5drIDeCvW12z6I/7ZVbcKIpv
gNqaMJJ07CIQPu6n2QwbQe8dn+OzAuyUQTqG3iaw85TXvj2/CNk9O/XEwlqA
zCv+03cZ54FMg9/TW4D9Pbftw384vyTVmF3eArkTy/dfMy1Bc+qJxdzFFlgw
K6P2cC1B0oHnY3xWreCnoXXgrOISlHYfkg059QWecFlvFnddApnjn429hNqh
SEDn9LjHEkx6vL++qtQOnaKHg957L0F2exfxWL8deKRZGNUeLIGPvUKccGQ7
PFJ7tXrtEXagZ909xq8Q4zo0mpG/BMTbFN1nM18h/Jt17f6pJfw+MfcOHOgE
v+fXHxyyWYbJuTBBRbGfoGJoNaZlv4zfn/5Bh0//BHoe83PWTjgP7m02cfoJ
/pFG/M/cl4FDk09buOwn3PfXfkcKWQZhgarHtqbdEGRzqKPuDa7XOtYLab8g
QmGDhNnfZXC8quxZLvEbEhrjqsIdV6D09t++31v6QaCYoI+9vQLNEi0fWST6
IT5lCJ65rsCk89+PqtCPfz9cnO6zAsLcW01XHfrhiWjnm9KIFSDKXF1sW/sh
1pk7cjp7BRw/+BlceDYAYUKPDPWm8PrHr3ITlP+Al330pKDTKhAltnqfqkZA
s/zgz+47qxAhUBwQ1TsCPFzNnxPdVqHUWLzs9r8RyP/IliLiuwo664cCXBVG
YYTtvu7uiFXIlvUzvZs+CgZvXCn7slZBJkHeODRsDOSHrvgfHVmF5nTdiqXr
4zB6dQ/PJbM1MPiSLiwrNwWX7b5L2VqtAUdWWtSZk1NQ4xwOXjZrwHLnyuRt
/Sl4GTJr9cJpDdRN3YInPKbApKC0YNhvDYrGnZZD8f81X1guXXBPWYMkg/mv
9obT8OFdUPiz/jVY9FtXWY+cgZC1EYZuq3/g4+Ut3y01D5QxtYktl9dBZ+Mq
b0TOCnzdfbhXSYxEZHM2OTrQbyCs95pLR78kESxuCkPrDIxEmZ6hx3GhDURc
sNGGZIONhJzBSAbniw2EK18A00bqFsLu3qkOZX46olKxeTGN2EYEWrEsb4im
I0pkODZdctpBfBS8uj7CSU8kbennXjPkJYr/3aeXDKcn+t+R5Ha5CBKNeSdG
wrYyEIGWjkahR0SIT8JWVaFRDIRFUBrLjfldhH+h7ovfmxgJ1VdRna/rxAkj
0R/GhmGMxMUP7lK3D0oSK++l+aWYmYjA4xH0LDn7CU/64frYu0xEv8oC7C+W
IbjEjlzdTWImVkHM69isLOFirze7yY2ZCE69pGKvdIgQULCoEfdgJkybHHSY
Th4iStduxqt4MRM6N7XPJGsfIjaFham6+zIT3eMqWwctDhHP31TGDAdh8w2N
xD88RFQNyR6qecpMOH+fz68ZOERwmrM7B5QwE4RynPXOWAWiWFJQ8wWVmWi9
ErdFMUmBMJ6WFPpYykzUC18qO/9GgXjle6pqtpKZiFGgP/eoTIE4muTFZdHA
TEwWa8lrjSsQZj9H36t0MxONig0DvuqKBPPLpWDjHmYiM02g4dsFRSLTjtnE
vZeZiKtta1Y0USTmV0SZcweZCS3VGwf/3VEkgvku64tMMBMs69VOJSmKhHTv
NSnlKWYi4tSAgcI7RaIt4866wQwzQbHVNM+nKBJCRyLTIxaYiSSu7qGSFkWi
gpTokbnETDjVMlqp/VQkrGsytWtWmInFwmusX4cUCbYIyq7+NXxfpaRv1rOK
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwd2Hc8V+8XAPAPCkVfskISKloopGg8N5SiUFnZhISQSiWiQnZ2QraQspWE
Y2V/PtceGQkVIrvsfo/fP/V6v855nnOeca+LsJn9ZQt6CoWihf9Z/39B1e6V
hr3Dqam98rc17N1LvczF9pKiaijhmNkIO7cRUH8PWweIGiGH/uEjvAx2MJWn
6G8raofKEkTuvfrqCk94ZgUMRB+hLDqa+r6XAdBQo/L9imggCvp6uSxyyyuw
j3eqUxeNRbWqvmz3lzPgWP6Q6JNtceh1i4TlYN1boJjvVdDbEI/kL3xiO/Pi
HdTdC4/zn49HqroTdfMSWaAXZ6833ZmINOX9f23elwMuv3c1FcW8Rt+ayvt+
SedDub//p4uimYjV7OrWhrGPUDrW3ciSnokowk3KN88XQfE5sf66A1nIwn93
h1tqEejTm1KSeLORUDrV+a/pJ9AqXRbZKZiDJmknTI83FYOK7GGrbfvy0Guj
giM3QgCkRWNmmNAHpO9lumNJpwKk2hWWLd0/oItVH7vePqqAQx6jDNXlH5B5
/Ie0HSkVIDEoy+2hVIiefFcn5KcrYG9s81GKykf0l7XOyNyrEgR4mFwXND+h
Ts6C/OTkKtjI6Mg0ag3IPPDmPHduNYycd2ObTQVUH7T0qIdWDfUB/ttWhwH9
MLLwsv1VDTW+raHekmVoqiwzfnpXDfhx/E6KSS9D1ap9q34hNcAlsquq6lU5
qq9zZhe2rIWNVftqzxeXI5v2Cecst1r4Y3GokfalHPE5733N8rIWutJPtnVt
q0Arbldo4g218Oqw7vB4cAV6yjWhtkO8DkRPB2zg9qpEAT/Wjtf+rINtQ6HM
UcmVyMfX1UZxrQ6YPaNYd1ZWoiYSwgK56mGsNpVrH6UK6ZY6moYT9ZClUbH7
pHMV2pQe+8kqoh6OmfxVsrD7jFJu93OckWuA826mngXaNchn5JhCjUEjSD0v
P5twpwYdWv7qefhmIwjECTMHhNQgxaemdbdcG2Gq9JuvOa0GUVg2N9151QgR
a6ZBnGdrEZr30fPuaYRhV7PoW0fq0KD6nDydBhVoARUGhlfqUPD2XpsvhlQo
fCUieP5WHYr7RIv0s6GCX8lgvNC7OkR4x5k7eVFBatXsNbm7Hl3jfSh1q4gK
7i7XcsS5GlCyo/Eqz3YaWPtXOvJJNSD7hYqXj0RpoBmzS2ajRgOiBh/ZU3aY
BmLFQ+97/RpQDmOtR7MyDWjL14r9GBqRhZfQ50OONChkqXK9J9yI+qw/HbNx
oUHi9t3oGmpEkX+cgt29aHD3+HC5/MNGdPnZG9sTUTQQeGheMzrTiC64PRRa
ARow+lV5t7NTkWRVK+fWOhpMRe1WKZegIo4TnAN0LTSoLBpujLSmoutVLi73
hnC/S+YtyoNU9MvfhvP9BhI+PLDoS2mmoQ+D+9iiCRJen7Lp5J+hocp6L122
cyREMNxqfs5Boll7ioa+OglOAS6fH1whUbQg6zdnQxJkE0LfXWwnEePWLVm9
90gQtXyZWjFPImrjoQCORyT4hZNN21maULN1hrKwBwkP9drrgw40IV6O5p91
z0nQHx4odbZtQi+Pnp9QTSGhpXroeIFLE6rjHqm+8IYElfQfhZP+TSh3/69U
sSwS5O3Gc83fNaEVzTwu20IScjUmJeNKmpCVbtJYezEJ+6Vn3nZTm1CI3UUD
/nIS+Bf+vlb73YSuLr98LV1HQsiXpV0+a01o+DNdHTOVhM0lq/GV/zUjTtVM
/o/40i49Zog+JtmMLB+09Wd0kuBozsh7G2H3vov6/YWEsbObwt+pN6O6m368
W/pJ+MLC9lzEoRkF9HiN9w2RcPn3VlZD92ZU0hnrF/SDhPomLp8XQc3o2+ms
RztHSVDI28bYEt+M4Ab3mO8vEorC+Z+y5jSj5l/CMy0TJEjd30FRLm9G2jm8
n/5OkvBGT8j1cXMzIqYO3VicJiFqp+i9P9PNaOzwtY1h8yRw0O+bO0TfgjSE
3h4X/0uC7/CBWzYcLcjW+M7PpAUS6GskfqeItKCfyXkHFxZJcE4/bDMg1YIO
z2pK7l8mYcZPZoRfsQXZvZTllF8hwdruqIXWlRbkI71/RWyVhEEN+cHn11qQ
0Ju5LXPYetInjetvt6BoKTXb2DV8XtxE7waPFsSlPigv9g+f14LCVRTWgmxo
6q8CsSu+nOl4kNyCjjbu/dCGLV9y7kp+fgtqzZ7JWMTOjVNt+l2F+z8sGreK
vf+J2sV97bi+umT+AHai+aX6a99bEJPezf+SsPmVNZVj51uQyLhUsxJ2yD6d
qq6NrejLxOed1bifzax6pzl5WhF9mPEOMewnvw1KL4q2IiGTgxPXcf9LTcbH
vWVb0R2hC7neeL2OeWaFFWdbEctU83MfvB9j4RZHVrVbUYxsVZr1Eglm961y
j15vRRlpAkIH8f5169lIOt5rRQ7Ktby09f0eVLZ94dWKBsxSRGz+4PVZ704v
Dm9FUoKlC+NzJMQ86BNhym9FPbuynePw+V2kKzI+WNmKGiQXjJrw+a55R8Rc
asE2uur+A5+/SaQ6T8xUK7qS+WWsAt+XrUIHr5T/a0U/XQRsfX7i/UxlDvrx
XxtKrS+KOvKdhN0fyjcdFm9D35R+2KMBEn62S69+vtGGNrfRGAXaSYg0ZJf/
db8NdR38j8LZQsK57+NO7N5tqEjZzHOKhu/XXMqU3us21NkxkWhcS4IdJ+/w
5GAbatFeEt9aRMLO6Dkh7pk29Fvczx+9J6FJpNlQnq4dvbvpfkUrF99XKd9O
j53taPUXs/dR/LzOa6zU8xm0ox/Ffs+6I/H7pKuLCf+wQTa7XPecDSNB26RA
ydy5HVWsfNwYjZ//Qnu70szIdvTi0eXFVU8SXAIHchTb21HYHd/4jFskMDRW
Rd5U60AH2jpsSpRIyL+S0B5i2IFISlJd0SkSzHtcOQptO9DTr2o8icdIqB6T
9af360CGAXw/JA7i89mU7vaipgOx8O9XUOLA+6kcYFlOdKIAW57BO19ooJRe
jA5c6kRc2dHybvh9eZ9lnDfctBNVCW59caueBgOkSoPVk06k6m759b8iGmTr
Mh9ir+pE+lKblCQjaaBh/XTRSLkLVZ+gH96lQYOggAf+Kxe7UWVOznJJFhWq
JtMsLI26kZldfThTChUWLnWdarLrRnTyakdPRlHBhOfodNLzbiSz4LflpgcV
DsXNaak2d6M9uW/sBnWo0JRtvzNK8wuqEZHkQcuNwN5mkXtUvwddi73dES7T
CMTE6TFNmx6k7PQtqUusERwYBUUcH/YgO2XeXpbtjdB8rCP4bXQPmlTvXFGk
a4SQV2dvCff2oJMzyaxrjQ3AfV3sEIthLwJv1ZQc0wbgXxp512/Uh7JYGQ53
uNfDLiHbdE+zr8jnjtq3n9G1cKzvZsPpkG+IXz+1y/9TFZQvuV9oix5CZ2od
N2RolIEV1NaWPvmOPAoY/CgBhfDyWio/t8lPtOLs/rnlVA7YqvJWHLT6iRo/
vVdkFs6BU9I+N5QcfqI58NHSYMiBQXqbwtvuON5/N5a3NhsOJkpot8T/RMW9
82n+l7OhdKAg+Pm3n8i771i7VEcmDBlWMW++NoJMClhDJ7Qz4P2ZI9nCNiMo
+0pkn4lQBniLv9aRuz2CBsQCIv6NvoGDq89eWz0dQcwnb7GVub4BpxhVpZqk
EaR7xkDmcmo6MPe0uHkMj6D433HGQ/RpIK777c+axSi6L+IcNtmbDDEcaM3v
5iiq9bVbu5GVDJupMRv57o4iypVHa/89SYaR07pc0h7YNMEz3WLJkHyAPHw9
cRTFF2o9drybBPz/im3J/lHUpCY+0MqbCIyvIwfjdMaQkLPAfR36OLhr8mf0
oPEYcmAdIWxzY2GYX3P6o+UYmpp6+bPPLBbKn7NR2u6OIY2W+eyuqlfg8sBr
B3PYGKIcr7ksFRADMxfu6Do0jSGTnVEtKZJR0D+rTiPO/0LubxSE14rDIXB7
5y6HS79QmdyFwOu3w+GUotGDuKs4jtgqzuwPh7gQ291rN7CZpW+avgwDk8M+
zp98fyHKQ2ZlAddQGLKrEJVtxPFAF90WvWAIizjvYtGG/TDeMok3GJRKm5rD
en+h+Ecv68Y7giB5y1eX2XFcj//QtVHNILB8u9ySvWUcUQS+K+58FwgjozJu
B9THkbvjw48PvvlC5NbiNj0dHL8XnaNt6wvn5BT3+xqPo7K2E6/2L/hAuvel
9hF7HFd7X1XI4QPWYnYHXgeNI6LZ1Oj+lWcwYZ7aKdSC5+M7ebWFwQNi/SXE
Nb7g/O+d8edin4JafsETt0HsQzZXPsk9hUyGKvH+GeyhcPkXt5+AQ+LA02jO
CeRukPPm8Kw7zHzlO8SjNYEoUKlnqeQCQtf+yuw0xPESE9EzMQ9B/Ueb3F4L
bKULdpx/nOHt+HNF+bs4/46evXvWA7Bc3KhjFL7un9XpcvcgzGVI//ornH/0
BDtHghNU/iszcUjB8czPr29udgIhRhfrJwXYdiNelKE78IVjxvV1O/YSi1pC
hiMwR5BPsvqwSzTPZos4wlG+d88Kv2MnbFguiL4FYTutguvnsb0Py6SGOoDa
wf7k39y/EaW9JUxH9iaUn6lvkNXGbvW7vJPDEqZqU5uQEfak+Uc7ZAGCFzzb
z1li745j+eBgDs6Xia96TtgS/4ZkvpqBjPH7mUcR2PUdGb86jcFsMPTvs1hs
Ie2T8o5GEGxxayXoNfbcLPUplyH8tjnImPQe+3ceK+stPUi7n8hX04EtZevH
6qsFHctugk392GWfG9TMNWGjm+Gu7h/Yw/VvQ89eATNPXvFff7Dvv3y3d9cl
CGL+c3huDXu/m63zDg0Av1bZVcZJROEK5UpGaiAQEkiwbcO+IPXpwAMVUOG2
PcO7E5tSQc+UeQ4eRJ5XERbDPrinfHbmLHTEbtCUPoptztvO+E4RNogM6p5A
2OzOKZIiCiCdAoZnlLHfXhq0SyUgKMP5uo4OdpOBsHXVcdCnO9PYboTtviGa
QV8ORHXYDmtaYutu14nfchSK6ZOXNO5iH/oQNlotBc907YxJF+x4vp+R1ENw
OfNY1UWP9fkuHk8cEIeRq9QAlVDsKdftFZxikJf1YqY2ar2fDGYnut3waKOZ
jnLi+nqMcpXEhOG8/sHiz+nYA24zxpt3AFfOHyGlHOwyFqnbsrzwlbHcs6IQ
W6hfo7qFE94Y+I0RZdiEgEVhKRvcydVSh5r1/LBvdoXMgJiF8k+S6858nx9C
D5uNxniLO9bXpziwPXqptC0v31W+f91pLCvN06Vxm9wGC7+v92NrvzPse6m1
8XnloxPrrua029JReqSA823B3LqZqyT6oZTC0s8us7Lusps72/xLLQ+1yXfT
TWG7S1zR9itV1Ze7Gblx3RoX6NWh9JBXbJzOpv/7UnVzeylPDkMLz5Z1+6ob
Wn8vXemx2tDBvm7RsV0fpku/MdJkw7nW3V16wXmptPqw9A1NXmz3puxLbvTw
1iAymlNg3ZdvsycyQ8izVWrLznVLvDJKYYN7uWaUkF3YZddro6s4waCvRuqS
2Lpv/NcgygsKzOIW7AfW56c7Jb8oAGLSIS9ICWyTK9yzO4SB1ehvXaAU9sBC
psXfXTDjbbByURZbqIplllkMOvPKJbbIr8cjRF9e3g+Jm/xD/U5jZ3uYc9Yc
Am+Z6c8qZ9bdUr2hTApuGmsvbDqPzS74ebVNBo4VCBl6a2AHXWeiuyIHggOe
z5U11+tv1WYuPg4MLL/KGXXX67Fpbz19CmgmBaKextjH2L4Ekach34//qtI1
bG+PKo4TivDyvZsfw3XsNNe14PdKYM6qMvXYbn19Mo4e7cqw9KH/4yNXbI2h
hu2f1GBgUHH85GPs8X23C1Q14POWdMFVD+xihdOdBH4+r91++tAfO3+Ai4m4
AqJszBfvR2NfeFO7IUQH3k49fu0dh83qNsffrAtSLcv/IpOwCzOpxrx6gMIn
cz9mrOfv9bkFBqC7vZN3+RP266HBhqOm0L+i4chShk07zs2wYArm/fUN26uw
FQ5duFhsBrcSSh+daMRmPmDGe8kcfMVeD7v2Yktw593LuA7sm4ROBQ6s769B
yhF/K4gYe/kidnh9f+Jd6W7dgKR3ASowjl3BzlV21gaKpe9mU1axZ9SDq0Ts
4TdScnm6Yxo/z/wsO2m34Y5waXuoMLbCoykwugNL9Mckk/dg29y4Zzp9B5iq
DwxWiWPv8n6VLIDf7xc4zzGewg5S0xf0uw+XdQc5fYyw3clvjjWu0CVncPOl
GfaHxLjhe4/AaHtHdbol9vh1LvX9bmDTX/eg3g57im/BU8UdPMxzvrK4TSP3
04lfNpc/hvcO7hmBcdjCcuKzvR7g+2kq/2oS9tlnm3pPeoIxo2np7lTswwFx
MXGewBxzurkoE9u6ZCzJwgv0auj//ijBXk1+ULn8DNZ2eCqgXlzvCKnPrOEH
Zxp8uid5Z1BZ6hXZC6rBwM+zNFgkMIOIpx1C897B8NvEetxTaAZRIiUFNtYE
Q8QflX/b9+L8wpAXV5VCYESYdc+5ozPI3c+CJBVDwf9+oEO8Fo57Nr6v0wqH
tj2hTJdC8HjfdO7UqpdwXoz32M0IbH2u72zcUVC695WVTxSu90QgecwiCtIP
pNaVJ+L5ZpUG55ij4dHhT35SeTheojagqRkDe08OsXG1YZ8YCtxIiQMXTWne
Tu5ZRLBrBoVpJsLup617DV/O4udHMMk3Mg10cxkOW76aRWU3bEW6GtPA/5u0
nH0CjnNebb5Mlw7zKOz84/RZ5C6lyUJap0P1iqZ1ykecz9BD14/ewA2njoyJ
bpyvoflDfCYDMm90Szzin0PEtX1VKk5ZIKfxVSYuGnu+vADu50Gfg+epAP95
5P47KDuA5xPkyl3d8jn4D6LYDp7onioHHu2a7jTPv6hse+ZiyaZqOHsimbDw
+Yvi03dk3eCrhnsij1OFA/4ik7imKvZ91dD1W/5uVBjObzhSo3GuGqKfZbL7
J/1F7ltvCUd4VYPQx3Bl+3JsPs3uPfQ1sF/AvODI6l9ENL0ZbpurATRICa64
s4DcSZ5Byao6YHebEWy6v4AG3P5mqrTWweD24bd9LgvIRENQWW+wDjy0amoX
PBZQmYWOvQ6lHuprAyiS4dh+Zh+qj9eDdha/Q3TBAqK0FHwyza4HWxcZ9Tt/
sE9xvG143gCn+ET7Hi/henITr1VfNQDb+202z9dwvaiijSVvGiB3csnrDeMi
Eno38+j25wb4a1ZeOsCziO/PI9WDSw3w5LyaxMWji4jIK3TPN2mElzxWW0Tv
L6IB6wum2sJUKBTQUP39EPtfhzjzQSp0iRzzee+G7Sst9EaWCrySzBuVny2i
Mic2nlJVKkQop61cj8AWnUvYdZcKYfdHfqXnY7syLJBVVMh/1LTPsXARxe/l
qbpPo0KrR+F1+eJFRBnROsTeRQWOYO+h+kocz0ry2vyLCsHpe3t+teD+IzXu
7menQeAXq3rxadwv/7EQOh0aZA5oMP+ZW0QmFaGfvI1pQP1x7GzpAu6PYWB+
5ToNWGeZK9QoS4hwPnDs7X0a+LGkf7RnW8LP9yvxXS9p4H1iNC1HfAmZKI/6
G3TQIE2h+ceDwzhfrb0zrY8GNec+7lY4guM9fVEDwzRg1PKJbzmxhAYaQJhj
lgaeN/dFzqouofh4VgPn/0h4Envj2RFrnF/s+u7caRIU9C3H1eyWUFm/+AVQ
xr+P8167ZOWI638d7d+uRoJHsMH2aOclRHn8+qqXHgleHupZFD9cn01mWsCR
hLOnL3DxP8fxlARXuEcC09q5B9Kh2MsbJs+6kuB9T0HRMhr3c010gcGbBB/r
I50NGbi+3OnvUjEkqIhJnfiehfuLEO1ZiCdh87BEwlreEhLyjElKTMG/3xvu
tTlcjOfbxCqSkInz+fc0qZTh/tyoIfO5JLB0Ch8xr8JxlSxV8Q8k+Gts/xfR
iOdjbtl8Fki4sIXXPLsJ11t2aBCtJGFLPVddXRvuhxg/N1ZNQqDif6ErvXi+
A4m/eWkkBMnSiZlNYO9RZ9vaQ4LG7Krfw2k8/6LDN4Z+ErZmL02FzWM32eh0
Daz/fWquqGYV75+5fcKeHyRc/jG18xvdMnJ3iZSIHSGBI2nCY2njMqKc62n+
O0ZCqMBPNfH/lhHBZ9h4cZIEze6hvLMc2OGXe89Pk8AVMcBrwoPH59Fui86S
0Ha5z/UB/zIqi2SxH5ojIYzty2CIII6Ly75x/4PHN3YovxXBFrSjW/tLArdP
69vPoni+ns8a+oskdJxp2vp1P64fqXAncomECHqq04IEnk+1V7lgmQRtqOvZ
Ko3zc11Tc1ZI2OZSTRw4iq2ywT5glYSuY5UpSsfxeG3C+dwaCZHz+JMRYffO
JQ9i6+YW299TxPVTO+v1/5HAZ/+xLUgZjz8TXJOH/eXAe7k3qjjOVOI0hh01
khtbqY7NMJr3D1svJYuh7wrO54zQm8XebvbW6o8OjrccPfsZu1cwncpmgOsl
yly+ix3TkyK1zwT3//r7VQZsg8jEFwrmOL824pg97kdAK25F3wrn53nVFeL+
e7fGmN61xfN3/Pj5Fa/vFS2yOtABxy177Ibx+gU+Egzhd/D4wKWKBrw/MUkj
KPo+jj95/CAY759AYJBLgguuF2dtf2SBhOj7xz6mumMvJj3+gPef/9rA/DsP
PF6XLWDbPF7fRW+pfG8cP/rETguf30uRroyyIOypCFFrfN68W9xHqsOwz71+
T0zg/fwrtocaievtjHw+h+/Hi8Z7sd3xeL6N9wJnv5PA82Fnz9dk3P8x+5un
hvD5JdRs+5GGLWHCZInvX7jTtuCZbOwbn/pUvuD7YwrUhXw8nxOthakT3xfV
65v/FeJ4y4G5+FZ8/4Q+PGUpx659fvB6I76fLMZlWz/j/Mbe5dBafJ/nGVe3
1eH4LMUqpoqE4Hptp93NuB+lNi9UTAJ7wVru/nYcf3h9uhs/b0FxrycPdWNP
v7RSzyPh+Z0/Vie/4fU92DFen05CgGCEvvY09sN8dUo4CaybTkUazON6Su/E
7J/j53X2e5vZIvbVZ6MffEjwqz2iZk+3gojOiMgO/P7wcWwnvLdiBzklKJmT
wGzo6hrIjX16V/UjQ/x+Ud5TFMa3gr/HBjKDtUl4JnBXOkF4BbnvLjp2+hwJ
ntVcokWHcb63i1DlPhI25BSblR3B+dZhuiCM32/R5nHVctj/dR8I5SPhqUM+
b+tp7P0B/5Uzk/CYX5Nl/NIKKpu0f3v4Ow1c7UKndjhid502ORNBA5WKw339
d3G+Yl+xqT8NeHma6uIe4LjVzzHdJzTIL2FNEn6M+7kcgzpv0mCM1UtrTxD2
Y9p1dkUa6GbcLzqYifNzl5yu/qCC6D+e1Ikc3G+uyFWuL1SYu1wQmlmA83Na
+dKoVHi+NG17qATnBzUXXs2nQvV5m50yjTj+RW7xmxsVZEYMPY6P4X5kBT5b
s1GB/sSKw8oEdvSbwmQKFZqeRxmWTOP5OQIDC6YbweZopyxaxHF/OlP91kZI
9NIYVWBeRZQ2NYH8sEZg36OopiKKHRKd4crWCL9M9/JeNVtFxJL8yYDhetCz
7TlgY7mKylqjSzNp9VDrFIhcrVeR+/1p7ujCekjxm7NMcMTx3N6YVr96MC4o
Kxh9guNCARYgWQ+tzFevOCfheP64l8HNOlDgZL3un4rjf6/ZbtOsg+wd4Byb
gevpPn4YJV8HAVJ7EivysDW6biww1oGywfTU5iqc769a/9+rWviU5RMYPYz7
/ZTl61aKv3+KTiS+G8He0JiZllADkVWTBTCOTTFVfOFRA3e7tfqG5vD40z+3
VJ2vAUkGkYMHN64h4rm0lk5zNSRpF9UV71nD6984erL9M/itjm3ot8S+l3et
JbMSzt0Kq31jjX3dvaHCvxI2fD/pf88Oj1/Iu/jQuhIeNQZxbnXCcftBVqU9
leAQLSui5LmGv8dPWxyKrABtuSfoTdIa/n4WaL9yuxxE7vI5Ow3guEZFs8ty
CXwdqTipOIzHL8ZSWtNKIMbAlo59BMc/nlzI0ioBbiXwTp/EjhBhW31XDMyc
Fi9613D+u7E7Pbqf4Hd2dr7Cjn/IffJqhsWLQigaV578Tw97fzlvUEEuyAbG
+NYa/kOU+Ls1/Fq5kCs5veeJKY5PPEsQm8uBdMcog3kr7Ncf3lUfyoHIhfG6
nns4H3X93XUuC5w2hCSnhWNftqg8+j0NpAV6ryo0Y6s5lOQWREBmyaH55TZs
RmOdtzNhsN/YM6igaz1fu9VbPBREEiVq9g5gu/CoNMg9B469j2XYJrF7/3Dw
V7nDAl8okx0jhaBoSApM/HqAOvYcG5Tfjd0ovuHORCIabrZVJESxHVTGxZmT
0YxrQvKZvdgRacYnd6cgto7N1zUOYtsysJuYpKJzXn2/LGSwW7Z/rB/JQEU/
nswHKWEbHXC4/SoXxaVSmX+aY/9SODx6pxhlXqG3HrfEPjGla85bgor/yTZM
W2Fr6XG/KC5BXTrxASu22Ett47uZAHEw3+bguEsh3C/fA6eWMuRhxStw0hN7
M8dQ9eNKZLXvmmRoCs4/Pqf3R6wOCW4OHbmbim0mmqniVodaxyoSdNOxSTJ5
rqMOnXorwiX4Do93fr9f5Vk94pQcXEjLx96114gy3oBKZUwrSitxfo/pO/hM
Q1yEsdbYNwpB8IfwfDVsQeXa+g9PC9IRZdsP/izp60LVIdy1F4SwKVwVN/m6
USON5NIVoSPcJa480dbqRl1nlTLtRHF8R5dYK7UbTcmKf4uWwGZyOO5S/gUJ
bvt39s8pOoJomz6ZmteLnDsTOTKMsZvMR7aZDSBp3bF0rgQ6QoiJsfMCbRgN
1MaprSbSEfH02obHp4eRv5zW7PdkOsJkWObvGa7v6Ad/2YkPaXj85rEXWXrf
UVRfOHk1m46gsNVOtI98R/TXTs/HAu5PXnLhweafqOlmJLGvH883Lnvr/rVR
ZPv0bOfJ7fRE/J/TNoL2v9GCb/NPgR30hDvwvUqI/I08QwwWlgXpiYE4nSGF
it8oNsGRr0iEnhDaVNH/lXsSNUGsvux+nM+wOOFROomkV/58lZDDjtEXr/Sd
Qkt3Ukd26uDxozKixhPTyNuSeYkuFI9fHvUxH5xDJTtM/41xMRBBkYvXbPHP
lY9rXgz7AxkIgre1/KMwPUHLUxwL2LqBYHenhh+RZyI+C1lW+4dsILJ3Vey0
3ryF8PiglfBt80aCueJbs2n8VsJApNdIP2Aj4f2DI+eCEzex/F5y+wEmRsIq
Stb1iQcf4cIw2hj+iJEgFNgery7sIHh2y5nuoTARXKupRrPZwsQ9O+25zQ+Y
iPzUGYazj3cTArLmtaIPmYhDdRqv3AN3E2Wrt2IUXJkI90tcEuXRu4nNAQFK
zo9x/EjUCc33u4nYjKqwUR8moilC82TFr91E9YjUkdooJiK7e0AVdPYQXNfY
nDyLmYjIU9Yx52VEiY/7d6gklDIRFLcxx7MKooTRzH7BkjIm4tzB9/fOa4gS
aY/PVs9VMRGFXAKcZraixPF4Vx5zKp6fKaW8L1mUMOv79V6hn4lYcPR8Qtkm
RjClLPoaDeD8pJ9bTPeIEW9tmYydB5kIq1OmQzXSYsSfZRGm3B9MBDM1/Haa
hhjhy6+nIzzJRNxnnrxa4CtGSA5eP3BymokYSZy3PPdSjGhLv/tPd5YJ3ze2
xm+pYoSgXHBq0F8mwvvb4xSxz2JEJSXu4dtFPP8d/R1trWKEVe1b9dplnG9w
Yc5rUIxgDSraNbzKRAjx8RwkpsWIHJ3av//+MRHsls7V//6JEf8DvjM1gQ==

          "]]}, Annotation[#, "Charting`Private`Tag$100624#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$100624#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JpNjKE7mbWX0aawbOBfz9Y8h9imZHRc1OUleTfd4DhSPoWq/E39r9LEuKUlV
9RlDV9PcxX+bYV3BY8CBdQx5sI1Whz/C7E46PfBvBK2cUFkf44XzX2z83tA0
grx9/M99eILzbYlgvEcjyI9DvizVD+tleuSuiBEUzHUXlQdh3eiAdt2JEfRh
/fKP+XdY51RTiHjzD1Xyb3pzDeH4X0SiFKSHkbahRcuNIqyfy6UsbBhGtWEZ
/LbFmC/cZ3yYHUKNAsYhruXYfofhmYCSIdQtFP0iuA7r9w8kFJkNoQnRXR5F
fZhLqeGfXw0iQamj5rtYuEhek+8FJrv6ESnKl8G9hovEkh+lDUX96BZvYyCV
Det36obsk/pRHtM2N4ML620kLjunfmRRE8OvwYf187OPx9b0o1RXljJTsf/j
xfIO7qSg05XleyJVsf36/KTaoF7kpL6l6KE6Zsntl87r96KoDLOL10mYTVa0
XvD3Imrs/FPpk5g1fb2V3/SgV3f29mRqYc604HWO7ka9osHBDZcxP3z788Cb
TnTfwXhm3QPM8mecZa+0om1KlhXSDzFfX5Sm8bSiwmXnGA1PzGvXKV4uaEHr
AgNPuntjdk9M2ifegt59KQkbfYH5o2psal8TKhtRPFzxFrNsqwabTgPacoPP
1TcP83Nvto815ejXnu2a8QWYG5NkE0XKkenUHrH8QsxlMsVU6zL02ft02UwJ
5qnvG3SWS9CxOE9ByxrMzUXjujv/IIue8SyNXszsG6w2BuQgrsT5l6ZkzMxb
H1/zZqOvdlzX3fsxs3y2iwr+ieYWJbjShzFHnljcHZiOXopcvriTwFxY6htF
/Yz299/cqzaJ2YmNmdCRiJqT762aTGN2o7MlF39AYkdDP4UwMKdl6R3bHoWK
Wd4//DqPWU+cJND3CtlUfNWtWMRsZo4yDr9APCG5koPLmL0qD4toPEA/LlYw
Vlf/r4cl7f//l/oPJddlVw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$100624#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$100624#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwd2Hc8V+8XAPAPCkVfskISKloopGg8N5SiUFnZhISQSiWiQnZ2QraQspWE
Y2V/PtceGQkVIrvsfo/fP/V6v855nnOeca+LsJn9ZQt6CoWihf9Z/39B1e6V
hr3Dqam98rc17N1LvczF9pKiaijhmNkIO7cRUH8PWweIGiGH/uEjvAx2MJWn
6G8raofKEkTuvfrqCk94ZgUMRB+hLDqa+r6XAdBQo/L9imggCvp6uSxyyyuw
j3eqUxeNRbWqvmz3lzPgWP6Q6JNtceh1i4TlYN1boJjvVdDbEI/kL3xiO/Pi
HdTdC4/zn49HqroTdfMSWaAXZ6833ZmINOX9f23elwMuv3c1FcW8Rt+ayvt+
SedDub//p4uimYjV7OrWhrGPUDrW3ciSnokowk3KN88XQfE5sf66A1nIwn93
h1tqEejTm1KSeLORUDrV+a/pJ9AqXRbZKZiDJmknTI83FYOK7GGrbfvy0Guj
giM3QgCkRWNmmNAHpO9lumNJpwKk2hWWLd0/oItVH7vePqqAQx6jDNXlH5B5
/Ie0HSkVIDEoy+2hVIiefFcn5KcrYG9s81GKykf0l7XOyNyrEgR4mFwXND+h
Ts6C/OTkKtjI6Mg0ag3IPPDmPHduNYycd2ObTQVUH7T0qIdWDfUB/ttWhwH9
MLLwsv1VDTW+raHekmVoqiwzfnpXDfhx/E6KSS9D1ap9q34hNcAlsquq6lU5
qq9zZhe2rIWNVftqzxeXI5v2Cecst1r4Y3GokfalHPE5733N8rIWutJPtnVt
q0Arbldo4g218Oqw7vB4cAV6yjWhtkO8DkRPB2zg9qpEAT/Wjtf+rINtQ6HM
UcmVyMfX1UZxrQ6YPaNYd1ZWoiYSwgK56mGsNpVrH6UK6ZY6moYT9ZClUbH7
pHMV2pQe+8kqoh6OmfxVsrD7jFJu93OckWuA826mngXaNchn5JhCjUEjSD0v
P5twpwYdWv7qefhmIwjECTMHhNQgxaemdbdcG2Gq9JuvOa0GUVg2N9151QgR
a6ZBnGdrEZr30fPuaYRhV7PoW0fq0KD6nDydBhVoARUGhlfqUPD2XpsvhlQo
fCUieP5WHYr7RIv0s6GCX8lgvNC7OkR4x5k7eVFBatXsNbm7Hl3jfSh1q4gK
7i7XcsS5GlCyo/Eqz3YaWPtXOvJJNSD7hYqXj0RpoBmzS2ajRgOiBh/ZU3aY
BmLFQ+97/RpQDmOtR7MyDWjL14r9GBqRhZfQ50OONChkqXK9J9yI+qw/HbNx
oUHi9t3oGmpEkX+cgt29aHD3+HC5/MNGdPnZG9sTUTQQeGheMzrTiC64PRRa
ARow+lV5t7NTkWRVK+fWOhpMRe1WKZegIo4TnAN0LTSoLBpujLSmoutVLi73
hnC/S+YtyoNU9MvfhvP9BhI+PLDoS2mmoQ+D+9iiCRJen7Lp5J+hocp6L122
cyREMNxqfs5Boll7ioa+OglOAS6fH1whUbQg6zdnQxJkE0LfXWwnEePWLVm9
90gQtXyZWjFPImrjoQCORyT4hZNN21maULN1hrKwBwkP9drrgw40IV6O5p91
z0nQHx4odbZtQi+Pnp9QTSGhpXroeIFLE6rjHqm+8IYElfQfhZP+TSh3/69U
sSwS5O3Gc83fNaEVzTwu20IScjUmJeNKmpCVbtJYezEJ+6Vn3nZTm1CI3UUD
/nIS+Bf+vlb73YSuLr98LV1HQsiXpV0+a01o+DNdHTOVhM0lq/GV/zUjTtVM
/o/40i49Zog+JtmMLB+09Wd0kuBozsh7G2H3vov6/YWEsbObwt+pN6O6m368
W/pJ+MLC9lzEoRkF9HiN9w2RcPn3VlZD92ZU0hnrF/SDhPomLp8XQc3o2+ms
RztHSVDI28bYEt+M4Ab3mO8vEorC+Z+y5jSj5l/CMy0TJEjd30FRLm9G2jm8
n/5OkvBGT8j1cXMzIqYO3VicJiFqp+i9P9PNaOzwtY1h8yRw0O+bO0TfgjSE
3h4X/0uC7/CBWzYcLcjW+M7PpAUS6GskfqeItKCfyXkHFxZJcE4/bDMg1YIO
z2pK7l8mYcZPZoRfsQXZvZTllF8hwdruqIXWlRbkI71/RWyVhEEN+cHn11qQ
0Ju5LXPYetInjetvt6BoKTXb2DV8XtxE7waPFsSlPigv9g+f14LCVRTWgmxo
6q8CsSu+nOl4kNyCjjbu/dCGLV9y7kp+fgtqzZ7JWMTOjVNt+l2F+z8sGreK
vf+J2sV97bi+umT+AHai+aX6a99bEJPezf+SsPmVNZVj51uQyLhUsxJ2yD6d
qq6NrejLxOed1bifzax6pzl5WhF9mPEOMewnvw1KL4q2IiGTgxPXcf9LTcbH
vWVb0R2hC7neeL2OeWaFFWdbEctU83MfvB9j4RZHVrVbUYxsVZr1Eglm961y
j15vRRlpAkIH8f5169lIOt5rRQ7Ktby09f0eVLZ94dWKBsxSRGz+4PVZ704v
Dm9FUoKlC+NzJMQ86BNhym9FPbuynePw+V2kKzI+WNmKGiQXjJrw+a55R8Rc
asE2uur+A5+/SaQ6T8xUK7qS+WWsAt+XrUIHr5T/a0U/XQRsfX7i/UxlDvrx
XxtKrS+KOvKdhN0fyjcdFm9D35R+2KMBEn62S69+vtGGNrfRGAXaSYg0ZJf/
db8NdR38j8LZQsK57+NO7N5tqEjZzHOKhu/XXMqU3us21NkxkWhcS4IdJ+/w
5GAbatFeEt9aRMLO6Dkh7pk29Fvczx+9J6FJpNlQnq4dvbvpfkUrF99XKd9O
j53taPUXs/dR/LzOa6zU8xm0ox/Ffs+6I/H7pKuLCf+wQTa7XPecDSNB26RA
ydy5HVWsfNwYjZ//Qnu70szIdvTi0eXFVU8SXAIHchTb21HYHd/4jFskMDRW
Rd5U60AH2jpsSpRIyL+S0B5i2IFISlJd0SkSzHtcOQptO9DTr2o8icdIqB6T
9af360CGAXw/JA7i89mU7vaipgOx8O9XUOLA+6kcYFlOdKIAW57BO19ooJRe
jA5c6kRc2dHybvh9eZ9lnDfctBNVCW59caueBgOkSoPVk06k6m759b8iGmTr
Mh9ir+pE+lKblCQjaaBh/XTRSLkLVZ+gH96lQYOggAf+Kxe7UWVOznJJFhWq
JtMsLI26kZldfThTChUWLnWdarLrRnTyakdPRlHBhOfodNLzbiSz4LflpgcV
DsXNaak2d6M9uW/sBnWo0JRtvzNK8wuqEZHkQcuNwN5mkXtUvwddi73dES7T
CMTE6TFNmx6k7PQtqUusERwYBUUcH/YgO2XeXpbtjdB8rCP4bXQPmlTvXFGk
a4SQV2dvCff2oJMzyaxrjQ3AfV3sEIthLwJv1ZQc0wbgXxp512/Uh7JYGQ53
uNfDLiHbdE+zr8jnjtq3n9G1cKzvZsPpkG+IXz+1y/9TFZQvuV9oix5CZ2od
N2RolIEV1NaWPvmOPAoY/CgBhfDyWio/t8lPtOLs/rnlVA7YqvJWHLT6iRo/
vVdkFs6BU9I+N5QcfqI58NHSYMiBQXqbwtvuON5/N5a3NhsOJkpot8T/RMW9
82n+l7OhdKAg+Pm3n8i771i7VEcmDBlWMW++NoJMClhDJ7Qz4P2ZI9nCNiMo
+0pkn4lQBniLv9aRuz2CBsQCIv6NvoGDq89eWz0dQcwnb7GVub4BpxhVpZqk
EaR7xkDmcmo6MPe0uHkMj6D433HGQ/RpIK777c+axSi6L+IcNtmbDDEcaM3v
5iiq9bVbu5GVDJupMRv57o4iypVHa/89SYaR07pc0h7YNMEz3WLJkHyAPHw9
cRTFF2o9drybBPz/im3J/lHUpCY+0MqbCIyvIwfjdMaQkLPAfR36OLhr8mf0
oPEYcmAdIWxzY2GYX3P6o+UYmpp6+bPPLBbKn7NR2u6OIY2W+eyuqlfg8sBr
B3PYGKIcr7ksFRADMxfu6Do0jSGTnVEtKZJR0D+rTiPO/0LubxSE14rDIXB7
5y6HS79QmdyFwOu3w+GUotGDuKs4jtgqzuwPh7gQ291rN7CZpW+avgwDk8M+
zp98fyHKQ2ZlAddQGLKrEJVtxPFAF90WvWAIizjvYtGG/TDeMok3GJRKm5rD
en+h+Ecv68Y7giB5y1eX2XFcj//QtVHNILB8u9ySvWUcUQS+K+58FwgjozJu
B9THkbvjw48PvvlC5NbiNj0dHL8XnaNt6wvn5BT3+xqPo7K2E6/2L/hAuvel
9hF7HFd7X1XI4QPWYnYHXgeNI6LZ1Oj+lWcwYZ7aKdSC5+M7ebWFwQNi/SXE
Nb7g/O+d8edin4JafsETt0HsQzZXPsk9hUyGKvH+GeyhcPkXt5+AQ+LA02jO
CeRukPPm8Kw7zHzlO8SjNYEoUKlnqeQCQtf+yuw0xPESE9EzMQ9B/Ueb3F4L
bKULdpx/nOHt+HNF+bs4/46evXvWA7Bc3KhjFL7un9XpcvcgzGVI//ornH/0
BDtHghNU/iszcUjB8czPr29udgIhRhfrJwXYdiNelKE78IVjxvV1O/YSi1pC
hiMwR5BPsvqwSzTPZos4wlG+d88Kv2MnbFguiL4FYTutguvnsb0Py6SGOoDa
wf7k39y/EaW9JUxH9iaUn6lvkNXGbvW7vJPDEqZqU5uQEfak+Uc7ZAGCFzzb
z1li745j+eBgDs6Xia96TtgS/4ZkvpqBjPH7mUcR2PUdGb86jcFsMPTvs1hs
Ie2T8o5GEGxxayXoNfbcLPUplyH8tjnImPQe+3ceK+stPUi7n8hX04EtZevH
6qsFHctugk392GWfG9TMNWGjm+Gu7h/Yw/VvQ89eATNPXvFff7Dvv3y3d9cl
CGL+c3huDXu/m63zDg0Av1bZVcZJROEK5UpGaiAQEkiwbcO+IPXpwAMVUOG2
PcO7E5tSQc+UeQ4eRJ5XERbDPrinfHbmLHTEbtCUPoptztvO+E4RNogM6p5A
2OzOKZIiCiCdAoZnlLHfXhq0SyUgKMP5uo4OdpOBsHXVcdCnO9PYboTtviGa
QV8ORHXYDmtaYutu14nfchSK6ZOXNO5iH/oQNlotBc907YxJF+x4vp+R1ENw
OfNY1UWP9fkuHk8cEIeRq9QAlVDsKdftFZxikJf1YqY2ar2fDGYnut3waKOZ
jnLi+nqMcpXEhOG8/sHiz+nYA24zxpt3AFfOHyGlHOwyFqnbsrzwlbHcs6IQ
W6hfo7qFE94Y+I0RZdiEgEVhKRvcydVSh5r1/LBvdoXMgJiF8k+S6858nx9C
D5uNxniLO9bXpziwPXqptC0v31W+f91pLCvN06Vxm9wGC7+v92NrvzPse6m1
8XnloxPrrua029JReqSA823B3LqZqyT6oZTC0s8us7Lusps72/xLLQ+1yXfT
TWG7S1zR9itV1Ze7Gblx3RoX6NWh9JBXbJzOpv/7UnVzeylPDkMLz5Z1+6ob
Wn8vXemx2tDBvm7RsV0fpku/MdJkw7nW3V16wXmptPqw9A1NXmz3puxLbvTw
1iAymlNg3ZdvsycyQ8izVWrLznVLvDJKYYN7uWaUkF3YZddro6s4waCvRuqS
2Lpv/NcgygsKzOIW7AfW56c7Jb8oAGLSIS9ICWyTK9yzO4SB1ehvXaAU9sBC
psXfXTDjbbByURZbqIplllkMOvPKJbbIr8cjRF9e3g+Jm/xD/U5jZ3uYc9Yc
Am+Z6c8qZ9bdUr2hTApuGmsvbDqPzS74ebVNBo4VCBl6a2AHXWeiuyIHggOe
z5U11+tv1WYuPg4MLL/KGXXX67Fpbz19CmgmBaKextjH2L4Ekach34//qtI1
bG+PKo4TivDyvZsfw3XsNNe14PdKYM6qMvXYbn19Mo4e7cqw9KH/4yNXbI2h
hu2f1GBgUHH85GPs8X23C1Q14POWdMFVD+xihdOdBH4+r91++tAfO3+Ai4m4
AqJszBfvR2NfeFO7IUQH3k49fu0dh83qNsffrAtSLcv/IpOwCzOpxrx6gMIn
cz9mrOfv9bkFBqC7vZN3+RP266HBhqOm0L+i4chShk07zs2wYArm/fUN26uw
FQ5duFhsBrcSSh+daMRmPmDGe8kcfMVeD7v2Yktw593LuA7sm4ROBQ6s769B
yhF/K4gYe/kidnh9f+Jd6W7dgKR3ASowjl3BzlV21gaKpe9mU1axZ9SDq0Ts
4TdScnm6Yxo/z/wsO2m34Y5waXuoMLbCoykwugNL9Mckk/dg29y4Zzp9B5iq
DwxWiWPv8n6VLIDf7xc4zzGewg5S0xf0uw+XdQc5fYyw3clvjjWu0CVncPOl
GfaHxLjhe4/AaHtHdbol9vh1LvX9bmDTX/eg3g57im/BU8UdPMxzvrK4TSP3
04lfNpc/hvcO7hmBcdjCcuKzvR7g+2kq/2oS9tlnm3pPeoIxo2np7lTswwFx
MXGewBxzurkoE9u6ZCzJwgv0auj//ijBXk1+ULn8DNZ2eCqgXlzvCKnPrOEH
Zxp8uid5Z1BZ6hXZC6rBwM+zNFgkMIOIpx1C897B8NvEetxTaAZRIiUFNtYE
Q8QflX/b9+L8wpAXV5VCYESYdc+5ozPI3c+CJBVDwf9+oEO8Fo57Nr6v0wqH
tj2hTJdC8HjfdO7UqpdwXoz32M0IbH2u72zcUVC695WVTxSu90QgecwiCtIP
pNaVJ+L5ZpUG55ij4dHhT35SeTheojagqRkDe08OsXG1YZ8YCtxIiQMXTWne
Tu5ZRLBrBoVpJsLup617DV/O4udHMMk3Mg10cxkOW76aRWU3bEW6GtPA/5u0
nH0CjnNebb5Mlw7zKOz84/RZ5C6lyUJap0P1iqZ1ykecz9BD14/ewA2njoyJ
bpyvoflDfCYDMm90Szzin0PEtX1VKk5ZIKfxVSYuGnu+vADu50Gfg+epAP95
5P47KDuA5xPkyl3d8jn4D6LYDp7onioHHu2a7jTPv6hse+ZiyaZqOHsimbDw
+Yvi03dk3eCrhnsij1OFA/4ik7imKvZ91dD1W/5uVBjObzhSo3GuGqKfZbL7
J/1F7ltvCUd4VYPQx3Bl+3JsPs3uPfQ1sF/AvODI6l9ENL0ZbpurATRICa64
s4DcSZ5Byao6YHebEWy6v4AG3P5mqrTWweD24bd9LgvIRENQWW+wDjy0amoX
PBZQmYWOvQ6lHuprAyiS4dh+Zh+qj9eDdha/Q3TBAqK0FHwyza4HWxcZ9Tt/
sE9xvG143gCn+ET7Hi/henITr1VfNQDb+202z9dwvaiijSVvGiB3csnrDeMi
Eno38+j25wb4a1ZeOsCziO/PI9WDSw3w5LyaxMWji4jIK3TPN2mElzxWW0Tv
L6IB6wum2sJUKBTQUP39EPtfhzjzQSp0iRzzee+G7Sst9EaWCrySzBuVny2i
Mic2nlJVKkQop61cj8AWnUvYdZcKYfdHfqXnY7syLJBVVMh/1LTPsXARxe/l
qbpPo0KrR+F1+eJFRBnROsTeRQWOYO+h+kocz0ry2vyLCsHpe3t+teD+IzXu
7menQeAXq3rxadwv/7EQOh0aZA5oMP+ZW0QmFaGfvI1pQP1x7GzpAu6PYWB+
5ToNWGeZK9QoS4hwPnDs7X0a+LGkf7RnW8LP9yvxXS9p4H1iNC1HfAmZKI/6
G3TQIE2h+ceDwzhfrb0zrY8GNec+7lY4guM9fVEDwzRg1PKJbzmxhAYaQJhj
lgaeN/dFzqouofh4VgPn/0h4Envj2RFrnF/s+u7caRIU9C3H1eyWUFm/+AVQ
xr+P8167ZOWI638d7d+uRoJHsMH2aOclRHn8+qqXHgleHupZFD9cn01mWsCR
hLOnL3DxP8fxlARXuEcC09q5B9Kh2MsbJs+6kuB9T0HRMhr3c010gcGbBB/r
I50NGbi+3OnvUjEkqIhJnfiehfuLEO1ZiCdh87BEwlreEhLyjElKTMG/3xvu
tTlcjOfbxCqSkInz+fc0qZTh/tyoIfO5JLB0Ch8xr8JxlSxV8Q8k+Gts/xfR
iOdjbtl8Fki4sIXXPLsJ11t2aBCtJGFLPVddXRvuhxg/N1ZNQqDif6ErvXi+
A4m/eWkkBMnSiZlNYO9RZ9vaQ4LG7Krfw2k8/6LDN4Z+ErZmL02FzWM32eh0
Daz/fWquqGYV75+5fcKeHyRc/jG18xvdMnJ3iZSIHSGBI2nCY2njMqKc62n+
O0ZCqMBPNfH/lhHBZ9h4cZIEze6hvLMc2OGXe89Pk8AVMcBrwoPH59Fui86S
0Ha5z/UB/zIqi2SxH5ojIYzty2CIII6Ly75x/4PHN3YovxXBFrSjW/tLArdP
69vPoni+ns8a+oskdJxp2vp1P64fqXAncomECHqq04IEnk+1V7lgmQRtqOvZ
Ko3zc11Tc1ZI2OZSTRw4iq2ywT5glYSuY5UpSsfxeG3C+dwaCZHz+JMRYffO
JQ9i6+YW299TxPVTO+v1/5HAZ/+xLUgZjz8TXJOH/eXAe7k3qjjOVOI0hh01
khtbqY7NMJr3D1svJYuh7wrO54zQm8XebvbW6o8OjrccPfsZu1cwncpmgOsl
yly+ix3TkyK1zwT3//r7VQZsg8jEFwrmOL824pg97kdAK25F3wrn53nVFeL+
e7fGmN61xfN3/Pj5Fa/vFS2yOtABxy177Ibx+gU+Egzhd/D4wKWKBrw/MUkj
KPo+jj95/CAY759AYJBLgguuF2dtf2SBhOj7xz6mumMvJj3+gPef/9rA/DsP
PF6XLWDbPF7fRW+pfG8cP/rETguf30uRroyyIOypCFFrfN68W9xHqsOwz71+
T0zg/fwrtocaievtjHw+h+/Hi8Z7sd3xeL6N9wJnv5PA82Fnz9dk3P8x+5un
hvD5JdRs+5GGLWHCZInvX7jTtuCZbOwbn/pUvuD7YwrUhXw8nxOthakT3xfV
65v/FeJ4y4G5+FZ8/4Q+PGUpx659fvB6I76fLMZlWz/j/Mbe5dBafJ/nGVe3
1eH4LMUqpoqE4Hptp93NuB+lNi9UTAJ7wVru/nYcf3h9uhs/b0FxrycPdWNP
v7RSzyPh+Z0/Vie/4fU92DFen05CgGCEvvY09sN8dUo4CaybTkUazON6Su/E
7J/j53X2e5vZIvbVZ6MffEjwqz2iZk+3gojOiMgO/P7wcWwnvLdiBzklKJmT
wGzo6hrIjX16V/UjQ/x+Ud5TFMa3gr/HBjKDtUl4JnBXOkF4BbnvLjp2+hwJ
ntVcokWHcb63i1DlPhI25BSblR3B+dZhuiCM32/R5nHVctj/dR8I5SPhqUM+
b+tp7P0B/5Uzk/CYX5Nl/NIKKpu0f3v4Ow1c7UKndjhid502ORNBA5WKw339
d3G+Yl+xqT8NeHma6uIe4LjVzzHdJzTIL2FNEn6M+7kcgzpv0mCM1UtrTxD2
Y9p1dkUa6GbcLzqYifNzl5yu/qCC6D+e1Ikc3G+uyFWuL1SYu1wQmlmA83Na
+dKoVHi+NG17qATnBzUXXs2nQvV5m50yjTj+RW7xmxsVZEYMPY6P4X5kBT5b
s1GB/sSKw8oEdvSbwmQKFZqeRxmWTOP5OQIDC6YbweZopyxaxHF/OlP91kZI
9NIYVWBeRZQ2NYH8sEZg36OopiKKHRKd4crWCL9M9/JeNVtFxJL8yYDhetCz
7TlgY7mKylqjSzNp9VDrFIhcrVeR+/1p7ujCekjxm7NMcMTx3N6YVr96MC4o
Kxh9guNCARYgWQ+tzFevOCfheP64l8HNOlDgZL3un4rjf6/ZbtOsg+wd4Byb
gevpPn4YJV8HAVJ7EivysDW6biww1oGywfTU5iqc769a/9+rWviU5RMYPYz7
/ZTl61aKv3+KTiS+G8He0JiZllADkVWTBTCOTTFVfOFRA3e7tfqG5vD40z+3
VJ2vAUkGkYMHN64h4rm0lk5zNSRpF9UV71nD6984erL9M/itjm3ot8S+l3et
JbMSzt0Kq31jjX3dvaHCvxI2fD/pf88Oj1/Iu/jQuhIeNQZxbnXCcftBVqU9
leAQLSui5LmGv8dPWxyKrABtuSfoTdIa/n4WaL9yuxxE7vI5Ow3guEZFs8ty
CXwdqTipOIzHL8ZSWtNKIMbAlo59BMc/nlzI0ioBbiXwTp/EjhBhW31XDMyc
Fi9613D+u7E7Pbqf4Hd2dr7Cjn/IffJqhsWLQigaV578Tw97fzlvUEEuyAbG
+NYa/kOU+Ls1/Fq5kCs5veeJKY5PPEsQm8uBdMcog3kr7Ncf3lUfyoHIhfG6
nns4H3X93XUuC5w2hCSnhWNftqg8+j0NpAV6ryo0Y6s5lOQWREBmyaH55TZs
RmOdtzNhsN/YM6igaz1fu9VbPBREEiVq9g5gu/CoNMg9B469j2XYJrF7/3Dw
V7nDAl8okx0jhaBoSApM/HqAOvYcG5Tfjd0ovuHORCIabrZVJESxHVTGxZmT
0YxrQvKZvdgRacYnd6cgto7N1zUOYtsysJuYpKJzXn2/LGSwW7Z/rB/JQEU/
nswHKWEbHXC4/SoXxaVSmX+aY/9SODx6pxhlXqG3HrfEPjGla85bgor/yTZM
W2Fr6XG/KC5BXTrxASu22Ett47uZAHEw3+bguEsh3C/fA6eWMuRhxStw0hN7
M8dQ9eNKZLXvmmRoCs4/Pqf3R6wOCW4OHbmbim0mmqniVodaxyoSdNOxSTJ5
rqMOnXorwiX4Do93fr9f5Vk94pQcXEjLx96114gy3oBKZUwrSitxfo/pO/hM
Q1yEsdbYNwpB8IfwfDVsQeXa+g9PC9IRZdsP/izp60LVIdy1F4SwKVwVN/m6
USON5NIVoSPcJa480dbqRl1nlTLtRHF8R5dYK7UbTcmKf4uWwGZyOO5S/gUJ
bvt39s8pOoJomz6ZmteLnDsTOTKMsZvMR7aZDSBp3bF0rgQ6QoiJsfMCbRgN
1MaprSbSEfH02obHp4eRv5zW7PdkOsJkWObvGa7v6Ad/2YkPaXj85rEXWXrf
UVRfOHk1m46gsNVOtI98R/TXTs/HAu5PXnLhweafqOlmJLGvH883Lnvr/rVR
ZPv0bOfJ7fRE/J/TNoL2v9GCb/NPgR30hDvwvUqI/I08QwwWlgXpiYE4nSGF
it8oNsGRr0iEnhDaVNH/lXsSNUGsvux+nM+wOOFROomkV/58lZDDjtEXr/Sd
Qkt3Ukd26uDxozKixhPTyNuSeYkuFI9fHvUxH5xDJTtM/41xMRBBkYvXbPHP
lY9rXgz7AxkIgre1/KMwPUHLUxwL2LqBYHenhh+RZyI+C1lW+4dsILJ3Vey0
3ryF8PiglfBt80aCueJbs2n8VsJApNdIP2Aj4f2DI+eCEzex/F5y+wEmRsIq
Stb1iQcf4cIw2hj+iJEgFNgery7sIHh2y5nuoTARXKupRrPZwsQ9O+25zQ+Y
iPzUGYazj3cTArLmtaIPmYhDdRqv3AN3E2Wrt2IUXJkI90tcEuXRu4nNAQFK
zo9x/EjUCc33u4nYjKqwUR8moilC82TFr91E9YjUkdooJiK7e0AVdPYQXNfY
nDyLmYjIU9Yx52VEiY/7d6gklDIRFLcxx7MKooTRzH7BkjIm4tzB9/fOa4gS
aY/PVs9VMRGFXAKcZraixPF4Vx5zKp6fKaW8L1mUMOv79V6hn4lYcPR8Qtkm
RjClLPoaDeD8pJ9bTPeIEW9tmYydB5kIq1OmQzXSYsSfZRGm3B9MBDM1/Haa
hhjhy6+nIzzJRNxnnrxa4CtGSA5eP3BymokYSZy3PPdSjGhLv/tPd5YJ3ze2
xm+pYoSgXHBq0F8mwvvb4xSxz2JEJSXu4dtFPP8d/R1trWKEVe1b9dplnG9w
Yc5rUIxgDSraNbzKRAjx8RwkpsWIHJ3av//+MRHsls7V//6JEf8DvjM1gQ==

          "]]}, Annotation[#, "Charting`Private`Tag$100624#11"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Xo62LS8rE/8HQBAWZQ==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#12"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#13"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$100624#14"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#15"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#16"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#17"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#18"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
xSYTlnoKN1m3TcBr5+srSe8yoXVRpU1FdAKE3I503qtZEDU2iC2WJl3yoSa/
Nhv1V+8JRuuR9RbeWyjncyFyr0H80tMJ8v28sf2lfT708xgOWMZNgHaT3fNG
cj4Cew7J2idNwPiCUENAcz6m8Fj1bgZZv6M1o4IoQNWits3zkgkIzgcOqW4p
hLXLj8zhVrIerv9YmoqQY9267w7fJMq3jqhoR5SiN2rdEd9tkyC8DXzdGkux
pUYWIcKToHPcFr3I8RpeotEaz3aT+dAj852PX0Pr50WHKjny+H3Lb9c8LcOk
YcfLTQaTSHzlaSNW+Baymt1SCTGT0LzlYBgXW4GyAcZh04RJjJpsVh18VwHF
u3ueiyZPIvdTGIvFzwoo593kynlB9pN4EtK3uxLqnJzTZSVkvbnOZtaySpi2
nHrV1jwJyV7Gyr2//0OAcZ4sN+cUEvdcue5oUoVNcy1jrVumYMx4nb7Yvwoh
oSsZcfxTYIs5a7e/oAqRlWf4du6YggPj4wsFlGokivyeP3RwCoTCLBffy2oU
DPCXaWlOodyKi95xYy06He4rBgVOgY4jxll++BP5Xinf+iyE7Mf0xZ1R6DNE
WBcXix5Pgab2j2GTzmfYZDu+psVOIbedX6PrzWfM/rksI5U9BS+OR75eYV/A
biZ3sP3LFOqnDRPGVOpwSuffzl2s08gVrlx7yfEbrqbsZlTkmMapsKY95iHf
EDxh0XduyzQ0Q5Obg3K+oSm049nt7dMw1jnKqvr3G0y/1m6v3z8NnuaLt00s
v8NDJYXXVZM83r2YY59ZA/JkL2z8EDqNRCejV02uTRAZ9499HDENmUy9oY1R
TYh4USZh/nQakll38iyLm+DGL6jGkETmSqyK7nNNUFz69UApdxp0fy9bSHj8
wKdyJ7q3X0lXCMZX+TejTyVkoohlBl7vXjBdedcKbt3q1vT7MzDW5DIOC+vC
SfkUwsJvBoIxi1+LS7vgKnw3TShoBvWyzPIMP7vQMiLnHP2YzO8GGa6V6kaM
bw5bYPIMctX1Ppc0d0OwJELFvmIGAwMbWdeE07BbwLzw8BI5XnPnU5V/PUAv
XWil0ywSkyOL/vX0gc1zfFu92yx4YohdQ4t96OXvy+q8PQvJ2MhMOp5++OhU
18z6zCKX+ordUb0fH2uC6PZHzILtZ0SDa1k/dKl8DjGFZH2VsQNf3C/Y3pbS
cJom7SCitOX6AJ5yW20UdZtDjYHAzHfLIRQLaJ4euTWHgaN7nJfvD6FFWMav
yHMOVsW/apSeD4FnPzOjiu8cJM+UbmXrG0KkSvrilcg5CIbN5X82HcZjt4G/
GQVzKA5MOV9nPoLgNquPe8fmQNTMXk9RGIV3vLXvYZt5+OS5pCi7j+OYgeWQ
ut086v+o7HscPA4GHjMtK8d5ONxVN58gn3s+oYb8Me7zkJyqGKd9GscDHw0q
XcA8Rh+ts7lJPof8bA43f8qcJ+e36mxq1QRCpNeImQ7Pg+ekWLwIuS/ivkZV
BTsswKun5rrRplkIlBAMEU4LiLopKW0qOovY5AHEuC1AMm3rsIviLPldpiTN
awHGkSc0G+xm8VS4JbM8ZAHmCafL9OtnEeGyJXQ8lzxeXK4glrzuoG2RBrpj
C7ASSyhTkFyAh1346FbHRWjO3KAPfrqMvybiPBdMlzDrfWvSvYeeCFgaXNtl
uYy+gtKLnywpROmQyr9NF1eQwl4ZLa+ygfixU6ZXToSO4Cmpevi4k42w2mW2
P/w5HSHVbHS4/CgnUaFrcEtp2xqio+aPcNXHLcQh/cEMzqQ1RMiFlKsQESBs
751sVuCnJ/R5BNgLLwgSDy2Z59eEkx777rbhhzDxZqvJyiAnAxHWbh6g0bST
KFl+wLA7mIFo+RNQWTAiTnzNPz4YtHktwXz12vmAlD3EB0HLqsCwtcSocs77
7TqShM8rnaSe9YzEmyN85mFmBwlD4Q4jgyBGImeN9AqtQYpYKNrPL0FhIoai
j5n/1jhC3Gb48zniDhMhU/hiO/+kLMEtImuyk45CON2dVFthVSBc7XQn19+k
EPHzhhUCfAQhIG1eI3qLQnDE8e+yFCKI8qXrscc8KMSI4Ue6PHGCWB8UpOx+
l0KEmQjQax0hiPjM94//+FGIXVNhBlnaBFE1cPBwTTSFWP98uaflEUFwmrG6
3C+jEFHZHms2MisRJbu3qiW9pRDsbzuvP2dVIozGd297U04hyiKumhFblIj0
uyerJt9TCPMD8p89RJWIo4ke3OZfKMSia/9/3CeUCNPOv0XHuigEW7vEhwpv
JYLyfM7fiEYhKt888/P2VyKybCmX3XspBN2txeYTYUrE9IIwJe8Xhdj0zZez
MUmJ8Oe7qCf0j0IMyZ8RYK1QIvb3XpFQGKMQTZ1i6KtRIhoznFf0JyhEsuPJ
0df1SsQ22dC0kBkKIR/vseJIUyL+o0u4lTVHIfSGc4zODSgRVjVZGjULFKI3
UVtdalSJ2BBSuqNviUKsk1v4yjOrRLzUq5lZWSHHO7W/Z2VFifgfodiwkg==

          "]]}, Annotation[#, "Charting`Private`Tag$100624#19"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#20"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#21"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$100624#22"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#23"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Xo62LS8rE/8HQBAWZQ==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#24"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#25"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#26"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
xSYTlnoKN1m3TcBr5+srSe8yoXVRpU1FdAKE3I503qtZEDU2iC2WJl3yoSa/
Nhv1V+8JRuuR9RbeWyjncyFyr0H80tMJ8v28sf2lfT708xgOWMZNgHaT3fNG
cj4Cew7J2idNwPiCUENAcz6m8Fj1bgZZv6M1o4IoQNWits3zkgkIzgcOqW4p
hLXLj8zhVrIerv9YmoqQY9267w7fJMq3jqhoR5SiN2rdEd9tkyC8DXzdGkux
pUYWIcKToHPcFr3I8RpeotEaz3aT+dAj852PX0Pr50WHKjny+H3Lb9c8LcOk
YcfLTQaTSHzlaSNW+Baymt1SCTGT0LzlYBgXW4GyAcZh04RJjJpsVh18VwHF
u3ueiyZPIvdTGIvFzwoo593kynlB9pN4EtK3uxLqnJzTZSVkvbnOZtaySpi2
nHrV1jwJyV7Gyr2//0OAcZ4sN+cUEvdcue5oUoVNcy1jrVumYMx4nb7Yvwoh
oSsZcfxTYIs5a7e/oAqRlWf4du6YggPj4wsFlGokivyeP3RwCoTCLBffy2oU
DPCXaWlOodyKi95xYy06He4rBgVOgY4jxll++BP5Xinf+iyE7Mf0xZ1R6DNE
WBcXix5Pgab2j2GTzmfYZDu+psVOIbedX6PrzWfM/rksI5U9BS+OR75eYV/A
biZ3sP3LFOqnDRPGVOpwSuffzl2s08gVrlx7yfEbrqbsZlTkmMapsKY95iHf
EDxh0XduyzQ0Q5Obg3K+oSm049nt7dMw1jnKqvr3G0y/1m6v3z8NnuaLt00s
v8NDJYXXVZM83r2YY59ZA/JkL2z8EDqNRCejV02uTRAZ9499HDENmUy9oY1R
TYh4USZh/nQakll38iyLm+DGL6jGkETmSqyK7nNNUFz69UApdxp0fy9bSHj8
wKdyJ7q3X0lXCMZX+TejTyVkoohlBl7vXjBdedcKbt3q1vT7MzDW5DIOC+vC
SfkUwsJvBoIxi1+LS7vgKnw3TShoBvWyzPIMP7vQMiLnHP2YzO8GGa6V6kaM
bw5bYPIMctX1Ppc0d0OwJELFvmIGAwMbWdeE07BbwLzw8BI5XnPnU5V/PUAv
XWil0ywSkyOL/vX0gc1zfFu92yx4YohdQ4t96OXvy+q8PQvJ2MhMOp5++OhU
18z6zCKX+ordUb0fH2uC6PZHzILtZ0SDa1k/dKl8DjGFZH2VsQNf3C/Y3pbS
cJom7SCitOX6AJ5yW20UdZtDjYHAzHfLIRQLaJ4euTWHgaN7nJfvD6FFWMav
yHMOVsW/apSeD4FnPzOjiu8cJM+UbmXrG0KkSvrilcg5CIbN5X82HcZjt4G/
GQVzKA5MOV9nPoLgNquPe8fmQNTMXk9RGIV3vLXvYZt5+OS5pCi7j+OYgeWQ
ut086v+o7HscPA4GHjMtK8d5ONxVN58gn3s+oYb8Me7zkJyqGKd9GscDHw0q
XcA8Rh+ts7lJPof8bA43f8qcJ+e36mxq1QRCpNeImQ7Pg+ekWLwIuS/ivkZV
BTsswKun5rrRplkIlBAMEU4LiLopKW0qOovY5AHEuC1AMm3rsIviLPldpiTN
awHGkSc0G+xm8VS4JbM8ZAHmCafL9OtnEeGyJXQ8lzxeXK4glrzuoG2RBrpj
C7ASSyhTkFyAh1346FbHRWjO3KAPfrqMvybiPBdMlzDrfWvSvYeeCFgaXNtl
uYy+gtKLnywpROmQyr9NF1eQwl4ZLa+ygfixU6ZXToSO4Cmpevi4k42w2mW2
P/w5HSHVbHS4/CgnUaFrcEtp2xqio+aPcNXHLcQh/cEMzqQ1RMiFlKsQESBs
751sVuCnJ/R5BNgLLwgSDy2Z59eEkx777rbhhzDxZqvJyiAnAxHWbh6g0bST
KFl+wLA7mIFo+RNQWTAiTnzNPz4YtHktwXz12vmAlD3EB0HLqsCwtcSocs77
7TqShM8rnaSe9YzEmyN85mFmBwlD4Q4jgyBGImeN9AqtQYpYKNrPL0FhIoai
j5n/1jhC3Gb48zniDhMhU/hiO/+kLMEtImuyk45CON2dVFthVSBc7XQn19+k
EPHzhhUCfAQhIG1eI3qLQnDE8e+yFCKI8qXrscc8KMSI4Ue6PHGCWB8UpOx+
l0KEmQjQax0hiPjM94//+FGIXVNhBlnaBFE1cPBwTTSFWP98uaflEUFwmrG6
3C+jEFHZHms2MisRJbu3qiW9pRDsbzuvP2dVIozGd297U04hyiKumhFblIj0
uyerJt9TCPMD8p89RJWIo4ke3OZfKMSia/9/3CeUCNPOv0XHuigEW7vEhwpv
JYLyfM7fiEYhKt888/P2VyKybCmX3XspBN2txeYTYUrE9IIwJe8Xhdj0zZez
MUmJ8Oe7qCf0j0IMyZ8RYK1QIvb3XpFQGKMQTZ1i6KtRIhoznFf0JyhEsuPJ
0df1SsQ22dC0kBkKIR/vseJIUyL+o0u4lTVHIfSGc4zODSgRVjVZGjULFKI3
UVtdalSJ2BBSuqNviUKsk1v4yjOrRLzUq5lZWSHHO7W/Z2VFifgfodiwkg==

          "]]}, Annotation[#, "Charting`Private`Tag$100624#27"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#28"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#29"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#30"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#31"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#32"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#33"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
07a17W0CxvKf08D2ti72P0VTWvs=
          "]]}, Annotation[#, "Charting`Private`Tag$100624#34"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#35"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#36"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#37"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwd13c81e8XAHChaCE7hJCVSpJVnKtFSqiMRFGJMvNFRkJWyQ7ZeyabCPnY
7s3em+teIZXtUpTfc3//8Hq/znnOc55xP597jz6wvWlGS0NDY4f+UP9vXrNJ
0La1U6nY/uCmbRta4/dITLxT9AZkDxU2xXPbYO0L00+DRO9BlVu71ol9L7Gl
kouBVqI28Hmvhf+XX0HYK85VPiPRlyA7uKWjWpaAtbZofLslGgxbEzYgcTkP
s012ImiJJoIkeS+LoEU1plBKFn3FlQSpO/QKV5S/YDSPxC8Y0idDpuHsbOSh
GozwPDIpcD0ZPo6NPS4pxzDDJFvD5cFUMK4g4Tdf1GEvFoS7KuMzgWs6e9E8
txGrCwys0hTNh88dN64ZV37FauaH2/bn5MPyQsbbWoFWrFpdbIJwvADYw+3J
H31asbu0pjRp3IWwMNncdlSzDdOt2RIS4C+CtZjfkt5D7ZiG3GkLLokSWKxp
9/9o1YWdEY1fYYByeMxlcMPtQi8m039h67FnORg2Px7ZtO7FpH2+0zXXlUMv
u1iJSkwvdpIkx+FzqQJ6ho7VCS/2YuKJ3fI0Gp8h7nxIgF50H8bHyeC+ebsK
wiyVY5yJ/djuPfYM359iUEDy83RTH8Lmrnowr2ZhkL9xKLf96RD2NSiQ6+80
BjaLK/YrgUNYS0Dvu9enaqF1yFGhtGsIe8u6kBafUwuWbekSvHrDGLuQcGNj
Qh1E/vA7+NZgBBNVDaLn8GsAnFzFkcjzYxgX+R1jbHoDHNMn/zW/M4Yx+sYe
EGhogDdqc/dZnMaweXwWuwRNI/A8b6An5Y9hBdr1IsqujbB62kfrLf84pmCy
ccnMpgmc6Jha9lLGsasepr5lei2gyBgjfttvEpMJqbuS4tAC5yhewYEJkxhf
0lHGoPAWCBA73J1YOokt1UwFPOpogYnlLdAhTWJR/0xD2a7g4UZ37J7NI0Rs
2v1B3LOzBDjuXtvO5kDEOoLqjYxvEeDBhj7e+yURq0gQ4r/6jABqnSH6U6+J
2NsvpGTBPAIwZQgZmyUQMZm/DzI7Rb7CpWGhY+FNRMzzxcOiE+ytcLTCKc2f
dQp7Gthgf1imFWKUWD/3805ht+OFZXdrt8LojesMrMemMLFq8qext62Q/fya
k678FNax9bD6LV0bXLKurWS8O4XxuT1q+b7SBmLttyokkqawchez8YzuDtj1
SHY6joeEZapYDvKsdEDS1h3J+0IkLIruWXcIayfgWCp3mCRJmFPQiyaXW53w
pCIpQFaRhMmlvMvT7O+EXOs3XtF6JOzuNLHG1aoLrD/k/+oIImE9zeRzZS+6
gFOuZp9pBAnTyJmpWAzsgg/Mdh7EWBKmZPOz+FFeF1z1NEvJyiJhPJsbmTcW
uuDLrTAhg1oSNrKfOUTIrhsKY3Rmry+QsJsLhw4Ye3aD2/7Nq5WrJOxrF/ub
96Hd4N3qRuD4TcIqI3m8DxR1w0j/H633dGQsVkD0OWW5G1ZSL3Q1cZExVlqJ
NWnaHsjS0rXN4CNjAdPHn1my9kDAdlHgf0fJmGvOaUuiTA/oGTXYj0qSMcMz
yve//tcDrYHzKqPnyVgPB26M3qcHrNoZhKVVyZjG5oU7ENEDdIEsM/9dJmNK
X9RvlZb2gN/CpgJek4zxqN1WS1zvAUFL2gcZxmRs2NDylP3zXrBQdzp73hXN
T1Kzeu/XC24q1Sya7mj8U5Gc6she6NRXydTyJGPxLuNCDKW9wLllLirpR8ZM
orU445d64ZfOlP/ZMDJ2SFDqVt1OLxwJzFHtf0fG6rMYQ2eY+sBMX4fWPIqM
iZTX7T19og/eRjysMYkjY7P9Z/42PemD0zYMUvnpZCzamEXph3MfPOjREZvM
JGPq3346sbzuAwsmX0faHDL2YS1jyTCzD778eiEtmEfG7r54dcKzrA8eb4kW
8hSQsQP0959mNPZBfJlPNkMRGbNh455eJPXBR9/9Ep9LyZhA3Jogx0of7NTu
aXT/RMa6hLqNlXb1Q8fqnb+yFWRMRiZg0EegH/gPhNu5VZGxde3tr4eN+qG3
0u/+kzoyljk0xACW/ZCrGrraUE/G9EzKLj1y7YfQima7Q41krMLWpiY/uh8k
Tm1c820mY082NLZ6s/ohz/dNdW4L2n8PMYXfn/ph1MXlXBOejL0IJhZd7Efz
PX39pvsrGTvB+WXBYrofBJylLBtbydhEQszx4NV+SFVT8PzQRsZCjjlZlNAO
ALfRXLd3OxnD5d3MGDo0ALe6nJ5od5CxZdlTpL+CA/BGj1ebpZOMpVbvFxCW
HoDbCvtDGpDp2hqjrW8MAKNklBJ9NxkrvZXSH248AOz1IZ/DkB+NurNWWA0A
XXNYGWsPGeN4aKg17jYA9x2a5P2Rm+flAmnfDgBvms7VReTn9mwEsdgB8McM
VzV6yZj4n8XdmjkDYNRBC7HIw15tF+wrBqDE8snZceSAvTke71sG4GBr7iRb
Hxk7F+ZbXT0wAOrl01dUkH9yP/g99W0ACsKlHIyQE5JV5BjWB2BGL8bOBvmG
OO9/UvSD8DdC5bID8k7BRoEO2yA8dDyxZY1cKN/300loEH6VO8TdRTbBCiXi
Tw9CV4ngKWXkQ2pBj+twg5Crfw5jRb6UUw3HdQaBRSD/3CDqz3n/T+5I00Hw
nzxcHIT80Zp35d+zQbh2jHJCDpnYqdFq8WoQOCTLK7vQ+tllXNN7wgeBp7/9
oTGyekSO+/m0QWCsypIdQ/v5gjKkl1kyCEz8BQqayIUGjNIsjYPQ8UvDrbCL
jE1Xyu917RsE65YJhj3I3EfMSeTpQQhc//pdE53XdY+oKs31QbhoZyX1Gp2v
51RTRPnuIRAf5xstRedfenHd+ijnEFwPkdnVh+7HXIaI2lvRIVD2p/nwDd0f
7afev++pDYFoPk0RkUDGfNqKe/D6Q5Cqij/2Fd2/ipOkXBmLIVgl22tkovsp
uIq7t+fNEDiGP++SayJjt3Xt5O1ihoDB9rr6jwYy9ro8iWUkZwhkt37Hh6P7
v+T2rz7v6xA8ky/cW4mhz/fEiXiu0SFoED6soFRDxgxwxo5eP4bgtAKvXV41
GaulrxbTPTAMYs1+EtafyVhokEvgtuYwaJJ9ft8sJmONi9lmj+8NQ1uN/ker
QjK2qTOk0mUzDBFKGXUu+eg8OeWX00KGQaNgCmw+kDHppDXda93DcKrZC6tL
Qfd3l8ipsqlhCOYnVT5PQs+Th7cYBVaGQWeBYHc0gYzRiBdXrrCOQB1syGtH
o89/oa1A7O0RsC3wMuMLJmP0bEmbdGYjUL134fGzt2RMwbGj29pxBBwO8bhW
viZjyYonfFSjRuC2CNMuCW8yZlc/Pzc3OAIgIV/r/JyMsfSZFcvfHYUCZynb
n+j5ivulOn/bchROPG4KfG+I8vfwC9m7jUJX3oEueX0y1q0wEPYxbhROCs4s
6muTsfCEK8+Ojo2C35uBPK4L6PNnLia933gMmLz5phKEydgVTzoLcesxsBEu
3pcsQMacYiaTLruPwUXzkN/vecnYQOt7Zs+EMTAVibvxhA2tX5pxcW18DAZy
Ur+H06Lnz5+5vIl74yA2+cFp3yR6/7E1fduyGYeW7Nxg6xES5iqVcuSwxzis
KjxnbOknYaP37gTdShoHTxthdeM2EhbfQLDCT44DJZl9D/dnEsYf9OF4sckE
zOw1nu4IJWHCglY5vg8mQfVaON4HvY8DJ46mBD2bhLzGoiIJWRJGiR+MjvSc
hHfRcpdaTpIw/OGLrzMSJ0FhJ9b7pzAJs2LjMW8amYSSCicV4kH0/qZ7FP5K
ggh9b5hk/iNOYRmUQ9r1KURY9i6ndfOcwhTGrVtVw6cgkLn/5Ic8IpYvYc9h
ETsFLydvlPNlEjERJ6f7walT0OOSWPc6kYixMHusjhRPwaMzih6aIUTsOy6U
16EX3aXBf5EBdkQsNr3YMpOdBFz/VKdHThOxbcuN/fvfk6DD0X/0qMkkVvfH
83pfHBmqewIH7ymOYxYYHl/z6hso5rkdrhgbwmIeZvFwmMwCxjBr03ijDzth
MEX5Z/YdHncHQKBHBzaxqtWBu/oDpJkc+SYkmrCVycPSnLq/QFpC9nbC+ics
NNfVXF9/EWo9atlGvSIxUWZGTee4JRA0aHl/IzcVPi55Zb5OQu48ad4ulAYy
PVs70WlLgJsW2UsXmwYQuVj8OXcJiC+NeMP908GAd5B7qwrle/mRlO5nou+N
mdPuY8h6W4vhNB9gAS698D6yDLUx6+HCvoXwyc4zNzhpGbqO5t8f4y6HgKql
0jtpy2AnFV32Vq0c7u8xrRHJWgZp+WplLqdyYIxX7a7MX4YlqajS+h70Pb6F
dmPmyzJoe+xfehJQAf+O+F6AsWUwSXF2WVz5DJdb3wwvcq+AdrJA3pvsauDh
/EOq5FuBJePLljk91bBg8vSnr+AKeCbV76RtV0MURWOHV5yaf9dXQvsLzB09
cExdfgVMdqz/OKx/gUDnYLtk3RUIFV/3262IQd+xdww64SuAO13hPtddC1fF
uBWso5CLfb2lZmqhRjzB4k3sCgxxSh02/FMLOcezCHWpK1DohZ96JlQHL09X
vZUpWQHnshDLd8/qQFyZzMzetwKbtFVZsfvr4cXtM9yDHKvQNT5fkniyAZZ1
K9RXD69Crcji2AFcAzzWV3Zh5l+FJcp/Rx7pNICOodqImugq4P5zGG7/rwFE
Te7GV8itgrSF/WJQeQN0WXoLxuqjeiW3tGuUGkHEu1fcOGYVBIu83nadagKD
YrrTjxNQvuySzWGVJgicOqNom4LqzbH9vXa9CdYh4qpXDso3mWK3sWiC5u3b
TzM+rwLLHh6OzKQmeOI0kPtrGOVfoERM722GxIw9pZRxVG/RsaSFsxl6+uSq
d6bQ/P4zthHCzaB05n3boXkUt+Wrmz/fDAeW9H+d/bMKyZjglwCbZsh/Mnzy
Jc8ahDJ77YlubwZS9F55f/410NbYvcw+3AxceEUIFVqDrh1hF7fpZvAUjdVK
lVwDnGrHw91bzaBDNrRrVloDmu3RwgNiLbBmNFbEdHcNkv1767+7ot892pOy
SXFrQEy05/l2CA/Vc7t/PUhaA+nBsWpaHjyoeElliKatwVJBJ91BITxcKnbh
yP+wBizDGb6zp9HvHnZ2SvVnFLfw8i/VxsODIfXykUHUz+1LnIUBeJi2s7VN
HEX1F0d7osPwYL43SuzB5BoURsfq2ETjwUqJ/P77zBp4nlJJnMzAg1O8u/Pm
OqpvtLtkFMPDW5NiRU72dUhmKiCeW8ID0++h5WGudZA+QxlcXsdDaNhOTgIv
8rhVRcQWHqLqr/McE14H7XtrkLKHAMkis3/OyKyD57u2in5eAgh9OViycXYd
Cl3z1VcFCZChK2tZpbgOdjOtQ3+PEeCDn9foBVWUL7mye+QUAUrneKt1tFH9
nDc/8i8QQM7rggPH7XXAcaT1yaoR4PPhJ1LD+mg+/3uDWdcIUKPxKd7k/jrU
Jh6V171NAPxHbXdbm3VgSS/G2h8RQOPy87Nn7FH9pw791RYEaB9P+EVxRFaK
EYyxIkAP0w/jl+7rsGSYZHbYgQDjdr4qQYGonm0pq+IrAtDU1h5JDUVxh/0h
w74EEGHe3v4UsQ40/arcj94Q4GmefRUxHs2nbm4mH0qAze/3FWTz0PgfYq6D
8QTgVYzjulq0DiZZRT/xSQRQeT1AMS5D+6GcGpmeSgBfUc0y/y9ofVP2yTzZ
BGB9qCQz2o78o1mWthitv9jx0FI36vfq0fXLpQS4s6toiX5gHUJDPnA7fEL7
nSRWcHICzU+fkRxSSYCGhQfBF0lof7WnWdyrCTCjnGhtMIPyaxe2btcQ4MQY
u9SrBdS/aahhYx0BtI9r73+/gvqpMx6520AAB9e387kUVC/zwa/xRgK8JzQT
av+g9eSOxGg0E6CSmzan/x+qb880k9JCgAlz5dfztBTAxd8aIuMJsKvc2Xxn
DwW62g48Z/lKAHXdxWMSzBSQJmb2SrQRwDJdcrcKGwUKOYMTOdsJELxqNn2T
iwLEP+unFpCLL6Q0mPOiesqvggs7CNAfNpb6QoACnsHkWuNOtL9Erldhwqhe
2mD7OjKf9C3TTDEKJEtLVDt3EQA8gnFVxylgt1gQPoP8oIMg0HWKAksx2gbQ
TQC/I7t3ps9QgObXNps3co4VbuK3PKqfVdJWhNxW5faF6TwFTAI837QiL+0r
jxfGofidFzpdyGyGK24Kl9D6htuO1yLL5Zy4q6mO1tObLhCHbLhpofTgOqp/
6JKsKbK7Wvrh59oobrxhx4qcHDW5+fY26uc193g+6q/xG89QsgEFBB8yecoh
z8rqlZcZofVh101z0Pr2+YRFfTVBtr/9mgH5ZG+b4+QjtF+3Sra10f7oCDHq
rllQoFaZvtkX7Z/Ds4uye63R+vcv/shA+x1d+5KN/xnqP07cqaiVAFXMlSsy
jii/3d4qG53PxL31bjUX1I9P/EAAgQC0+dJFRu5ofRle1QboPI/9tQx95oXM
tV+UFZ23+vUsWz9ftL7Gk7zlTQSwiiPdiHtDAe3IxTQ1dF+KFe8cbApD/ZlE
hh5H90tkJSA+IhKNv3qbLR4jQOSH6uOPYtB86irTf74QwJlXUIMuBfW36vXW
G93f+V6d4Z506v5b2uZVEOBuoLdFajbqlym5ugndd5W/M36qhSju4JRfhz4f
hWXcnIdK0Xi9DZOMQgIctdHIIJaj+yPuFf08nwD0k3kNHhjKNxgpns0hQGut
A01NB+oP27i7gT6P510yQ4J6UP2qzr9aCQTIPz3EbzyALMlw730sAcJTzylv
j6P1umw5rUQQwMCH1lXpF6r3d21k5DUBptVCVz/t34DkPIf9btYE0KOpf+XH
vAGCKZ2HG54QoKVi9ZAe2wbQsKaY/DFDzzsJfel1ng2olfIvl7tHQOfEb31G
cgNMeLMtZzUJ8Lcjd6ZAHVn/B5e0JAFs/McdPa5vAG7R+KUtel4SgXm3ljZy
FS4lET1PGwvthRf0N4BoWKDSxkmAgHBFEylzNP+5pq9mtATg1GsZzvZF/VnM
jsUM4OHK+XSc2Rs0/90IeUoXHp4LeWUdDUJxDbzzxVY8DC0oOcZGoPovHboL
0fsgzj+fJTAN+WpO12AWHgQ/R6rZ1qH16PZ+veeIB0m+R2Vn/6J62wyFobvx
YEiryrdCswmCexl1ef+1wNu5I9759JtgomPPEE1pgZ+lg9piB1C8s6nKfLYF
CjSv/eTmRTaReG6KbwFZDxnhbYVNSH5B3G72bwEg0YTVO2xCLdfDi6nbzcDi
scLf5YzyNW+4VK2g9zPv9MfxFyjfV6Ctaa4ZfHRb8Js+m0DjbEWT39cMX/FB
NKci0Xh23MmO3GbQK+CxiytDpm/jM9RvBqsXsloOFJT/3bJ9T3oTxHBaHBR1
/g3JSyPnD3E1QgWf9rUFt98g+PKGCmFfIwwJKbz55PEbnVdzzvN/DcB9inG3
mv9vwAV6Usq/NUCUWva2edRvoElxWGwpaYAI57kfOaW/wZNgVnf6RgMEj1h8
PbGM4rqPfoW9qIdXiU/8zz79A0RxGoG2+lpI6IhuDrbbAhqm8+MHPT+Du827
pSP220BTZM5y3bkINOpPj084Il+tntk2LAJuzi5Ckss2eE6cvfRJuQhKvxxI
O+qFnBV7/iJdEcwf8NM9ForyD2phX4MLwSDXuVIqH9nxlO5TrQKQnTP2OTeP
rFn7Sb0xF36YinPfefAXaAxsY/j3ZICh1ehxy8fIF3+qcnSkA94pGNyfIrfp
7VeKSoeMt2uPU+yR+TjGmcXS4X5Zbdn3V8hfjQJ/a6RBL+OdW65pyHtkL52M
T4GqgjfBcdPI4ceXpzriQbLyfGreHDLLpq6UVTxENy6WYT+Rs3+8Wt4bD47D
uuPkNeR/dEeXrsTBKTohKand/1D9FMpwcwyk6VUSqo8hc+YnKk9Gwdu/8/QT
j5Hz9SquuISB+rMI/IenyNqiFconwoD+m3LgcxtkwabMqqlQeNkWynbICbkt
9YPW9VCwi5MTuuSL3FX8YVIrGPQUX8GHNGQjcUrc6htgyztO9zwLWUFeXsb6
DXQJ9jdfzEWmuWmzPPsarjKK3xgvRiaKxi4T/eH8YLsRSz1y4cw+iSlfEHI8
7OpERJYNf7zB+wom5+qVL04jeybS/8z2gngjq10sc8i1nprH5L2A4xL2OmcR
mcWQZKXvCYxsZu/H/lHz5WJotdyhyY/pbg7tDtCIR5Gi3V/Aqz/l/E57kLmL
cvvy3WBral8mMxOygv53jcOusFBYWHrhCPJrt8BIpueQK2LozHwUOVv1ctVN
J7CIpjs/JoKsvouSGuMIUx56DY5SyCz14c2nHKDvxnZ39jlkGrrLDe7PoPKn
2iKTIXLh7JCj2hOQC44PwBsjC448mpe2gOJTy8demSJL35nkETSHHPtYo3UL
5K5m6VZmM4je/EkYfU4dL/NZ8qwpsMeqmkW6IdtFHcFpmkDouSgaLQ9kT++Y
sIF74P8S5Ov9kHFD+CT7u+BEH56eHUl1ctvSOV1YyZiBBzHIJh3bA223wEbt
3ChvAnJtVxzb05tgFjB9KCSdWu9xd+g7LSAeV8xTz6aO5/L7zK0JRu1B6rQf
qfnaX3c+acBtFnkPxxJq3JdTD65AV9FbnlPlVKdjiRKX4PotYtlcJbVehJLT
iQuAX5PVSa2hjnda2NTAwaWoNz/v1lP3ay7Kj14ZauUn/DmaqXaMJGcqwvlh
GeFOAnX8rnFVdzk4wzd250I3Nb6rZKZZGvK/SK9v9VHNcRUcpUDyvm9o2RDV
7hruzWKQSTNy3HaM6lCxP17CIJR6skWcSLWrt462ACRe9H5AIlMtqrxpzw08
3wb/xs1S/bSzw4oVovykYnR/UO2c+9x9H7CKe8kyL1Kdbn69dxcEE/o78StU
S+v1fV5X2WcpafmKQrWgs4fdjIrfAY895/9Q7YmfjexS2ZXfm7L+l2oaddP0
ZJUasYjEQRoaHDL+YHmUygtnFatS2v/bTOVmu4oSYU4xjJ5qojvrwrTK5uF3
DDZ7qLYTbmpcU/n0VLlfg5Hqpfeh13aBQ9Vsqtg+qguPkDb3gsyBcDv6A1Qb
hHDIscKS0XmVqYNUJ7Ml3+KG/LyZ/TXMVP+U2NIVAKt/ocOxh6i26GNMEgZJ
rXNZz9mo9tQ33yMOs0nfHG5zUF3aHTwlBelLIRdOc1GtFuTKfRoeqCqxMB2m
msT5+s8ZEAyfHp/nodqH4ziXPEyQgnNb+Kg+mptoowTxZxRd0vmpLt7Pv0sF
DH3IV7wE/9+fiv0sDgaOKZCURJA9R2hjmS7DdLfVRZwo1f3fA73UYMU9Jf2y
ODX/StEalwYwD+wz15aiOlG7qkAL+F8BXvckMi4XSgx0QOqkg8RdaarZE0N+
3AR1v/EfZrLItXnXctT0QE+GVdNSjhrX3TxwyAAeTVzJt1OgxldEG3/eAS+5
Qju389R4917XUWOonHm1HnoJmah+lOX6Q8CHl+tFXaHGe7j43R7BgMrP8jh1
ar8WgmklZrAapeuaeZ0aL7ymqGoBUmriO1W3qfGU9cxOa1BaNTKp06P2H63z
8potXE0Kq2s2QO6ysQqysIPHG3+8u42QTUoNvm0/g6SsdsbZR8jJTDEHTB0h
/xbt05+PkQuPfYm64gTVO3KtyxbU+kmzkqefw5B+ctC2FbJg1zFfDhdgZfyP
ldWR2v8Nl0BedxAszfqP6znyUtHGssRLOGky1sfnQl3/NZ03yh5wreLyezF3
ZBbhTulKT/Cx4OZT9qXmz79PZfGGcHZN9wv+1PmwPeSP3pBc6zWh9gbZItOj
65oPfOH+kXwziJpf97E6zBco+C/HLCKp+5HwQ1DlNVhIPDz1LgM59Iz6Ld5g
4N/3bs4xC3mTuZh9IBh65+tTDHKQs0t6NN+FgMpHIXb+PGq9ptb3AaHAdoq0
mV2KbJC57sgbDjWypvU1Dcg/U5qYXSPBgSPMLaWJul6NBx9/RIIEpVbWp4W6
PqmqyHtREFEumHW1FfnSqemb6u/hiRLxbV8Ptb/+9YjjMcCOu687P4XsUH5M
XCYBvgqGMLWTqf0YLLF8TgCPXVhLwTfqeZHS9FUTYb6eX8nxO3W/lXnp9JIA
uzzBT7OMLCR/Z7MlGZ5eM57joNmF+nt8N0g4Der07rqp8iMPCKSdMMuG5nAO
/HVB5O1jvadbsqGto5PdQAjZytaEWzIHhq5cyrcRRdbotQ5ZyYEluRNTcSeR
RfyMFINzgZ9r5wpFBVm7yPXIcj6I3Pr8bpcqsuGZqATTApAM+Y944CJ1fHf4
/t4COMsw5yKsRh1fu9/QqBCub3R91NZC/uM+nKFWBK6Dqay595EFnnrynS0B
Tzbj+59MkV/ymG84lICfFtfHuofInx15tMpKIKzl7eUhc+Q4vKmTfClklzs4
77ZDHhzvyVctg4H3VybueyInpEXw2JTDGYP5HPYU6nwe6e4S1UDEJ934m4rM
7jqh71ANgYq6q9/Skc0fm+Rg1TDDU3u+PBvZdsO1RP8LxI5Hdt4pRL77qsUq
qAZoH6quJ2K7cJ7D35bH/GuhyzoaJzGBfP9V2W+FBnCf0Px2iIh8zFRd4nED
et7RBfyZQjavDIp51wA+0ja9rd9QvVC1vvOLDSC/evGxzS/kJ3Pd4TmNkOi8
+LZkG1m3oyJZEn1f9r4yqMxLi/PsFws0v49+jwd0z/IdocXRnPwtv/SOAL7h
Rptb/Mjduzmq0e/HxBT7w5VCKD/Mjpb/zFfowhLvykkip//cy7y/Fc5sUyZP
KiIPFk3jW9rgj0PWnIA+cvWq0qhSF/i9kPn9zwCZwpPucqcL2Hy+7J0wRPUz
hU6cd+4CqXe9kvH3aHG4icWlE5+64F7RjhX3YxQP1vBoPtMNdb/0l1kc0Xjs
XuP42R54/Zjxz653yOGm1+X0+sCMcCRxbyQtrtZPpc3jRR9ckDpz4dB7VI9L
ZoKS2gdby8YBgnEons8jYrPUBzbuJTyQhuLvfI/7BPWDbsS9cy9KUPzjpRGz
rgEQqi99QelFpnwKq3EZhh2Rr4L/+tF8bd7bCxnDMOY/2bh7CHnV6aF2zzBE
ae47yDGG6n2ujsg8PgJ7h+8nnJlG/QumBqcRR2BpcV+N3RrKvx19cfPWGHw5
Yrozz06Ho7kfyN9tMgm4smdbnZx0OE+znl0bIZPQeP3VRik38ty5RA1sEtrc
0hZf8qF8x4QCZWYijA1/m2QVQaY/2vzKlgjbkU9rlc7Q4XADb10tZKfgHJOD
V4AOGv+f+r61ThJ8/udHJxmM8jPI22naMxC8fPSdfCjKnyyTaLFD37Wmq4Uu
h9Phau8cy2cMm4F9X1dUTaJQfs361kz3DBhF3vOMSkT2+nqPVXcW/h2X+0tb
gFyQNnvadA4u3flGGe1Ellqc3RU2Dx0lF+eDDtHjcHq+SfdvLsIr5dJvYWz0
OJqgf8LDLosg1yIyFcmB4q0MNf+lLELiyO6hhMPIe8vsDiwvgvUufFPeUXqc
oNzVuhn1JTigdT2l/TQ9rjY46Xf7zyXQmL9tcPAmPc7zJ12dpeoKNAk+bg4M
R+5cSU8SWAfBye7DNhFovgfdbUfk1sE1QdlaKwqNH29h/Xh9HaR5ONhZY9F8
X+6x/XZZh3i2RtP3KfQ44l+RZN3+dXDYI/Q3pZAelxxtX8IfQgGRn+NnyjtQ
flXgHQHmTfAp102Z2rcbZ3KzAG5d2AIjobF7d4N24wRTLIXmInfhtj6d4j3O
sAe3tKKmKbOwG/eC7ntb5EtkGTXuXWP7cJwiiqbHaBhwNP80NWW9WXDPbfTW
9rkw4HA2FrVWHWw4PrlHeFE35AVu2cMTbLjav8/iL7gz4KR3+Rh1/GLD7QsK
uuTqxYCz22s2ePMgOy4xtzHi+xsGXGHRU3zjdXZc85zMWXwsiot/Pa3Vzo5j
f8js5FvNgPNUMDrA1s+B+yx5RCOlBuWT1SZGv3Hg7q1I8n+pZcAJBuU05lE4
cNleV5rXGlF/ut9GrLg5ceeS3TkftaPxNBQvAyNO3IPxH58uTDDgiAZVpnPf
OHEMGb8D7hEZcF2diTMXNzhxH60Y7ruSUP6Cf2E2IxeOsiXEUDzDgKu9nCQQ
fJwLF8BjqH90Ec1/4Ukt/hkX7hTJ/LjyMspP+ltv482F68tx3DFYZcAtre8X
5o/kwvErhmWFbqD+/IYZYiq4cA00SW4ff6P9eFQV/ugrF84C/1ELv4X69THy
Vxzjwh0IrRSe/ovG3++c41rgwhXp4zd2dtD830Urd3a4cP8D2q4jYg==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#38"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#39"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#40"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#41"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Xo62LS8rE/8HQBAWZQ==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#42"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#43"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#44"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#45"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#46"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#47"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#48"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV13c8VW8cB3ARV6nIyqqQUBoqCeFzlBKVUVaR7JCQrJRISmZGJFtkZFxZ
IRV+ZbQoZHOJkpC9x+/469736/M93+ec5zzPOfcKmdqfs6Cno6P7vYaObvVz
9rRdnKa9g+L5wTMP03pG5R+Yi4nXiapD9khOcphBluKXkT6bIFEjLBqzvCs5
+1kxk6s9sTXWEjZC3FcVaroVR/OPB9qK2qFyKlzh08EhRb5dP16vNDtiu/OD
hqNLU4oKbv4HamNd4Lxz9wxnzIqicbViWpiJO2LbFWLk3BjhzT0hYCh6B7oZ
ttMOSyz4nne+NmzKC8pim6xnszfDvG2vz0yzN3bnqDKilgtTa5hhWOoDwc15
fiMafHiwq3euPPYBDuoV3bJW2o4tWmUFOz0fQjP/sK6fujDS3SLt/U384UZ/
Mlb0wE58qlbrPy8ajMOSAuLe4RLIcWXXNFwbAjPv1yop7PvhGuCZHTwVgpgK
E/NM0wNgzr9gNdEcht8mVkL8podRX1X1YWdtOFjddwj3+R7B07ZDO/RLH2Nr
G4NhW5UsdtNv6iqLjYTGw+zzBY8UMc516+i/oCeIfuAR+TyQwOtdA1FCnlGo
3HH0dWmnEs5oVZ5/YBKNjiP3cp1TlGGf6FKrIRqP0X6/SZ5KNcgU/BT13pIA
tZtzfgJXzoDOXPzYxbWJUAm52vhtizpqXSMSAqcSMep7dCvDV01cTLC/ONb8
DFb2tXHvI7WhuEvUz18zGRnuqeFMT3QgnN/xakdtMiR42UN/xOrib5Uql25p
Ct6/HA1bKNbH7ZEd9aWxqcDpzep6By/B2K1t+TxXGmj6IfNMRkZQpg/dOxyU
BpGaY+sXgi9jI/ey/3bPdIxHOA2foDNBvELLCR+TF6ji/7iSHmKGisDA12dF
c3AyVPtXlbg13g62fmbJyAGX4P7wV9PWKDsl1lUrQUWnt1fp1WobGNCb0CXz
5EJ0fNMK5botdN4uCG/f9hLVr23e3+izh5r0Aastu/JB3fltY0LyDRwSjR2n
4BWyLSVE5P/ewsGmYwuWXq/gJ1UYzHvzNiR9/jBUVbxCtLvR8BpmD+zrleby
US7Gh3JN/j/idyAe/+0InVoJ9sq4aJkf9YIAN8VjVvs1KlKF7p1M9AYjkyPl
j807NK98Wjn2xhcDqp6sE2nvoHr2b23lhof4GBS4ZanvHQJcJ5kfGz5EtX9D
+MP95XikkroouvQQAewjybEZ5QhWc/aYUPIHp/CO9+/jKuBtb8+o0RoIUaWg
tVwP/sOviqN9MgKhUPU0uV+oW43Rs3Zcbysj8eqmRefzb18RS4n8PcafhFTF
q81841+xMdbXw18qCZEM1789Yq9DUdiIp8DZJLgE3f5w83wduHz/W5C4kwTp
pPDss011GHooLT3RnQSDPtpbd9t6jMZfCJtOeoY2FtZHwg7fsH3M4pD7thS0
Xry639G1AQyDQ2KW/1Lh36ti++RBA1Rncv45MaRBzkYkoyyiAcp7HbY6bUlD
7M1OYUpBA4YKbfccRxqMozS4Y0cboFcnkikYnIbfTYeWPlg3IrmrhHgrno4p
zcWPvIZNsLZZNizQzEBqSwsFV5twdpjJOcI0A7rGhcrm7k2gqducMnPKQLG9
3ducqCa8PMRQ9P5JBm4H014eb2qClLp0VUxnBhg+v4+6pv4DT3Z3MPlYvMBm
lSDLCqIZSqVy5x5ZZEI5owwSWs2Ii2c9sNUlE24sQzwRJs14fF+6IeRBJmh1
ap+svJuxvC5+TDwtE7n6zJJs75vx1dsunPd3JjRt7s0ZqbTgDkV3uc8kCz6f
877X6LUgbPiBeaVDFor39WYetGqBaX3Or3ueWRCcIIyY/Fqw54xWR15sFkZv
LVdmf2yBq4T3rzdNWQgJuhm4eLYVizuYx28cy8b7f+kWlkatuF4QNuurkY1Z
rRbFertW/PLqSb9jmA1j7iNjyY9awZlw7yWHSzYkEyZ1Tn9rha/bXd62tGzU
59pvj9ZuQxH9hvQqxhys5UiYZbBog7mMY+kCWw5knL9+u+bcBpd9YbLsAjlI
lN3roxRJ5oprpH8eyIFD5eDAQHMbzo+oHuUwzAFbo0XeEYN26JSY/Bf7IgfE
sNKg9tV2hDc6pxbmk/VM24Qdb7VDUYidI7csB99kfoRmxbTDY6emlurXHITF
nbwu1NGO4woZv1lGc1BZJJyhONQO5ie2MftnczBRt0wzWGzH7S8RdlJ0VGjT
v9KMFOiAxUSeUg8rFVxXxCRZLnVgOI7rTNVeKk56MViJX+vAhrTMF2NSVLg8
7U444dGB3/WdH5eOUvHj0xNWr7gOENPtIsWqVERJMv+b7OzAIs8N/gIzKmpU
+0TZRzrQwfzepM+ailnTcqP9yx24PA2eKXsqLkS4fbXe1oltD17kvrpFBd/8
QHaXUSfGBAsiy0OpUOP40L9g14n4KVvziUgq3PckbeX17ESGgswlplgq2o0u
BJ1P6MRGSZGXn59TscHt8AcHaidctDWWPF9QIR+6eSnoXSdsaEm6HFQqYv+r
ta3p7oT2pTHOtldUfO54ntL/rxO32u/ZbiyjYnHqbgc9XRf82q2KBMupuCQu
d0ZBsAtripyYf1dTsS3ohUSecRdiX1gzjDdRoZ76wKzOoQt3L21QE2ml4s47
05ghry68lI3Wle6gonuMj0UsqQvjm0Zy5nqoYGOZOab8sgv3vw6OveijghBp
cDep6IKxMvHn6G8qEnUDBmN6uiDG592/+JeKevsrwiVjXSg8L/lzzwgVa/yO
X/yxphvF06UP5EepOPhse9jE5m6ssVz+LDFOhenrhVo24W7kWzLnz09QEdbY
vGbfwW7oC/JIZ0xRUTmcL3v6WDe6BeLPH5mhYpwp5LrVuW48OyW/7vksFTsE
bTPum3bjzPgH7fE5KgK7hJKCrnfDzLNuhWWBiunY5qgIr26sO+h9Y90iFZcN
gkLiHnXD72pwziDpGt7jD5/Hd0N9tJZKXaLiQMusZ3Z2N9YP7HfRX6YiOjLH
tbCsGwmdNLp+0gw65vZvPnVD/J2whs4KFbYcfFc+tHVjutPYOIN007c6oy9/
uhE6IiHVQ1ox5L5u02w3ipjlPi6S1k7bmjbCQIN+mqXwqh8+mH3myEJDVnqe
fDfpNxYN8dPsNGxQV+ZNJT2unBPtzkcDj/yVYk3SoiJ+kctCNLxwD+TrJs/H
gME8zHsXDQVOaoQW6ZBexWCmAzR4zRruTiOv530Fr7+/DA2BR5630sjrnUuc
vL+JoMGpapfGMjk/+7zq7oap0CAZxx24Mk/ej8svPLg1aKjhfhPaR87nE8X7
N6N1aYgeCzfJJuebbknu+jMLsr7AynKQvD9SHVzXRK/RkMvMmmA0SYX161Gr
F040fHwinVFE3t/vN1ON8+6R5+s9Jcf+jwrKhbuG0gE0fDc3ruYaJte7jKF+
aRh5PsET+5YGqXg+vVmzMokGI+amaNdfVLQ1DZ0+mUFD+azQ8/Xk+ttUWK3y
MZeGPofHkXfJ9el2wwPf39Gw6ba3PD+5frPO6R/VraZhoEZsVoFc3z0HDh1p
+0qDzOaTGco/yP05OrCvt5OGY6c7FpbqyPVf999uy34aItkynud+piI/J150
cIgGd7coHZVaKgSuaW8bX6DhIZ9Im2AlFSN/3m2k5+uB1IflJZ88KoRro9c9
EOqBPNPfy/o5VOilOzOu39UDy+8ao6zkfi63lFjaLNODwEtO+RJJVIT/jBwS
0u1B1p7Rq9zBVMh0XvukFNaDU6lPLN+aUpGzy5HLKroH/sWuC7qGVIi4uFwO
ftYDYwNZgzodcj+yek605fXAfSU95fIpKv4QIfxODT3oOHQnYIX8XRSdknc1
lbMXje/LC04Ok8/nsaLCzwK9KEsQke3py8EDhdcr4yK9KJiaVDbsyIHjj//C
cbgXTmtYd01+zMFp5qbXLTq9ONbam5GVmoPFqzMsLE964ebsdu2sPllfvKBz
IKEXanfe7p05m4OBtXSJemm9oE1mWXgfz0FjHLNUyqte8Bkmeyrsy0F2Ha+h
QksvTgqLKpyiz4HRIfkse96fqBlKDH2Xko2Kea8zjTE/wflcpOFNQxYaeR2n
7ZN/YnTlBPuLqiz8kjFLZMn8Ce2qxk6PkixscD0xeaz0Jx7GfbLoiM+C7sS6
2JctPxFlnHXO1SoLg3/D/gZz9UFm7Z3hwzOZ4OxM8Vd91IfHLtXxVgyZsHpX
U/PWux/lkZGexe3pmJNlE5by70eu3MWXYbXp8C/Qu5UR2g+HiFgOg1fpyMz4
tfdxYj86IqubisLSMRK+Ntz6bT/cIj+fjTuVDicr4hLnfD8GqhRsFV+mwWtz
8Zj19V/Ys7evLsYlFU/N0vi4jH9DfE4jKqglGXv1e6aXLf5gdGYuWMUpBrHs
WA649gchNt0vv5yIwfovsYy8zn+QyGAlpbslBgNK+pyHfP6AsPjSZF8ajRSJ
ugNXnv2BccEd5nq6aPCtlNnWdf2BV9hugafBUWBKjepN0BsE7cQudsaXEeia
0PhKqP6FYJx1/7RYCIL5m3c4aP1FeT1v+tGJR1A8bnQz4cJfeF1Jzfwc+QgJ
YbYiy9Z/Qaf9Ir+sKxjGB/zcX/v/JcdnbZm8HoSfdpWi0p/JPEjiRU2qPwb+
SHlKaAyhPEhF7/i5+4jaXNZ4UW8IdCet9eTo7uOU7PHd/peHQLDHe0bn+CDj
oVbTgD2ZZ/ohZoMPbMTsJFJDyPz0VbuKL94YNk9rFvw+BK+6ospSCy+Md/NK
cusMg65cwr1s0BWCZjNS2y+RTnC8rG7lCo1fjbLiFsPwyt7nPf/LBVlDj47L
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#49"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
07a17W0CxvKf08D2ti72P0VTWvs=
          "]]}, Annotation[#, "Charting`Private`Tag$100624#50"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#51"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#52"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#53"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#54"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV13c8VW8cB3ARV6nIyqqQUBoqCeFzlBKVUVaR7JCQrJRISmZGJFtkZFxZ
IRV+ZbQoZHOJkpC9x+/469736/M93+ec5zzPOfcKmdqfs6Cno6P7vYaObvVz
9rRdnKa9g+L5wTMP03pG5R+Yi4nXiapD9khOcphBluKXkT6bIFEjLBqzvCs5
+1kxk6s9sTXWEjZC3FcVaroVR/OPB9qK2qFyKlzh08EhRb5dP16vNDtiu/OD
hqNLU4oKbv4HamNd4Lxz9wxnzIqicbViWpiJO2LbFWLk3BjhzT0hYCh6B7oZ
ttMOSyz4nne+NmzKC8pim6xnszfDvG2vz0yzN3bnqDKilgtTa5hhWOoDwc15
fiMafHiwq3euPPYBDuoV3bJW2o4tWmUFOz0fQjP/sK6fujDS3SLt/U384UZ/
Mlb0wE58qlbrPy8ajMOSAuLe4RLIcWXXNFwbAjPv1yop7PvhGuCZHTwVgpgK
E/NM0wNgzr9gNdEcht8mVkL8podRX1X1YWdtOFjddwj3+R7B07ZDO/RLH2Nr
G4NhW5UsdtNv6iqLjYTGw+zzBY8UMc516+i/oCeIfuAR+TyQwOtdA1FCnlGo
3HH0dWmnEs5oVZ5/YBKNjiP3cp1TlGGf6FKrIRqP0X6/SZ5KNcgU/BT13pIA
tZtzfgJXzoDOXPzYxbWJUAm52vhtizpqXSMSAqcSMep7dCvDV01cTLC/ONb8
DFb2tXHvI7WhuEvUz18zGRnuqeFMT3QgnN/xakdtMiR42UN/xOrib5Uql25p
Ct6/HA1bKNbH7ZEd9aWxqcDpzep6By/B2K1t+TxXGmj6IfNMRkZQpg/dOxyU
BpGaY+sXgi9jI/ey/3bPdIxHOA2foDNBvELLCR+TF6ji/7iSHmKGisDA12dF
c3AyVPtXlbg13g62fmbJyAGX4P7wV9PWKDsl1lUrQUWnt1fp1WobGNCb0CXz
5EJ0fNMK5botdN4uCG/f9hLVr23e3+izh5r0Aastu/JB3fltY0LyDRwSjR2n
4BWyLSVE5P/ewsGmYwuWXq/gJ1UYzHvzNiR9/jBUVbxCtLvR8BpmD+zrleby
US7Gh3JN/j/idyAe/+0InVoJ9sq4aJkf9YIAN8VjVvs1KlKF7p1M9AYjkyPl
j807NK98Wjn2xhcDqp6sE2nvoHr2b23lhof4GBS4ZanvHQJcJ5kfGz5EtX9D
+MP95XikkroouvQQAewjybEZ5QhWc/aYUPIHp/CO9+/jKuBtb8+o0RoIUaWg
tVwP/sOviqN9MgKhUPU0uV+oW43Rs3Zcbysj8eqmRefzb18RS4n8PcafhFTF
q81841+xMdbXw18qCZEM1789Yq9DUdiIp8DZJLgE3f5w83wduHz/W5C4kwTp
pPDss011GHooLT3RnQSDPtpbd9t6jMZfCJtOeoY2FtZHwg7fsH3M4pD7thS0
Xry639G1AQyDQ2KW/1Lh36ti++RBA1Rncv45MaRBzkYkoyyiAcp7HbY6bUlD
7M1OYUpBA4YKbfccRxqMozS4Y0cboFcnkikYnIbfTYeWPlg3IrmrhHgrno4p
zcWPvIZNsLZZNizQzEBqSwsFV5twdpjJOcI0A7rGhcrm7k2gqducMnPKQLG9
3ducqCa8PMRQ9P5JBm4H014eb2qClLp0VUxnBhg+v4+6pv4DT3Z3MPlYvMBm
lSDLCqIZSqVy5x5ZZEI5owwSWs2Ii2c9sNUlE24sQzwRJs14fF+6IeRBJmh1
ap+svJuxvC5+TDwtE7n6zJJs75vx1dsunPd3JjRt7s0ZqbTgDkV3uc8kCz6f
877X6LUgbPiBeaVDFor39WYetGqBaX3Or3ueWRCcIIyY/Fqw54xWR15sFkZv
LVdmf2yBq4T3rzdNWQgJuhm4eLYVizuYx28cy8b7f+kWlkatuF4QNuurkY1Z
rRbFertW/PLqSb9jmA1j7iNjyY9awZlw7yWHSzYkEyZ1Tn9rha/bXd62tGzU
59pvj9ZuQxH9hvQqxhys5UiYZbBog7mMY+kCWw5knL9+u+bcBpd9YbLsAjlI
lN3roxRJ5oprpH8eyIFD5eDAQHMbzo+oHuUwzAFbo0XeEYN26JSY/Bf7IgfE
sNKg9tV2hDc6pxbmk/VM24Qdb7VDUYidI7csB99kfoRmxbTDY6emlurXHITF
nbwu1NGO4woZv1lGc1BZJJyhONQO5ie2MftnczBRt0wzWGzH7S8RdlJ0VGjT
v9KMFOiAxUSeUg8rFVxXxCRZLnVgOI7rTNVeKk56MViJX+vAhrTMF2NSVLg8
7U444dGB3/WdH5eOUvHj0xNWr7gOENPtIsWqVERJMv+b7OzAIs8N/gIzKmpU
+0TZRzrQwfzepM+ailnTcqP9yx24PA2eKXsqLkS4fbXe1oltD17kvrpFBd/8
QHaXUSfGBAsiy0OpUOP40L9g14n4KVvziUgq3PckbeX17ESGgswlplgq2o0u
BJ1P6MRGSZGXn59TscHt8AcHaidctDWWPF9QIR+6eSnoXSdsaEm6HFQqYv+r
ta3p7oT2pTHOtldUfO54ntL/rxO32u/ZbiyjYnHqbgc9XRf82q2KBMupuCQu
d0ZBsAtripyYf1dTsS3ohUSecRdiX1gzjDdRoZ76wKzOoQt3L21QE2ml4s47
05ghry68lI3Wle6gonuMj0UsqQvjm0Zy5nqoYGOZOab8sgv3vw6OveijghBp
cDep6IKxMvHn6G8qEnUDBmN6uiDG592/+JeKevsrwiVjXSg8L/lzzwgVa/yO
X/yxphvF06UP5EepOPhse9jE5m6ssVz+LDFOhenrhVo24W7kWzLnz09QEdbY
vGbfwW7oC/JIZ0xRUTmcL3v6WDe6BeLPH5mhYpwp5LrVuW48OyW/7vksFTsE
bTPum3bjzPgH7fE5KgK7hJKCrnfDzLNuhWWBiunY5qgIr26sO+h9Y90iFZcN
gkLiHnXD72pwziDpGt7jD5/Hd0N9tJZKXaLiQMusZ3Z2N9YP7HfRX6YiOjLH
tbCsGwmdNLp+0gw65vZvPnVD/J2whs4KFbYcfFc+tHVjutPYOIN007c6oy9/
uhE6IiHVQ1ox5L5u02w3ipjlPi6S1k7bmjbCQIN+mqXwqh8+mH3myEJDVnqe
fDfpNxYN8dPsNGxQV+ZNJT2unBPtzkcDj/yVYk3SoiJ+kctCNLxwD+TrJs/H
gME8zHsXDQVOaoQW6ZBexWCmAzR4zRruTiOv530Fr7+/DA2BR5630sjrnUuc
vL+JoMGpapfGMjk/+7zq7oap0CAZxx24Mk/ej8svPLg1aKjhfhPaR87nE8X7
N6N1aYgeCzfJJuebbknu+jMLsr7AynKQvD9SHVzXRK/RkMvMmmA0SYX161Gr
F040fHwinVFE3t/vN1ON8+6R5+s9Jcf+jwrKhbuG0gE0fDc3ruYaJte7jKF+
aRh5PsET+5YGqXg+vVmzMokGI+amaNdfVLQ1DZ0+mUFD+azQ8/Xk+ttUWK3y
MZeGPofHkXfJ9el2wwPf39Gw6ba3PD+5frPO6R/VraZhoEZsVoFc3z0HDh1p
+0qDzOaTGco/yP05OrCvt5OGY6c7FpbqyPVf999uy34aItkynud+piI/J150
cIgGd7coHZVaKgSuaW8bX6DhIZ9Im2AlFSN/3m2k5+uB1IflJZ88KoRro9c9
EOqBPNPfy/o5VOilOzOu39UDy+8ao6zkfi63lFjaLNODwEtO+RJJVIT/jBwS
0u1B1p7Rq9zBVMh0XvukFNaDU6lPLN+aUpGzy5HLKroH/sWuC7qGVIi4uFwO
ftYDYwNZgzodcj+yek605fXAfSU95fIpKv4QIfxODT3oOHQnYIX8XRSdknc1
lbMXje/LC04Ok8/nsaLCzwK9KEsQke3py8EDhdcr4yK9KJiaVDbsyIHjj//C
cbgXTmtYd01+zMFp5qbXLTq9ONbam5GVmoPFqzMsLE964ebsdu2sPllfvKBz
IKEXanfe7p05m4OBtXSJemm9oE1mWXgfz0FjHLNUyqte8Bkmeyrsy0F2Ha+h
QksvTgqLKpyiz4HRIfkse96fqBlKDH2Xko2Kea8zjTE/wflcpOFNQxYaeR2n
7ZN/YnTlBPuLqiz8kjFLZMn8Ce2qxk6PkixscD0xeaz0Jx7GfbLoiM+C7sS6
2JctPxFlnHXO1SoLg3/D/gZz9UFm7Z3hwzOZ4OxM8Vd91IfHLtXxVgyZsHpX
U/PWux/lkZGexe3pmJNlE5by70eu3MWXYbXp8C/Qu5UR2g+HiFgOg1fpyMz4
tfdxYj86IqubisLSMRK+Ntz6bT/cIj+fjTuVDicr4hLnfD8GqhRsFV+mwWtz
8Zj19V/Ys7evLsYlFU/N0vi4jH9DfE4jKqglGXv1e6aXLf5gdGYuWMUpBrHs
WA649gchNt0vv5yIwfovsYy8zn+QyGAlpbslBgNK+pyHfP6AsPjSZF8ajRSJ
ugNXnv2BccEd5nq6aPCtlNnWdf2BV9hugafBUWBKjepN0BsE7cQudsaXEeia
0PhKqP6FYJx1/7RYCIL5m3c4aP1FeT1v+tGJR1A8bnQz4cJfeF1Jzfwc+QgJ
YbYiy9Z/Qaf9Ir+sKxjGB/zcX/v/JcdnbZm8HoSfdpWi0p/JPEjiRU2qPwb+
SHlKaAyhPEhF7/i5+4jaXNZ4UW8IdCet9eTo7uOU7PHd/peHQLDHe0bn+CDj
oVbTgD2ZZ/ohZoMPbMTsJFJDyPz0VbuKL94YNk9rFvw+BK+6ospSCy+Md/NK
cusMg65cwr1s0BWCZjNS2y+RTnC8rG7lCo1fjbLiFsPwyt7nPf/LBVlDj47L
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#55"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RI5+zcL6OjPh2NvQur6uSPwPIIZBxw==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#56"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#57"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
07a17W0CxvKf08D2ti72P0VTWvs=
          "]]}, Annotation[#, "Charting`Private`Tag$100624#58"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#59"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Xo62LS8rE/8HQBAWZQ==
          "]]}, Annotation[#, "Charting`Private`Tag$100624#60"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
xSYTlnoKN1m3TcBr5+srSe8yoXVRpU1FdAKE3I503qtZEDU2iC2WJl3yoSa/
Nhv1V+8JRuuR9RbeWyjncyFyr0H80tMJ8v28sf2lfT708xgOWMZNgHaT3fNG
cj4Cew7J2idNwPiCUENAcz6m8Fj1bgZZv6M1o4IoQNWits3zkgkIzgcOqW4p
hLXLj8zhVrIerv9YmoqQY9267w7fJMq3jqhoR5SiN2rdEd9tkyC8DXzdGkux
pUYWIcKToHPcFr3I8RpeotEaz3aT+dAj852PX0Pr50WHKjny+H3Lb9c8LcOk
YcfLTQaTSHzlaSNW+Baymt1SCTGT0LzlYBgXW4GyAcZh04RJjJpsVh18VwHF
u3ueiyZPIvdTGIvFzwoo593kynlB9pN4EtK3uxLqnJzTZSVkvbnOZtaySpi2
nHrV1jwJyV7Gyr2//0OAcZ4sN+cUEvdcue5oUoVNcy1jrVumYMx4nb7Yvwoh
oSsZcfxTYIs5a7e/oAqRlWf4du6YggPj4wsFlGokivyeP3RwCoTCLBffy2oU
DPCXaWlOodyKi95xYy06He4rBgVOgY4jxll++BP5Xinf+iyE7Mf0xZ1R6DNE
WBcXix5Pgab2j2GTzmfYZDu+psVOIbedX6PrzWfM/rksI5U9BS+OR75eYV/A
biZ3sP3LFOqnDRPGVOpwSuffzl2s08gVrlx7yfEbrqbsZlTkmMapsKY95iHf
EDxh0XduyzQ0Q5Obg3K+oSm049nt7dMw1jnKqvr3G0y/1m6v3z8NnuaLt00s
v8NDJYXXVZM83r2YY59ZA/JkL2z8EDqNRCejV02uTRAZ9499HDENmUy9oY1R
TYh4USZh/nQakll38iyLm+DGL6jGkETmSqyK7nNNUFz69UApdxp0fy9bSHj8
wKdyJ7q3X0lXCMZX+TejTyVkoohlBl7vXjBdedcKbt3q1vT7MzDW5DIOC+vC
SfkUwsJvBoIxi1+LS7vgKnw3TShoBvWyzPIMP7vQMiLnHP2YzO8GGa6V6kaM
bw5bYPIMctX1Ppc0d0OwJELFvmIGAwMbWdeE07BbwLzw8BI5XnPnU5V/PUAv
XWil0ywSkyOL/vX0gc1zfFu92yx4YohdQ4t96OXvy+q8PQvJ2MhMOp5++OhU
18z6zCKX+ordUb0fH2uC6PZHzILtZ0SDa1k/dKl8DjGFZH2VsQNf3C/Y3pbS
cJom7SCitOX6AJ5yW20UdZtDjYHAzHfLIRQLaJ4euTWHgaN7nJfvD6FFWMav
yHMOVsW/apSeD4FnPzOjiu8cJM+UbmXrG0KkSvrilcg5CIbN5X82HcZjt4G/
GQVzKA5MOV9nPoLgNquPe8fmQNTMXk9RGIV3vLXvYZt5+OS5pCi7j+OYgeWQ
ut086v+o7HscPA4GHjMtK8d5ONxVN58gn3s+oYb8Me7zkJyqGKd9GscDHw0q
XcA8Rh+ts7lJPof8bA43f8qcJ+e36mxq1QRCpNeImQ7Pg+ekWLwIuS/ivkZV
BTsswKun5rrRplkIlBAMEU4LiLopKW0qOovY5AHEuC1AMm3rsIviLPldpiTN
awHGkSc0G+xm8VS4JbM8ZAHmCafL9OtnEeGyJXQ8lzxeXK4glrzuoG2RBrpj
C7ASSyhTkFyAh1346FbHRWjO3KAPfrqMvybiPBdMlzDrfWvSvYeeCFgaXNtl
uYy+gtKLnywpROmQyr9NF1eQwl4ZLa+ygfixU6ZXToSO4Cmpevi4k42w2mW2
P/w5HSHVbHS4/CgnUaFrcEtp2xqio+aPcNXHLcQh/cEMzqQ1RMiFlKsQESBs
751sVuCnJ/R5BNgLLwgSDy2Z59eEkx777rbhhzDxZqvJyiAnAxHWbh6g0bST
KFl+wLA7mIFo+RNQWTAiTnzNPz4YtHktwXz12vmAlD3EB0HLqsCwtcSocs77
7TqShM8rnaSe9YzEmyN85mFmBwlD4Q4jgyBGImeN9AqtQYpYKNrPL0FhIoai
j5n/1jhC3Gb48zniDhMhU/hiO/+kLMEtImuyk45CON2dVFthVSBc7XQn19+k
EPHzhhUCfAQhIG1eI3qLQnDE8e+yFCKI8qXrscc8KMSI4Ue6PHGCWB8UpOx+
l0KEmQjQax0hiPjM94//+FGIXVNhBlnaBFE1cPBwTTSFWP98uaflEUFwmrG6
3C+jEFHZHms2MisRJbu3qiW9pRDsbzuvP2dVIozGd297U04hyiKumhFblIj0
uyerJt9TCPMD8p89RJWIo4ke3OZfKMSia/9/3CeUCNPOv0XHuigEW7vEhwpv
JYLyfM7fiEYhKt888/P2VyKybCmX3XspBN2txeYTYUrE9IIwJe8Xhdj0zZez
MUmJ8Oe7qCf0j0IMyZ8RYK1QIvb3XpFQGKMQTZ1i6KtRIhoznFf0JyhEsuPJ
0df1SsQ22dC0kBkKIR/vseJIUyL+o0u4lTVHIfSGc4zODSgRVjVZGjULFKI3
UVtdalSJ2BBSuqNviUKsk1v4yjOrRLzUq5lZWSHHO7W/Z2VFifgfodiwkg==

          "]]}, Annotation[#, "Charting`Private`Tag$100624#61"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
07a17W0CxvKf08D2ti72P0VTWvs=
          "]]}, Annotation[#, "Charting`Private`Tag$100624#62"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OZN2vJOV+dsZlnOMekYRpLOOCZVM30Ab+7hHahPpn/0TFWcdwBxZ503tJPuZ
623XL7PHEd5s3+J+0iMlT/K77fB4u1XoxynSvgZXuPZdg/qerpQRrhHQ/bo+
wTNojYoTHz9J65Iufqb+5acZRmvS6mFEun2LTMR+M2w7c7/plCXpopHDcndM
4X6O6L7oQrrPS/2AiAmkLheN34kkLd/m1i56Caa94TO+8aQPBs3ZDxsg1OL6
YkgqabYP5dylFzFydQ9TchHptxnPqy30yf+rz3irf6z2983/R9HGjwXPbfVd
pHn6xDTozoPR89KO1l+kF3V8+Va0YHqfZ+/fadIbas4Ks2kihHn6wOQyaSfL
r4PK6ngX0CC9xPSPnG+OpP9czkAgLJhg3UJae9rZil4Valy2J3i2kzYsVDQ1
VMHNKFU1ITHSjUZSg/+dwI/4tdqHjpDuaC+hKzuGkEz3K3p6pHNTK+Ofy8Fg
zYnPTUakeThM/Y1lIKrHekDbkrRDs6SalDTK6FPmNZ1X85I9XaIH4atvd7nu
NukQSYflE5I4lyPz/qwPaS+r7dxLezBw4UuQWjjp0YzCtTdFkU99Ml4TTZpO
3uSGzw7cYTTVU3m22j/y2vB/glA12FP2IYN0Ykilp70AOF9OCyq/XO33os6+
fAu6mSruVxav2ib5xC0OvDAMGCTKSRPntWSUWOGUp6Pxrnp1fs6LbzVlBpgF
CxTqVuv31DpcpMd6o0Gesh+rXuffpDuv2Jhf4CHXtXo+2XcfZI0pJqzz7C3u
X3Ve0yeHfkWby6oqR4ZXLXzr6UST4uFCjqzCyVW79ZdUv1OkY+lik1pcdTmj
6pdARUvJRrnWNaOkvRieGwYonjaQvRbFuGrJnn/m7xQlH8Qn6K1b9W1pzb9N
itwvGb5zb1y108q9oH7FxXartT/YVs19L7xjTLGH6at0BOeqWe3ev51XrDpw
yFqbZ9Ua3QOv6JFlGBXDIbDqA18E5pgR5rv05ft20uVpDdvY2eCaZ0oXtoM0
wdp4YisnDDurD2qJreajX5PjeXCMea8FmwRpL33n1sitEDsU9qRu36q39hy/
J4QNRjO1wQdJG8stibmKYPyh4eJZ6dXc8od1mhia8yv2bZRbHX9O/yKnBJ6t
CwwPUCJdf7T3w7kDeCg19kHtxOr4tglHLA7h2mXd2XWqpHM/HEuOPAyZQsFL
DzVJa2ZEsejJYRvt/iMVbdJs5WIXf8mDgeVvBZP+an9e3ZMRwFfjQtH7l0k7
OK9XzziGggC+C8pmpCV71mdJKuNpkWcAw5XV/MxpiZoTMN+gNnrXjrSMoClN
jNwfR6jCSo6kZxNLMaqG/aacOnQupEO09Dhqz2D+VVfJHQ/SVn5mh3U1Qes9
PqRwl/Qp9kOBBlr4sDFj25IP6T0FoyetzyHE7Ma9W4Gr5jzMHq8NUVbms24x
pGlZHaJ2F5A1ejf1YQJpwQLVjY0XcfD7wkpUMulYwV5pZUMg4l9eSSbpDrFB
v+OXoc/fzLPwmnTjqO+PblN0LWo6spSvzrfwwYgyM5h3ffzE/5501na+rHhz
XE96e0f+8+r1HpdadrSEv1hqn0fHquNlpwxtwLZOUDGYtjo/cuZHLK4icvDp
k/g+0raqSutu2CI5O0jt3RDptvp1bgl2KDvknEu3RJpyQ2RH/HWMQPn2va1j
oBPxr/vzwQVOQm+bwoVIPz6rtN/NFfP0MvtTdpK2rD3kvNcNlCqJ3vd7Sf8r
XmRLugnBMxynmBRJv44TGc66jXP6vRx+RmPwGt8QfzD7LlpkDa89NSXzDI13
B7d7w4j/R1WGJZlPyyvVh3njalftzY92ZO4t/Gnwzj34mL/sZvEk8zpR2jeb
+yhy8MoMTiBzs8LpdeF+8H89WnAhmTSh/0OL2x+XmUzeiqSR3qLyhT/GH8yx
St9Kc0ibNuyRzwjAxWr6mV9vyH4uYpS25iAsb71/DB1jIJp5LSYQiu9WU6fX
08i8todgDA5FWr6FTtNPMm/dnNzXEQpN1ZNWV/+Sef3MDlaPMDxzogQ/mSed
PKm6qzocJz75tf7jGYfX2sNFIvciwcc931sqMI7yPlUHu65IjBjbDN0XHAfx
dNfNMLkniJxWW+EXHwfdtpV826knGBDasPPUEfJ4sSlfL+enCHQLdkjUGV/d
r64dCbFo3BlO0QobB+1e70DEtySoivHIXIscR2Iq54ki9md4Kx5n5RdN9hda
b2yp/QwZEmm1Fc/GYSxxZN619RnuHHgdcDCf7HeO+6f9YDLEFX6ycjaS44Wa
nNsjnoo4RStCsoWsL0sq9nNMBTsx7HCmgxxP932E55tULB2b+ebTR45nuW5Q
WicN30+xPJ6aJMeTyr/1MyAdt7UP8TRzTaD8KN9iLncmxnSKT03wTiBxKN2z
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

          "]]}, Annotation[#, "Charting`Private`Tag$100624#63"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
07a17W0CxvKf08D2ti72P0VTWvs=
          "]]}, Annotation[#, "Charting`Private`Tag$100624#64"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 800, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SuperscriptBox[
          TagBox["x", HoldForm], "4"], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           SuperscriptBox[
            TagBox["x", HoldForm], "3"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{0., 1.}, {1., 0.}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{0., 
                 1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{0., 
                 1.}, {-1., 0.}}, {{1., 0.}, {0., -1.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"8", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {
                Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{0., 
                 1.}, {-1., 0.}}, {{1., 0.}, {0., -1.}}, {{1., 0.}, {-1., 
                 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"6", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"11", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"6", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {
                Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{0., 
                 1.}, {-1., 0.}}, {{1., 0.}, {0., -1.}}, {{1., 0.}, {-1., 
                 0.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"8", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {
                Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {3, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{0., 
                 1.}, {-1., 0.}}, {{1., 0.}, {0., -1.}}, {{0., -1.}, {-1., 
                 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {1, 4}, {2, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{0., 
                 1.}, {-1., 0.}}, {{1., 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"8", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {
                Null, {{1, 2}, {1, 3}, {1, 4}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{0., 
                 1.}, {-1., 0.}}, {{1., 0.}, {-1., 0.}}, {{0., -1.}, {-1., 
                 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {1, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{0., 
                 1.}, {-1., 0.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{1., 
                 0.}, {0., -1.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {2, 3}, {2, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{1., 
                 0.}, {0., -1.}}, {{1., 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"8", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {
                Null, {{1, 2}, {1, 3}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{1., 
                 0.}, {0., -1.}}, {{1., 0.}, {-1., 0.}}, {{0., -1.}, {-1., 
                 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {2, 3}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{1., 
                 0.}, {0., -1.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {2, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{1., 
                 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"6", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"3", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {2, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{1., 
                 0.}, {-1., 0.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {0., -1.}}, {{
                 0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 4}, {2, 3}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {0., -1.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 4}, {2, 3}, {2, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {0., -1.}}, {{1., 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"8", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {
                Null, {{1, 2}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {0., -1.}}, {{1., 0.}, {-1., 0.}}, {{0., -1.}, {-1., 
                 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"6", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"3", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 4}, {2, 3}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {0., -1.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 4}, {2, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 4}, {2, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {-1., 0.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., 1.}, {-1., 0.}}, {{
                 0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {1., 0.}}, {{1., 0.}, {0., -1.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {2, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{1., 0.}, {0., -1.}}, {{1., 
                 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {2, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{1., 0.}, {0., -1.}}, {{1., 
                 0.}, {-1., 0.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 3}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, 
                 VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{1., 0.}, {0., -1.}}, {{
                 0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {1., 0.}}, {{1., 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {2, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {1., 0.}}, {{1., 0.}, {-1., 0.}}, {{
                 0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {3, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {1., 0.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           SuperscriptBox[
            TagBox["x", HoldForm], "3"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{0., 1.}, {0., -1.}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {1, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {0., -1.}}, {{0., 1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {1, 4}, {2, 3}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0., -1.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {0., -1.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"6", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"3", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {1, 4}, {2, 3}, {2, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0., -1.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {0., -1.}}, {{1., 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"8", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"4", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {
                Null, {{1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0., -1.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {0., -1.}}, {{1., 0.}, {-1., 0.}}, {{0., -1.}, {-1., 
                 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {1, 4}, {2, 3}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0., -1.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {0., -1.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {1, 4}, {2, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0., -1.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {1, 4}, {2, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0., -1.}}, {{0., 1.}, {-1., 0.}}, {{1., 
                 0.}, {-1., 0.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0., -1.}}, {{0., 1.}, {-1., 0.}}, {{
                 0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {2, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {0., -1.}}, {{1., 0.}, {0., -1.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {2, 3}, {2, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0., -1.}}, {{1., 0.}, {0., -1.}}, {{1., 
                 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {2, 3}, {2, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0., -1.}}, {{1., 0.}, {0., -1.}}, {{1., 
                 0.}, {-1., 0.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {2, 3}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0., -1.}}, {{1., 0.}, {0., -1.}}, {{
                 0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {2, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {0., -1.}}, {{1., 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {2, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, 
                 VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {0., -1.}}, {{1., 0.}, {-1., 0.}}, {{
                 0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {3, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {0., -1.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           SuperscriptBox[
            TagBox["x", HoldForm], "3"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{0., 1.}, {-1., 0.}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 4}, {2, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {-1., 0.}}, {{1., 0.}, {0., -1.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 4}, {2, 3}, {2, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {-1., 0.}}, {{1., 0.}, {0., -1.}}, {{1., 
                 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"4", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"5", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {-1., 0.}}, {{1., 0.}, {0., -1.}}, {{1., 
                 0.}, {-1., 0.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 4}, {2, 3}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {-1., 0.}}, {{1., 0.}, {0., -1.}}, {{
                 0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 4}, {2, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {-1., 0.}}, {{1., 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}], "-", 
           TagBox["x", HoldForm]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{1, 4}, {2, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{0., 1.}, {-1., 0.}}, {{1., 0.}, {-1., 0.}}, {{
                 0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{1, 4}, {3, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{0., 1.}, {-1., 0.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           SuperscriptBox[
            TagBox["x", HoldForm], "3"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{2, 3}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{1., 0.}, {0., -1.}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{2, 3}, {2, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{1., 0.}, {0., -1.}}, {{1., 0.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"3", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "2"]}]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               
               Graph[{1, 2, 3, 4}, {Null, {{2, 3}, {2, 4}, {3, 4}}}, {
                EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                
                LineBox[{{{1., 0.}, {0., -1.}}, {{1., 0.}, {-1., 0.}}, {{
                 0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{2, 3}, {3, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{1., 0.}, {0., -1.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           SuperscriptBox[
            TagBox["x", HoldForm], "3"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{2, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{1., 0.}, {-1., 0.}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           RowBox[{"2", " ", 
             SuperscriptBox[
              TagBox["x", HoldForm], "3"]}], "+", 
           SuperscriptBox[
            TagBox["x", HoldForm], "2"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{2, 4}, {3, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{{1., 0.}, {-1., 0.}}, {{0., -1.}, {-1., 0.}}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}], 
       RowBox[{
         RowBox[{
           SuperscriptBox[
            TagBox["x", HoldForm], "4"], "-", 
           SuperscriptBox[
            TagBox["x", HoldForm], "3"]}], "\[Rule]", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics", 
           DynamicModuleBox[{Typeset`graph = HoldComplete[
               Graph[{1, 2, 3, 4}, {Null, {{3, 4}}}, {EdgeStyle -> {
                   RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                 VertexCoordinates -> {{0., 1.}, {1., 0.}, {0., -1.}, {-1., 
                  0.}}, VertexLabels -> {
                  3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                 VertexSize -> {0.1}, VertexStyle -> {
                   RGBColor[1, 0, 0]}}]]}, 
            TagBox[
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                RGBColor[0, 
                 NCache[
                  Rational[4, 9], 0.4444444444444444], 0], 
                LineBox[{{0., -1.}, {-1., 0.}}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                RGBColor[1, 0, 0], {
                 DiskBox[{0., 1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"1\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, 1.0707106781186548`}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"2\"", TraditionalForm], 
                  Offset[{2, 2}, {1.0707106781186548`, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{0., -1.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"3\"", TraditionalForm], 
                  Offset[{2, 2}, {0.07071067811865477, -0.9292893218813453}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                 DiskBox[{-1., 0.}, 0.07071067811865477], 
                 InsetBox[
                  FormBox["\"4\"", TraditionalForm], 
                  Offset[{2, 2}, {-0.9292893218813453, 0.07071067811865477}], 
                  ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
             MouseAppearanceTag["NetworkGraphics"]], 
            AllowKernelInitialization -> False]], {
          FormatType -> TraditionalForm, FrameTicks -> None, 
           ImageSize -> {50, 50}, 
           DefaultBaseStyle -> {
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]}}]}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #21}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #22}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #23}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #24}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #25}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #26}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #27}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #28}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #29}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #30}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #31}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #32}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #33}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #34}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #35}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #36}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #37}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #38}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #39}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #40}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #41}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #42}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #43}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #44}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #45}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #46}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #47}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #48}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #49}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #50}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #51}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #52}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #53}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #54}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #55}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #56}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #57}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #58}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #59}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #60}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #61}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #62}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #63}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #64}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6485525936249404, 0.4144296347913687, 
                    0.048907997212660946`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9728288904374106`", ",", "0.621644452187053`", ",", 
                    "0.07336199581899142`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4911884484706007, 0.23866666666666667`, 
                    0.3353511049170246], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.736782672705901`", ",", "0.358`", ",", 
                    "0.5030266573755369`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18684294025131137`, 0.4766666666666667, 
                    0.2861392881649977], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
                     Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25, 
               ",", #26, ",", #27, ",", #28, ",", #29, ",", #30, ",", #31, 
               ",", #32, ",", #33, ",", #34, ",", #35, ",", #36, ",", #37, 
               ",", #38, ",", #39, ",", #40, ",", #41, ",", #42, ",", #43, 
               ",", #44, ",", #45, ",", #46, ",", #47, ",", #48, ",", #49, 
               ",", #50, ",", #51, ",", #52, ",", #53, ",", #54, ",", #55, 
               ",", #56, ",", #57, ",", #58, ",", #59, ",", #60, ",", #61, 
               ",", #62, ",", #63, ",", #64}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8182678057936077`*^9},
 CellLabel->
  "Out[696]=",ExpressionUUID->"644e8951-0cbd-4994-8bf0-2eecad4a1a88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{"Map", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], "&"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ChromaticPolynomial", "[", 
       RowBox[{
        RowBox[{"allGraphs2", "[", 
         RowBox[{"k", ",", "\"\<graph\>\""}], "]"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "allGraphs2AtomKeys"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8182671433659573`*^9, 3.8182671511470437`*^9}},
 CellLabel->
  "In[670]:=",ExpressionUUID->"7757f473-2b6b-4dcb-b799-e77cfba4627a"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$61448#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxFxWlIkwEYAODpPGrOcgqRmNuniMt5pD+CjDzSIPMi0yVNOjZ1s7xSHJiz
yzQdoa0ST2RM0xBxZszAjmVqmtdCV1bMSJxLWgra+tKpueqH7/vj4fEQ5J5K
t6ZQKHH//L/pmsAuKE0Suv2glohNJs6EbW8ZUt8iiItwU18ly5a4AmeFiLNX
WVJYu5FRvcyqh+11c+wlVjusGJXn/WD1wsouqS4rYBQWhU3WL+Zr4RyDj16l
/AzTPErZXw/NwlVOYxzFBT0s0CW9oo5/g/PelApy2Ua4+zI9ce+JJVghyTQG
Ji/DJfLNhF+LKzBFOxv+osgEexcIC5M4JDxP1p52ePkbjjZcuno/bw2On5f5
MpnrsHFAcONt5wYcwJh2jzz/B6aFkfwZ0xZ8fIm36smlhG//qT/NiudnBfdU
DJ4jSFxoK57VaKzh1HxJD72BCh8Q+Wpi+TbwO2c/B3GwLfxcWdLoR7WDJVac
k+NfcNpMUVSOyh42tHlUy4t3wNX7XW16uTthWYNwmE/QYF71WQ19AV871mqW
qx1gvSGisL+cDjeHBLlN8B3hzjIxQ+S/Cy7npsZQSfzgjKK9fGI3XOfT2DkR
4wRf76usi+nF49y4raNeDPhoznAKQ4rL9wm8xknca+BRTXyKMyzz7+dMqXGh
yWZyhOMCC7p/EtK7eFZJ4mb0PVycqPpIf4BXkOIqWQ2uDDZv1Dbh5teW6bYO
XDZFrxwcxhtasjNuj+AtBZrIqDH86R7Z+pgGn+G5ZGg/4Gy9a+ScHg9UFTEf
GvDDZTpz+gIey256/N2I52cSzJUVvPjITfMTE17mOPe+gMTrulrurK3hzTds
RM/W8Y6E9IjiTVzlOeQeuoWrTd5miwX/C0XwNRU=
        "]]},
      Annotation[#, "Charting`Private`Tag$61490#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5}, {-0.24999988510311194`, 19.99999908163266}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8182671518835707`*^9},
 CellLabel->
  "Out[670]=",ExpressionUUID->"5c5ec0c5-f2f5-47fa-9c49-ee0955d26384"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"keys", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "allGraphs4", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"VertexCount", "[", 
            RowBox[{"allGraphs4", "[", 
             RowBox[{"#", ",", "\"\<graph\>\""}], "]"}], "]"}], "\[Equal]", 
           "4"}], "&"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"BaseCoeff4", "[", 
        RowBox[{"k", ",", "\"\<C\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "keys"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}], "//", "Sort"}], "//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.818270385837674*^9, 3.818270468861368*^9}, {
  3.8182705058271303`*^9, 3.8182705159542985`*^9}},
 CellLabel->
  "In[707]:=",ExpressionUUID->"baac07d7-1c02-4253-b64d-c5c8d83d9011"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztmrENwkAMRSMxAA0LMAl09IyARE3PUAxElw0YARAVBYUlO37/c5Gih6LI
Z387vsuF7elyPK+madq/zvXrfP/+HI/dfN3cDvN9N30d47r79V/MsqNiX0XP
ajtR0nSujrdr3H+r2+p6oPlJq3NXnavj7arbLH9o/quQ1oe7+lLX/SrzXRZV
+nOW/yp5iZKmc7WdLtLWFV15Ue8bXXHR/KGt3/4tj2OdnEvXdTJtHqHpHKV6
H6PlKysumh3a89tFFZ27xqXll6Zzlv80jr66DGk6u5K2/lSpZ9o8ojJPVZNW
Vyr1nOWPa7xdpO3LueaXprMrafPUqOdeP9VJ22emzQu0fQmanlHS5mVa3rvi
7RpXpW6jVNG52k5WvCrPEa0/ROmqs0q8XeO69uFqqqwDq0n7Tuda/7R+Rbtf
hUO3ZUh7P1Lpz9X2VdZvNH9ofYCmf1dcrjpUk/Y/DVoeafsM6npG46LZUe9L
rjrTqKJz9H71vETjrbbjqmd1vDQ7NA59liHte5xKvmh9Ul3PLNL2K1z1p+ns
Stp+r2teaDq7khYvzZ8RlwafdNH1oA==
   "], {{0, 0}, {15, 64}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{63.5, 
       FormBox["1", TraditionalForm]}, {44.5, 
       FormBox["20", TraditionalForm]}, {24.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["64", TraditionalForm]}}, {{63.5, 
       FormBox["1", TraditionalForm]}, {44.5, 
       FormBox["20", TraditionalForm]}, {24.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["64", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {14.5, 
       FormBox["15", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {14.5, 
       FormBox["15", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.818270434370288*^9, 3.8182704691713543`*^9}, {
  3.8182705060771112`*^9, 3.818270516294276*^9}},
 CellLabel->
  "Out[707]=",ExpressionUUID->"fd7c3e74-2ea3-45f4-a881-ad82dc0e0a08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"keys", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "allGraphs4", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"VertexCount", "[", 
            RowBox[{"allGraphs4", "[", 
             RowBox[{"#", ",", "\"\<graph\>\""}], "]"}], "]"}], "\[Equal]", 
           "4"}], "&"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"BaseCoeff4", "[", 
          RowBox[{"k", ",", "\"\<C\>\""}], "]"}], ",", "2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "keys"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}], "//", "Sort"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.8182705371843557`*^9, 3.8182705490664835`*^9}},
 CellLabel->
  "In[708]:=",ExpressionUUID->"dc968163-0213-4707-875e-a9b22edc3df6"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1zUsug2EchfGvRoYGBgYGrYiIiLjf6VdaWuoSS5BITMQWXrUBLKFbsIHq
gMbIXevSzo3swKXnOU2aJ7/v5M0/tX+8d9ARRVH89/+vft9p9S7mgxrbnWqw
u9SK3U3vaQ/v7V7e28l2Q8Xuow+0n/f2AO/tQe7bQ2riEQ+rGXtEPbFHdf/K
HqNPdJz79oRasifVqj1Fn+k07+0Z3tuzul+15+gLnVez9gLv7UX12l5SE694
Wc3ZafXUjnX/BoeY73WaUfM44OB9Ra15x1GDrvIeBxy8Z3W/5j3L9zea4z0O
+Mz7mlr3jhPv7OtqAQd87j2v+w3veb5/0AL3ccAl7xvqrXec/GTfVA9xwGXv
Rd3/8l7ke5NuqUUc8IX3bbXpHada7DvqEQ740vtuu5WfVvwLJ3yNnQ==
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 15473.833333333332`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 64.}, {15473.833333333332`, 32767.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8182705497234936`*^9},
 CellLabel->
  "Out[708]=",ExpressionUUID->"b24c2338-0e09-4ee0-a3b1-dacd14c169bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"keys", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "allGraphs3", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"VertexCount", "[", 
            RowBox[{"allGraphs3", "[", 
             RowBox[{"#", ",", "\"\<graph\>\""}], "]"}], "]"}], "\[Equal]", 
           "3"}], "&"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"BaseCoeff3", "[", 
        RowBox[{"k", ",", "\"\<C\>\""}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "keys"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}], "//", "Sort"}], "//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.8182704770847597`*^9, 3.818270483633149*^9}},
 CellLabel->
  "In[704]:=",ExpressionUUID->"84b61dde-cdbb-4f7a-8c55-8d72c3806112"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgAGJWIAaxIeCD/cMqkXXuD2/ZM6CAoSNOKk0t86mlnlr+
GmzupLX6wWYOreMRnQYAABm5xQ==
   "], {{0, 0}, {5, 8}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{7.5, 
       FormBox["1", TraditionalForm]}, {6.5, 
       FormBox["2", TraditionalForm]}, {5.5, 
       FormBox["3", TraditionalForm]}, {4.5, 
       FormBox["4", TraditionalForm]}, {3.5, 
       FormBox["5", TraditionalForm]}, {2.5, 
       FormBox["6", TraditionalForm]}, {1.5, 
       FormBox["7", TraditionalForm]}, {0.5, 
       FormBox["8", TraditionalForm]}}, {{7.5, 
       FormBox["1", TraditionalForm]}, {6.5, 
       FormBox["2", TraditionalForm]}, {5.5, 
       FormBox["3", TraditionalForm]}, {4.5, 
       FormBox["4", TraditionalForm]}, {3.5, 
       FormBox["5", TraditionalForm]}, {2.5, 
       FormBox["6", TraditionalForm]}, {1.5, 
       FormBox["7", TraditionalForm]}, {0.5, 
       FormBox["8", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{3.818270484805853*^9},
 CellLabel->
  "Out[704]=",ExpressionUUID->"d7766866-8044-4260-b865-11d43b028a5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"keys", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "allGraphs5", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"VertexCount", "[", 
            RowBox[{"allGraphs5", "[", 
             RowBox[{"#", ",", "\"\<graph\>\""}], "]"}], "]"}], "\[Equal]", 
           "5"}], "&"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"BaseCoeff", "[", 
          RowBox[{"k", ",", "\"\<C\>\""}], "]"}], ",", "2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "keys"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}], "//", "Sort"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.818270569334774*^9, 3.8182705782990313`*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"925ca18d-b5c2-4f0d-b64e-51b8ecb47122"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.0055000000000000005`],
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
pRnnKvbX/ZGhYM0y9tf9kenammvYn/edy65Zwf79antkdWbNdezfr+zPPyf7
G9cpJg6M3ZgrVsazsYQ4bxxxPXHB+FU3KS4aNyVS4lA7Gn090SKumLq+/8VV
4/lIWlwzTjVkxHXjhYY28Xw/57+2KRAvGr/Z1C5eNr7pU1kxHVHkxN/+VIfY
O8LX05//2N/4p9FO7H+E//1vjuewv/HP4luwvznvNOexv/Frzduxvzm/5tNd
2F872vzGp3dhf3N+nVPA/kf4/v+lsxv7m/7PNPZg/yP8+f+rxl7sf4T3u3FN
Efsf4fv/rTV92F/3RxKfvaGE/Y+qurP+nRv6sf9Rnq+f/7H/UX7+vUJD2N/U
22Jl7G/qV2Nj2N/Ub3Ur2N/U33XPYH9Tvy0xgf11Pdr6fuIs9jf19kgV+5v+
a5Fz2P+oef5vmMT+R/n5/3rDeex/lPe/p6mG/XV/JP1h0zT2P8r3/32fmsH+
x1TgdH/8qQvY/xjP3xCtY/9jPP/X0YvY/xi//7fHZ7H/MVWlzG/ic9j/mHn+
b57H/sf4+f+95kvY/xh//t/x6QXsf0xNRqc++PRl7G/mb3QWsf8xVaDgt84V
7H9MVfTzf+MS9j+mlqm02ngV++v5kaF71yxj/2OqJzL90Zpr2P+YmojM3X/D
CvYP1XVn9ZMbrovdUNmfZ+T9sPZi4pS174p96yAhzlgrTxxY55PirHUhJVba
sSgVW8Q5me+L8zI/Le6S+RlxQea3iXvYMVKBuGidbxeXrAtZccjz41TsEJdl
vhJXZH6neILtkp8TV62DLeJJ2T8vrsn+28Uz9nyhS1zn+c1U3CWelfkF8Tzb
I2+3eEHm94gX2SkKesVLsn9RvMxO6scy8Qo7oX8tE9OAnr9e/7Msdgfs/BD5
s33yhpC/rftl5G/rwRjyt3VVQf62nj+D/G29MIH8eX4rFc8if5lfRf4y/xzy
Zyv9GwfyZ+s75DzyH7D715A/O035aeTP7tS/MSB/nt9NxQvIX+bXkb/Mv4j8
B+z7P4v82RkK5pA/OyQ1j/zZVcpfQv7sMhUWkD/Pn6LiZeQv8xeRPzsg7wry
Z+fIX0L+7BIFV5E/e4jUMvJnT1P+GvJnz1FhBfkfV7HYKhWvI//jdj79nuRv
7cXEKWvfFfvWQUKcMY4oTxxY55PirHUhJVbH+f6PFFvEOXu90BfnrStpcZd1
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
PX0C+dt6+2nkb+oN6mvI39SH899A/ra++5vI/yTf/8N930L+9voD30b+9vpf
/S7y1w5V7DtTyF+7Xhh65fvI/6R5/n/1B8hfO5cefvOHyF+73Nnw7o+Rv/Zc
9/CHP0H+Zn48+lPkb+aPrPtz5H/SfP+/4WfIX1tlRjb+JfI/aZ7/H/gl8tdW
1dFtf438T5rv/7t/hfy1O6dGX/g75G/nD/4j8j/J9//I13+N/PW8MBf/3r8g
f51fvTTyo98g/5Pm+f+1f0f+J1UuNz361m+Rv55Xnmt877+Q/5iam1sd/WgV
+Y8p+/PbJX9jff+LU8b693+xb1wOEuKM7c954sD2dyXFWdvfkxKrMb7/y6UW
cc7UvYgvzhtX1qbFXcapmzPigvHEnW3injHz/ffmQFw0ruxoF5eMU89mxaF2
Q3zicIe4bF9/dJO4Yl//uofEE2Pm+b11s7hqXL7rUfGk7X94q7hm+3c+Lp6x
/V/eIa6P8e//5RefFM/a/Z2nxPNj5vv/G/eIF0x/6pZnxYu67qUm7t4rXrL7
P3JAvDxmvv9/4qB4RdfXJlJfOSymU0r9zvqJl46I3VM836fjyP8U//2veiPI
39Qz/gnkb+qTwWnkb/tzX0P+tr/rG8jf9vd8E/mf4vt/svQt5G/qQeTbyN/0
19Z+F/mfMs//N08hf21VmLnz+8j/lPn+f/MPkL/2pnRtxw+R/ynz/f+zP0b+
2g91zxz+CfK3rz/6GvK3r3/dXyD/U+b5v/UN5K+dz0ze9Qvkz/0D/sNvIX/u
/5Pqzr9B/tz/cubL7yB/7e1/Ovni3yN/u7/zT8j/FN//tRvfQ/6nzPP/Lf+K
/E+pfL40c/cHyJ/3Hw4e+Q/kr/s3vVJ74iPkr/vX/jz7lf9G/qfV9sc/mXnp
E+R/Wtmf3yH5G9e9mDhl7KZdsW88254QZ4wjOU8cGL/alRRnjZt6U2KlHY++
3t8izpm6N+CL88bzX02Lu4xT38mIC8YLr7SJe7SbYmtfD8RF4zffbheXjG96
PysOtW+Iv/1xh7hsrheNbhJXjH+67iHxxGkV6uf/DZvFVeOfbXxUPGnOOw9v
FdeMX9v5uHjGnF+zb4e4rv27zW8cfVI8a86vG3xKPH9a6QfMX359j3jB9H/m
e8+KF0+repD61Y/2ipfMfje+cUC8rPt/L/nWOwfFK7r/psRnPzgspnFVv3/9
O58cEbvjPD9Nx5H/uPKVf8UbQf6m3pY+gfxN/Wr7aeRv6rfmvob8Tf3drm8g
f1O/rfebyF/Xv9D6fv+3kL+ptw98G/mb/mtf/S7yH1deqDq+M4X8x1VQL1x/
5fvIf5z3v+f1HyB/3b85/eHbP0T+uv/lzvve/zHy1/2/6P74458gfzN/Q/Q1
5G/m/3rdXyD/cX7/b9/wBvIfV9V85jcbf4H8x/Xn/8DnHn4L+Y+rjPqT93b+
DfIfV2Xv5Tv2vYP8x9XkF//0g6N/j/zN/I2D/4T8x1WhEPz26+8h/3FVqeQ+
/71/Rf7janm5tPqjD5C/nt80fO8b/4H8x1XPs6989M5HyH9cTfy/n9//wX8j
/4pa/YT/3PHg/wczPdoZ
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1024.}, {0, 4.503599627370495*^15}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8182705799419093`*^9},
 CellLabel->
  "Out[709]=",ExpressionUUID->"c26c5070-ef20-4fbc-8aee-235ea11937a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"keys", "=", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Keys", "[", "allGraphs6", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"VertexCount", "[", 
            RowBox[{"allGraphs6", "[", 
             RowBox[{"#", ",", "\"\<graph\>\""}], "]"}], "]"}], "\[Equal]", 
           "6"}], "&"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"BaseCoeff6", "[", 
          RowBox[{"k", ",", "\"\<C\>\""}], "]"}], ",", "2"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "keys"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "]"}], "//", "Sort"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.8182706020677834`*^9, 3.8182706100554423`*^9}},
 CellLabel->
  "In[710]:=",ExpressionUUID->"c6c8af0c-48a1-49eb-9934-acd2f10c8b17"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     NCache[
      Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
    PointBox[CompressedData["
1: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
7uNV7h/j++8+Xuc+7nIfb3Qfd7uPN7uPo/t4m/48ZP18/+Uc75ID7pELvFeO
uFcu8QE54dJ//vBh9x/g++8+7ncfD7iPT7mPB93Hp93HyX18xv3jfP/dx+fc
x0Pu4/Pu42H38QX3ceU+vuj+Cb7/7uPL7uMR9/EV9/Go+/iq+zjbpz4eL2cD
fP/lHE+WA26RCzxFjrhVLvFUOeHcfTzd/ZN8/93Hs93Hbe7jee7jdvfxQvdx
cB8vdv9Bvv/u46Xu4w738XL3caf7eIX7uHAfr3L/N/j+u4/XuY+73Mcb3cfd
7uPN7uPoPt62L4xvfp7i+y/neJcccI9c4L1yxL1yiQ/ICZdyhQ+7/5t8/93H
/e7jAffxKffxoPv4tPs4uY/PuP8Q33/38Tn38ZD7+Lz7eNh9fMF9XLmPL7r/
W3z/3ceX3ccj7uMr7uNR9/FV93H2TfXx+G/qz98g3385x5PlgFvkAk+RI26V
SzxVTjiXKzzd/d/m++8+nu0+bnMfz3Mft7uPF7qPg/t4sfsP8/13Hy91H3e4
j5e7jzvdxyvcx4X7eJX7v8P33328zn3c5T7e6D7udh9vdh9H9/E2/XnITvP9
l3O8Sw64Ry7wXjniXrnEB+SES//5w4fd/12+/+7jfvfxgPv4lPt40H182n2c
3Mdn3H+E77/7+Jz7eMh9fN59POw+vuA+rtzHF93/Pb7/7uPL7uMR9/EV9/Go
+/iq+zjrVR+Pl7PE91/O8WQ54Ba5wFPkiFvlEk+VE87dx9Pd/32+/+7j2e7j
NvfxPPdxu/t4ofs4uI8Xu/8o33/38VL3cYf7eLn7uNN9vMJ9XLiPV7n/B3z/
3cfr3Mdd7uON7uNu9/Fm93F0H29z/wzf/97wmqaPd8kB98gF3itH3CuX+ICc
cClX+LD7f8j3333c7z4ecB+fch8Puo9Pu4+T+/iMnD3G9999fM59POQ+Pu8+
HnYfX3AfV+7ji+7/Ed9/9/Fl9/GI+/iK+3jUfXzVfZx9S308/lv61/8s3385
x5PlgFvkAk+RI26VSzxVTjiXKzzd/T/m++8+nu0+bnMfz3Mft7uPF7qPg/t4
sfuP8/13Hy91H3e4j5e7jzvdxyvcx4X7eJX7f8L33328zn3c5T7e6D7udh9v
dh9H9/E2/XnIzvH9l3O8Sw64Ry7wXjniXrnEB+SES//5w4fd/1O+/+7jfvfx
gPv4lPt40H182n2c3Mdn3H+C77/7+Jz7eMh9fN59POw+vuA+rtzHF93/M77/
7uPL7uMR9/EV9/Go+/iq+zjbrz4eL2dDfP/lHE+WA26RCzxFjrhVLvFUOeHc
fTzd/T/n++8+nu0+bnMfz3Mft7uPF7qPg/t4sftP8v13Hy91H3e4j5e7jzvd
xyvcx4X7eJX7f8H33328zn3c5T7e6D7udh9vdh9H9/G2/WFC8/M83385x7vk
gHvkAu+VI+6VS3xATriUK3zY/b/k++8+7ncfD7iPT7mPB93Hp93HyX18xv2n
+P67j8+5j4fcx+fdx8Pu4wvu48p9fNH9v+L77z6+7D4ecR9fcR+Puo+vuo+z
b6uPx39bf/6G+f7LOZ4sB9wiF3iKHHGrXOKpcsK5XOHp7v8133/38Wz3cZv7
eJ77uN19vNB9HNzHi91/mu+/+3ip+7jDfbzcfdzpPl7hPi7cx6vc/xu+/+7j
de7jLvfxRvdxt/t4s/s4uo+36c9DdoHvv5zjXXLAPXKB98oR98olPiAnXPrP
Hz7s/t/y/Xcf97uPB9zHp9zHg+7j0+7j5D4+4/4zfP/dx+fcx0Pu4/Pu42H3
8QX3ceU+vuj+3/H9dx9fdh+PuI+vuI9H3cdX3cfZAfXxeDmr+P7LOZ4sB9wi
F3iKHHGrXOKpcsK5+3i6+3/P9999PNt93OY+nuc+bncfL3QfB/fxYvef5fvv
Pl7qPu5wHy93H3e6j1e4jwv38Sr3/4Hvv/t4nfu4y3280X3c7T7e7D6O7uNt
B8Jrm58X+f7LOd4lB9wjF3ivHHGvXOIDcsKlXOHD7v8j33/3cb/7eMB9fMp9
POg+Pu0+Tu7jM+4/x/fffXzOfTzkPj7vPh52H19wH1fu44vu/xPff/fxZffx
iPv4ivt41H181X2cfUd9PP47+vN3ie+/nOPJcsAtcoGnyBG3yiWeKiecyxWe
7v4/8/13H892H7e5j+e5j9vdxwvdx8F9vNj95/n+u4+Xuo873MfL3ced7uMV
7uPCfbzK/X/h++8+Xuc+7nIfb3Qfd7uPN7uPo/t4m/48ZJf5/ss53iUH3CMX
eK8cca9c4gNywqX//OHD7v8r33/3cb/7eMB9fMp9POg+Pu0+Tu7jM+6/wPff
fXzOfTzkPj7vPh52H19wH1fu44vu/xvff/fxZffxiPv4ivt41H181X2cHVQf
j5ezEb7/co4nywG3yAWeIkfcKpd4qpxw7j6e7v6/8/13H892H7e5j+e5j9vd
xwvdx8F9vNj9F/n+u4+Xuo873MfL3ced7uMV7uPCfbzK/f/g++8+Xuc+7nIf
b3Qfd7uPN7uPo/t428Ewsfl5he+/nONdcsA9coH3yhH3yiU+ICdcyhU+7P5/
8v13H/e7jwfcx6fcx4Pu49Pu4+Q+PuP+S3z/3cfn3MdD7uPz7uNh9/EF93Hl
Pr7o/n/x/XcfX3Yfj7iPr7iPR93HV93H2XfVx+O/qz9/o3z/5RxPlgNukQs8
RY64VS7xVDnhXK7wdPf/m++/+3i2+7jNfTzPfdzuPl7oPg7u48Xuv8z33328
1H3c4T5e7j7udB+vcB8X7uNV7v8P33/38Tr3cZf7eKP7uNt9vNl9HN3H2/Tn
IbvK91/O8S454B65wHvliHvlEh+QEy795w8fdv9/+f67j/vdxwPu41Pu40H3
8Wn3cXIfn3H/Fb7/7uNz7uMh9/F59/Gw+/iC+7hyH190///4/ruPL7uPR9zH
V9zHo+7jq+7jrFQfjyuD/vNf838/kHM8QZ8PeKJc4En6fMST5RJfp88n3OI+
vr4MLc3PV9lT5BzfUIbWpo9b5QLfqM9HPFUu8U36fMK5XOFp3j/Onu79eIb3
45nej2d5P57t/XiO9+M278dzvf/V9jzvx/O9H7d7P17g/Xih9+NF3o+D9+Ob
y5A3P8fbi+Uc31KGmc0xvEQu8K36fMRL5RLfps8n3CFXeFkZ2pqfr7GXyzm+
vQztTR93ygW+Q5+PeIVc4jv1+YQLucIrvX+Cvcr78Wrvx2u8H6/1frzO+/F6
78dd3o83eP9r7Y3ejzd5P+72fnyX9+PN3o+3eD+O3o+3liE0Pyfa2+Qcby/D
kqaPd8gF3qnPR7xLLvFufT7hHrnCe8rQ0fx8nb1XzvG+MnQ2fdwrF3i/Ph/x
AbnEB/X5hEu5woe8f5J92PvxEe/Hfd6Pj3o/7vd+fNz78YD34we9/3vsU96P
H/J+POj9+GHvx6e9Hz/i/Th5P360DEXzc7J9Rs7xY2VY0/TxWbnAj+vzEZ+T
S/yEPp/wkFzhJ8vQ1fx8vX1ezvFTZehu+nhYLvDT+nzEF+QSP6PPJ1zJFX7W
+6+zL3o/fs778SXvx897P77s/fgF78cj3o9f9P7vta94P37J+/Go9+OXvR9f
9X78ivfj7G7tx+PuDtd+tvD+l3M84W69//BEucCT9PmIJ8slvk6fT7hFrvD1
d+v99wbe/3KOb7hb7z/cKhf4Rn0+4qlyiW/S5xPO5QpP8/7ref97P57h/Xim
9+NZ3o9nez+e4/24zfvxXO//Pt7/3o/nez9u9368wPvxQu/Hi7wfB+/HN9+t
998U3v9yjm+5W+8/vEQu8K36fMRL5RLfps8n3CFXeNndev+9kfe/nOPb79b7
D3fKBb5Dn494hVziO/X5hAu5wiu9/wbe/96PV3s/XuP9eK3343Xej9d7P+7y
frzB+7+f97/3403ej7u9H9/l/Xiz9+Mt3o+j9+Otd+v918r7X87x9rv1/sM7
5ALv1Ocj3iWXeLc+n3CPXOE9d+v99ybe/3KO992t9x/ulQu8X5+P+IBc4oP6
fMKlXOFD3n8j73/vx0e8H/d5Pz7q/bjf+/Fx78cD3o8f9P4f4P3v/fgh78eD
3o8f9n582vvxI96Pk/fjR+/W+28q7385x4/drfcfPisX+HF9PuJzcomf0OcT
HpIr/OTdev+9mfe/nOOn9L4KeFgu8NP6fMQX5BI/o88nXPn9h5/1/pt4/3s/
fs778SXvx897P77s/fgF78cj3o9f9P4f5P3v/fgl78ej3o9f9n581fvxK96P
s0Paj8cdCrH5mfP+l3M84VDY0fTxRLnAk/T5iCfLJb5On0+4Ra7w9YdCT/Pz
Lbz/5RzfcCj0Nn3cKhf4Rn0+4qlyiW/S5xPO5QpP8/5pvP+9H8/wfjzT+/Es
78ezvR/P8X7c5v14rvf/EO9/78fzvR+3ez9e4P14offjRd6Pg/fjmw+F8tpu
3v9yjm85FPqaY3iJXOBb9fmIl8olvk2fT7hDrvCyQ2Gg+flW3v9yjm8/FAab
Pu6UC3yHPh/xCrnEd+rzCRdyhVd6/wze/96PV3s/XuP9eK3343Xej9d7P+7y
frzB+3+Y97/3403ej7u9H9/l/Xiz9+Mt3o+j9+Oth0Jqfs7k/S/nePuhcLbp
4x1ygXfq8xHvkku8W59PuEeu8J5DYaj5+Tbe/3KO9x0Kw00f98oF3q/PR3xA
LvFBfT7hUq7wIe+fxfvf+/ER78d93o+Pej/u93583PvxgPfjB73/R3j/ez9+
yPvxoPfjh70fn/Z+/Ij34+T9+NFDoWp+zub9L+f4sUPhUtPHZ+UCP67PR3xO
LvET+nzCQ3KFnzwURpqfb+f9L+f4qUNhtOnjYbnAT+vzEV+QS/yMPp9wJVf4
We+fw/vf+/Fz3o8veT9+3vvxZe/HL3g/HvF+/KL3/yjvf+/HL3k/HvV+/LL3
46vej1/xfpzdo/143D16/7Xx/pdzPOEevf/wRLnAk/T5iCfLJb5On0+4Ra7w
9ffo/fcO3v9yjm+4R+8/3CoX+EZ9PuKpcolv0ucTzuUKT/P+ubz/vR/P8H48
0/vxLO/Hs70fz/F+3Ob9eK73v5P3v/fj+d6P270fL/B+vND78SLvx8H78c33
6P03j/e/nONb7tH7Dy+RC3yrPh/xUrnEt+nzCXfIFV52j95/7+L9L+f49nv0
/sOdcoHv0OcjXiGX+E59PuFCrvBK75/P+9/78Wrvx2u8H6/1frzO+/F678dd
3o83eP+7ef97P97k/bjb+/Fd3o83ez/e4v04ej/eeo/ef+28/+Ucb79H7z+8
Qy7wTn0+4l1yiXfr8wn3yBXec4/ef+/h/S/neN89ev/hXrnA+/X5iA/IJT6o
zydcyhU+5P0LeP97Pz7i/bjP+/FR78f93o+Pez8e8H78oPe/l/e/9+OHvB8P
ej9+2Pvxae/Hj3g/Tt6PH71H77+FvP/lHD92j95/+Kxc4Mf1+YjPySV+Qp9P
eEiu8JP36P33Pt7/co6f0vsq4GG5wE/r8xFfkEv8jD6fcOX3H37W+xfx/vd+
/Jz340vej5/3fnzZ+/EL3o9HvB+/6P3v5/3v/fgl78ej3o9f9n581fvxK96P
s8Paj8cdDpn+DXb9/pdzPOFwmFg74IlygSfp8xFPlkt8nT6fcItc4esPh5am
/wHe/3KObzgcWps+bpULfKM+H/FUucQ36fMJ53KFp3n/zbz/vR/P8H480/vx
LO/Hs70fz/F+3Ob9eK73/xjvf+/H870ft3s/XuD9eKH340Xej4P345sPh7zp
L+b9L+f4lsNhZtPHS+QC36rPR7xULvFt+nzCHXKFlx0ObU3/g7z/5Rzffji0
N33cKRf4Dn0+4hVyie/U5xMu5Aqv9P5beP97P17t/XiN9+O13o/XeT9e7/24
y/vxBu//cd7/3o83eT/u9n58l/fjzd6Pt3g/jt6Ptx4Ooekv4f0v53j74bCk
6eMdcoF36vMR75JLvFufT7hHrvCew6Gj6X+I97+c432HQ2fTx71ygffr8xEf
kEt8UJ9PuJQrfMj7b+X97/34iPfjPu/HR70f93s/Pu79eMD78YPe/xO8/70f
P+T9eND78cPej097P37E+3Hyfvzo4VA0/aW8/+UcP3Y4rGn6+Kxc4Mf1+YjP
ySV+Qp9PeEiu8JOHQ1fT/zDvfznHTx0O3U0fD8sFflqfj/iCXOJn9PmEK7nC
z3r/bbz/vR8/5/34kvfj570fX/Z+/IL34xHvxy96/0/y/vd+/JL341Hvxy97
P77q/fgV78fZvdqPx92r918H7385xxPu1fsPT5QLPEmfj3iyXOLr9PmEW+QK
X3+v3n8f4f0v5/iGe/X+w61ygW/U5yOeKpf4Jn0+4Vyu8DTvX8b73/vxDO/H
M70fz/J+PNv78Rzvx23ej+d6/0/x/vd+PN/7cbv34wXejxd6P17k/Th4P775
Xr3/lvP+l3N8y716/+ElcoFv1ecjXiqX+DZ9PuEOucLL7tX776O8/+Uc336v
3n+4Uy7wHfp8xCvkEt+pzydcyBVe6f238/73frza+/Ea78drvR+v83683vtx
l/fjDd7/07z/vR9v8n7c7f34Lu/Hm70fb/F+HL0fb71X779O3v9yjrffq/cf
3iEXeKc+H/EuucS79fmEe+QK77lX77+P8f6Xc7zvXr3/cK9c4P36fMQH5BIf
1OcTLuUKH/L+O3j/ez8+4v24z/vxUe/H/d6Pj3s/HvB+/KD3/wzvf+/HD3k/
HvR+/LD349Pejx/xfpy8Hz96r95/K3j/yzl+7F69//BZucCP6/MRn5NL/IQ+
n/CQXOEn79X77+O8/+UcP6X3VcDDcoGf1ucjviCX+Bl9PuHK7z/8rPffyfvf
+/Fz3o8veT9+3vvxZe/HL3g/HvF+/KL3/yzvf+/HL3k/HvV+/LL346vej1/x
fpwd0X487kiITb/g/S/neMKRsKPp44lygSfp8xFPlkt8nT6fcItc4euPhJ6m
/wne/3KObzgSeps+bpULfKM+H/FUucQ36fMJ53KFp3n/St7/3o9neD+e6f14
lvfj2d6P53g/bvN+PNf7f473v/fj+d6P270fL/B+vND78SLvx8H78c1HQtn0
V/H+l3N8y5HQ1/TxErnAt+rzES+VS3ybPp9wh1zhZUfCQNP/JO9/Oce3HwmD
TR93ygW+Q5+PeIVc4jv1+YQLucIrvX8173/vx6u9H6/xfrzW+/E678frvR93
eT/e4P0/z/vf+/Em78fd3o/v8n682fvxFu/H0fvx1iMhNf01vP/lHG8/Es42
fbxDLvBOfT7iXXKJd+vzCffIFd5zJAw1/U/x/pdzvO9IGG76uFcu8H59PuID
cokP6vMJl3KFD3n/Wt7/3o+PeD/u83581Ptxv/fj496PB7wfP+j9v8D73/vx
Q96PB70fP+z9+LT340e8Hyfvx48eCVXTX8f7X87xY0fCpaaPz8oFflyfj/ic
XOIn9PmEh+QKP3kkjDT9T/P+l3P81JEw2vTxsFzgp/X5iC/IJX5Gn0+4kiv8
rPev5/3v/fg578eXvB8/7/34svfjF7wfj3g/ftH7P8P73/vxS96PR70fv+z9
+Kr341e8H2f3aT8ed5/ef128/+UcT7hP7z88US7wJH0+4slyia/T5xNukSt8
/X16/32W97+c4xvu0/sPt8oFvlGfj3iqXOKb9PmEc7nC07x/A+9/78czvB/P
9H48y/vxbO/Hc7wft3k/nuv9v8j73/vxfO/H7d6PF3g/Xuj9eJH34+D9+Ob7
9P7byPtfzvEt9+n9h5fIBb5Vn494qVzi2/T5hDvkCi+7T++/z/H+l3N8+316
/+FOucB36PMRr5BLfKc+n3AhV3il92/i/e/9eLX34zXej9d6P17n/Xi99+Mu
78cbvP+XeP97P97k/bjb+/Fd3o83ez/e4v04ej/eep/ef928/+Ucb79P7z+8
Qy7wTn0+4l1yiXfr8wn3yBXec5/ef5/n/S/neN99ev/hXrnA+/X5iA/IJT6o
zydcyhU+5P138f73fnzE+3Gf9+Oj3o/7vR8f93484P34Qe//Zd7/3o8f8n48
6P34Ye/Hp70fP+L9OHk/fvQ+vf828/6Xc/zYfXr/4bNygR/X5yM+J5f4CX0+
4SG5wk/ep/ffF3j/yzl+Su+rgIflAj+tz0d8QS7xM/p8wpXff/hZ79/C+9/7
8XPejy95P37e+/Fl78cveD8e8X78ovd/kfe/9+OXvB+Pej9+2fvxVe/Hr3g/
zvq0H4/rC9d+Rt7/tcfVfTyhT3//DU+sXT8v8CSdj3iyzpf4Op1PuEXnK3x9
n/7+26/w/q/d9PENffr7b7i1dtPHN+p8xFN1vsQ36XzCuc5XeJr3b+X97/14
hvfjmd6PZ3k/nu39eI734zbvx3O9/0u8/70fz/d+3O79eIH344Xejxd5Pw7e
j2/uC3nzcxvv/77wlqaPb+nT33/DS/rC25o+vrX+fNPHS3W+xLfVn2/6uEPn
K7ysT3//7Vd5//eFdzR9fHtfeE/Tx521mz6+o/5808crdL7Ed+p8woXOV3il
/vmz7bz/vR+v1j9/wGu8H6/1frzO+/F678dd3o836J8/+zLvf+/Hm7wfd3s/
vsv78Wbvx1u8H0fvx1v79PffdvD+r9308fY+/f03vKN208c7dT7iXTpf4t06
n3CPzld4T5/+/tuv8f6v3fTxvj79/TfcW7vp4/06H/EBnS/xQZ1PuNT5Ch/y
/p28/70fH/F+3Of9+Kj3437vx8e9Hw94P37Q+7/C+9/78UPejwe9Hz/s/fi0
9+NHvB8n78eP9oVPXLs33v+1mz5+rC98qunjs7WbPn5c5yM+p/MlfkLnEx7S
+Qo/2Rc+2/z8dd7/tZs+fqovfL7p4+HaTR8/rfMRX9D5Ej+j8wlXOl/hZ71/
N+9/78fPeT++5P34ee/Hl70fv+D9eMT78Yve/1Xe/96PX/J+POr9+GXvx1e9
H7/i/Ti7X/vxuPtD8z9+ZD28/2s3fTzh/vC6po8n1m76eJLORzxZ50t8nc4n
3KLzFb7+/vCG5ufXeP/Xbvr4hvvDm5o+bq3d9PGNOh/xVJ0v8U06n3Cu8xWe
5v17eP97P57h/Xim9+NZ3o9nez+e4/24zfvxXO//Ou9/78fzvR+3ez9e4P14
offjRd6Pg/fjm+8P05qfe3n/1276+Jb7w6zmGF5Su+njW3U+4qU6X+LbdD7h
Dp2v8LL7w9zm5zd4/9du+vj2+8OCpo87azd9fIfOR7xC50t8p84nXOh8hVd6
/z7e/96PV3s/XuP9eK3343Xej9d7P+7yfrzB+7/J+9/78Sbvx93ej+/yfrzZ
+/EW78fR+/HW+8MHmp+9vP9rN328/f7woaaPd9Ru+ninzke8S+dLvFvnE+7R
+QrvuT98pPn5Ld7/tZs+3nd/+FjTx721mz7er/MRH9D5Eh/U+YRLna/wIe/f
z/vf+/ER78d93o+Pej/u93583PvxgPfjB73/27z/vR8/5P140Pvxw96PT3s/
fsT7cfJ+/Oj9YeW1f914/9du+vix+8Papo/P1m76+HGdj/iczpf4CZ1PeEjn
K/zk/WFD8/M7vP9rN3381P3hrqaPh2s3ffy0zkd8QedL/IzOJ1zpfIWf9f6D
vP+9Hz/n/fiS9+PnvR9f9n78gvfjEe/HL3r/d3n/ez9+yfvxqPfjl70fX/V+
/Ir34+yo9uNxR8PW5mfJ+79208cTjoadTR9PrN308SSdj3iyzpf4Op1PuEXn
K3z90bCn+Xk37//aTR/fcDTsb/q4tXbTxzfqfMRTdb7EN+l8wrnOV3ia9x/i
/e/9eIb345nej2d5P57t/XiO9+M278dzvf8e3v/ej+d7P273frzA+/FC78eL
vB8H78c3Hw2Hmp+Hef8fDfc0fXzL0XC0OYaXHA3Hmj6+tf5808dLdb7Et9Wf
b/q4Q+crvOxo+I3m5728/2s3fXz70fA7TR931m76+A6dj3iFzpf4Tp1PuND5
Cq/UP392hPe/9+PV+ucPeI3347Xej9d5P17v/bjL+/EG77+P97/3403ej7u9
H9/l/Xiz9+Mt3o+j9+OtR8Ojzc8+3v+1mz7efjQ83vTxjtpNH+/U+Yh36XyJ
d+t8wj06X+E9R8OTzc/7ef/Xbvp439HwdNPHvbWbPt6v8xEf0PkSH9T5hEud
r/Ah7z/K+9/78RHvx33ej496P+73fnzc+/GA9+MHvf8Y73/vxw95Px70fvyw
9+PT3o8f8X6cvB8/ejT8w7V/bt7/tZs+fuxo+Jemj8/Wbvr4cZ2P+JzOl/gJ
nU94SOcr/OTR8B/Nzwd4/9du+vipo+F/mj4ert308dM6H/EFnS/xMzqfcKXz
FX7W+4/z/vd+/Jz340vej5/3fnzZ+/EL3o9HvB+/6P0neP97P37J+/Go9+OX
vR9f9X78ivfj7Jj243HHwpeanwO8/2s3fTzhWPhK08cTazd9PEnnI56s8yW+
TucTbtH5Cl9/LHy9+XmS93/tpo9vOBa+3fRxa+2mj2/U+Yin6nyJb9L5hHOd
r/A073+Q97/34xnej2d6P57l/Xi29+M53o/bvB/P9f7f4P3v/Xi+9+N278cL
vB8v9H68yPtx8H5887FwuPl5ivd/7aaPbzkW+ptjeEntpo9v1fmIl+p8iW/T
+YQ7dL7Cy46FU83P3+T9X7vp49uPhdNNH3fWbvr4Dp2PeIXOl/hOnU+40PkK
r/T+h3j/ez9e7f14jffjtd6P13k/Xu/9uMv78Qbv/y3e/96PN3k/7vZ+fJf3
483ej7d4P47ej7ceC3/Q/Bzk/V+76ePtx8KfNH28o3bTxzt1PuJdOl/i3Tqf
cI/OV3jPsfAXzc/f5v1fu+njfcfC3zR93Fu76eP9Oh/xAZ0v8UGdT7jU+Qof
8v6Hef97Pz7i/bjP+/FR78f93o+Pez8e8H78oPf/Du9/78cPeT8e9H78sPfj
096PH/F+nLwfP3osXLx2jvd/7aaPHzsWLjd9fLZ208eP63zE53S+xE/ofMJD
Ol/hJ4+FK83P3+X9X7vp46eOhatNHw/Xbvr4aZ2P+ILOl/gZnU+40vkKP+v9
j/D+9378nPfjS96Pn/d+fNn78Qvej0e8H7/o/b/H+9/78Uvej0e9H7/s/fiq
9+NXvB9n/dqPx/WH8c3/A3bi/V/71XUfT+gPk5v//wd4Yu36eYEn6XzEk3W+
xNfpfMItOl/h6/vDlKb/+7z/azd9fEN/mNr0cWvtpo9v1PmIp+p8iW/S+YRz
na/wNO9/lPe/9+MZ3o9nej+e5f14tvfjOd6P27wfz/X+P+D97/14vvfjdu/H
C7wfL/R+vMj7cfB+fHN/mN70z/D+7w9vbfr4lv7w9qaPl9Ru+vjW+vNNHy/V
+RLfpvMJd+h8hZf1h3lN/w95//eHdzV9fHt/eF/Tx521mz6+o/5808crdL7E
d+p8woXOV3il/vmzx3j/ez9e7f14jffjtd6P13k/Xu/9uMv78Qb982d/xPvf
+/Em78fd3o/v8n682fvxFu/H0fvx1v6wuOmf5f1fu+nj7f1hadPHO2o3fbxT
5yPepfMl3q3zCffofIX39IflTf+Pef/Xbvp4X39Y0fRxb+2mj/frfMQHdL7E
B3U+4VLnK3zI+x/n/e/9+Ij34z7vx0e9H/d7Pz7u/XjA+/GD3v8nvP+9Hz/k
/XjQ+/HD3o9Pez9+xPtx8n78aH/4ZNM/x/u/dtPHj/WHTzd9fLZ208eP63zE
53S+xE/ofMJDOl/hJ/vD55r+n/L+r9308VP94QtNHw/Xbvr4aZ2P+ILOl/gZ
nU+40vkKP+v9T/D+9378nPfjS96Pn/d+fNn78Qvej0e8H7/o/X/G+9/78Uve
j0e9H7/s/fiq9+NXvB9nD2g/HvdAeE3TH+L9X7vp4wkPhNc3fTyxdtPHk3Q+
4sk6X+LrdD7hFp2v8PUPhDc2/T/n/V+76eMbHghvbvq4tXbTxzfqfMRTdb7E
N+l8wrnOV3ia9z/J+9/78QzvxzO9H8/yfjzb+/Ec78dt3o/nev9f8P73fjzf
+3G79+MF3o8Xej9e5P04eD+++YEwo+mf5/1fu+njWx4Ic5o+XlK76eNbdT7i
pTpf4tt0PuEOna/wsgfC/Kb/l7z/azd9fPsDYVHTx521mz6+Q+cjXqHzJb5T
5xMudL7CK73/Kd7/3o9Xez9e4/14rffjdd6P13s/7vJ+vMH7/4r3v/fjTd6P
u70f3+X9eLP34y3ej6P3460PhA82/WHe/7WbPt7+QPhw08c7ajd9vFPnI96l
8yXerfMJ9+h8hfc8ED7a9P+a93/tpo/3PRA+3vRxb+2mj/frfMQHdL7EB3U+
4VLnK3zI+5/m/e/9+Ij34z7vx0e9H/d7Pz7u/XjA+/GD3v83vP+9Hz/k/XjQ
+/HD3o9Pez9+xPtx8n786ANhddO/wPu/dtPHjz0Q1jd9fLZ208eP63zE53S+
xE/ofMJDOl/hJx8Im5r+3/L+r9308VMPhC1NHw/Xbvr4aZ2P+ILOl/gZnU+4
0vkKP+v9z/D+9378nPfjS96Pn/d+fNn78Qvej0e8H7/o/X/H+9/78Uvej0e9
H7/s/fiq9+NXvB9nx7Ufjzsetjf9ivd/7aaPJxwPu5s+nli76eNJOh/xZJ0v
8XU6n3CLzlf4+uNhX9P/e97/tZs+vuF4ONj0cWvtpo9v1PmIp+p8iW/S+YRz
na/wNO9/1p7u/XiG9+OZ3o9neT+e7f14jvfjNu/Hc73/H+x53o/nez9u9368
wPvxQu/Hi7wfB+/HNx8P9zX9i/bi2k0f33I8nGj6eEntpo9v1fmIl+p8iW/T
+YQ7dL7Cy46H32r6/2gvr9308e3Hw+81fdxZu+njO3Q+4hU6X+I7dT7hQucr
vNL7n7NXeT9e7f14jffjtd6P13k/Xu/9uMv78Qbv/yd7o/fjTd6Pu70f3+X9
eLP34y3ej6P3463Hw2NN/5K9rXbTx9uPhyeaPt5Ru+njnTof8S6dL/FunU+4
R+crvOd4eKrp/7O9t3bTx/uOh2eaPu6t3fTxfp2P+IDOl/igzidc6nyFD3n/
8/Zh78dHvB/3eT8+6v243/vxce/HA96PH/T+f7FPeT9+yPvxoPfjh70fn/Z+
/Ij34+T9+NHj4Z+a/mX7TO2mjx87Hv6t6eOztZs+flznIz6n8yV+QucTHtL5
Cj95PPxX0/9X+3ztpo+fOh7+r+nj4dpNHz+t8xFf0PkSP6PzCVc6X+Fnvf8F
+6L34+e8H1/yfvy89+PL3o9f8H484v34Re//N/uK9+OXvB+Pej9+2fvxVe/H
r3g/zk5oPx53Iny56Y/Y42s3fTzhRPhq08cTazd9PEnnI56s8yW+TucTbtH5
Cl9/Inyz6f+7PaV208c3nAjfbfq4tXbTxzfqfMRTdb7EN+l8wrnOV3ia979o
T/d+PMP78Uzvx7O8H8/2fjzH+3Gb9+O53v8f9jzvx/O9H7d7P17g/Xih9+NF
3o+D9+ObT1z7++jZFXtx7aaPbzlx7e+TB7ykdtPHt+p8xEt1vsS36XzCHTpf
4WUnrv199Ow/7eW1mz6+/cS1v08dcGftpo/v0PmIV+h8ie/U+YQLna/wSu9/
yV7l/Xi19+M13o/Xej9e5/14vffjLu/HG7z/v+yN3o83eT/u9n58l/fjzd6P
t3g/jt6Pt54If9T0R+1ttZs+3n4i/FnTxztqN328U+cj3qXzJd6t8wn36HyF
95wIf9X0/9veW7vp430nwt81fdxbu+nj/Tof8QGdL/FBnU+41PkKH/L+l+3D
3o+PeD/u83581Ptxv/fj496PB7wfP+j9/2Of8n78kPfjQe/HD3s/Pu39+BHv
x8n78aMnrv199OyqfaZ208ePnbj298kDPlu76ePHdT7iczpf4id0PuEhna/w
kyeu/X307H/t87WbPn7qxLW/Tx3wcO3xdR8/rfMRX9D5Ej+j8wlXOl/hZ73/
Ffui9+PnvB9f8n78vPfjy96PX/B+POL9+EXv/z/7ivfjl7wfj3o/ftn78VXv
x694P84GtB+/qva1/9gjj9PzHL9azwMer+cFfo2eRzxBz0v8Wj1PeKL7+HW1
m78g/yp7Uu3JdR9/j54HPFnPC/x6PY/4Oj0v8ffqecItel7hN9Ru/gL9OPv6
2lPqPv4+PQ94ip4X+I16HvENel7i79fzhFv1vMJvqt38Bf1X2zfWnlr38Q/o
ecBT9bzAb9bziG/S8xL/oJ4nnOt5hd/i+x9vT/P94x/y/ePpvn/8Vt8/nuH7
xz/s+8czff/4bb7/19izfP/4R3z/eLbvH7/d94/n+P7xj/r+cZvvH7/D9z/B
nuv7x+/0/eN5vn/8Lt8/nu/7x+/2/eN23z9+j+//tfYC3z9+r+8fL/T94/f5
/vEi3z9+v+8fB98//kDtvP450b659vS6j39MzwNerOcF/qCeR3yLnpf4x/U8
4SV6XuEP1W7+DSZeZ99ae3bdxz+h5wEv1fMCf1jPI75Nz0v8k3qecIeeV/gj
tZt/A4pJ9rLa8+o+/ik9D3i5nhf4o3oe8e16XuKf1vOEO/W8wh+r3fwvZP4e
+47aC+s+/hk9D3iFnhf443oe8Z16XuKf1fOECz2v8Cd8/5Ptlb5//HO+f7zK
948/6fvHq33/+Od9/3iN7x9/yvf/enut7x//gu8fr/P940/7/vF63z/+jO8f
d/n+8Wd9/9fZG3z/+Bd9/3ij7x9/zvePN/n+8S/5/nG37x9/3vf/vfZdvn/8
y75/vNn3j7/g+8dbfP/4i75/HH3/+Fdqh/pni7219uK6j7+k5wFv0/MC/6qe
R7xdz0v8ZT1PeIeeV/jXajf/BhlvsHfWrv9vOf6Knge8S88L/Ot6HvFuPS/x
V/U84R49r/DXajf/BhrX23tqL6/7+Ot6HvBePS/wN/Q84n16XuJv6nnCvXpe
4W/Vbv4NOr7P3l97Rd3H39bzgA/oeYG/o+cRH9TzEn9XzxMu9bzCd/v+p9iH
fP/4Ht8/Puz7x/f6/vER3z++z/eP+3z/+H7f/xvto75/fMz3j/t9//gB3z8+
7vvHJ3z/eMD3j0/6/m+wH/T949/w/eNTvn/8m75//JDvH/+W7x8P+v7xb/v+
v99+2PePf8f3j0/7/vHv+v7xI75//Hu+f5x8//j3axf1z1b70dqr6j7+Az0P
+IyeF/gP9Tzix/S8xH+k5wmf1fMK/3Ht5n8h+pvsx2uvq/v4T/Q84HN6XuA/
1fOIn9DzEv+Znic8pOcV/vPazf/C9BvtJ2tvrPv4L/Q84PN6XuC/1POIn9Lz
Ev+Vnic8rOcV/uvazf9C9h+wn669ue7jv9HzgC/oeYH/Vs8jfkbPS/x3ep5w
pecV/nvf/1T7Wd8//gffP77o+8f/6PvHz/n+8T/5/vEl3z/+Z9//m+3nff/4
X3z/+LLvH/+r7x+/4PvH/+b7xyO+f/zvvv+b7Bd9//g/fP/4iu8f/6fvH7/k
+8f/5fvHo75//N++/x+0X/b94//x/eOrvn/8v75//IrvH/+f7x9nJ3X/+FW1
m//I7XEn9fsffrWeBzxezwv8Gj2PeIKel/i1ep7wRD2v8OtO6ve/t9iTTur3
P/w9eh7wZD0v8Ov1POLr9LzE36vnCbfoeYXfcFK//02zrz+p3//w9+l5wFP0
vMBv1POIb9DzEn+/nifcqucVftNJ/f73Q/aNJ/X7H/4BPQ94qp4X+M16HvFN
el7iH9TzhHM9r/BbfP/T7Wm+f/xDvn883feP3+r7xzN8//iHff94pu8fv833
/1Z7lu8f/4jvH8/2/eO3+/7xHN8//lHfP27z/eN3+P5n2HN9//idvn88z/eP
3+X7x/N9//jdvn/c7vvH7/H9/7C9wPeP3+v7xwt9//h9vn+8yPeP3+/7x8H3
jz9wUr//zbRvPqnf//CP6XnAi/W8wB/U84hv0fMS/7ieJ7xEzyv8oZP6/e9t
9q0n9fsf/gk9D3ipnhf4w3oe8W16XuKf1POEO/S8wh85qd//ZtnLTur3P/xT
eh7wcj0v8Ef1POLb9bzEP63nCXfqeYU/dlK///2IfcdJ/f6Hf0bPA16h5wX+
uJ5HfKeel/hn9TzhQs8r/Anf/2x7pe8f/5zvH6/y/eNP+v7xat8//nnfP17j
+8ef8v2/3V7r+8e/4PvH63z/+NO+f7ze948/4/vHXb5//Fnf/xx7g+8f/6Lv
H2/0/ePP+f7xJt8//iXfP+72/ePP+/5/1L7L949/2fePN/v+8Rd8/3iL7x9/
0fePo+8f/8pJ/f7XZm89qd//8Jf0POBtel7gX9XziLfreYm/rOcJ79DzCv/a
Sf3+9w5750n9/oe/oucB79LzAv+6nke8W89L/FU9T7hHzyv8tZP6/W+uveek
fv/DX9fzgPfqeYG/oecR79PzEn9TzxPu1fMKf+ukfv97p73/pH7/w9/W84AP
6HmBv6PnER/U8xJ/V88TLvW8wnf7/ufZh3z/+B7fPz7s+8f3+v7xEd8/vs/3
j/t8//h+3/+77KO+f3zM94/7ff/4Ad8/Pu77xyd8/3jA949P+v7n2w/6/vFv
+P7xKd8//k3fP37I949/y/ePB33/+Ld9/++2H/b949/x/ePTvn/8u75//Ijv
H/+e7x8n3z/+/ZP6/a/dfvSkfv/Df6DnAZ/R8wL/oZ5H/Jiel/iP9Dzhs3pe
4T8+qd//3mM/flK//+E/0fOAz+l5gf9UzyN+Qs9L/Gd6nvCQnlf4z0/q978F
9pMn9fsf/gs9D/i8nhf4L/U84qf0vMR/pecJD+t5hf/6pH7/e6/99En9/of/
Rs8DvqDnBf5bPY/4GT0v8d/pecKVnlf4733/C+1nff/4H3z/+KLvH/+j7x8/
5/vH/+T7x5d8//ifff/vs5/3/eN/8f3jy75//K++f/yC7x//m+8fj/j+8b/7
/hfZL/r+8X/4/vEV3z/+T98/fsn3j//L949Hff/4v33/77df9v3j//H946u+
f/y/vn/8iu8f/5/vH2cP6v7xq2rH+mewx9XeVvfxq/U84PF6XuDX6HnEE/S8
xK/V84Qn6nmFX1d7R/3zA/ak2rv+n6a7ANKjXr99PwkOwd2Du7s3Hjx48Be3
AMEdGg2eAAGCN5oAAQITiI007u7euLvbZq81z/M9dauyP/fZ664+d3Fq/r86
k0L9eJq4F7hP3Ft42riXeLq4V3j6uNd4hrg3eEZ5qP7cID2TPEz9eOa4F3iW
uLfwrHEv8Wxxr/Dsca/xHHFv8JzycP25YXou+Tr147njXuB54t7C88a9xPPF
vcLzx73GfePe4AVy/43SC+b+eKHcHy+c++NFcn+8aO6PF8v98eK5P14i9984
vWTuj5fK/fHSuT9eJvfHy+b+eLncHy+f++MVcv9N0ivm/nil3B+vnPvjVXJ/
vGruj1fL/fHquT9eI/ffNL1m7o/Xyv3x2rk/Xif3x+vm/ni93B8XuT9eX670
Z7/0BvKt6scbxr3AG8W9hTeOe4k3iXuFN417jfvFvcGbySP9Z3pzeZT68RZx
L/CWcW/hreJe4q3jXuFt4l7j/nFv8LbyaPemt5PHqB9vH/cC7xD3Ft4x7iXe
Ke4V3jnuNR4Q9wbvIo/z/z7Tu8od6se7xb3Au8e9hfeIe4n3jHuF94p7jVtx
b/Deuf+W6X1yf7xv7o/3y/3x/rk/PiD3xwfm/vig3B8fnPtvlT4k98eH5v54
YO6PD8v98eG5Pz4i98eDcn98ZO6/dfqo3B8fnfvjY3J/fGzuj4/L/fHxuT8+
IffHJ+b+26RPyv3xybk/PiX3x6fm/vi03B+fnvvjMvfHZ8i1/uyfPlN+VP34
rLgX+Oy4t/A5cS/xuXGv8OC41/i8uDf4fPlJ/blt+gL5WfXjC+Ne4Ivi3sIX
x73El8S9wkPiXuOhcW/wpfKL+nO79GXyq+rHl8e9wMPi3sJXxL3EV8a9wlfF
vcbD497gq+U39ef26Wvkd9WPr417ga+LewtfH/cS3xD3Ct8Y9xpXcW/wTbn/
Dumbc398S+6Pb8398W25P74998cjcn88MvfHd+T+O6bvzP3xXbk/HpX747tz
f3xP7o/vzf3x6Nwf35f775S+P/fH7bk/HpP74wdyf/xg7o/H5v54XO6Px+f+
O6cn5P54Yu6PO3J/3Jn7467cH3fn/rjO/fFDcqM/B6Qflj9RP34k7gV+NO4t
/FjcS/x43Cv8RNxr/GTcG/yU/IX+3CX9tPyN+vEzcS/ws3Fv4efiXuLn417h
F+Je4xfj3uCX5B/0567pl+Vf1I9fiXuBX417C78W9xK/HvcKvxH3Gr8Z9wa/
Jf+hP3dLvy3/o378TtwL/G7cW/i9uJf4/bhX+IO417iJe4M/zP13T3+U++OP
c3/8Se6PP8398We5P/4898df5P74y9x/j/RXuT/+OvfH3+T++NvcH3+X++Pv
c3/8Q+6Pf8z990z/lPvjn3N//Evuj3/N/fFvuT/+PffHf+T++M/cf6/0X7k/
/jv3x//k/vjf3B//L/fH/+X+uK099se92uP910r3bo/3H54k7gWeNO4tPFnc
Szx53Cs8RdxrPGXcGzxVe7z/9k5P3R7vPzxN3AvcJ+4tPG3cSzxd3Cs8fdxr
PEPcGzxje7z/9knP1B7vPzxz3As8S9xbeNa4l3i2uFd49rjXeI64N3jO9nj/
7Zueqz3ef3juuBd4nri38LxxL/F8ca/w/HGvcd+4N3iB3H+/9IK5P14o98cL
5/54kdwfL5r748Vyf7x47o+XyP33Ty+Z++Olcn+8dO6Pl8n98bK5P14u98fL
5/54hdz/gPSKuT9eKffHK+f+eJXcH6+a++PVcn+8eu6P18j9D0yvmfvjtXJ/
vHbuj9fJ/fG6uT9eL/fHRe6P12+P999B6Q3a4/2HN4x7gTeKewtvHPcSbxL3
Cm8a9xr3i3uDN2uP99/B6c3b4/2Ht4h7gbeMewtvFfcSbx33Cm8T9xr3j3uD
t22P998h6e3a4/2Ht497gXeIewvvGPcS7xT3Cu8c9xoPiHuDd2mP99+h6V3b
4/2Hd4t7gXePewvvEfcS7xn3Cu8V9xq34t7gvXP/gel9cn+8b+6P98v98f65
Pz4g98cH5v74oNwfH5z7H5Y+JPfHh+b+eGDujw/L/fHhuT8+IvfHg3J/fGTu
f3j6qNwfH53742Nyf3xs7o+Py/3x8bk/PiH3xyfm/kekT8r98cm5Pz4l98en
5v74tNwfn5774zL3x2e0x/tvUPrM9nj/4bPiXuCz497C58S9xOfGvcKD417j
8+Le4PPb4/13ZPqC9nj/4QvjXuCL4t7CF8e9xJfEvcJD4l7joXFv8KXt8f47
Kn1Ze7z/8OVxL/CwuLfwFXEv8ZVxr/BVca/x8Lg3+Or2eP8dnb6mPd5/+Nq4
F/i6uLfw9XEv8Q1xr/CNca9xFfcG35T7H5O+OffHt+T++NbcH9+W++Pbc388
IvfHI3N/fEfuf2z6ztwf35X741G5P74798f35P743twfj8798X25/3Hp+3N/
3J774zG5P34g98cP5v54bO6Px+X+eHzuf3x6Qu6PJ+b+uCP3x525P+7K/XF3
7o/r3B8/1B7vvxPSD7fH+w8/EvcCPxr3Fn4s7iV+PO4VfiLuNX4y7g1+qj3e
fyemn26P9x9+Ju4FfjbuLfxc3Ev8fNwr/ELca/xi3Bv8Unu8/05Kv9we7z/8
StwL/GrcW/i1uJf49bhX+I241/jNuDf4rfZ4/52cfrs93n/4nbgX+N24t/B7
cS/x+3Gv8Adxr3ET9wZ/mPufkv4o98cf5/74k9wff5r7489yf/x57o+/yP3x
l7n/qemvcn/8de6Pv8n98be5P/4u98ff5/74h9wf/5j7n5b+KffHP+f++Jfc
H/+a++Pfcn/8e+6P/8j98Z+5/+npv3J//Hfuj//J/fG/uT/+X+6P/8v9cduY
2B/3kv2/ynTvMfH733gS33u1FXhS33u1tfBkkS/x5JGv8BSRr/GUkW/wVGPi
97/PSE89Jn7/G0/ju/pxH9/Vj6eNfImni3yFp498jWeIfINnHBO//31meqYx
8fvfeGbf1Y9n8V39eNbIl3i2yFd49sjXeI7IN3jOMfH732el5xoTv/+N5/Zd
/Xge39WP5418ieeLfIXnj3yN+0a+wQvk/menFxxT9PL+eKHcHy/su/rxIrL3
x4tGvsKL+a5+vHjkG7xE7n9OekndvT9eSvb+eGnf1Y+X8V39eNnIV3i5yNd4
+cg3eAXZ+5+bXlH2/ngl39WPV/Zd/XiVyJd41chXeLXI13j1yDd4Ddn7D06v
KXt/vJbv6sdr+65+vE7kS7xu5Cu8XuRrXES+weuPid//Pi+9wZj4/W+8oe/q
xxv5rn68ceRLvEnkK7xp5GvcL/IN3mxM/P73+enNx8Tvf+MtfFc/3tJ39eOt
Il/irSNf4W0iX+P+kW/wtmPi978vSG83Jn7/G2/vu/rxDr6rH+8Y+RLvFPkK
7xz5Gg+IfIN3GRO//31hetcx8fvfeDff1Y939139eI/Il3jPyFd4r8jXuBX5
Bu+tfx68/0XpfWTvj/f1Xf14P9/Vj/ePfIkPiHyFD4x8jQ+KfIMPlr3/xelD
ZO+PD/Vd/Xig7+rHh0W+xIdHvsJHRL7GgyLf4CNl739J+ijZ++OjfVc/PsZ3
9eNjI1/i4yJf4eMjX+MTIt/gE2XvPyR9kuz98cm+qx+f4rv68amRL/Fpka/w
6ZGvcRn5Bp8hF/pzaPpM2b//jc/yXf34bN/Vj8+JfInPjXyFB0e+xudFvsHn
y/7970vTF8j6T33xhb6rH1/ku/rxxZEv8SWRr/CQyNd4aOQbfKncX39elr5M
9u9/48t9Vz8e5rv68RWRL/GVka/wVZGv8fDIN/hq2b//fXn6Gtm//42v9V39
+Drf1Y+vj3yJb4h8hW+MfI2ryDf4pjFFb+8/LH2z7P3xLb6rH9/qu/rxbZEv
8e2Rr/CIyNd4ZOQbfIfs/a9I3yl7f3yX7+rHo3xXP7478iW+J/IVvjfyNR4d
+QbfJ3v/K9P3y94ft/uufjzGd/XjByJf4gcjX+Gxka/xuMg3eLzs/a9KT5C9
P57ou/pxh+/qx52RL3FX5CvcHfka15Fv8EP656GlP4enH5b9+9/4Ed/Vjx/1
Xf34sciX+PHIV/iJyNf4ycg3+CnZv/99dfppeaD68TO+qx8/67v68XORL/Hz
ka/wC5Gv8YuRb/BL8iD9eU36Zdm//41f8V39+FXf1Y9fi3yJX498hd+IfI3f
jHyD35L9+9/Xpt+W/fvf+B3f1Y/f9V39+L3Il/j9yFf4g8jXuIl8gz/UPw/e
/7r0R7L3xx/7rn78ie/qx59GvsSfRb7Cn0e+xl9EvsFfyt7/+vRXsvfHX/uu
fvyN7+rH30a+xN9FvsLfR77GP0S+wT/K3v+G9E+y98c/+65+/Ivv6se/Rr7E
v0W+wr9HvsZ/RL7Bf8re/8b0X7L3x3/7rn78j+/qx/9GvsT/i3yF/4t8jdse
6Mk3uJfsP6t0b9nvPzyJ7+rHk/qufjxZ5Es8eeQrPEXkazxl5Bs8lez3303p
qeU+6sfT+K5+3Md39eNpI1/i6SJf4ekjX+MZIt/gGWW//25OzyT7/Ydn9l39
eBbf1Y9njXyJZ4t8hWePfI3niHyD55T9/rslPZfs9x+e23f143l8Vz+eN/Il
ni/yFZ4/8jXuG/kGL5D735pe8IFiEu+PF8r98cK+qx8vInt/vGjkK7yY7+rH
i0e+wUvI3v+29JKy98dL+a5+vLTv6sfLRL7Ey0a+wstFvsbLR77BK8je//b0
irL3xyv5rn68su/qx6tEvsSrRr7Cq0W+xqtHvsFryN5/RHpN2fvjtXxXP17b
d/XjdSJf4nUjX+H1Il/jIvINXl/79tWfI9MbyH7/4Q19Vz/eyHf1440jX+JN
Il/hTSNf436Rb/Bmst9/d6Q3l5dWP97Cd/XjLX1XP94q8iXeOvIV3ibyNe4f
+QZvK/v9d2d6O9nvP7y97+rHO/iufrxj5Eu8U+QrvHPkazwg8g3eRfb77670
rrLff3g339WPd/dd/XiPyJd4z8hXeK/I17gV+QbvrX8evP+o9D6y98f7+q5+
vJ/v6sf7R77EB0S+wgdGvsYHRb7BB8ve/+70IbL3x4f6rn480Hf148MiX+LD
I1/hIyJf40GRb/CRsve/J32U7P3x0b6rHx/ju/rxsZEv8XGRr/Dxka/xCZFv
8Imy9783fZLs/fHJvqsfn+K7+vGpkS/xaZGv8OmRr3EZ+QafIRf6c3T6TNnv
P3yW7+rHZ/uufnxO5Et8buQrPDjyNT4v8g0+X/b77770BbL+U198oe/qxxf5
rn58ceRLfEnkKzwk8jUeGvkGXyr7/Xd/+jLZ7z98ue/qx8N8Vz++IvIlvjLy
Fb4q8jUeHvkGXy37/deevkb2+w9f67v68XW+qx9fH/kS3xD5Ct8Y+RpXkW/w
TQ8Uk3r/MembZe+Pb/Fd/fhW39WPb4t8iW+PfIVHRL7GIyPf4Dtk7/9A+k7Z
++O7fFc/HuW7+vHdkS/xPZGv8L2Rr/HoyDf4Ptn7P5i+X/b+uN139eMxvqsf
PxD5Ej8Y+QqPjXyNx0W+weNl7z82PUH2/nii7+rHHb6rH3dGvsRdka9wd+Rr
XEe+wQ/pn4eWvyv9sOz3H37Ed/XjR31XP34s8iV+PPIVfiLyNX4y8g1+Svb7
b3z6aXmg+vEzvqsfP+u7+vFzkS/x85Gv8AuRr/GLkW/wS7LffxPSL8t+/+FX
fFc/ftV39ePXIl/i1yNf4TciX+M3I9/gt2S//yam35b9/sPv+K5+/K7v6sfv
Rb7E70e+wh9EvsZN5Bv8of558P4d6Y9k748/9l39+BPf1Y8/jXyJP4t8hT+P
fI2/iHyDv5S9f2f6K9n74699Vz/+xnf1428jX+LvIl/h7yNf4x8i3+AfZe/f
lf5J9v74Z9/Vj3/xXf3418iX+LfIV/j3yNf4j8g3+E/Z+3en/5K9P/7bd/Xj
f3xXP/438iX+X+Qr/F/ka9z2YE++wb3kUn/W6d6yf/8bT+K7+vGkvqsfTxb5
Ek8e+QpPEfkaTxn5Bk8l+/e/H0pPLV+kfjyN7+rHfXxXP5428iWeLvIVnj7y
NZ4h8g2eUfbvfz+cnkn273/jmX1XP57Fd/XjWSNf4tkiX+HZI1/jOSLf4Dll
//73I+m5ZP/+N57bd/XjeXxXP5438iWeL/IVnj/yNe4b+QYvkPs/ml7wwWIy
748Xkr0/Xth39eNFfFc/XjTyFV4s8jVePPINXiL3fyy9pO7eHy8le3+8tO/q
x8v4rn68bOQrvFzka7x85Bu8guz9H0+vKHt/vJLv6scr+65+vErkS7xq5Cu8
WuRrvHrkG7yG7P2fSK8pe3+8lu/qx2v7rn68TuRLvG7kK7xe5GtcRL7B6+v/
/1f688n0BrJ//xtv6Lv68Ua+qx9vHPkSbxL5Cm8a+Rr3i3yDN5P9+99PpTeX
R6kfb+G7+vGWvqsfbxX5Em8d+QpvE/ka9498g7eV/fvfT6e3k/3733h739WP
d/Bd/XjHyJd4p8hXeOfI13hA5Bu8i+zf/34mvavs3//Gu/mufry77+rHe0S+
xHtGvsJ7Rb7Grcg3eG/98+D9n03vI3t/vK/v6sf7+a5+vH/kS3xA5Ct8YORr
fFDkG3yw7P2fSx8ie398qO/qxwN9Vz8+LPIlPjzyFT4i8jUeFPkGHyl7/+fT
R8neHx/tu/rxMb6rHx8b+RIfF/kKHx/5Gp8Q+QafKHv/F9Inyd4fn+y7+vEp
vqsfnxr5Ep8W+QqfHvkal5Fv8BlyrT9fTJ8p+/e/8Vm+qx+f7bv68TmRL/G5
ka/w4MjX+LzIN/h82b///VL6AvlZ9eMLfVc/vsh39eOLI1/iSyJf4SGRr/HQ
yDf4Utm///1y+jLZv/+NL/dd/XiY7+rHV0S+xFdGvsJXRb7GwyPf4Ktl//73
K+lrZP/+N77Wd/Xj63xXP74+8iW+IfIVvjHyNa4i3+CbHiwm9/6vpm+WvT++
xXf141t9Vz++LfIlvj3yFR4R+RqPjHyD75C9/2vpO2Xvj+/yXf14lO/qx3dH
vsT3RL7C90a+xqMj3+D7ZO//evp+2fvjdt/Vj8f4rn78QORL/GDkKzw28jUe
F/kGj5e9/xvpCbL3xxN9Vz/u8F39uDPyJe6KfIW7I1/jOvINfkj/PDT68830
w7J//xs/4rv68aO+qx8/FvkSPx75Cj8R+Ro/GfkGPyX797/fSj8tf6N+/Izv
6sfP+q5+/FzkS/x85Cv8QuRr/GLkG/yS7N//fjv9suzf/8av+K5+/Krv6sev
Rb7Er0e+wm9EvsZvRr7Bb8n+/e930m/L/v1v/I7v6sfv+q5+/F7kS/x+5Cv8
QeRr3ES+wR/qnwfv/276I9n74499Vz/+xHf1408jX+LPIl/hzyNf4y8i3+Av
Ze//Xvor2fvjr31XP/7Gd/XjbyNf4u8iX+HvI1/jHyLf4B9l7/9++ifZ++Of
fVc//sV39eNfI1/i3yJf4d8jX+M/It/gP2Xv/0H6L9n74799Vz/+x3f1438j
X+L/Rb7C/0W+xm1je/IN7iWX/uci3Vv2+w9P4rv68aS+qx9PFvkSTx75Ck8R
+RpPGfkGTyX7/fdhemr5IvXjaXxXP+7ju/rxtJEv8XSRr/D0ka/xDJFv8Iyy
338fpWeS/f7DM/uufjyL7+rHs0a+xLNFvsKzR77Gc0S+wXPKfv99nJ5L9vsP
z+27+vE8vqsfzxv5Es8X+QrPH/ka9418gxcYW0zh/T9JLyh7f7yQ7+rHC/uu
frxI5Eu8aOQrvFjka7x45Bu8hOz9P00vKXt/vJTv6sdL+65+vEzkS7xs5Cu8
XORrvHzkG7yC7P0/S68oe3+8ku/qxyv7rn68SuRLvGrkK7xa5Gu8euQbvIbs
/T9Pryl7f7yW7+rHa/uufrxO5Eu8buQrvF7ka1xEvsHr65+HSn9+kd5A9vsP
b+i7+vFGvqsfbxz5Em8S+QpvGvka94t8gzeT/f77Mr25PEr9eAvf1Y+39F39
eKvIl3jryFd4m8jXuH/kG7yt7PffV+ntZL//8Pa+qx/v4Lv68Y6RL/FOka/w
zpGv8YDIN3gX2e+/r9O7yn7/4d18Vz/e3Xf14z0iX+I9I1/hvSJf41bkG7y3
/nnw/t+k95G9P97Xd/Xj/XxXP94/8iU+IPIVPjDyNT4o8g0+WPb+36YPkb0/
PtR39eOBvqsfHxb5Eh8e+QofEfkaD4p8g4+Uvf936aNk74+P9l39+Bjf1Y+P
jXyJj4t8hY+PfI1PiHyDT5S9//fpk2Tvj0/2Xf34FN/Vj0+NfIlPi3yFT498
jcvIN/gMudafP6TPlP3+w2f5rn58tu/qx+dEvsTnRr7CgyNf4/Mi3+DzZb//
fkxfID+rfnyh7+rHF/mufnxx5Et8SeQrPCTyNR4a+QZfKvv991P6MtnvP3y5
7+rHw3xXP74i8iW+MvIVviryNR4e+QZfLfv993P6GtnvP3yt7+rH1/mufnx9
5Et8Q+QrfGPka1xFvsE3jS2m9P6/pG+WvT++xXf141t9Vz++LfIlvj3yFR4R
+RqPjHyD75C9/6/pO2Xvj+/yXf14lO/qx3dHvsT3RL7C90a+xqMj3+D7ZO//
W/p+2fvjdt/Vj8f4rn78QORL/GDkKzw28jUeF/kGj5e9/+/pCbL3xxN9Vz/u
8F39uDPyJe6KfIW7I1/jOvINfkj/PDT684/0w7Lff/gR39WPH/Vd/fixyJf4
8chX+InI1/jJyDf4Kdnvvz/TT8vfqB8/47v68bO+qx8/F/kSPx/5Cr8Q+Rq/
GPkGvyT7/fdX+mXZ7z/8iu/qx6/6rn78WuRL/HrkK/xG5Gv8ZuQb/Jbs99/f
6bdlv//wO76rH7/ru/rxe5Ev8fuRr/AHka9xE/kGf6h/Hrz/P+mPZO+PP/Zd
/fgT39WPP418iT+LfIU/j3yNv4h8g7+Uvf+/6a9k74+/9l39+Bvf1Y+/jXyJ
v4t8hb+PfI1/iHyDf5S9///SP8neH//su/rxL76rH/8a+RL/FvkK/x75Gv8R
+Qb/KXv//9J/yd4f/+27+vE/vqsf/xv5Ev8v8hX+L/I1bhvXk29wr3FF/L+/
PNx7XPz9fzyJ/vv6o8CTyrq38GTO924r8eTO926r8BTO926r8ZTO925r8FTj
ihlc0Cs9tdxH/XiaccUcuhe4j6x7C0/rvPrxdM6rH0/vvPrxDM6rH884Lv7+
f+/0TOPi7//jmfW9uhd4Fln3Fp7VefXj2ZxXP57defXjOZxXP55T3+vf/54k
PZfs3//Gc+t7dS/wPLLuLTyv8+rH8zmvfjy/8+rHfZ1XP15gXNG3Z9f0grL3
xwuNK/zruQVeWPb+eBHn1Y8XdV79eDHn1Y8Xd179eIlxxfLef7L0krL3x0uN
K1b3/nhp2fvjZZxXP17WefXj5ZxXP17eefXjFfS93n/y9Iqy98cr6Xu9P15Z
9v54FefVj1d1Xv14NefVj1d3Xv14DX2v958ivabs/fFa+l7vj9eWvT9ex3n1
43WdVz9ez3n148J59eP1xxU9/wBMmd5A9u9/4w3HFf10L/BGsu4tvLHz6seb
OK9+vKnz6sf9nFc/3mxc0d//gE2V3lxeWv14i3HFAN0LvKWsewtv5bz68dbO
qx9v47z6cX/n1Y+31ff697+nTm8n+/e/8fb6Xt0LvIOsewvv6Lz68U7Oqx/v
7Lz68QDn1Y930ff697+nSe8q+/e/8W76Xt0LvLusewvv4bz68Z7Oqx/v5bz6
cct59eO9xxUt798nvY/s/fG+44qDvD/eT/b+eH/n1Y8PcF79+EDn1Y8Pcl79
+OBxxSDvP236ENn740PHFSd4fzxQ9v74MOfVjw93Xv34COfVjwc5r358pL7X
+0+XPkr2/vhofa/3x8fI3h8f67z68XHOqx8f77z68QnOqx+fqO/1/tOnT5K9
Pz5Z3+v98Smy98enOq9+fJrz6senO69+XDqvfnyGfl4V+nOG9Jnj4t//hs/S
zyvdC3y2rHsLn+O8+vG5zqsfD3Ze/fg859WPz9fPK//+94zpC2T9p774Qv28
0r3AF8n6Ty18sfPqx5c4r348xHn146HOqx9fOi7+/W8zpS8bF//+N3y5vlf3
Ag+TdW/hK5xXP77SefXjq5xXPx7uvPrx1fpe//73zOlrZP/+N75W36t7ga+T
dW/h651XP77BefXjG51XP66cVz++ST+vvP8s6Ztl749v0c8r749vlb0/vs15
9ePbnVc/HuG8+vFI59WP79DPK+8/a/pO2fvju/TzyvvjUbL3x3c7r358j/Pq
x/c6r3482nn14/v0vd5/tvT9svfH7fpe74/HyN4fP+C8+vGDzqsfj3Ve/Xic
8+rH4/W93n/29ATZ++OJ+l7vjztk7487nVc/7nJe/bjbefXj2nn144f086ql
P+dIPyz797/xI/p5pXuBH5V1b+HHnFc/ftx59eMnnFc/ftJ59eOn9PPKv/89
Z/ppeaD68TP6eaV7gZ+VdW/h55xXP37eefXjF5xXP37RefXjl/S9/v3vudIv
y/79b/yKvlf3Ar8q697Crzmvfvy68+rHbzivfvym8+rHb+l7/fvfc6fflv37
3/gdfa/uBX5X1r2F33Ne/fh959WPP3Be/bhxXv34Q/288v7zpD+SvT/+WD+v
vD/+RPb++FPn1Y8/c179+HPn1Y+/cF79+Ev9vPL+86a/kr0//lo/r7w//kb2
/vhb59WPv3Ne/fh759WPf3Be/fhHfa/3ny/9k+z98c/6Xu+Pf5G9P/7VefXj
35xXP/7defXjP5xXP/5T3+v950//JXt//Le+1/vjf2Tvj/91Xv34f86rH//n
vPpx23jl1Y97jS9K/9k33Vv2+w9PMr7w//VsgSeV/f7Dkzmvfjy58+rHUziv
fjyl8+rHU40vhvr9t0B6armP+vE044vhfv/hPrLuLTyt8+rH0zmvfjy98+rH
MzivfjyjvtfvvwXTM8l+/+GZ9b1+/+FZZL//8KzOqx/P5rz68ezOqx/P4bz6
8Zz6Xr//FkrPJfv9h+fW9/r9h+eR/f7D8zqvfjyf8+rH8zuvftzXefXjBcYX
lf9cOL2g7P3xQuML/1/PFXhh2fvjRZxXP17UefXjxZxXP17cefXjJcYXo73/
IuklZe+PlxpfjPP+eGnZ++NlnFc/XtZ59ePlnFc/Xt559eMV9L3ef9H0irL3
xyvpe70/Xln2/ngV59WPV3Ve/Xg159WPV3de/XgNfa/3Xyy9puz98Vr6Xu+P
15a9P17HefXjdZ1XP17PefXjwnn14/XHF3Vf75LeQPb7D284vnhS9wJvJPv9
hzd2Xv14E+fVjzd1Xv24n/Pqx5uNL170+2+J9Oby0urHW4wv3vT7D28p697C
Wzmvfry18+rH2zivftzfefXjbfW9fv8tmd5O9vsPb6/v9fsP7yD7/Yd3dF79
eCfn1Y93dl79eIDz6se76Hv9/lsqvavs9x/eTd/r9x/eXfb7D+/hvPrxns6r
H+/lvPpxy3n1473HF433Xzq9j+z98b7jiy+8P95P9v54f+fVjw9wXv34QOfV
jw9yXv344PHFD95/mfQhsvfHh44v/vD+eKDs/fFhzqsfH+68+vERzqsfD3Je
/fhIfa/3XzZ9lOz98dH6Xu+Pj5G9Pz7WefXj45xXPz7eefXjE5xXPz5R3+v9
l0ufJHt/fLK+1/vjU2Tvj091Xv34NOfVj093Xv24dF79+Az9vCr05/LpM2W/
//BZ+nmle4HPlv3+w+c4r358rvPqx4OdVz8+z3n14/P188rvvxXSF8j6T33x
hfp55fcfvkjWf2rhi51XP77EefXjIc6rHw91Xv34Un2v338rpi+T/f7Dl+t7
/f7Dw2S///AVzqsfX+m8+vFVzqsfD3de/fhqfa/ffyulr5H9/sPX6nv9/sPX
yX7/4eudVz++wXn14xudVz+unFc/vkk/r7z/yumbZe+Pb9HPK++Pb5W9P77N
efXj251XPx7hvPrxSOfVj+/Qzyvvv0r6Ttn747v088r741Gy98d3O69+fI/z
6sf3Oq9+PNp59eP79L3ef9X0/bL3x+36Xu+Px8jeHz/gvPrxg86rH491Xv14
nPPqx+P1vd5/tfQE2fvjifpe7487ZO+PO51XP+5yXv2423n149p59eOH9POq
pT9XTz8s+/2HH9HPK90L/Kjs9x9+zHn148edVz9+wnn14yedVz9+Sj+v/P5b
I/20PFD9+Bn9vPL7Dz8r697Czzmvfvy88+rHLzivfvyi8+rHL+l7/f5bM/2y
7PcffkXf6/cfflX2+w+/5rz68evOqx+/4bz68ZvOqx+/pe/1+2+t9Nuy33/4
HX2v33/4XdnvP/ye8+rH7zuvfvyB8+rHjfPqxx/q55X3Xzv9kez98cf6eeX9
8Sey98efOq9+/Jnz6sefO69+/IXz6sdf6ueV918n/ZXs/fHX+nnl/fE3svfH
3zqvfvyd8+rH3zuvfvyD8+rHP+p7vf+66Z9k749/1vd6f/yL7P3xr86rH//m
vPrx786rH//hvPrxn/pe779e+i/Z++O/9b3eH/8je3/8r/Pqx/9zXv34P+fV
j9smKK9+3GtC0XaG/izSveVz1I8nmVBMqXuBJ5V1b+HJnFc/ntx59eMpnFc/
ntJ59eOpJhQznK8/109PLV+sfjzNhGIO3QvcR9a9had1Xv14OufVj6d3Xv14
BufVj2fU916qPzdIzyRfoX48s75X9wLPIuvewrM6r348m/Pqx7M7r348h/Pq
x3Pqe6/Wnxum55KvVz+eW9+re4HnkXVv4XmdVz+ez3n14/mdVz/u67z68QIT
ir7ef6P0grL3xwtNKBb3/nhh2fvjRZxXP17UefXjxZxXP17cefXjJSYUy3v/
jdNLyt4fLzWhWN3746Vl74+XcV79eFnn1Y+Xc179eHnn1Y9X0Pd6/03SK8re
H6+k7/X+eGXZ++NVnFc/XtV59ePVnFc/Xt159eM19L3ef9P0mrL3x2vpe70/
Xlv2/ngd59WP13Ve/Xg959WPC+fVj9efUBQ36c9+6Q3k29SPN5xQ9NO9wBvJ
urfwxs6rH2/ivPrxps6rH/dzXv14swlF/zv8Z3pz+W714y0mFAN0L/CWsu4t
vJXz6sdbO69+vI3z6sf9nVc/3lbfe59709vJD6gfb6/v1b3AO8i6t/COzqsf
7+S8+vHOzqsfD3Be/XgXfe94/+8zvavcqX68m75X9wLvLuvewns4r368p/Pq
x3s5r37ccl79eO8JRcv7b5neR/b+eN8JxUHeH+8ne3+8v/Pqxwc4r358oPPq
xwc5r3588IRikPffKn2I7P3xoROKE7w/Hih7f3yY8+rHhzuvfnyE8+rHg5xX
Pz5S3+v9t04fJXt/fLS+1/vjY2Tvj491Xv34OOfVj493Xv34BOfVj0/U93r/
bdInyd4fn6zv9f74FNn741OdVz8+zXn149OdVz8unVc/PkM/rx7Sn/3TZ8qP
qR+fpZ9Xuhf4bFn3Fj7HefXjc51XPx7svPrxec6rH5+vn1dP6c9t0xfIz6kf
X6ifV7oX+CJZ9xa+2Hn140ucVz8e4rz68VDn1Y8v1fe+pD+3S18mv6Z+fLm+
V/cCD5N1b+ErnFc/vtJ59eOrnFc/Hu68+vHV+t639Of26Wvk99SPr9X36l7g
62TdW/h659WPb3Be/fhG59WPK+fVj2/Szyvvv0P6Ztn741v088r741tl749v
c179+Hbn1Y9HOK9+PNJ59eM79PPK+++YvlP2/vgu/bzy/niU7P3x3c6rH9/j
vPrxvc6rH492Xv34Pn2v998pfb/s/XG7vtf74zGy98cPOK9+/KDz6sdjnVc/
Hue8+vF4fa/33zk9Qfb+eKK+1/vjDtn7407n1Y+7nFc/7nZe/bh2Xv34If28
+lB/Dkg/LH+qfvyIfl7pXuBHZd1b+DHn1Y8fd179+Ann1Y+fdF79+Cn9vPpS
f+6Sflr+Vv34Gf280r3Az8q6t/BzzqsfP++8+vELzqsfv+i8+vFL+t4f9eeu
6ZflX9WPX9H36l7gV2XdW/g159WPX3de/fgN59WP33Re/fgtfe+f+nO39Nvy
v+rH7+h7dS/wu7LuLfye8+rH7zuvfvyB8+rHjfPqxx/q55X33z39kez98cf6
eeX98Sey98efOq9+/Jnz6sefO69+/IXz6sdf6ueV998j/ZXs/fHX+nnl/fE3
svfH3zqvfvyd8+rH3zuvfvyD8+rHP+p7vf+e6Z9k749/1vd6f/yL7P3xr86r
H//mvPrx786rH//hvPrxn/pe779X+i/Z++O/9b3eH/8je3/8r/Pqx/9zXv34
P+fVj9smKq9+3GtiUfr910r3lv3+w5NMLM7z+w9PKvv9hydzXv14cufVj6dw
Xv14SufVj6eaWAz1+2/v9NSy3394monFcL//cB/Z7z88rfPqx9M5r348vfPq
xzM4r348o77X77990jPJfv/hmfW9fv/hWWS///Cszqsfz+a8+vHszqsfz+G8
+vGc+l6///ZNzyX7/Yfn1vf6/Yfnkf3+w/M6r348n/Pqx/M7r37c13n14wUm
FpX33y+9oOz98UITi5HeHy8se3+8iPPqx4s6r368mPPqx4s7r368xMRitPff
P72k7P3xUhOLcd4fLy17f7yM8+rHyzqvfryc8+rHyzuvfryCvtf7H5BeUfb+
eCV9r/fHK8veH6/ivPrxqs6rH6/mvPrx6s6rH6+h7/X+B6bXlL0/Xkvf6/3x
2rL3x+s4r368rvPqx+s5r35cOK9+vP7Eovb776D0BrLff3jDicWTfv/hjWS/
//DGzqsfb+K8+vGmzqsf93Ne/XizicWLfv8dnN5c9vsPbzGxeNPvP7yl7Pcf
3sp59eOtnVc/3sZ59eP+zqsfb6vv9fvvkPR2st9/eHt9r99/eAfZ7z+8o/Pq
xzs5r368s/PqxwOcVz/eRd/r99+h6V1lv//wbvpev//w7rLff3gP59WP93Re
/Xgv59WPW86rH+89sWi8/8D0PrL3x/tOLL7w/ng/2fvj/Z1XPz7AefXjA51X
Pz7IefXjgycWP3j/w9KHyN4fHzqx+MP744Gy98eHOa9+fLjz6sdHOK9+PMh5
9eMj9b3e//D0UbL3x0fre70/Pkb2/vhY59WPj3Ne/fh459WPT3Be/fhEfa/3
PyJ9kuz98cn6Xu+PT5G9Pz7VefXj05xXPz7defXj0nn14zP088rvv0HpM2W/
//BZ+nnl9x8+W/b7D5/jvPrxuc6rHw92Xv34POfVj8/Xzyu//45MXyD7/Ycv
1M8rv//wRbLff/hi59WPL3Fe/XiI8+rHQ51XP75U3+v331Hpy2S///Dl+l6/
//Aw2e8/fIXz6sdXOq9+fJXz6sfDnVc/vlrf6/ff0elrZL//8LX6Xr//8HWy
33/4eufVj29wXv34RufVjyvn1Y9v0s8r739M+mbZ++Nb9PPK++NbZe+Pb3Ne
/fh259WPRzivfjzSefXjO/Tzyvsfm75T9v74Lv288v54lOz98d3Oqx/f47z6
8b3Oqx+Pdl79+D59r/c/Ln2/7P1xu77X++MxsvfHDzivfvyg8+rHY51XPx7n
vPrxeH2v9z8+PUH2/niivtf74w7Z++NO59WPu5xXP+52Xv24dl79+CH9vPL7
74T0w7Lff/gR/bzy+w8/Kvv9hx9zXv34cefVj59wXv34SefVj5/Szyu//05M
Py37/Yef0c8rv//ws7Lff/g559WPn3de/fgF59WPX3Re/fglfa/ffyelX5b9
/sOv6Hv9/sOvyn7/4decVz9+3Xn14zecVz9+03n147f0vX7/nZx+W/b7D7+j
7/X7D78r+/2H33Ne/fh959WPP3Be/bhxXv34Q/288v6npD+SvT/+WD+vvD/+
RPb++FPn1Y8/c179+HPn1Y+/cF79+Ev9vPL+p6a/kr0//lo/r7w//kb2/vhb
59WPv3Ne/fh759WPf3Be/fhHfa/3Py39k+z98c/6Xu+Pf5G9P/7VefXj35xX
P/7defXjP5xXP/5T3+v9T0//JXt//Le+1/vjf2Tvj/91Xv34f86rH//nvPpx
W4fy6se9OoqeP8t0b3ly9eNJOoop23q1FXhSefJebS08mfPqx5M7r348hfOT
tNV4SucnaWvwVB3x9//PSE8tT6d+PE1HMYf//W+4jzyd+vG0HfH3//F0zqsf
T++8+vEMzqsfz9gRf///zPRM8mzqxzPre/3vf8OzyLOpH8/aEX//H8/mvPrx
7M6rH8/hvPrxnB3x9//PSs8lz6d+PLe+1//+NzyPPJ/68bwd8ff/8XzOqx/P
77z6cV/n1Y8X6Ii//392esGOYgHvjxfqKBb3/njhjmIJ748X0X/f++NFnVc/
Xkz/fe+PF3de/XiJjvj7/+ekl+woVvD+eKmOYg3vj5eWvT9eRv9974+XdV79
eDnn1Y+Xd179eAV9r/c/N72i7P3xSvpe749Xlr0/XsV59eNVnVc/Xs159ePV
nVc/XkPf6/0Hp9eUvT9eS9/r/fHasvfH6zivfryu8+rH6zmvflw4r368fkf8
/f/z0hvIi6ofb9hR9OurfryRvKj68cYd8ff/8SbOqx9v6rz6cT/n1Y8364i/
/39+enN5WfXjLTqKAf73v+Et5WXVj7fqiL//j7d2Xv14G+fVj/s7r368bUf8
/f8L0tvJq6ofb6/v9b//De8gr6p+vGNH/P1/vJPz6sc7O69+PMB59eNdOuLv
/1+Y3lVeV/14N32v//1veHd5XfXjPTri7//jPZ1XP97LefXjlvPqx3t3FHt7
/4vS+8jeH+/bURzs/fF+svfH+zuvfnyA8+rHBzqvfnyQ8+rHB3cUR3r/i9OH
yN4fH9pRnOj98UDZ++PDnFc/Ptx59eMjnFc/HuS8+vGR+l7vf0n6KNn746P1
vd4fHyN7f3ys8+rHxzmvfny88+rHJzivfnyivtf7D0mfJHt/fLK+1/vjU2Tv
j091Xv34NOfVj093Xv24dF79+IyOolehP4emz5Q3UT8+q6OYqlA/PlveRP34
HOfVj891Xv14sPPqx+c5r358fkcxo3//+9L0BfLW6scXdhRz+t//hi+St1Y/
vth59eNLnFc/HuK8+vFQ59WPL9X3+ve/L0tfJu+kfny5vtf//jc8TN5J/fgK
59WPr3Re/fgq59WPhzuvfny1vte//315+hp5T/91zPS1+l7/+9/wdfKe6sfX
O69+fIPz6sc3Oq9+XDmvfnxTR7Gg9x+Wvln2/viWjmJJ749vlb0/vs159ePb
nVc/HuG8+vFI59WP7+goVvT+V6TvlL0/vqujWNP741Gy98d3O69+fI/z6sf3
Oq9+PNp59eP79L3e/8r0/bL3x+36Xu+Px8jeHz/gvPrxg86rH491Xv14nPPq
x+P1vd7/qvQE2fvjifpe7487ZO+PO51XP+5yXv2423n149p59eOHOor1W/pz
ePph+QD140c6is1a6sePygeoHz/mvPrx486rHz/hvPrxk86rHz/VUWzr3/++
Ov20fLj68TMdxS7+97/hZ+XD1Y+fc179+Hnn1Y9fcF79+EXn1Y9f0vf697+v
Sb8sH6d+/Iq+1//+N/yqfJz68WvOqx+/7rz68RvOqx+/6bz68Vv6Xv/+97Xp
t+XT1I/f0ff63/+G35VPUz9+z3n14/edVz/+wHn148Z59eMPO4p9vP916Y9k
748/7igO8f74E9n740+dVz/+zHn148+dVz/+wnn14y87iqO8//Xpr2Tvj7/u
KE7y/vgb2fvjb51XP/7OefXj751XP/7BefXjH/W93v+G9E+y98c/63u9P/5F
9v74V+fVj39zXv34d+fVj/9wXv34T32v978x/Zfs/fHf+l7vj/+RvT/+13n1
4/85r378n/Pqx22dyqsf9+oszvSfVbq37PcfnqSzuMDvPzyp7Pcfnsx59ePJ
nVc/nsJ59eMpnVc/nqqzuMzvv5vSU8t+/+FpOotr/P7DfWS///C0zqsfT+e8
+vH0zqsfz+C8+vGM+l6//25OzyT7/Ydn1vf6/Ydnkf3+w7M6r348m/Pqx7M7
r348h/Pqx3Pqe/3+uyU9l+z3H55b3+v3H55H9vsPz+u8+vF8zqsfz++8+nFf
59WPF+gsbvaft6YX7Cxu8f54oc7iTu+PF+4s7vL+eBH9970/XtR59ePF9N/3
/nhx59WPl+gs2r3/beklZe+Pl+osJnp/vLTs/fEyzqsfL+u8+vFyzqsfL++8
+vEK+l7vf3t6Rdn745X0vd4fryx7f7yK8+rHqzqvfrya8+rHqzuvfryGvtf7
j0ivKXt/vJa+1/vjtWXvj9dxXv14XefVj9dzXv24cF79eP3O4uG++nNkegPZ
7z+8YWfxtN9/eCPZ7z+8sfPqx5s4r368qfPqx/2cVz/erLN42e+/O9Kby37/
4S06i7f9/sNbyn7/4a2cVz/e2nn1422cVz/u77z68bb6Xr//7kxvJ/v9h7fX
9/r9h3eQ/f7DOzqvfryT8+rHOzuvfjzAefXjXfS9fv/dld5V9vsP76bv9fsP
7y77/Yf3cF79eE/n1Y/3cl79uOW8+vHencXH3n9Ueh/Z++N9O4uvvT/eT/b+
eH/n1Y8PcF79+EDn1Y8Pcl79+ODO4mfvf3f6ENn740M7i7+9Px4oe398mPPq
x4c7r358hPPqx4OcVz8+Ut/r/e9JHyV7f3y0vtf742Nk74+PdV79+Djn1Y+P
d179+ATn1Y9P1Pd6/3vTJ8neH5+s7/X++BTZ++NTnVc/Ps159ePTnVc/Lp1X
Pz6jszir0J+j02fKfv/hszqLC/3+w2fLfv/hc5xXPz7XefXjwc6rH5/nvPrx
+Z3F5X7/3Ze+QPb7D1/YWVzr9x++SPb7D1/svPrxJc6rHw9xXv14qPPqx5fq
e/3+uz99mez3H75c3+v3Hx4m+/2Hr3Be/fhK59WPr3Je/Xi48+rHV+t7/f5r
T18j+/2Hr9X3+v2Hr5P9/sPXO69+fIPz6sc3Oq9+XDmvfnxTZ3Gr9x+Tvln2
/viWzmKU98e3yt4f3+a8+vHtzqsfj3Be/Xik8+rHd3QWY7z/A+k7Ze+P7+os
Orw/HiV7f3y38+rH9zivfnyv8+rHo51XP75P3+v9H0zfL3t/3K7v9f54jOz9
8QPOqx8/6Lz68Vjn1Y/HOa9+PF7f6/3HpifI3h9P1Pd6f9whe3/c6bz6cZfz
6sfdzqsf186rHz/UWTzS8nelH5b9/sOPdBbP+P2HH5X9/sOPOa9+/Ljz6sdP
OK9+/KTz6sdPdRav+P03Pv207PcffqazeMfvP/ys7Pcffs559ePnnVc/fsF5
9eMXnVc/fknf6/ffhPTLst9/+BV9r99/+FXZ7z/8mvPqx687r378hvPqx286
r378lr7X77+J6bdlv//wO/pev//wu7Lff/g959WP33de/fgD59WPG+fVjz/s
LD7x/h3pj2Tvjz/uLL7x/vgT2fvjT51XP/7MefXjz51XP/7CefXjLzuLX7x/
Z/or2fvjrzuLf7w//kb2/vhb59WPv3Ne/fh759WPf3Be/fhHfa/370r/JHt/
/LO+1/vjX2Tvj391Xv34N+fVj393Xv34D+fVj//U93r/7vRfsvfHf+t7vT/+
R/b++F/n1Y//57z68X/Oqx+3dSmvftyrq5jUv/9dp3vLg9WPJ+kq+pyhfjyp
PFj9eDLn1Y8nd179eArn1Y+ndF79eKquYhb//vdD6anlIerH03QV85yvftxH
HqJ+PK3z6sfTOa9+PL3z6sczOK9+PKO+17///XB6Jvkq9eOZ9b2Xqh/PIl+l
fjyr8+rHszmvfjy78+rHczivfjynvte///1Iei75RvXjufW9V6sfzyPfqH48
r/Pqx/M5r348v/Pqx32dVz9eoKtY2Ps/ml6wq1jE++OFuoplvD9eWPb+eBH9
970/XtR59ePFnFc/Xtx59eMluoqVvf9j6SW7ilW8P16qq1jH++OlZe+Pl9F/
3/vjZZ1XP17OefXj5Z1XP15B3+v9H0+vKHt/vJK+1/vjlWXvj1dxXv14VefV
j1dzXv14defVj9fQ93r/J9Jryt4fr6Xv9f54bdn743WcVz9e13n14/WcVz8u
nFc/Xr+r2Mi///1kegN5hPrxhl3FljepH28kj1A/3th59eNNnFc/3tR59eN+
zqsfb9ZV7ODf/34qvbl8r/rxFl3F7neoH28p36t+vJXz6sdbO69+vI3z6sf9
nVc/3lbf69//fjq9nTxW/Xh7fe996sc7yGPVj3d0Xv14J+fVj3d2Xv14gPPq
x7voe/3738+kd5W71Y930/eOVz/eXe5WP97DefXjPZ1XP97LefXjlvPqx3t3
Fft7/2fT+8jeH+/bVRzm/fF+svfH+zuvfnyA8+rHBzqvfnyQ8+rHB3cVx3r/
59KHyN4fH9pVnOr98UDZ++PDnFc/Ptx59eMjnFc/HuS8+vGR+l7v/3z6KNn7
46P1vd4fHyN7f3ys8+rHxzmvfny88+rHJzivfnyivtf7v5A+Sfb++GR9r/fH
p8jeH5/qvPrxac6rH5/uvPpx6bz68RldxWT+/e8X02fKT6gfn9VVTPuQ+vHZ
8hPqx+c4r358rvPqx4OdVz8+z3n14/O7iln9+98vpS+QX1A/vrCrmPcp9eOL
5BfUjy92Xv34EufVj4c4r3481Hn140v1vf7975fTl8lvqB9fru99Sf14mPyG
+vEVzqsfX+m8+vFVzqsfD3de/fhqfa9///uV9DXyB+rH1+p731I/vk7+QP34
eufVj29wXv34RufVjyvn1Y9v6ioW9f6vpm+WvT++patY1vvjW2Xvj29zXv34
dufVj0c4r3480nn14zu6ilW9/2vpO2Xvj+/qKtb1/niU7P3x3c6rH9/jvPrx
vc6rH492Xv34Pn2v9389fb/s/XG7vtf74zGy98cPOK9+/KDz6sdjnVc/Hue8
+vF4fa/3fyM9Qfb+eKK+1/vjDtn7407n1Y+7nFc/7nZe/bh2Xv34oa5iY//+
95vph+XP1Y8f6Sq2+lD9+FH5c/Xjx5xXP37cefXjJ5xXP37SefXjp7qKHf37
32+ln5a/Vz9+pqvY40v142fl79WPn3Ne/fh559WPX3Be/fhF59WPX9L3+ve/
306/LP+ufvyKvvdH9eNX5d/Vj19zXv34defVj99wXv34TefVj9/S9/r3v99J
vy3/p378jr73T/Xjd+X/1I/fc179+H3n1Y8/cF79uHFe/fjDruIA7/9u+iPZ
++OPu4rDvT/+RPb++FPn1Y8/c179+HPn1Y+/cF79+Muu4jjv/176K9n746+7
itO8P/5G9v74W+fVj79zXv34e+fVj39wXv34R32v938//ZPs/fHP+l7vj3+R
vT/+1Xn149+cVz/+3Xn14z+cVz/+U9/r/T9I/yV7f/y3vtf7439k74//dV79
+H/Oqx//57z6cVu38urHvbqLc/3+a9K9Zb//8CTdxSV+/+FJZb//8GTOqx9P
7rz68RTOqx9P6bz68VTdxZV+/32Ynlr2+w9P013c4Pcf7iP7/YendV79eDrn
1Y+nd179eAbn1Y9n1Pf6/fdReibZ7z88s77X7z88i+z3H57VefXj2ZxXP57d
efXjOZxXP55T3+v338fpuWS///Dc+l6///A8st9/eF7n1Y/nc179eH7n1Y/7
Oq9+vEB3McL7f5JeUPb+eKHu4l7vjxeWvT9exHn140WdVz9ezHn148WdVz9e
orsY6/0/TS8pe3+8VHfR7f3x0rL3x8s4r368rPPqx8s5r368vPPqxyvoe73/
Z+kVZe+PV9L3en+8suz98SrOqx+v6rz68WrOqx+v7rz68Rr6Xu//eXpN2fvj
tfS93h+vLXt/vI7z6sfrOq9+vJ7z6seF8+rH63cXj/v990V6A9nvP7xhd/G8
3394I9nvP7yx8+rHmzivfryp8+rH/ZxXP96su3jd778v05vLfv/hLbqL9/3+
w1vKfv/hrZxXP97aefXjbZxXP+7vvPrxtvpev/++Sm8n+/2Ht9f3+v2Hd5D9
/sM7Oq9+vJPz6sc7O69+PMB59eNd9L1+/32d3lX2+w/vpu/1+w/vLvv9h/dw
Xv14T+fVj/dyXv245bz68d7dxefe/5v0PrL3x/t2F997f7yf7P3x/s6rHx/g
vPrxgc6rHx/kvPrxwd3F797/2/QhsvfHh3YX/3l/PFD2/vgw59WPD3de/fgI
59WPBzmvfnykvtf7f5c+Svb++Gh9r/fHx8jeHx/rvPrxcc6rHx/vvPrxCc6r
H5+o7/X+36dPkr0/Plnf6/3xKbL3x6c6r358mvPqx6c7r35cOq9+fEZ3Mdjv
vx/SZ8p+/+Gzuoshfv/hs2W///A5zqsfn+u8+vFg59WPz3Ne/fj87uIqv/9+
TF8g+/2HL+wubvT7D18k+/2HL3Ze/fgS59WPhzivfjzUefXjS/W9fv/9lL5M
9vsPX67v9fsPD5P9/sNXOK9+fKXz6sdXOa9+PNx59eOr9b1+//2cvkb2+w9f
q+/1+w9fJ/v9h693Xv34BufVj290Xv24cl79+Kbunr/f3/ZL+mbZ++NbuovR
3h/fKnt/fFt3z9/vL/Htzqsfj3Be/Xik8+rHd3T3/P3+tl/Td8reH9/VXdTe
H4+SvT++u7vn7/eX+B7n1Y/vdV79eLTz6sf3dff8/f6239L3y94ft+t7vT8e
I3t//EB3z9/vL/GDzqsfj3Ve/Xic8+rH47t7/n5/2+/pCbL3xxP1vd4fd8je
H3d29/z9/hJ3Oa9+3O28+nHtvPrxQ93FE37//ZF+WPb7Dz/SXbzg9x9+VPb7
Dz/mvPrx486rHz/hvPrxk86rHz/VXbzh99+f6adlv//wM93FB37/4Wdlv//w
c86rHz/vvPrxC86rH7/ovPrxS/pev//+Sr8s+/2HX9H3+v2HX5X9/sOvOa9+
/Lrz6sdvOK9+/Kbz6sdv6Xv9/vs7/bbs9x9+R9/r9x9+V/b7D7/nvPrx+86r
H3/gvPpx47z68YfdPX+/v+2f9Eey98cfdxc/eH/8iez98afdPX+/v8SfOa9+
/Lnz6sdfOK9+/GV3z9/vb/s3/ZXs/fHX3UXbV+rH38g/qB9/293z9/tL/J3z
6sffO69+/IPz6sc/dvf8/f62/6V/kr0//lnf6/3xL7L3x7929/z9/hL/5rz6
8e/Oqx//4bz68Z/dPX+/v+2/9F+y98d/63v/Uj/+R27r3dbC/3b3/P3+Ev/P
efXj/5xXP26rlZ+0rUmXPfb/Ghb3XnHvmy57PGVbwb233aetxb3HM+j/O3mf
xJ6lreLe4znaau6T2vO0Ndwnzf5eeZ8s+9PlZNnPffLs5z559nOfIvu5T5H9
3KfMfu5TZn/vvE+V/elyquznPnX2c586+7lPk/3cp8l+7n2yn3uf7J8k79Nm
f7qcNvu5T5f93KfLfu7TZz/36bOf+wzZz32G7J807zNmf7qcMfu5z5T93GfK
fu4zZz/3mbOf+yzZz32W7J8s77Nmf7qcNfu5z5b93GfLfu6zZz/32bOf+xzZ
z32O7J8873Nmf7qcM/u5z5X93OfKfu5zZz/3ubOf+zzZz32e7J8i7/Nmf7qc
N/u5z5f93OfLfu7zZz/3+bOfe9/s597jvqrI+wL2wm1902WPF28ruC9oL93W
4t7j5fV/jvK+kL1yW8W9x6u31dwXttdua7gvnP1T5X2R7E+Xi2Q/90Wzn/ui
2c99seznvlj2c188+7kvnv1T532J7E+XS2Q/9yWzn/uS2c99qeznvlT2c186
+7kvnf3T5H2Z7E+Xy2Q/92Wzn/uy2c99ueznvlz2c18++7kvn/198r5C9qfL
FbKf+4rZz33F7Oe+UvZzXyn7ua+c/dxXzv5p875K9qfLVbKf+6rZz33V7Oe+
WvZzXy37ua+e/dxXz/7p8r5G9qfLNbKf+5rZz33N7Oe+VvZzXyv7ua+d/dzX
zv7p875O9qfLdbKf+7rZz33d7Oe+XvZzXy/7uRfZz73H+n9myPv69kZtfdNl
j/u1Fdw3sLdsa3HvcX/9HMn7hvYObRX3Hg9oq7lvZO/e1nDfKPtnzPvG2Z8u
N85+7ptkP/dNsp/7ptnPfdPs594v+7n3y/6Z8r5Z9qfLzbKf++bZz33z7Oe+
RfZz3yL7uW+Z/dy3zP6Z875V9qfLrbKf+9bZz33r7Oe+TfZz3yb7uffPfu79
s3+WvG+b/ely2+znvl32c98u+7lvn/3ct89+7jtkP/cdsn/WvO+Y/elyx+zn
vlP2c98p+7nvnP3cd85+7gOyn/uA7J8t77tkf7rcJfu575r93HfNfu67ZT/3
3bKf++7Zz3337J8973tkf7rcI/u575n93PfMfu57ZT/3vbKfeyv7ufe4pf8R
Ie972/u19U2XPT6oreC+jz2wrcW9x4P0P0flfV/7mLaKe49PaKu572ef0tZw
3y/758z7/tmfLvfPfu4HZD/3A7Kf+4HZz/3A7Od+UPZzPyj758r7wdmfLg/O
fu6HZD/3Q7Kf+6HZz/3Q7Oc+MPu5D8z+ufN+WPany8Oyn/vh2c/98OznfkT2
cz8i+7kPyn7ug7J/nrwfmf3p8sjs535U9nM/Kvu5H5393I/Ofu7HZD/3Y7J/
3rwfm/3p8tjs535c9nM/Lvu5H5/93I/Pfu4nZD/3E7J/vryfmP3p8sTs535S
9nM/Kfu5n5z93E/Ofu6nZD/3U7J//ryfmv3p8tTs535a9nM/Lfu5n5793E/P
fu5l9nPvcan/ESTvZ9hnt/VNlz0+r63gfqZ9UVuLe4+H6h2R97PsYW0V9x4P
b6u5n21f19ZwPzv7F8j7OdmfLs/Jfu7nZj/3c7Of++Ds5z44+7mfl/3cz8v+
BfN+fvany/Ozn/sF2c/9guznfmH2c78w+7lflP3cL8r+hfJ+cfany4uzn/sl
2c/9kuznPiT7uQ/Jfu5Ds5/70OxfOO+XZn+6vDT7uV+W/dwvy37ul2c/98uz
n/uw7Oc+LPsXyfsV2Z8ur8h+7ldmP/crs5/7VdnP/ars5z48+7kPz/5F8351
9qfLq7Of+zXZz/2a7Od+bfZzvzb7uV+X/dyvy/7F8n599qfL67Of+w3Zz/2G
7Od+Y/ZzvzH7uVfZz73HlZ4Yeb/JvrWtb7rs8ci2gvvN9qi2Fvcej9Y7Ou+3
2GPaKu49HtdWc7/V7mhruN+a/Uvk/bbsT5e3ZT/327Of++3Zz31E9nMfkf3c
R2Y/95HZv2Te78j+dHnH/2m49/Cvxm0L4O+ayyaEXDYhrO0aQu4hLPcQQghh
uYeQewhzYxNC7iGsg00IIYSwkIQQQghrE0LIPYQz5zTGfvYfZ5zPes9orLfT
N4/n+0M//W700+9GP/0e9NPvQT99NPrpo9G/Jvxe9CPrvein34d++n3op9+P
fvr96KePQT99DPq7wR9AP7I+gH76g+inP4h++kPopz+EfvpY9NPHon8t+MPo
R9aH0U9/BP30R9BPfxT99EfRTx+Hfvo49K8Nfwz9yPoY+umPo5/+OPrpT6Cf
/gT66ePRTx+P/nXgT6IfWZ9EP/0p9NOfQj/9afTTn0Y/vUE/PXKTUnf4M54n
pAJZI09KJf1Zz5NTRY88JSn9Oc9TU02PPC019Amep6eWPgH968KfRz+yPo9+
+kT00yein/4C+ukvoJ8+Cf30SehfD/4i+pH1RfTTX0I//SX0019GP/1l9NMn
o58+Gf3rw19BP7K+gn76q+inv4p++mvop7+GfvoU9NOnoH8D+OvoR9bX0U9/
A/30N9BPfxP99DfRT5+KfvpU9G8Ifwv9yPoW+ulvo5/+Nvrp76Cf/g766dPQ
T5+G/o3g76IfWd9FP/099NPfQz/9ffTT30c/fTr66dPRvzH8A/Qj6wfop3+I
fvqH6Kd/hH76R+int+inR25T6gH/n+cZqUDWyDNTSf/Y86xU0SPPTkr/xPOP
qaZHnpMa+gzPc1NLn4H+TeCfoh9ZP0U//TP00z9DP/1z9NM/Rz99JvrpM9G/
KfwL9CPrF+inf4l++pfop3+FfvpX6KfPQj99Fvo3g3+NfmT9Gv30b9BP/wb9
9G/RT/8W/fTZ6KfPRn9P+HfoR9bv0E//Hv3079FP/wH99B/QT/8R/fQf0b85
/Cf0I+tP6Kf/jH76z+in/4J++i/op89BP30O+reA/4p+ZP0V/fTf0E//Df30
39FP/x399Lnop89F/5bwP9CPrH+gn/4n+ul/op/+F/rpf6Gfnp75u58e2f5T
wjPP86QCWSN3SCVdPHdMFT1yp6T03PMSqaZH7pwa+jyeu6SWPg/6t4L/A/3I
+g/00+dFP31e9NPnQz99PvTTO6Cf3gH9W8PnRz+yzo9++gLopy+AfvqC6Kcv
iH56R/TTO6J/G/hC6EfWhdBPXxj99IXRT18E/fRF0E/vhH56J/RvC18U/ci6
KPrpi6Gfvhj66Yujn744+ulLoJ++BPq3g/8T/cj6T/TTl0Q/fUn005dCP30p
9NM7o5/eGf3bw5dGP7IujX76MuinL4N++rLopy+LfnoX9NO7oH8H+HLoR9bl
0E9fHv305dFPXwH99BXQTy/QT49cpNQL/i/PK6cCWSN3TSV9Rc/dUkWP3D0p
fSXPG6SaHrlHaugre+6ZWvrK6N8Rvgr6kXUV9NNXRT99VfTTV0M/fTX007ui
n94V/TvBV0c/sq6Ofvoa6KevgX76muinr4l+ejf007uhf2f4WuhH1rXQT18b
/fS10U9fB/30ddBP745+enf094avi35kXRf99PXQT18P/fT10U9fH/30DdBP
3wD9u8A3RD+yboh++kbop2+EfvrG6KdvjH56D/TTe6B/V/gm6EfWTdBP3xT9
9E3RT98M/fTN0E/viX56T/TvBt8c/ci6OfrpW6CfvgX66Vuin74l+ukl+umR
7b994Ft53jYVyBq5VyrpW3vunSp65D5J6dt47ptqeuR+qaFv67l/aunbon93
+HboR9bt0E/fHv307dFP3wH99B3QT++Ffnov9O8B3xH9yLoj+uk7oZ++E/rp
O6OfvjP66b3RT++N/j3hu6AfWXdBP31X9NN3RT99N/TTd0M/vQ/66X3Q3xe+
O/qRdXf00/dAP30P9NP3RD99T/TT+6Kf3hf9e8H3Qj+y7oV++t7op++Nfvo+
6Kfvg356P/TT+6F/b/i+6EfWfdFP3w/99P3QT98f/fT90U/vj356f/TvAz8A
/ch6APrpB6KffiD66Qehn34Q+ukV+umRK3sEfrDnw1KBrJEHpJJ+iOeBqaJH
HmTvEX6o55NTTY88ODX0wzwPSS39MPTvCz8c/ch6OPrpR6CffgT66Uein34k
+ukD0E8fgP794EehH1mPQj/9aPTTj0Y//Rj0049BP30g+ukD0b8//Fj0I+ux
6Kcfh376ceinH49++vHopw9CP30Q+vvDT0A/sp6AfvqJ6KefiH76Seinn4R+
+snop5+M/gPgp6AfWU9BP/1U9NNPRT/9NPTTT0M/fTD66YPRfyD8dPQj6+no
p5+BfvoZ6KefiX76meinD0E/fQj6D4KfhX5kPQv99LPRTz8b/fRz0E8/B/10
RT89stovAf5vz+enAlkjD00l/VzPw1JFjzzc/hyBn+f56lTTI49IDf18zyNT
Sz8f/QfD/4N+ZP0P+ukXoJ9+AfrpF6KffiH66UPRTx+K/kPgF6EfWS9CP/1i
9NMvRj/9EvTTL0E/fRj66cPQfyj8UvQj66Xop1+Gfvpl6Kdfjn765einD0c/
fTj6D4NfgX5kvQL99CvRT78S/fSr0E+/Cv30q9FPvxr9h8OvQT+yXoN++rXo
p1+Lfvp16Kdfh376CPTTR6D/CPj16EfW69FPvwH99BvQT78R/fQb0U8fiX76
SPQfCb8J/ch6E/rpN6OffjP66begn34L+uk1+umRa/sjBv5/nm9PBbJGHpVK
+q2eR6eKHnmMfY7Cb/M8NtX0yONSQ7/d8/jU0m9H/1Hw/6IfWf+Lfvod6Kff
gX76nein34l++ij000eh/2j4XehH1rvQT78b/fS70U+/B/30e9BPH41++mj0
HwO/F/3Iei/66fehn34f+un3o59+P/rpY9BPH4P+gfAH0I+sD6Cf/iD66Q+i
n/4Q+ukPoZ8+Fv30seg/Fv4w+pH1YfTTH0E//RH00x9FP/1R9NPHoZ8+Dv3H
wR9DP7I+hn764+inP45++hPopz+Bfvp49NPHo/94+JPoR9Yn0U9/Cv30p9BP
fxr99KfRT2/QT4/c2F8h4M94npAKZI08KZX0Zz1PThU98hT7eyT8Oc9TU02P
PC019Amep6eWPgH9J8CfRz+yPo9++kT00yein/4C+ukvoJ8+Cf30Seg/Ef4i
+pH1RfTTX0I//SX0019GP/1l9NMno58+Gf0nwV9BP7K+gn76q+inv4p++mvo
p7+GfvoU9NOnoP9k+OvoR9bX0U9/A/30N9BPfxP99DfRT5+KfvpU9J8Cfwv9
yPoW+ulvo5/+Nvrp76Cf/g766dPQT5+G/lPh76IfWd9FP/099NPfQz/9ffTT
30c/fTr66dPRfxr8A/Qj6wfop3+IfvqH6Kd/hH76R+int+inR27tHxHg//M8
IxXIGnlmKukfe56VKnrk2fbPUfBPPP+YanrkOamhz/A8N7X0Geg/Hf4p+pH1
U/TTP0M//TP00z9HP/1z9NNnop8+E/1nwL9AP7J+gX76l+inf4l++lfop3+F
fvos9NNnof9M+NfoR9av0U//Bv30b9BP/xb99G/RT5+Nfvps9A+Bf4d+ZP0O
/fTv0U//Hv30H9BP/wH99B/RT/8R/WfBf0I/sv6EfvrP6Kf/jH76L+in/4J+
+hz00+eg/2z4r+hH1l/RT/8N/fTf0E//Hf3039FPn4t++lz0nwP/A/3I+gf6
6X+in/4n+ul/oZ/+F/rp6dm/++mR/X+AZ57nSQWyRu6QSrp47pgqeuROSem5
5yVSTY/cOTX0eTx3SS09csrSv+H/iP6sQNbIHbKSPm/0ZxU9cqdM6fNFf1bT
I3fOGnqH6M9aegfsPxc+P/Yj6/zYT18A++kLYD99QeynL4j99I7YT++I/efB
F8J+ZF0I++kLYz99YeynL4L99EWwn94J++mdsP98+KLPlpnvR9ZFsZ++mLvt
p0e2/fTFPdt+emTbT1/Cs+2nL4H9/4H/M/qzAlkj2376ktGfVfTItp++VPRn
NT2y7ad3jv6spUe2/1wAXxr7kTWy7acvg/30ZbCfviz205fFfnoX7KdHtv0X
wpfDfmRdDvvpy2M/fXnsp6+A/fQVsJ9eYD+98PdfpDQU/i/PK6cCWSN3TSV9
Rc/dUkWP3D0pfSXPG6SaHrlHaugre+6ZWnrkIksXwVeJ/qxA1shds5K+avRn
FT1y90zpq0V/VtMj98gaetfoz1p6V+y/GL469iPr6thPXwP76WtgP31N7Kev
if30bthP74b9l8DXwn5kXQv76WtjP31t7Kevg/30dbCf3h376d3994PtHwZf
17PtR9bItp++nmfbT49s++nre7b99Mi2n76BZ9tPj2z7L4VvGP1ZgayRbT99
o+jPKnpk20/fOPqzmh7Z9tN7RH/W0ntg/2XwTbAfWTfBfvqm2E/fFPvpm2E/
fTPsp/fEfnpP7L8cvjn2I+vm2E/fAvvpW2A/fUvsp2+J/fQS++mR7bfEcPhW
nrdNBbJG7pVK+taee6eKHrlPUvo2nvummh65X2ro23run1p6ZPvvFfDtoj8r
kDVyr6ykbx/9WUWP3CdT+g7Rn9X0yP2yht4r+rOW3gv7r4TviP3IuiP203fC
fvpO2E/fGfvpO2M/vTf203tj/1XwXbAfWXfBfvqu2E/fFfvpu2E/fTfsp/fB
frpl8f1Xw3f3bPuRNbLtp+/h2fbTI9t++p6ebT89su2n9/Vs++mR7Zd0DXyv
6M8KZI1s++l7R39W0SPbfvo+0Z/V9Mi2n94v+rOW3g/7r4Xvi/3Iui/20/fD
fvp+2E/fH/vp+2M/vT/20/tj/3XwA7AfWQ/AfvqB2E8/EPvpB2E//SDsp1fY
T6/890OV0gj4wZ4PSwWyRh6QSvohngemih55UFL6oZ5PTjU98uDU0A/zPCS1
9MhVlq6HHx79WYGskQdkJf2I6M8qeuRBmdKPjP6spkcenDX0AdGftfQB2H8D
/CjsR9ajsJ9+NPbTj8Z++jHYTz8G++kDsZ8+EPtvhB+L/ch6LPbTj8N++nHY
Tz8e++nHYz99EPbTB/nvB9s/En6CZ9uPrJFtP/1Ez7afHtn200/ybPvpkW0/
/WTPtp8e2fbfBD8l+rMCWSPbfvqp0Z9V9Mi2n35a9Gc1PbLtpw+O/qylD8b+
m+GnYz+yno799DOwn34G9tPPxH76mdhPH4L99CHYfwv8LOxH1rOwn3429tPP
xn76OdhPPwf76Yr99Mia7A/sv/3fns9PBbJGHppK+rmeh6WKHnl4Uvp5nq9O
NT3yiNTQz/c8MrX0yJql/4P/J/qzAlkjD81K+gXRn1X0yMMzpV8Y/VlNjzwi
a+hDoz9r6UOx/1b4RdiPrBdhP/1i7KdfjP30S7Cffgn204dhP30Y9t8GvxT7
kfVS7Kdfhv30y7Cffjn20y/Hfvpw7KcPx/7b4Vc8W+a+H1mvwH76le62nx7Z
9tOv8mz76ZFtP/1qz7afHtn2/xd+TfRnBbJGtv30a6M/q+iRbT/9uujPanpk
208fEf1ZS49s+++AX4/9yBrZ9tNvwH76DdhPvxH76TdiP30k9tNHYv+d8Juw
H1lvwn76zdhPvxn76bdgP/0W7KfX2E+v/X7rlEbB/8/z7alA1sijUkm/1fPo
VNEjj0lKv83z2FTTI49LDf12z+NTS49cZ+ku+H+jPyuQNfKorKTfEf1ZRY88
JlP6ndGf1fTI47KGPir6s5Y+Cvvvht+F/ch6F/bT78Z++t3YT78H++n3YD99
NPbTR2P/PfB7sR9Z78V++n3YT78P++n3Yz/9fuynj8F++hj//WD7R8Mf8Gz7
kTWy7ac/6Nn20yPbfvpDnm0/PbLtp4/1bPvpkW3/vfCHoz8rkDWy7ac/Ev1Z
RY9s++mPRn9W0yPbfvq46M9a+jjsvw/+GPYj62PYT38c++mPYz/9CeynP4H9
9PHYTx+P/ffDn8R+ZH0S++lPYT/9KeynP4399Kexn95gPz1yY78v4M94npAK
ZI08KZX0Zz1PThU98hT7fQR/zvPUVNMjT0sNfYLn6amlR26y9AD8+ejPCmSN
PCkr6ROjP6vokadkSn8h+rOaHnla1tAnRX/W0idh/4PwF7EfWV/EfvpL2E9/
CfvpL2M//WXsp0/Gfvpk7H8I/gr2I+sr2E9/Ffvpr2I//TXsp7+G/fQp2E+3
PI/vHwt/3bPtR9bItp/+hmfbT49s++lverb99Mi2nz7Vs+2nR7b9D8Pfiv6s
QNbItp/+dvRnFT2y7ae/E/1ZTY9s++nToj9r6dOw/xH4u9iPrO9iP/097Ke/
h/3097Gf/j7206djP3069j8K/wD7kfUD7Kd/iP30D7Gf/hH20z/CfnqL/fTW
fz+09uci/H+eZ6QCWSPPTCX9Y8+zUkWPPNv+HIV/4vnHVNMjz0kNfYbnuaml
R26z9Bj80+jPCmSNPDMr6Z9Ff1bRI8/OlP559Gc1PfKcrKHPjP6spc/E/sfh
X2A/sn6B/fQvsZ/+JfbTv8J++lfYT5+F/fRZ2P8E/GvsR9avsZ/+DfbTv8F+
+rfYT/8W++mzsZ8+238/2P7x8O88235kjWz76d97tv30yLaf/oNn20+PbPvp
P3q2/fTItv9J+E/RnxXIGtn203+O/qyiR7b99F+iP6vpkW0/fU70Zy19DvY/
Bf8V+5H1V+yn/4b99N+wn/479tN/x376XOynz8X+p+F/YD+y/oH99D+xn/4n
9tP/wn76X9hPT8/9vZ8e2f7TwDPP86QCWSN3SCVdPHdMFT1yJ/t7BDz3vESq
6ZE7p4Y+j+cuqaVHTll6Bv6P6M8KZI3cISvp80Z/VtEjd8qUPl/0ZzU9cues
oXeI/qyld8D+Z+HzYz+yzo/99AWwn74A9tMXxH76gthP74j99I7Y/xx8IexH
1oWwn74w9tMXxn76IthPXwT76Z2wn94J+yfAF32u/IfvR9bItp++mGfbT49s
++mLe7b99Mi2n76EZ9tPXwL7n4f/M/qzAlkj2376ktGfVfTItp++VPRnNT2y
7ad3jv6spUe2/0yEL439yLo09tOXwX76MthPXxb76ctiP70L9tMj2/4X4Mth
P7Iuh/305bGfvjz201fAfvoK2E8vsJ9e+Psv7O/F8H95XjkVyBq5ayrpK3ru
lip65O7292j4Sp43SDU9co/U0Ff23DO19MhFll6ErxL9WYGskbtmJX3V6M8q
euTumdJXi/6spkfukTX0rtGftfSu2P8SfHXsR9bVsZ++BvbT18B++prYT18T
++ndsJ/eDftfhq+F/ci6FvbT18Z++trYT18H++nrYD+9O/bTu/vvB9s/Gb6u
Z9uPrJFtP309z7afHtn209f3bPvpkW0/fQPPtp8e2fa/At8w+rMCWSPbfvpG
0Z9V9Mi2n75x9Gc1PbLtp/eI/qyl98D+V+GbYD+yboL99E2xn74p9tM3w376
ZthP74n99J7Y/xp8c+xH1s2xn74F9tO3wH76lthP3xL76SX20yOX9s+F8K08
b5sKZI3cK5X0rT33ThU9ch/750j4Np77ppoeuV9q6Nt67p9aeuQyS6/Dt4v+
rEDWyL2ykr599GcVPXKfTOk7RH9W0yP3yxp6r+jPWnov7H8DviP2I+uO2E/f
CfvpO2E/fWfsp++M/fTe2E/vjf1vwnfBfmTdBfvpu2I/fVfsp++G/fTdsJ/e
B/vpluf1/VPhu3u2/cga2fbT9/Bs++mRbT99T8+2nx7Z9tP7erb99Mi2/y34
XtGfFcga2fbT947+rKJHtv30faI/q+mRbT+9X/RnLb0f9r8N3xf7kXVf7Kfv
h/30/bCfvj/20/fHfnp/7Kf3x/534AdgP7IegP30A7GffiD20w/CfvpB2E+v
sJ9e+e+HKqVp8IM9H5YKZI08IJX0QzwPTBU98qCk9EM9n5xqeuTBqaEf5nlI
aumRqyy9Cz88+rMCWSMPyEr6EdGfVfTIgzKlHxn9WU2PPDhr6AOiP2vpA7D/
PfhR2I+sR2E//Wjspx+N/fRjsJ9+DPbTB2I/fSD2vw8/FvuR9Vjspx+H/fTj
sJ9+PPbTj8d++iDspw/y3w+2fzr8BM+2H1kj2376iZ5tPz2y7aef5Nn20yPb
fvrJnm0/PbLt/wB+SvRnBbJGtv30U6M/q+iRbT/9tOjPanpk208fHP1ZSx+M
/R/CT8d+ZD0d++lnYD/9DOynn4n99DOxnz4E++lDsP8j+FnYj6xnYT/9bOyn
n4399HOwn34O9tMV++mRNaUW/m/P56cCWSMPTSX9XM/DUkWPPDwp/TzPV6ea
HnlEaujnex6ZWnpkzdL/4P+J/qxA1shDs5J+QfRnFT3y8EzpF0Z/VtMjj8ga
+tDoz1r6UOz/GH4R9iPrRdhPvxj76RdjP/0S7Kdfgv30YdhPH4b9n8AvxX5k
vRT76ZdhP/0y7Kdfjv30y7GfPhz76Zbn8/0z4Fd4tv3IGtn206/0bPvpkW0/
/SrPtp8e2fbTr/Zs++mRbf+n8GuiPyuQNbLtp18b/VlFj2z76ddFf1bTI9t+
+ojoz1r6COz/DH499iPr9dhPvwH76TdgP/1G7KffiP30kdhPH4n9n8Nvwn5k
vQn76TdjP/1m7Kffgv30W7CfXmM/vfbfD3VKM+H/5/n2VCBr5FGppN/qeXSq
6JHHJKXf5nlsqumRx6WGfrvn8amlR66z9AX8v9GfFcgaeVRW0u+I/qyiRx6T
Kf3O6M9qeuRxWUMfFf1ZSx+F/V/C78J+ZL0L++l3Yz/9buyn34P99Huwnz4a
++mjsf8r+L3Yj6z3Yj/9Puyn34f99Puxn34/9tPHYD99jP9+sP2z4A94tv3I
Gtn20x/0bPvpkW0//SHPtp8e2fbTx3q2/fTItv9r+MPRnxXIGtn20x+J/qyi
R7b99EejP6vpkW0/fVz0Zy19HPZ/A38M+5H1MeynP4799Mexn/4E9tOfwH76
eOynj8f+b+FPYj+yPon99Kewn/4U9tOfxn7609hPb7CfHrlJaTb8Gc8TUoGs
kSelkv6s58mpokeekpT+nOepqaZHnpYa+gTP01NLj9xk6Tv489GfFcgaeVJW
0idGf1bRI0/JlP5C9Gc1PfK0rKFPiv6spU/C/u/hL2I/sr6I/fSXsJ/+EvbT
X8Z++svYT5+M/fTJ2P8D/BXsR9ZXsJ/+KvbTX8V++mvYT38N++lTsJ9uuYPv
/xH+umfbj6yRbT/9Dc+2nx7Z9tPf9Gz76ZFtP32qZ9tPj2z7f4K/Ff1ZgayR
bT/97ejPKnpk209/J/qzmh7Z9tOnRX/W0qdh/8/wd7EfWd/Ffvp72E9/D/vp
72M//X3sp0/Hfvp07P8F/gH2I+sH2E//EPvpH2I//SPsp3+E/fQW++mt/35o
U5oD/5/nGalA1sgzU0n/2POsVNEjz05K/8Tzj6mmR56TGvoMz3NTS4/cZulX
+KfRnxXIGnlmVtI/i/6sokeenSn98+jPanrkOVlDnxn9WUufif2/wb/AfmT9
AvvpX2I//Uvsp3+F/fSvsJ8+C/vps7D/d/jX2I+sX2M//Rvsp3+D/fRvsZ/+
LfbTZ2M/fbb/frD9c+Hfebb9yBrZ9tO/92z76ZFtP/0Hz7afHtn203/0bPvp
kW3/H/Cfoj8rkDWy7af/HP1ZRY9s++m/RH9W0yPbfvqc6M9a+hzs/xP+K/Yj
66/YT/8N++m/YT/9d+yn/4799LnYT5+L/X/B/8B+ZP0D++l/Yj/9T+yn/4X9
9L+wn54m/L2fbvnv//01f3vm2f+N2N9ZM3++Qyrp4rljqujiz3ey/zvw3PMS
9jcqeO7Pd7Y/YeHzeO5ibxxuuVP0wv/h2f+NGNxyZ++nz+vZ+unz+vPWT5/P
s/XT5/PnrZ/ewbP10zvEfkkCnz/2S4Gs88d+KekLxH6p6AvEflH6grFfavqC
sV8aesfYLy29Y+yXlMMXiv1SIOtCsV9K+sKxXyr6wrFflL5I7Jeavkjsl4be
KfZLS7dcxL3AF/Vs7x9ZLXf1909fzLO9f/pi/ry9f/rinu390xf35+3905fw
bO+fbrl73Dv8n56tH1kt9/B++pKerZ++pD9v/fSlPFs/fSl/3vrpnT1bP71z
7Jc0L3zp2C8Fsi4d+6WkLxP7paIvE/tF6cvGfqnpy8Z+aehdYr+09C6xX9J8
8OVivxTIulzsl5K+fOyXir587BelrxD7paavEPuloRexX1q65dL//WcH+L88
r5wKZLXcy//9J31Fz91SRV/Rn+9u/38EX8nzBqmmr+TP90gNfWXPPVNLt9zH
++eHr+LZ+pHVcj/vp6/q2frpq/rz1k9fzbP101fz562f3tWz9dO7xn5JC8BX
j/1SIOvqsV9K+hqxXyr6GrFflL5m7Jeavmbsl4beLfZLS+8W+yUtCF8r9kuB
rGvFfinpa8d+qehrx35R+jqxX2r6OrFfGnr32C8t3XLl778jfF3P9v6R1fIA
f//09Tzb+6ev58/b+6ev79neP319f97eP30Dz/b+6ZYHef9C8A09Wz+yWh7s
/fSNPFs/fSN/3vrpG3u2fvrG/rz103t4tn56j9gvaWH4JrFfCmTdJPZLSd80
9ktF3zT2i9I3i/1S0zeL/dLQe8Z+aek9Y7+kReCbx34pkHXz2C8lfYvYLxV9
i9gvSt8y9ktN3zL2S0MvY7+09NI/r+y/neBbed42Fci6lX9e9UolfWvPvVNF
39qf72OfI/BtPPdNNX0bf75faujbeu6fWvq2/nllRxaFb+fZ+pF1O/+8sn76
9p6tn769P2/99B08Wz99B3/e+um9PFs/vVfsl7QYfMfYLwWy7hj7paTvFPul
ou8U+0XpO8d+qek7x35p6L1jv7T03rFf0uLwXWK/FMi6S+yXkr5r7JeKvmvs
F6XvFvulpu8W+6Wh94n90tL7+OeV/ZKXgO/u2d4/su7un1f2/ul7eLb3T9/D
n7f3T9/Ts71/+p7+vL1/el/P9v7pff3zyvr/Cd/Ls/Uj617+eWX99L09Wz99
b3/e+un7eLZ++j7+vPXT+3m2fnq/2C9pSfi+sV8KZN039ktJ3y/2S0XfL/aL
0veP/VLT94/90tD7x35p6f1jv6Sl4AfEfimQ9YDYLyX9wNgvFf3A2C9KPyj2
S00/KPZLQ69iv7T0yj+vKvt7Efxgz4elAlkP9s+rAamkH+J5YKroh/jzg+zv
UfBDPZ+cavqh/vzg1NAP8zwktfTD/PPK+peGH+7Z+pH1cP+8sn76EZ6tn36E
P2/99CM9Wz/9SH/e+ukDPFs/fUDsl7QM/KjYLwWyHhX7paQfHfuloh8d+0Xp
x8R+qenHxH5p6ANjv7T0gbFf0rLwY2O/FMh6bOyXkn5c7JeKflzsF6UfH/ul
ph8f+6WhD4r90tIH+eeVvf8u8BM82/tH1hP888reP/1Ez/b+6Sf68/b+6Sd5
tvdPP8mft/dPP9mzvX/6yf55Zf3LwU/xbP3Ieop/Xlk//VTP1k8/1Z+3fvpp
nq2ffpo/b/30wZ6tnz449ktaHn567JcCWU+P/VLSz4j9UtHPiP2i9DNjv9T0
M2O/NPQhsV9a+pDYL2kF+FmxXwpkPSv2S0k/O/ZLRT879ovSz4n9UtPPif3S
0DX2S0u3rP7vPwv4vz2fnwpktTzU//0n/VzPw1JFP9efH27/HAE/z/PVqaaf
58+PSA39fM8jU0u3PNz7/wX/j2frR1bLI7yffoFn66df4M/b/wX6hZ6tn36h
P2/99KGerZ8+NPZLWhF+UeyXAlkviv1S0i+O/VLRL479ovRLYr/U9EtivzT0
YbFfWvqw2C9pJfilsV8KZL009ktJvyz2S0W/LPaL0i+P/VLTL4/90tCHx35p
6ZZrf/8rw6/wbO8fWS2P8vdPv9KzvX/6lf68LaBf5dneP/0qf97eP/1qz/b+
6ZbHeP8q8Gs8Wz+yWh7n/fRrPVs//Vp/3vrp13m2fvp1/rz100d4tn76iNgv
aVX49bFfCmS9PvZLSb8h9ktFvyH2i9JvjP1S02+M/dLQR8Z+aekjY7+k1eA3
xX4pkPWm2C8l/ebYLxX95tgvSr8l9ktNvyX2S0OvY7+0dMuN//vPrvD/83x7
KpDV8iT/95/0Wz2PThX9Vn/eFtBv8zw21fTb/PlxqaHf7nl8aumWp3j/6vD/
erZ+ZLU8zfvpd3i2fvod/rz10+/0bP30O/1566eP8mz99FGxX9Ia8LtivxTI
elfsl5J+d+yXin537Bel3xP7pabfE/uloY+O/dLSR8d+SWvC7439UiDrvbFf
Svp9sV8q+n2xX5R+f+yXmn5/7JeGPib2S0u33Pr77wZ/wLO9f2S1PNPfP/1B
z/b+6Q/68/b+6Q95tvdPf8ift/dPH+vZ3j/d8mzvXwv+sGfrR1bLc7yf/ohn
66c/4s9bP/1Rz9ZPf9Sft376OM/WTx8X+yWtDX8s9kuBrI/Ffinpj8d+qeiP
x35R+hOxX2r6E7FfGvr42C8tfXzsl7QO/MnYLwWyPhn7paQ/Ffuloj8V+0Xp
T8d+qelPx35p6E3sl5be+OdVk1J3+DOeJ6QCWZ/xz6tJqaQ/63lyqujP+vNT
ktKf8zw11fTn/PlpqaFP8Dw9tfQJ/nll/evCn/ds/cj6vH9eWT99omfrp0/0
562f/oJn66e/4M9bP32SZ+unT4r9ktaDvxj7pUDWF2O/lPSXYr9U9Jdivyj9
5dgvNf3l2C8NfXLsl5Y+OfZLWh/+SuyXAllfif1S0l+N/VLRX439ovTXYr/U
9NdivzT0KbFfWvoU/7yy978B/HXP9v6R9XX/vLL3T3/Ds71/+hv+vL1/+pue
7f3T3/Tn7f3Tp3q290+f6p9X1r8h/C3P1o+sb/nnlfXT3/Zs/fS3/Xnrp7/j
2frp7/jz1k+f5tn66dNiv6SN4O/GfimQ9d3YLyX9vdgvFf292C9Kfz/2S01/
P/ZLQ58e+6WlT4/9kjaGfxD7pUDWD2K/lPQPY79U9A9jvyj9o9gvNf2j2C8N
vY390tJb/7xqU+oB/5/nGalA1v/559XMVNI/9jwrVfSP/fnZSemfeP4x1fRP
/Pk5qaHP8Dw3tfQZ/nll/ZvAP/Vs/cj6qX9eWT/9M8/WT//Mn7d++ueerZ/+
uT9v/fSZnq2fPjP2S9oU/kXslwJZv4j9UtK/jP1S0b+M/aL0r2K/1PSvYr80
9FmxX1r6rNgvaTP417FfCmT9OvZLSf8m9ktF/yb2i9K/jf1S07+N/dLQZ8d+
aemz/fPK3n9P+Hee7f0j63f+eWXvn/69Z3v/9O/9eXv/9B882/un/+DP2/un
/+jZ3j/9R/+8sv7N4T95tn5k/ck/r6yf/rNn66f/7M9bP/0Xz9ZP/8Wft376
HM/WT58T+yVtAf819kuBrL/Gfinpv8V+qei/xX5R+u+xX2r677FfGvrc2C8t
fW7sl7Ql/I/YLwWy/hH7paT/Gfulov8Z+0Xpf8V+qel/xX5p6Ol53y8t3XLy
H4BewjPP86QCWS13yDqkki6eO6aKLv58p6T03PMSqabn/nzn1NDn8dwltXTL
nbx/K/g/PFs/slru7P30eT1bP31ef9766fN5tn76fP689dM7eLZ+eofYL2lr
+PyxXwpknT/2S0lfIPZLRV8g9ovSF4z9UtMXjP3S0DvGfmnpHWO/pG3gC8V+
KZB1odgvJX3h2C8VfeHYL0pfJPZLTV8k9ktD7xT7paVbLvz9bwtf1LO9f2S1
3NXfP30xz/b+6Yv58/b+6Yt7tvdPX9yft/dPX8KzvX+65e7evx38n56tH1kt
9/B++pKerZ++pD9v/fSlPFs/fSl/3vrpnT1bP71z7Je0PXzp2C8Fsi4d+6Wk
LxP7paIvE/tF6cvGfqnpy8Z+aehdYr+09C6xX9IO8OVivxTIulzsl5K+fOyX
ir587BelrxD7paavEPuloRexX1q65TIrUuoF/5fnlVOBrJZ7ZV1TSV/Rc7dU
0Vf057snpa/keYNU01fy53ukhr6y556ppVvu4/07wlfxbP3Iarmf99NX9Wz9
9FX9eeunr+bZ+umr+fPWT+/q2frpXWO/pJ3gq8d+KZB19dgvJX2N2C8VfY3Y
L0pfM/ZLTV8z9ktD7xb7paV3i/2SdoavFfulQNa1Yr+U9LVjv1T0tWO/KH2d
2C81fZ3YLw29e+yXlm658vffG76uZ3v/yGp5gL9/+nqe7f3T1/Pn7f3T1/ds
75++vj9v75++gWd7/3TLg7x/F/iGnq0fWS0P9n76Rp6tn76RP2/99I09Wz99
Y3/e+uk9PFs/vUfsl7QrfJPYLwWybhL7paRvGvulom8a+0Xpm8V+qembxX5p
6D1jv7T0nrFf0m7wzWO/FMi6eeyXkr5F7JeKvkXsF6VvGfulpm8Z+6Whl7Ff
Wnrpn1dlSn3gW3neNhXIupV/XvVKJX1rz71TRd/an++TlL6N576ppm/jz/dL
DX1bz/1TS9/WP6+sf3f4dp6tH1m3888r66dv79n66dv789ZP38Gz9dN38Oet
n97Ls/XTe8V+SXvAd4z9UiDrjrFfSvpOsV8q+k6xX5S+c+yXmr5z7JeG3jv2
S0vvHfsl7QnfJfZLgay7xH4p6bvGfqnou8Z+UfpusV9q+m6xXxp6n9gvLb2P
f17Z++8L392zvX9k3d0/r+z90/fwbO+fvoc/b++fvqdne//0Pf15e//0vp7t
/dP7+ueV9e8F38uz9SPrXv55Zf30vT1bP31vf9766ft4tn76Pv689dP7ebZ+
er/YL2lv+L6xXwpk3Tf2S0nfL/ZLRd8v9ovS94/9UtP3j/3S0PvHfmnp/WO/
pH3gB8R+KZD1gNgvJf3A2C8V/cDYL0o/KPZLTT8o9ktDr2K/tPTKP68qey/w
gz0flgpkPdg/rwakkn6I54Gpoh/izw+y9wg/1PPJqaYf6s8PTg39MM9DUks/
zD+vrH9f+OGerR9ZD/fPK+unH+HZ+ulH+PPWTz/Ss/XTj/TnrZ8+wLP10wfE
fkn7wY+K/VIg61GxX0r60bFfKvrRsV+Ufkzsl5p+TOyXhj4w9ktLHxj7Je0P
Pzb2S4Gsx8Z+KenHxX6p6MfFflH68bFfavrxsV8a+qDYLy19kH9e2fvvDz/B
s71/ZD3BP6/s/dNP9Gzvn36iP2/vn36SZ3v/9JP8eXv/9JM92/unn+yfV9Z/
APwUz9aPrKf455X100/1bP30U/1566ef5tn66af589ZPH+zZ+umDY7+kA+Gn
x34pkPX02C8l/YzYLxX9jNgvSj8z9ktNPzP2S0MfEvulpQ+J/ZIOgp8V+6VA
1rNiv5T0s2O/VPSzY78o/ZzYLzX9nNgvDV1jv7R0y5qp/bkA/7fn81OBrJaH
ZkNTST/X87BU0c/154fbnyPw8zxfnWr6ef78iNTQz/c8MrV0y8O9/2D4fzxb
P7JaHuH99As8Wz/9An/e+ukXerZ++oX+vPXTh3q2fvrQ2C/pEPhFsV8KZL0o
9ktJvzj2S0W/OPaL0i+J/VLTL4n90tCHxX5p6cNiv6RD4ZfGfimQ9dLYLyX9
stgvFf2y2C9Kvzz2S02/PPZLQx8e+6WlW679/R8Gv8KzvX9ktTzK3z/9Ss/2
/ulX+vP2/ulXebb3T7/Kn7f3T7/as71/uuUx3n84/BrP1o+slsd5P/1az9ZP
v9aft376dZ6tn36dP2/99BGerZ8+IvZLOgJ+feyXAlmvj/1S0m+I/VLRb4j9
ovQbY7/U9BtjvzT0kbFfWvrI2C/pSPhNsV8KZL0p9ktJvzn2S0W/OfaL0m+J
/VLTb4n90tDr2C8t3XKT1fa5CP8/z7enAlktT8pGpZJ+q+fRqaLf6s+Psc9R
+G2ex6aafps/Py419Ns9j08t3fIU7z8K/l/P1o+slqd5P/0Oz9ZPv8Oft376
nZ6tn36nP2/99FGerZ8+KvZLOhp+V+yXAlnviv1S0u+O/VLR7479ovR7Yr/U
9HtivzT00bFfWvro2C/pGPi9sV8KZL039ktJvy/2S0W/L/aL0u+P/VLT74/9
0tDHxH5p6ZZbf/8D4Q94tvePrJZn+vunP+jZ3j/9QX/e3j/9Ic/2/ukP+fP2
/uljPdv7p1ue7f3Hwh/2bP3IanmO99Mf8Wz99Ef8eeunP+rZ+umP+vPWTx/n
2frp42K/pOPgj8V+KZD1sdgvJf3x2C8V/fHYL0p/IvZLTX8i9ktDHx/7paWP
j/2Sjoc/GfulQNYnY7+U9Kdiv1T0p2K/KP3p2C81/enYLw29if3S0hv/vGrs
74XwZzxPSAWyPuOfV5NSSX/W8+RU0Z/156fY3yPhz3memmr6c/78tNTQJ3ie
nlr6BP+8sv4T4M97tn5kfd4/r6yfPtGz9dMn+vPWT3/Bs/XTX/DnrZ8+ybP1
0yfFfkknwl+M/VIg64uxX0r6S7FfKvpLsV+U/nLsl5r+cuyXhj459ktLnxz7
JZ0EfyX2S4Gsr8R+Kemvxn6p6K/GflH6a7FfavprsV8a+pTYLy19in9e2fs/
Gf66Z3v/yPq6f17Z+6e/4dneP/0Nf97eP/1Nz/b+6W/68/b+6VM92/unT/XP
K+s/Bf6WZ+tH1rf888r66W97tn762/689dPf8Wz99Hf8eeunT/Ns/fRpsV/S
qfB3Y78UyPpu7JeS/l7sl4r+XuwXpb8f+6Wmvx/7paFPj/3S0qfHfkmnwT+I
/VIg6wexX0r6h7FfKvqHsV+U/lHsl5r+UeyXht7GfmnprX9etfbPRfD/eZ6R
CmT9n39ezUwl/WPPs1JF/9ifn23/HAX/xPOPqaZ/4s/PSQ19hue5qaXP8M8r
6z8d/qln60fWT/3zyvrpn3m2fvpn/rz10z/3bP30z/1566fP9Gz99JmxX9IZ
8C9ivxTI+kXsl5L+ZeyXiv5l7BelfxX7paZ/Ffuloc+K/dLSZ8V+SWfCv479
UiDr17FfSvo3sV8q+jexX5T+beyXmv5t7JeGPjv2S0uf7Z9X9v6HwL/zbO8f
Wb/zzyt7//TvPdv7p3/vz9v7p//g2d4//Qd/3t4//UfP9v7pP/rnlfWfBf/J
s/Uj60/+eWX99J89Wz/9Z3/e+um/eLZ++i/+vPXT53i2fvqc2C/pbPivsV8K
ZP019ktJ/y32S0X/LfaL0n+P/VLTf4/90tDnxn5p6XNjv6Rz4H/EfimQ9Y/Y
LyX9z9gvFf3P2C9K/yv2S03/K/ZLQ08Tfb+0dMvxv1Z4ZlnmSQWyWo7v/9PF
snRMFV38fKek9NzPL5Fqej7x7+//0+fx811SS7fcyX/++b/h/7As82QFslru
7D//nD6vZemYVfR5/XynTOnz+fklspo+n5/vnDX0Dn6+S9bSO8R+SefC54/9
UiDr/BP//v4/fYHYLxV9gdgvSl8w9ktNX3Di39//p3eM/dLSO8b+PJ0HXyj2
5wWyLhT785K+cOzPK/rCsT9X+iKxP6/pi8T+vKF3iv15S7dc+P9wPnzRieW/
/P6R1XJ8/5++2MRydb9/uuV/+f3TF/fzdv90y6v7/dOX8PN2/3TL3f3+/wP/
58RyXb9/ZLW8id8/fUnLfv90y+v6/dOX8vN2//Sl/LzdP72zn7f7p3f2X7/d
/wXwpWO/FMi6tP/67f7py8R+qejLxH5R+rKxX2r6srFfGnqX2C8tvYv/+u3+
L4QvF/vzAlmXi/15SV8+9ucVffnYnyt9hdif1/QVYn/e0IvYn7d0y/H9/6Hw
f1mWlVOBrJbj+//0FS1Lt1TRV5z49/f/6Sv5+Q1STV9p4t/f/6ev7Od7ppZu
uY///POL4KtYlpWzAlkt9/Off05f1bJ0yyr6qn6+e6b01fz8BllNX83P98ga
elc/3zNr6V0n/v39/4vhq8d+KZB19Yl/f/+fvkbsl4q+xsS/v/9PXzP2S01f
c+Lf3/+nd4v90tK7xf48XQJfK/bnBbKuFfvzkr527M8r+tqxP1f6OrE/r+nr
xP68oXeP/XlLt3yw3/8w+LqW/f6R1fJRfv/09Sz7/dPX8/N2//T1/bzdP319
P2/3T9/Az9v90y2f4Pd/KXxDy37/yGr5dL9/+kaW/f7pG/l5u3/6xn7e7p++
sZ+3+6f38PN2//QesV/SZfBNYr8UyLpJ7JeSvmnsl4q+aewXpW8W+6Wmbxb7
paH3jP3S0nvG/jxdDt889ucFsm4e+/OSvkXszyv6FrE/V/qWsT+v6VvG/ryh
l7E/b+mWM//+9XD4VpZl21Qgq+X5/fvX9K0tS+9U0bf2832S0rfx831TTd/G
z/dLDX1bP98/tXTLi/rPP78Cvp1l2TYrkNXy0v7zz+nbW5beWUXf3s/3yZS+
g5/vm9X0Hfx8v6yh9/Lz/bOW3iv2S7oSvmPslwJZd4z9UtJ3iv1S0XeK/aL0
nWO/1PSdY7809N6xX1p679ifp6vgu8T+vEDWXWJ/XtJ3jf15Rd819udK3y32
5zV9t9ifN/Q+sT9v6ZZX9Pu/Gr67Zb9/ZLW8ht8/fQ/Lfv/0Pfy83T99Tz9v
90/f08/b/dP7+nm7f7rl9fz+r4HvZdnvH1ktb+r3T9/bst8/fW8/b/dP38fP
2/3T9/Hzdv/0fn7e7p/eL/ZLuha+b+yXAln3jf1S0veL/VLR94v9ovT9Y7/U
9P1jvzT0/rFfWnr/2J+n6+AHxP68QNYDYn9e0g+M/XlFPzD250o/KPbnNf2g
2J839Cr25y3d8lb+/esR8IMty2GpQFbLO/r3r+mHWJaBqaIf4ucHJaUf6udP
TjX9UD8/ODX0w/z8kNTSLe/uP//8evjhluWwrEBWy/v6zz+nH2FZBmYV/Qg/
PyhT+pF+/uSsph/p5wdnDX2Anx+StfQBsV/SDfCjYr8UyHpU7JeSfnTsl4p+
dOwXpR8T+6WmHxP7paEPjP3S0gfG/jzdCD829ucFsh4b+/OSflzszyv6cbE/
V/rxsT+v6cfH/ryhD4r9eUu3fIjf/0j4CZb9/pHV8tF+//QTLfv900/083b/
9JP8vN0//SQ/b/dPP9nP2/3TLZ/o938T/BTLfv/IavkMv3/6qZb9/umn+nm7
f/ppft7un36an7f7pw/283b/9MGxX9LN8NNjvxTIenrsl5J+RuyXin5G7Bel
nxn7paafGfuloQ+J/dLSh8T+PN0CPyv25wWynhX785J+duzPK/rZsT9X+jmx
P6/p58T+vKFr7M9buuVz/fvXNfzfluX8VCCr5Yv9+9f0cy3LsFTRz/Xzw5PS
z/PzV6eafp6fH5Ea+vl+fmRq6Zav9J9//n/w/1iW87MCWS3f4D//nH6BZRmW
VfQL/PzwTOkX+vmrs5p+oZ8fkTX0oX5+ZNbSh8Z+SbfCL4r9UiDrRbFfSvrF
sV8q+sWxX5R+SeyXmn5J7JeGPiz2S0sfFvvzdBv80tifF8h6aezPS/plsT+v
6JfF/lzpl8f+vKZfHvvzhj489uct3fKtfv+3w6+YWN7m94+slu/2+6dfObG8
x++fbvk2v3/6VX7e7p9u+R6/f/rVft7un275Ib///8Kvsez3j6yWn/D7p19r
2e+ffq2ft/unX+fn7f7p1/l5u3/6CD9v908f4b9+u/874NfHfimQ9Xr/9dv9
02+I/VLRb4j9ovQbY7/U9BtjvzT0kbFfWvrI2J+nO+E3xf68QNabYn9e0m+O
/XlFvzn250q/JfbnNf2W2J839Dr25y3d8rP+/etR8P+zLLenAlktv+Tfv6bf
allGp4p+q58fk5R+m58fm2r6bX5+XGrot/v58amlW37Df/75XfD/WpbbswJZ
Lb/nP/+cfodlGZ1V9Dv8/JhM6Xf6+bFZTb/Tz4/LGvooPz8+a+mjYr+ku+F3
xX4pkPWu2C8l/e7YLxX97tgvSr8n9ktNvyf2S0MfHfulpY+O/Xm6B35v7M8L
ZL039ucl/b7Yn1f0+2J/rvT7Y39e0++P/XlDHxP785Zu+RO//9HwByz7/SOr
5a/8/ukPWvb7pz/o5+3+6Q/5ebt/+kN+3u6fPtbP2/3TLf/g938v/GHLfv/I
avl3v3/6I5b9/umP+Hm7f/qjft7un/6on7f7p4/z83b/9HGxX9J98MdivxTI
+ljsl5L+eOyXiv547BelPxH7paY/EfuloY+P/dLSx8f+PN0PfzL25wWyPhn7
85L+VOzPK/pTsT9X+tOxP6/pT8f+vKE3sT9v6ZbP8+9fj4E/Y1kmpAJZLV/i
37+mP2tZJqeK/qyfn2K/j+DP+fmpqaY/5+enpYY+wc9PTy3d8lX+888fgD9v
WSZkBbJavtF//jl9omWZnFX0iX5+Sqb0F/z81Kymv+Dnp2UNfZKfn5619Emx
X9KD8BdjvxTI+mLsl5L+UuyXiv5S7Belvxz7paa/HPuloU+O/dLSJ8f+PD0E
fyX25wWyvhL785L+auzPK/qrsT9X+muxP6/pr8X+vKFPif15S7d8u9//WPjr
lv3+kdXyaL9/+huW/f7pb/h5u3/6m37e7p/+pp+3+6dP9fN2/3TLY/3+H4a/
ZdnvH1ktj/f7p79t2e+f/raft/unv+Pn7f7p7/h5u3/6ND9v90+fFvslPQJ/
N/ZLgazvxn4p6e/Ffqno78V+Ufr7sV9q+vuxXxr69NgvLX167M/To/APYn9e
IOsHsT8v6R/G/ryifxj7c6V/FPvzmv5R7M8behv785Zu+Tn//vU4+P8sy4xU
IKvll/371/SPLcusVNE/9vOz7c9R+Cd+/sdU0z/x83NSQ5/h5+emlm75Tf/5
54/BP7UsM7ICWS2/7z//nP6ZZZmVVfTP/PzsTOmf+/kfs5r+uZ+fkzX0mX5+
btbSZ8Z+SY/Dv4j9UiDrF7FfSvqXsV8q+pexX5T+VeyXmv5V7JeGPiv2S0uf
Ffvz9AT869ifF8j6dezPS/o3sT+v6N/E/lzp38b+vKZ/G/vzhj479uct3fIM
v//x8O8s+/0jq+VZfv/07y37/dO/9/N2//Qf/LzdP/0HP2/3T//Rz9v90y3/
6Pf/JPwny37/yGp5rt8//WfLfv/0n/283T/9Fz9v90//xc/b/dPn+Hm7f/qc
2C/pKfivsV8KZP019ktJ/y32S0X/LfaL0n+P/VLTf4/90tDnxn5p6XNjf56e
hv8R+/MCWf+I/XlJ/zP25xX9z9ifK/2v2J/X9L9if97Q0wu+P2/plufx7183
8MxyPk8qkNVyR//+NV0s5x1TRRc/38n+HgHP/fwSqabnfr5zaujz+PkuqaVb
XiJLWXoG/g/L+TxZgayWu2QdspI+r+W8Y1bR5/XznTKlz+fnl8hq+nx+vnPW
0Dv4+S5ZS+8Q+yU9C58/9kuBrPPHfinpC8R+qegLxH5R+oKxX2r6grFfGnrH
2C8tvWPsz9Nz8IVif14g60KxPy/pC8f+vKIvHPtzpS8S+/Oavkjszxt6p9if
t3TLK/v9T4Av+kK5it8/slpey++fvphlv3+65VX8/umL+3m7f/rift7un76E
n7f7p1vewO//efg/Xyg39PtHVsub+/3Tl7Ts90+3vKHfP30pP2/3T1/Kz9v9
0zv7ebt/emf/9dv9T4QvHfulQNalY7+U9GViv1T0ZWK/KH3Z2C81fdnYLw29
S+yXlt7Ff/12/y/Al4v9eYGsy8X+vKQvH/vzir587M+VvkLsz2v6CrE/b+hF
7M9buuVts8L+Xgz/l+V85VQgq+Xe/v1r+oqW826poq/o57vb36PhK/n5DVJN
X8nP90gNfWU/3zO1dMt9syJLL8JXsZyvnBXIarl/1jUr6atazrtlFX1VP989
U/pqfn6DrKav5ud7ZA29q5/vmbX0rrFf0kvw1WO/FMi6euyXkr5G7JeKvkbs
F6WvGfulpq8Z+6Whd4v90tK7xf48vQxfK/bnBbKuFfvzkr527M8r+tqxP1f6
OrE/r+nrxP68oXeP/XlLt3y43/9k+LqW/f6R1fKxfv/09Sz7/dPX8/N2//T1
/bzdP319P2/3T9/Az9v90y2f4vf/CnxDy37/yGr5LL9/+kaW/f7pG/l5u3/6
xn7e7p++sZ+3+6f38PN2//QesV/Sq/BNYr8UyLpJ7JeSvmnsl4q+aewXpW8W
+6Wmbxb7paH3jP3S0nvG/jy9Bt889ucFsm4e+/OSvkXszyv6FrE/V/qWsT+v
6VvG/ryhl7E/b+mW/+Hfv54C38pyvm0qkNXyQv79a/rWlvPeqaJv7ef72D9H
wrfx831TTd/Gz/dLDX1bP98/tXTL/8zKLL0O385ybv8fiayWl8t6ZSV9e8t5
76yib+/n+2RK38HP981q+g5+vl/W0Hv5+f5ZS+8V+yW9Ad8x9kuBrDvGfinp
O8V+qeg7xX5R+s6xX2r6zrFfGnrv2C8tvXfsz9Ob8F1if14g6y6xPy/pu8b+
vKLvGvtzpe8W+/Oavlvszxt6n9ift3TLq/r9T4XvbtnvH1ktr+33T9/Dst8/
fQ8/b/dP39PP2/3T9/Tzdv/0vn7e7p9ueSO//7fge1n2+0dWy1v4/dP3tuz3
T9/bz9v90/fx83b/9H38vN0/vZ+ft/un94v9kt6G7xv7pUDWfWO/lPT9Yr9U
9P1ivyh9/9gvNX3/2C8NvX/sl5beP/bn6R34AbE/L5D1gNifl/QDY39e0Q+M
/bnSD4r9eU0/KPbnDb2K/XlLt7ydf/96Gvxgy/lhqUBWy7v496/ph1jOB6aK
foifH5SUfqifPznV9EP9/ODU0A/z80NSS7e8V1Zl6V344Zbzw7ICWS0fkA3I
SvoRlvOBWUU/ws8PypR+pJ8/OavpR/r5wVlDH+Dnh2QtfUDsl/Qe/KjYLwWy
HhX7paQfHfuloh8d+0Xpx8R+qenHxH5p6ANjv7T0gbE/T+/Dj439eYGsx8b+
vKQfF/vzin5c7M+Vfnzsz2v68bE/b+iDYn/e0i0f4fc/HX6CZb9/ZLV8nN8/
/UTLfv/0E/283T/9JD9v908/yc/b/dNP9vN2/3TLp/r9fwA/xbLfP7JaPtvv
n36qZb9/+ql+3u6ffpqft/unn+bn7f7pg/283T99cOyX9CH89NgvBbKeHvul
pJ8R+6WinxH7Relnxn6p6WfGfmnoQ2K/tPQhsT9PH8HPiv15gaxnxf68pJ8d
+/OKfnbsz5V+TuzPa/o5sT9v6Br785Zu+QL//nUL/7fl/PxUIKvly/z71/Rz
LefDUkU/188PT0o/z89fnWr6eX5+RGro5/v5kamlW7420yz9D/4fy/n5WYGs
lm/OhmYl/QLL+bCsol/g54dnSr/Qz1+d1fQL/fyIrKEP9fMjs5Y+NPZL+hh+
UeyXAlkviv1S0i+O/VLRL479ovRLYr/U9EtivzT0YbFfWvqw2J+nT+CXxv68
QNZLY39e0i+L/XlFvyz250q/PPbnNf3y2J839OGxP2/plu/0+58Bv8Ky3z+y
Wr7f759+pWW/f/qVft7un36Vn7f7p1/l5+3+6Vf7ebt/uuVH/f4/hV9j2e8f
WS0/7fdPv9ay3z/9Wj9v90+/zs/b/dOv8/N2//QRft7unz4i9kv6DH597JcC
Wa+P/VLSb4j9UtFviP2i9Btjv9T0G2O/NPSRsV9a+sjYn6fP4TfF/rxA1pti
f17Sb479eUW/OfbnSr8l9uc1/ZbYnzf0OvbnLd3yRP/+9Uz4/1nOb08Fslp+
1b9/Tb/Vcj46VfRb/fyYpPTb/PzYVNNv8/PjUkO/3c+PTy3d8ttZnaUv4P+1
nN+eFchq+cNsVFbS77Ccj84q+h1+fkym9Dv9/Nispt/p58dlDX2Unx+ftfRR
sV/Sl/C7Yr8UyHpX7JeSfnfsl4p+d+wXpd8T+6Wm3xP7paGPjv3S0kfH/jx9
Bb839ucFst4b+/OSfl/szyv6fbE/V/r9sT+v6ffH/ryhj4n9eUu3/Lnf/yz4
A5b9/pHV8rd+//QHLfv90x/083b/9If8vN0//SE/b/dPH+vn7f7pln/x+/8a
/rBlv39ktfyX3z/9Ect+//RH/LzdP/1RP2/3T3/Uz9v908f5ebt/+rjYL+kb
+GOxXwpkfSz2S0l/PPZLRX889ovSn4j9UtOfiP3S0MfHfmnp42N/nr6FPxn7
8wJZn4z9eUl/KvbnFf2p2J8r/enYn9f0p2N/3tCb2J+3dMsX+vevZ8OfsZxP
SAWyWr7cv39Nf9ZyPjlV9Gf9/JSk9Of8/NRU05/z89NSQ5/g56enlm75uqzJ
0nfw5y3nE7ICWS3fkk3KSvpEy/nkrKJP9PNTMqW/4OenZjX9BT8/LWvok/z8
9KylT4r9kr6Hvxj7pUDWF2O/lPSXYr9U9Jf+n6b7j/dzrv84/v58zuvzcdTU
icXBcFWrjpo6sTgYrmrVUVMnFgfDVe1bR00tFgejt5qaokZ+bDJdijqKGqFN
pktRZ2yZ3xvGpaijpoZhk/F9Pt9ez/7a43vv9X3d3nuV7fxx3Urvb0b5Xen9
zVJ+V3p/s5KvTO9v1vKV6f0d4Xn3Ven9HZl3XJXe35HL/5re31HI/5re3xHl
d6f3d5Tyu9P7Oyr56vT+jlqOHuH9N7rfg+b9vSN6Ce8vvxfN+8vv5TzuL7+P
87i//D7O4/7y+zmP+8vRS3n/F9wfQPP+3hFd8f7yB9G8v/xBzuP+8oc4j/vL
H+I87i9fw3ncX74mvb8ZXnRfm97fzLzj2vT+Zi5/OL2/WcgfTu9vRvkj6f3N
Uv5Ien+zkj+a3t+s5Y+m93eEl9zXpfd3ZN5xXXp/Ry5/LL2/o5A/lt7fEeWP
p/d3lPLH0/s7Knmd3t9Ry9F/4ffXm9yfQHc8GTLviL6b31/L/4buWB8K+d84
vyFE+d85vzGU8r9zflOo5E9y/pVQy9EPNepG2Oz+FLrjyUbmHdGPN8Yaufwf
6I71jUL+D85vaET5Pzm/sVHK/8n5TY1KPsb5Vxq1fCy9vxledn86vb+Zecen
0/ubufxf6f3NQv6v9P5mlP87vb9Zyv+d3t+s5OvT+5u1fH16f0f4n/sz6f0d
mXd8Jr2/I5f/J72/o5D/J72/I8r/m97fUcr/m97fUck3pPd31HL0GO//ivuz
aN7fO6I38P7y59C8v/w5zuP+8uc5j/vLn+c87i/fyHncX47exPtvcX8Bzft7
R3Ro4v7yF9GG+8tf5DzuL3+J87i//CXO4/7yTZzH/eWb0vub4VX3zen9zcw7
bk7vb+byl9P7m4X85fT+ZpT/L72/Wcr/l97frOSvpPc3a/kr6f0d4TX3Len9
HZl33JLe35HLX03v7yjkr6b3d0T5a+n9HaX8tfT+jkoeRvn+jlrOTv+6+HVv
0C1k3pHN77/lTfq4UMjZ/P5b3kEfH0o5m99/y40+IdRydif3urfQ47DfO7I7
sV/epmO/nN2J/fKt6NgvZ3div7yTjv1ydhff5b41ejz2e0d2F/bL30DHfjm7
C/vlb6Rjv5zdhf3ycXTsl7O7+fvmvg16AvZ7R3Y39svfRMd+Obsb++VvpmO/
nN2N/fIuOvbLu9L9LZj7W9L9LfOOb0n3t1y+bbq/FfJt0/0tyrdL97dSvl26
v1Xy8en+VsvHp/tbaLm/Nd3fMu/41nR/y+Xbp/tbId8+3d+ifId0fyvlO6T7
WyXvTve3Wt6d7m+h7b5jur9l3nHHdH/L5Tul+1sh3ynd36J853R/K+U7p/tb
JZ+Q7m+1fEK6v4Wt3HdJ97fMO+6S7m+5fNd0fyvku6b7W5Tvlu5vpXy3dH+r
5Fm6v9VydpbhxO5vQ0+cGDLvyM56Qi5/O31SKOTsrBf/PXJ/B31yKOXsrC9U
8on0KaGWs3uwf2v3d6InYb93ZPdgv/xddOyXs3uwX/5uOvbL2T3YL++hY7+c
3Yv9b3DfHT0Z+70juxf75e+hY7+c3Yv98vfSsV/O7sV++SQ69svZfdj/Rvc9
0FOw3zuy+7Bf/j469svZfdgvfz8d++XsPuyX99KxX96b7m9hnPsH0v0t844f
SPe3XL5nur8V8j3T/S3K90r3t1K+V7q/VfLJ6f5Wyyen+1vYxv2D6f6WeccP
pvtbLt873d8K+d7p/hbl+6T7WynfJ93fKnlfur/V8r50fwtvct833d8y77hv
ur/l8v3S/a2Q75fub1G+f7q/lfL90/2tkk9J97daPiXd38Kb3Q9I97fMOx6Q
7m+5/MB0fyvkB6b7W5QflO5vpfygdH+r5Hm6v9Vydp7jH+HuH0JPnRoy78jO
+0Mu/zB9Wijk7HwAf464f4Q+PZRydj4YKvlU+oxQy9n92P8W94+ip2G/d2T3
Y7/8Y3Tsl7P7sV/+cTr2y9n92C/vp2O/nD2A/du6H4yejv3ekT2A/fJP0LFf
zh7Afvkn6dgvZw9gv3waHfvl7EHs3879EPQM7PeO7EHsl3+Kjv1y9iD2yz9N
x345exD75QN07JcPpPtbGO/+mXR/y7zjZ9L9LZcfmu5vhfzQdH+L8sPS/a2U
H5bub5V8erq/1fLp6f4W3ur+2XR/y7zjZ9P9LZcfnu5vhfzwdH+L8iPS/a2U
H5Hub5V8MN3favlgur+F7d2PTPe3zDseme5vufyodH8r5Eel+1uUH53ub6X8
6HR/q+Qz0v2tls9I97ewg/sx6f6Wecdj0v0tlx+b7m+F/Nh0f4vy49L9rZQf
l+5vlbxI97dazi4K/L3I/XPomTND5h3ZxVDI5Z+nzwqFnF3Mxt+j3L9AnxNK
ObsYDpV8Jn1uqOXsIezf0f3/0LOw3zuyh7Bf/kU69svZQ9gv/xId++XsIeyX
D9GxX86ejf07uR+PnoP93pE9G/vlX6Zjv5w9G/vlX6Fjv5w9G/vls+jYL2cP
Y//O7ieg52K/d2QPY7/8q3Tsl7OHsV/+NTr2y9nD2C+fTcd++ex0fwsT3L+e
7m+Zd/x6ur/l8hPT/a2Qn5jub1F+Urq/lfKT0v2tks9J97daPifd38Iu7t9I
97fMO34j3d9y+cnp/lbIT073tyg/Jd3fSvkp6f5WyYfT/a2WD6f7W9jV/dR0
f8u846np/pbLT0v3t0J+Wrq/Rfnp6f5Wyk9P97dKPjfd32r53HR/C7u5n5Hu
b5l3PCPd33L5men+VsjPTPe3KP9mur+V8m+m+1slj+n+VsvZ/P47cz8LbfPw
V0J3Nr//ln+Lfm4o5Gx+/y3/Nv3CUMrZ/P5bPo9+Wajl7E7sf5v72ehx2O8d
2Z3YL/8OHfvl7E7sl3+Xjv1ydif2y+fTsV/O7sL+t7ufgx6P/d6R3YX98u/R
sV/O7sJ++ffp2C9nd2G//Fw69svZ3dj/Dvfz0BOw3zuyu7Ff/gM69svZ3dgv
/yEd++XsbuyXL6Bjv3xBur+Fie7np/tb5h3PT/e3XH5Bur8V8gvS/S3Kf5Tu
b6X8R+n+VskvTPe3Wn5hur+Fd7pflO5vmXe8KN3fcvnF6f5WyC9O97covyTd
30r5Jen+VskXpvtbLV+Y7m/hXe6L0v0t846L0v0tl1+a7m+F/NJ0f4vyH6f7
Wyn/cbq/VfLL0v2tll+W7m/h3e6L0/0t846L0/0tl1+e7m+F/PJ0f4vyn6T7
Wyn/Sbq/VfIy3d9qOTsr8XOx+xXoiVfiRz53djYScvlP6deEQs7OluDnaPef
0W8IpZydLQ2V/Er6LaGWs3uwf3f3q9CTsN87snuwX/5zOvbL2T3YL/8FHfvl
7B7sl4/QsV/O7sX+97hfjZ6M/d6R3Yv98l/SsV/O7sV++a/o2C9n92K//Bo6
9svZfdj/Xvdr0VOw3zuy+7Bf/ms69svZfdgv/w0d++XsPuyXL6Fjv3xJur+F
Se7Xpftb5h2vS/e3XH59ur8V8uvT/S3Kf5vub6X8t+n+VslvSPe3Wn5Dur+F
PdxvTPe3zDvemO5vufymdH8r5Del+1uU/y7d30r579L9rZIvTfe3Wr403d/C
+9yXpftb5h2XpftbLr853d8K+c3p/hblv0/3t1L++3R/q+S3pPtbLb8l3d/C
+92Xp/tb5h2Xp/tbLr813d8K+a3p/hblf0j3t1L+h3R/q+RVur/VcnZehdDr
fht66u0h847sfDTk8j/SV4ZCzs5Xhyj/E/3+UMrZ+ZpQyW+nPxpqObsf+z/g
fgd6GvZ7R3Y/9sv/TMd+Obsf++V/oWO/nN2P/fJROvbL2QPYv6f7CvR07PeO
7AHsl99Jx345ewD75XfRsV/OHsB++Uo69svZg9i/l/sq9Azs947sQeyX/5WO
/XL2IPbL76Zjv5w9iP3y1XTsl69O97cw2f2edH/LvOM96f6Wy+9N97dCfm+6
v0X5fen+VsrvS/e3Sn5/ur/V8vvT/S180P2BdH/LvOMD6f6Wyx9M97dC/mC6
v0X5Q+n+VsofSve3Sr4m3d9q+Zp0fwt7u69N97fMO65N97dc/nC6vxXyh9P9
LcofSfe3Uv5Iur9V8kfT/a2WP5rub2Ef93Xp/pZ5x3Xp/pbLH0v3t0L+WLq/
Rfnj6f5Wyh9P97dKXqf7Wy1nF3UIfe5PoGc+GTLvyC7GQi7/G319KOTsYkOI
8r/TN4ZSzi42hUr+JP2VUMvZQ9i/r/tT6FnY7x3ZQ9gv/wcd++XsIeyX/5OO
/XL2EPbLx+jYL2fPxv793J9Gz8F+78iejf3yf9GxX86ejf3yf9OxX86ejf3y
9XTsl7OHsX9/92fQc7HfO7KHsV/+Hzr2y9nD2C//Lx375exh7JdvoGO/fEO6
v4Up7s+m+1vmHZ9N97dc/ly6vxXy59L9LcqfT/e3Uv58ur9V8o3p/lbLN6b7
WzjA/YV0f8u84wvp/pbLX0z3t0L+Yrq/RflL6f5Wyl9K97dKvind32r5pnR/
Cwe6b073t8w7bk73t1z+crq/FfKX0/0tyv+X7m+l/H/p/lbJX0n3t1r+Srq/
hYPct6T7W+Ydt6T7Wy5/Nd3fCvmr6f4W5a+l+1spfy3d3yp5WMH7Wy1nR/wi
d2+g51nIvCM7doZc3qSPC4WcHbtClHfQx4dSzo7doZIbfUKo5ez5+MWH3Fvo
c7HfO7LnY7+8Tcd+OXs+9su3omO/nD0f++WddOyXsxfgFx923xp9IfZ7R/YC
7Je/gY79cvYC7Je/kY79cvYC7JePo2O/nL0Qv/iI+zboy7DfO7IXYr/8TXTs
l7MXYr/8zXTsl7MXYr+8i4798q50fwtT3d+S7m+Zd3xLur/l8m3T/a2Qb5vu
b1G+Xbq/lfLt0v2tko9P97daPj7d38JH3d+a7m+Zd3xrur/l8u3T/a2Qb5/u
b1G+Q7q/lfId0v2tknen+1st7073t/Ax9x3T/S3zjjum+1su3ynd3wr5Tun+
FuU7p/tbKd853d8q+YR0f6vlE9L9LXzcfZd0f8u84y7p/pbLd033t0K+a7q/
Rflu6f5WyndL97dKnqX7Wy1nl1kI/e5vQ185MWTekV32hFz+dvqkUMjZZW+I
8nfQJ4dSzi77QiWfSJ8Sajl7BPsPdn8n+hrs947sEeyXv4uO/XL2CPbL303H
fjl7BPvlPXTsl7OXYP8n3HdH34D93pG9BPvl76Fjv5y9BPvl76Vjv5y9BPvl
k+jYL2cvxf5Puu+BvgX7vSN7KfbL30fHfjl7KfbL30/Hfjl7KfbLe+nYL+9N
97cwzf0D6f6WeccPpPtbLt8z3d8K+Z7p/hble6X7WynfK93fKvnkdH+r5ZPT
/S0c4v7BdH/LvOMH0/0tl++d7m+FfO90f4vyfdL9rZTvk+5vlbwv3d9qeV+6
v4VPue+b7m+Zd9w33d9y+X7p/lbI90v3tyjfP93fSvn+6f5Wyaek+1stn5Lu
b+HT7gek+1vmHQ9I97dcfmC6vxXyA9P9LcoPSve3Un5Qur9V8jzd32o5u8pD
GHD/EPr2qSHzjuyqP+TyD9OnhULOrgZClH+EPj2UcnY1iH+L+1T6jFDL2fgr
SviM+0fRK7HfO7JHsV/+MTr2y9mj2C//OB375exR7Jf307Ffzl6N/Ye6H4y+
H/u9I3s19ss/Qcd+OXs19ss/Scd+OXs19sun0bFfzl6D/Ye5H4J+FPu9I3sN
9ss/Rcd+OXsN9ss/Tcd+OXsN9ssH6NgvH0j3tzDd/TPp/pZ5x8+k+1suPzTd
3wr5oen+FuWHpftbKT8s3d8q+fR0f6vl09P9LXzW/bPp/pZ5x8+m+1suPzzd
3wr54en+FuVHpPtbKT8i3d8q+WC6v9XywXR/C4e7H5nub5l3PDLd33L5Uen+
VsiPSve3KD863d9K+dHp/lbJZ6T7Wy2fke5v4Qj3Y9L9LfOOx6T7Wy4/Nt3f
Cvmx6f4W5cel+1spPy7d3yp5ke5vtZxdF/h9cf8c+smZIfOO7Hoo5PLP02eF
Qs6uZ+P30f0L9DmhlLPrYfxHwH0mfW6o5ewx7D/S/f/Q67HfO7LHsF/+RTr2
y9lj2C//Eh375ewx7JcP0bFfzt6A/Ue5H4/eiP3ekb0B++VfpmO/nL0B++Vf
oWO/nL0B++Wz6NgvZ2/C/qPdT0C/gv3ekb0J++VfpWO/nL0J++Vfo2O/nL0J
++Wz6dgvn53ub2GG+9fT/S3zjl9P97dcfmK6vxXyE9P9LcpPSve3Un5Sur9V
8jnp/lbL56T7WzjG/Rvp/pZ5x2+k+1suPznd3wr5yen+FuWnpPtbKT8l3d8q
+XC6v9Xy4XR/C8e6n5rub5l3PDXd33L5aen+VshPS/e3KD893d9K+enp/lbJ
56b7Wy2fm+5v4Tj3M9L9LfOOZ6T7Wy4/M93fCvmZ6f4W5d9M97dS/s10f6vk
Md3fajk7Rvxzwf0s9Lx5IfOO7Dg/5PJv0c8NhZwdF+CfI+7fpl8YSjk7LgyV
fB79MvxHzp09H/s/5342+lzs947s+dgv/w4d++Xs+dgv/y4d++Xs+dgvn0/H
fjl7AfZ/3v0c9IXY7x3ZC7Bf/j069svZC7Bf/n069svZC7Bffi4d++Xshdj/
Bffz0Jdhv3dkL8R++Q/o2C9nL8R++Q/p2C9nL8R++QI69ssXpPtbmOl+frq/
Zd7x/HR/y+UXpPtbIb8g3d+i/Efp/lbKf5Tub5X8wnR/q+UXpvtb+D/3i9L9
LfOOF6X7Wy6/ON3fCvnF6f4W5Zek+1spvyTd3yr5wnR/q+UL0/0tfNF9Ubq/
Zd5xUbq/5fJL0/2tkF+a7m9R/uN0fyvlP073t0p+Wbq/1fLL0v0tfMl9cbq/
Zd5xcbq/5fLL0/2tkF+e7m9R/pN0fyvlP0n3t0pepvtbLWeXJf5cdL8CfeWV
IfOO7HIk5PKf0q8JhZxdLsGfo+4/o98QSjm7XBoq+ZX0W/BHijt7BPuPd78K
fQ32e0f2CPbLf07Hfjl7BPvlv6Bjv5w9gv3yETr2y9lLsP/L7lejb8B+78he
gv3yX9KxX85egv3yX9GxX85egv3ya+jYL2cvxf6vuF+LvgX7vSN7KfbLf03H
fjl7KfbLf0PHfjl7KfbLl9CxX74k3d/CLPfr0v0t847XpftbLr8+3d8K+fXp
/hblv033t1L+23R/q+Q3pPtbLb8h3d/CCe43pvtb5h1vTPe3XH5Tur8V8pvS
/S3Kf5fub6X8d+n+VsmXpvtbLV+a7m/hq+7L0v0t847L0v0tl9+c7m+F/OZ0
f4vy36f7Wyn/fbq/VfJb0v2tlt+S7m/ha+7L0/0t847L0/0tl9+a7m+F/NZ0
f4vyP6T7Wyn/Q7q/VfIq3d9qObuq8PdC99vQt98eMu/IrkZDLv8jfWUo5Oxq
Nf4e6f4n+v2hlLOrNaGS305/FH9ldGePYv/X3e9Ar8R+78gexX75n+nYL2eP
Yr/8L3Tsl7NHsV8+Ssd+OXs19p/ovgJ9P/Z7R/Zq7JffScd+OXs19svvomO/
nL0a++Ur6dgvZ6/B/pPcV6EfxX7vyF6D/fK/0rFfzl6D/fK76dgvZ6/Bfvlq
OvbLV6f7W5jjfk+6v2Xe8Z50f8vl96b7WyG/N93fovy+dH8r5fel+1slvz/d
32r5/en+Fr7h/kC6v2Xe8YF0f8vlD6b7WyF/MN3fovyhdH8r5Q+l+1slX5Pu
b7V8Tbq/hZPd16b7W+Yd16b7Wy5/ON3fCvnD6f4W5Y+k+1spfyTd3yr5o+n+
VssfTfe3cIr7unR/y7zjunR/y+WPpftbIX8s3d+i/PF0fyvlj6f7WyWv0/2t
lrPrGj8XuT+BfvLJkHlHdj0Wcvnf6OtDIWfXG/BzlPvf6RtDKWfXm0Ilf5L+
Cn4kdGePYf+p7k+h12O/d2SPYb/8H3Tsl7PHsF/+Tzr2y9lj2C8fo2O/nL0B
+09zfxq9Efu9I3sD9sv/Rcd+OXsD9sv/Tcd+OXsD9svX07Ffzt6E/ae7P4N+
Bfu9I3sT9sv/Q8d+OXsT9sv/S8d+OXsT9ss30LFfviHd38Jc92fT/S3zjs+m
+1sufy7d3wr5c+n+FuXPp/tbKX8+3d8q+cZ0f6vlG9P9LZzh/kK6v2Xe8YV0
f8vlL6b7WyF/Md3fovyldH8r5S+l+1sl35Tub7V8U7q/hTPdN6f7W+YdN6f7
Wy5/Od3fCvnL6f4W5f9L97dS/r90f6vkr6T7Wy1/Jd3fwjfdt6T7W+Ydt6T7
Wy5/Nd3fCvmr6f4W5a+l+1spfy3d3yp5uJP3t1rOTr9wb9z5+vf/3pEdtg65
vEnfJhRyNr//l3fc+fr3/3J22DFUcqPvEmo5uzM0wlnurTv5/Xcj847szq0b
ubxN36ZRyNmdXY0o34o+vlHK2Z07Nip5J32XRi1n8/v/b7lvfefr3/97R3YX
3i9/Ax3vl7P5/b/8jXe+/v2/nN2F98vH0fF+Obsb7/+2+zZ38vvvRuYd2d14
v/xNdLxfzu7G++VvpuP9cnY33i/vouP98q50fwvz3N9yZ97g9//e8S3p/pbL
t6VvY4Wcze//5dvRx1spZ4cdrZKPp+9itXx8un8rnO3+Vvg4a2Xekd25dSuX
b0/fplXI2Z1drSjfgT6+VcrZnTu2Knk3fZdWLWfz+//vuO+I5vf/3pHdhffL
d6Lj/XI2v/+X70zH++XsLrxfPoGO98vZ3Xj/d913QU/A+70juxvvl+9Kx/vl
7G68X74bHe+Xs7vxfnlGx/vl6PT9/3z3t935+vf/3pGd7R5y+dvpe4RCzub3
//J33Pn69/9ydrZvqOQT6QeEWs7uyRrhHPd33snvvxuZd2T37N7I5e+i79Eo
5Oye3kaUv5s+uVHK2T37Nip5D/2ARi1n8/v/77nvfufr3/97R3Yv3i9/Dx3v
l7P5/b/8vXe+/v2/nN2L98sn0fF+ObsP7/+++x538vvvRuYd2X14v/x9dLxf
zu7D++Xvp+P9cnYf3i/vpeP9cnSD3/+f6/4BNL//947sbHfL5XvS97BCzub3
//K96JOtlLOzfa2ST6YfYLWc3ZO1wnnuH0RPmtjKvCO7Z/dWLt+bvkerkLN7
eltRvg99cquUs3v2bVXyPvoBrVrO5vf/P3DfF83v/70juxfvl+9Hx/vlbH7/
L9+fjvfL2b14v3wKHe+Xs/vw/h+6H4Cegvd7R3Yf3i8/kI73y9l9eL/8IDre
L2f34f3ynI73y9n8/n+B+4fQ/P7fO7Lzg0Mu/zD9kFDI2fz+X/4R+vRQytn5
kaGST6UfE2o5ux9/RJzv/lH0tKmNzDuy+w9u5PKP0Q9pFHJ2/0Ajyj9On94o
5ez+IxuVvJ9+TKOWs/n9/wXuB6P5/b93ZA/g/fJP0PF+OZvf/8s/Scf75ewB
vF8+jY73y9mDeP+P3A9Bz8D7vSN7EO+Xf4qO98vZg3i//NN0vF/OHsT75QN0
vF+ObvL7/wvdP4Pm9//ekZ0fbLn8UPohVsjZ/P5ffhh9upVydn6kVfLp9GOs
lrP781a4yP2z6GlTW5l3ZPcf3Mrlh9MPaRVydv9AK8qPoE9vlXJ2/5GtSj5I
P6ZVy9n8/v9i9yPR/P7fO7IH8H75UXS8X87m9//yo+l4v5w9gPfLZ9Dxfjl7
EO+/xP0Y9Ay83zuyB/F++bF0vF/OHsT75cfR8X45exDvlxd0vF+ObvD7/4Xu
n0Pz+3/vyC6OD7n88/QTQiFn8/t/+Rfoc0IpZxenhko+k35GqOXsoaIRFrn/
H3rWzEbmHdlDxzdy+RfpJzQKOXtodiPKv0Sf0yjl7KFTG5V8iH5Go5az+f3/
pe7Ho/n9v3dkz8b75V+m4/1yNr//l3+FjvfL2bPxfvksOt4vZw/j/T92PwE9
F+/3juxhvF/+VTreL2cP4/3yr9Hxfjl7GO+Xz6bj/XJ0k9//X+b+dTS///eO
7OJ4y+Un0k+wQs7m9//yk+hzrJSzi1Otks+hn2G1nD1UtMJi92+gZ81sZd6R
PXR8K5efTD+hVcjZQ7NbUX4KfU6rlLOHTm1V8mH6Ga1azub3/5e7n4rm9//e
kT0b75efRsf75Wx+/y8/nY73y9mz8X75XDreL2cP4/0/cT8DPRfv947sYbxf
fiYd75ezh/F++TfpeL+cPYz3yyMd75ez+QFA6X4W2uaFzDuywzkhl3+Lfl4o
5Gx+/y//Nv3CUMrZYVGo5PPoi0MtZ3fGRrjC/Wz0uHmNzDuyO89p5PLv0M9r
FHJ254JGlH+XfmGjlLM7FzUq+Xz64kYtZ/P7/5+6n4Pm9//ekd2F98u/R8f7
5Wx+/y//Ph3vl7O78H75uXS8X87uxvt/5n4eegLe7x3Z3Xi//Ad0vF/O7sb7
5T+k4/1ydjfeL19Ax/vlC9L9LVzpfv6deQe///eO56f7Wy6/gH6eFXI2v/+X
/4h+oZVydlhklfxC+mKr5ezO2ApXuV+EHjevlXlHduc5rVx+Mf28ViFndy5o
Rfkl9AtbpZzduahVyRfSF7dqOZvf///cfRGa3/97R3YX3i+/lI73y9n8/l/+
YzreL2d34f3yy+h4v5zdjff/wn0xegLe7x3Z3Xi//HI63i9nd+P98p/Q8X45
uxvvl5d0vF+ObvL7/xH3K9D8/t87srOrQy7/Kf3aUMjZ/P5f/jP6DaGUs7Nl
oZJfSV8eajm7p2yEq92vQk+6spF5R3bP1Y1c/nP6tY1Czu5Z0ojyX9BvaJRy
ds+yRiUfoS9v1HI2v///pfvVaH7/7x3ZvXi//Jd0vF/O5vf/8l/R8X45uxfv
l19Dx/vl7D68/1fu16Kn4P3ekd2H98t/Tcf75ew+vF/+GzreL2f34f3yJXS8
X47u4Pf/17hfh+b3/96RnV1tufx6+rVWyNn8/l/+W/oNVsrZ2TKr5DfQl1st
Z/eUrXCt+43oSVe2Mu/I7rm6lctvol/bKuTsniWtKP8d/YZWKWf3LGtV8qX0
5a1azub3/792X4bm9//ekd2L98tvpuP9cja//5f/no73y9m9eL/8FjreL2f3
4f2/cV+OnoL3e0d2H94vv5WO98vZfXi//A90vF/O7sP75RUd75ez+f3/Evfb
0Pz+3zuy8xUhl/+RvioUcja//5f/iX5/KOXsfG2o5LfT14Vazu6vGuE69zvQ
025vZN6R3b+ikcv/TF/VKOTs/tWNKP8L/f5GKWf3r21U8lH6ukYtZ/P7/+vd
V6D5/b93ZA/g/fI76Xi/nM3v/+V30fF+OXsA75evpOP9cvYg3v9b91XoGXi/
d2QP4v3yv9Lxfjl7EO+X303H++XsQbxfvpqO98vRxu//b3C/B83v/70jO19h
ufxe+ior5Gx+/y+/j36/lXJ2vtYq+f30dVbL2f1VK9zo/gB62u2tzDuy+1e0
cvmD9FWtQs7uX92K8ofo97dKObt/bauSr6Gva9VyNr//v8l9LZrf/3tH9gDe
L3+YjvfL2fz+X/4IHe+XswfwfvmjdLxfzh7E+3/nvg49A+/3juxBvF/+GB3v
l7MH8X7543S8X84exPvlNR3vl6M7+P3/Uvcn0Pz+3zuyi6dDLv8b/ZlQyNn8
/l/+d/rGUMrZxeZQyZ+kbwm1nD1UN8Iy96fQs55sZN6RPfR0I5f/g/5Mo5Cz
hzY0ovyf9I2NUs4e2tyo5GP0LY1azub3/ze7P43m9//ekT0b75f/i473y9n8
/l/+bzreL2fPxvvl6+l4v5w9jPf/3v0Z9Fy83zuyh/F++X/oeL+cPYz3y/9L
x/vl7GG8X76BjvfL0cbv/29xfxbN7/+9I7t42nL5c/RnrJCz+f2//Hn6Rivl
7GKzVfKN9C1Wy9lDdSssd38BPevJVuYd2UNPt3L5i/RnWoWcPbShFeUv0Te2
Sjl7aHOrkm+ib2nVcja//7/VfTOa3/97R/ZsvF/+Mh3vl7P5/b/8f3S8X86e
jffLX6Hj/XL2MN7/B/ct6Ll4v3dkD+P98lfpeL+cPYz3y1+j4/1y9jDeLw93
wfF+OTviF5V7A83v/70jO24dcnmTvk0o5Gx+/y/voI8PpZwddwyV3Oi7hFrO
nh8a4Tb3Fvpca2TekT1/60Yub9O3aRRy9vyuRpRvRR/fKOXs+Ts2KnknfZdG
LWfz+/8/um+N5vf/3pG9AO+Xv4GO98vZ/P5f/kY63i9nL8D75ePoeL+cvRDv
/5P7NujL8H7vyF6I98vfRMf75eyFeL/8zXS8X85eiPfLu+h4v7wr3d/C7e5v
uStv8ft/78iOW1su35a+jRVyNr//l29HH2+lnB13tEo+nr6L1fLx6f6tcIf7
W+HnWivzjuz5W7dy+fb0bVqFnD2/qxXlO9DHt0o5e/6OrUreTd+lVcvZ/P7/
z+47ovn9v3dkL8D75TvR8X45m9//y3em4/1y9gK8Xz6BjvfL2Qvx/r+474K+
DO/3juyFeL98VzreL2cvxPvlu9Hxfjl7Id4vz+h4vxxt/P5/1P1taH7/7x3Z
5e4hl7+dvkco5Gx+/y9/B31yKOXsct9QySfSDwi1nD2SNcIK93eir5nYyLwj
e2T3Ri5/F32PRiFnj/Q2ovzd9MmNUs4e2bdRyXvoBzRqOZvf/9/pvjua3/97
R/YSvF/+HjreL2fz+3/5e+l4v5y9BO+XT6Lj/XL2Urz/Lvc90Lfg/d6RvRTv
l7+PjvfL2Uvxfvn76Xi/nL0U75f30vF+ObrF7/9Xun8Aze//vSO73N1y+Z70
PayQs/n9v3wv+mQr5exyX6vkk+kHWC1nj2StsMr9g+hrJrYy78ge2b2Vy/em
79Eq5OyR3laU70Of3Crl7JF9W5W8j35Aq5az+f3/X933RfP7f+/IXoL3y/ej
4/1yNr//l+9Px/vl7CV4v3wKHe+Xs5fi/Xe7H4C+Be/3juyleL/8QDreL2cv
xfvlB9Hxfjl7Kd4vz+l4v5zN7/9Xu38Ize//vSO7Ojjk8g/TDwmFnM3v/+Uf
oU8PpZxdHRkq+VT6MaGWs0fzRrjH/aPolVMbmXdkjx7cyOUfox/SKOTs0YFG
lH+cPr1RytmjRzYqeT/9mEYtZ/P7/3vdD0bz+3/vyF6N98s/Qcf75Wx+/y//
JB3vl7NX4/3yaXS8X85eg/ff534I+lG83zuy1+D98k/R8X45ew3eL/80He+X
s9fg/fIBOt4vR7f5/f/97p9B8/t/78iuDrZcfij9ECvkbH7/Lz+MPt1KObs6
0ir5dPoxVsvZo3krPOD+WfTKqa3MO7JHD27l8sPph7QKOXt0oBXlR9Cnt0o5
e/TIViUfpB/TquVsfv//oPuRaH7/7x3Zq/F++VF0vF/O5vf/8qPpeL+cvRrv
l8+g4/1y9hq8/yH3Y9CP4v3ekb0G75cfS8f75ew1eL/8ODreL2evwfvlBR3v
l6Nb/P5/jfvn0Pz+3zuy6+NDLv88/YRQyNn8/l/+BfqcUMrZ9amhks+knxFq
OXusaIS17v+HXj+zkXlH9tjxjVz+RfoJjULOHpvdiPIv0ec0Sjl77NRGJR+i
n9Go5Wx+//+w+/Fofv/vHdkb8H75l+l4v5zN7//lX6Hj/XL2BrxfPouO98vZ
m/D+R9xPQL+C93tH9ia8X/5VOt4vZ2/C++Vfo+P9cvYmvF8+m473y9Ftfv//
qPvX0fz+3zuy6+Mtl59IP8EKOZvf/8tPos+xUs6uT7VKPod+htVy9ljRCuvc
v4FeP7OVeUf22PGtXH4y/YRWIWePzW5F+Sn0Oa1Szh47tVXJh+lntGo5m9//
P+Z+Kprf/3tH9ga8X34aHe+Xs/n9v/x0Ot4vZ2/A++Vz6Xi/nL0J73/c/Qz0
K3i/d2RvwvvlZ9Lxfjl7E94v/yYd75ezN+H98kjH++Vsfv9fu5+FnjcvZN6R
Hc8Jufxb9PNCIWfz+3/5t+kXhlLOjotCJZ9HXxxqOXt+bIQn3M9GnzuvkXlH
9vxzGrn8O/TzGoWcPX9BI8q/S7+wUcrZ8xc1Kvl8+uJGLWfz+/+/uZ+D5vf/
3pG9AO+Xf4+O98vZ/P5f/n063i9nL8D75efS8X45eyHe/3f389CX4f3ekb0Q
75f/gI73y9kL8X75D+l4v5y9EO+XL6Dj/XL0Vvz+/0n389H8/t87suM5lssv
oJ9nhZzN7//lP6JfaKWcHRdZJb+QvthqOXt+bIWn3C9CnzuvlXlH9vxzWrn8
Yvp5rULOnr+gFeWX0C9slXL2/EWtSr6QvrhVy9n8/v8f7ovQ/P7fO7IX4P3y
S+l4v5zN7//lP6bj/XL2Arxffhkd75ezF+L9/3RfjL4M7/eO7IV4v/xyOt4v
Zy/E++U/oeP9cvZCvF9e0vF+ObrN7//H3K9A8/t/78gurw65/Kf0a0MhZ/P7
f/nP6DeEUs4ul4VKfiV9eajl7JGyEZ52vwp9zZWNzDuyR65u5PKf069tFHL2
yJJGlP+CfkOjlLNHljUq+Qh9eaOWs/n9/7/cr0bz+3/vyF6C98t/Scf75Wx+
/y//FR3vl7OX4P3ya+h4v5y9FO//t/u16Fvwfu/IXor3y39Nx/vl7KV4v/w3
dLxfzl6K98uX0PF+OXorfv+/3v06NL//947s8mrL5dfTr7VCzub3//Lf0m+w
Us4ul1klv4G+3Go5e6RshWfcb0Rfc2Ur847skatbufwm+rWtQs4eWdKK8t/R
b2iVcvbIslYlX0pf3qrlbH7//x/3ZWh+/+8d2UvwfvnNdLxfzub3//Lf0/F+
OXsJ3i+/hY73y9lL8f7/ui9H34L3e0f2Urxffisd75ezl+L98j/Q8X45eyne
L6/oeL+cze//N7jfhub3/96RXa0IufyP9FWhkLP5/b/8T/T7QylnV2tDJb+d
vi7UcvZo1QjPut+BXnl7I/OO7NEVjVz+Z/qqRiFnj65uRPlf6Pc3Sjl7dG2j
ko/S1zVqOZvf/z/nvgLN7/+9I3s13i+/k473y9n8/l9+Fx3vl7NX4/3ylXS8
X85eg/c/774K/Sje7x3Za/B++V/peL+cvQbvl99Nx/vl7DV4v3w1He+Xozv5
/f9G93vQ/P7fO7KrFZbL76WvskLO5vf/8vvo91spZ1drrZLfT19ntZw9WrXC
C+4PoFfe3sq8I3t0RSuXP0hf1Srk7NHVrSh/iH5/q5SzR9e2Kvka+rpWLWfz
+/8X3dei+f2/d2SvxvvlD9Pxfjmb3//LH6Hj/XL2arxf/igd75ez1+D9L7mv
Qz+K93tH9hq8X/4YHe+Xs9fg/fLH6Xi/nL0G75fXdLxfjt6K3/9vcn8Cze//
vSO7fjrk8r/RnwmFnM3v/+V/p28MpZxdbw6V/En6llDL2WN1I2x2fwq9/slG
5h3ZY083cvk/6M80Cjl7bEMjyv9J39go5eyxzY1KPkbf0qjlbH7//7L702h+
/+8d2Rvwfvm/6Hi/nM3v/+X/puP9cvYGvF++no73y9mb8P7/uT+DfgXv947s
TXi//D90vF/O3oT3y/9Lx/vl7E14v3wDHe+Xozv5/f8r7s+i+f2/d2TXT1su
f47+jBVyNr//lz9P32ilnF1vtkq+kb7Fajl7rG6FLe4voNc/2cq8I3vs6VYu
f5H+TKuQs8c2tKL8JfrGVilnj21uVfJN9C2tWs7m9/+vum9G8/t/78jegPfL
X6bj/XI2v/+X/4+O98vZG/B++St0vF/O3oT3v+a+Bf0K3u8d2ZvwfvmrdLxf
zt6E98tfo+P9cvYmvF8eVsLxfjn69f/7Ja97Y+Xr3/97R3Rn6Ay5vIm2caGQ
Nzm/Lf7/uHdwfvtQyjs4v1Oo5Mb5XUMtR3d1cq97Cz0O+70jursT++Vt9Djs
l7c5j/3yrTiP/fKtOI/98k7OY78cHbpCMzTdt17J7/+bmXdEd3Z1NnP5G9Dj
xzUL+Rs4v20zyt/I+e2bpfyNnN+pWcnHcX7XZi1Hd3Vjf4f7NugJ2O8d0d3d
2C9/E3oC9svfxHnsl7+Z89gvfzPnsV/exXnsl6Mzfv9v7m9B8/t/74juCZ2W
y7dF2zgr5NtyfluL8u04v72V8u04v5NV8vGc39VqObq3E/tb7m9Fj8N+74ju
68R++fbocdgv357z2C/fgfPYL9+B89gv7+Y89svRWVdoh7b7jujx1s68I7qn
q7Ody3dCjx/XLuQ7cX7bdpTvzPnt26V8Z87v1K7kEzi/a7uWo3u7sX8r913Q
E7DfO6L7urFfvit6AvbLd+U89st34zz2y3fjPPbLM85jvxyd8/v/Tve3ofn9
v3dE92c9IZe/HT1xUijkb+f8nvjvkfs7OL93KOXv4Px+oZJP5PyBoZajB3qw
f2v3d6InYb93RA/2YL/8XehJ2C9/F+exX/5uzmO//N2cx355D+exX47Oe7Nm
eIP77ujJE5uZd0T39/Y0c/l70JMnNQv5ezi/ZzPK38v5vZul/L2c369ZySdx
/sBmLUcP9GH/G933QE/Bfu+IHuzDfvn70FOwX/4+zmO//P2cx375+zmP/fJe
zmO/HF3w+/9x7h9A8/t/74geynosl++JnjjJCvmenN/Tonwvzu9tpXwvzu9n
lXwy5w+0Wo6e3YP927h/ED0J+70jergH++V7oydhv3xvzmO/fB/OY798H85j
v7yP89gvRxe9WTu8yX1f9OSJ7cw7ood6e9q5fD/05EntQr4f5/dsR/n+nN+7
Xcr35/x+7Uo+hfMHtms5enYf9r/Z/QD0FOz3jujhPuyXH4iegv3yAzmP/fKD
OI/98oM4j/3ynPPYL0cHfv/f5f6hlfzffw+Zd0R35v0hl38YPXVaKOQf5vyh
+HPE/SOcPzyU8o9w/qhQyady/thQy9Fd/dj/FvePoqdhv3dEd/djv/xj6GnY
L/8Y57Ff/nHOY7/845zHfnk/57Ffjg4DeTNs637wSv7vvzcz74juHOhv5vJP
oKdPaxbyT3D+0GaUf5LzhzdL+Sc5f1Szkk/j/LHNWo7uGsT+7dwPQc/Afu+I
7h7Efvmn0DOwX/4pzmO//NOcx375pzmP/fIBzmO/HJ3x+//x7p9B8/t/74ju
yfstlx+KnjrNCvmhnD/Uovwwzh9upfwwzh9llXw654+1Wo7u7cf+t7p/Fj0N
+70juq8f++WHo6dhv/xwzmO//AjOY7/8CM5jv3yQ89gvR2cDeTts734kevrU
duYd0T0D/e1cfhR6+rR2IT+K84e2o/xozh/eLuVHc/6odiWfwflj27Uc3TuI
/Tu4H4Oegf3eEd03iP3yY9EzsF9+LOexX34c57FffhznsV9ecB775eic3/93
u38Oze//vSO6vxgKufzz6JmzQiH/POdPxN+j3L/A+ZNDKf8C508LlXwm588M
tRw9MIT9O7r/H3oW9ntH9OAQ9su/iJ6F/fIvch775V/iPPbLv8R57JcPcR77
5eh8dtEMO7kfj54zs5l5R3T/7KFmLv8yes6sZiH/MudPbEb5Vzh/crOUf4Xz
pzUr+SzOn9ms5eiBYezf2f0E9Fzs947owWHsl38VPRf75V/lPPbLv8Z57Jd/
jfPYL5/NeeyXowt+/z/B/etofv/vHdFDxZDl8hPRM2dZIT+R8ydalJ/E+ZOt
lJ/E+dOsks/h/JlWy9Gzh7B/F/dvoGdhv3dEDw9hv/xk9Czsl5/MeeyXn8J5
7Jefwnnslw9zHvvl6GJ20Q67up+KnjOznXlH9NDsoXYuPw09Z1a7kJ/G+RPb
UX46509ul/LTOX9au5LP5fyZ7VqOnj2M/bu5n4Gei/3eET08jP3yM9FzsV9+
JuexX/5NzmO//Jucx3555Dz2y9GR3/9n7mehbV7IvCN6fpgfcvm30HZuKOTf
4vwF+DnC/ducvziU8m9z/tJQyedx/vJQy9ELOrH/be5no8dhv3dEL+zEfvl3
0OOwX/4dzmO//Lucx375dzmP/fL5nMd+OTp2xWZ4u/s56PHzmpl3RM/vmt/M
5d9Djz+3Wci/x/kLmlH+fc5f3Czl3+f8pc1Kfi7nL2/WcvSCbux/h/t56AnY
7x3RC7uxX/4D9ATsl/+A89gv/yHnsV/+Q85jv3wB57Ffji75/f9E9/PR/P7f
O6JHwnzL5Reg7Vwr5Bdw/gKL8h9x/mIr5T/i/KVWyS/k/OVWy9FLOrH/ne4X
ocdhv3dEL+3EfvnF6HHYL7+Y89gvv4Tz2C+/hPPYL1/IeeyXo8uu2A7vcl+E
Hj+vnXlH9EjX/HYuvxQ9/tx2Ib+U8xe0o/zHnL+4Xcp/zPlL25X8Ms5f3q7l
6CXd2P9u98XoCdjvHdFLu7Fffjl6AvbLL+c89st/wnnsl/+E89gvLzmP/XJ0
xe//e9yvQPP7f++IHs1GQi7/KXriNaGQ/5Tz1+PnaPefcf6mUMp/xvmbQyW/
kvO3hlqOXt2D/bu7X4WehP3eEb2mB/vlP0dPwn75zzmP/fJfcB775b/gPPbL
RziP/XJ01Vs2w3vcr0ZPvrKZeUf0aO9IM5f/Ej35mmYh/yXnr29G+a84f1Oz
lP+K8zc3K/k1nL+1WcvRq/uw/73u16KnYL93RK/pw375r9FTsF/+a85jv/w3
nMd++W84j/3yJZzHfjm65vf/k9yvQ/P7f++IHstGLJdfj554jRXy6zl/vUX5
bzl/k5Xy33L+ZqvkN3D+Vqvl6A092L+H+43oSdjvHdGberBffhN6EvbLb+I8
9st/x3nsl/+O89gvX8p57Jej696yHd7nvgw9+cp25h3RY70j7Vx+M3ryNe1C
fjPnr29H+e85f1O7lP+e8ze3K/ktnL+1XcvRG/qw//3uy9FTsN87ojf1Yb/8
VvQU7Jffynnsl/+B89gv/wPnsV9ecR775ejI7/973W9D8/t/74ien4+GXP5H
9NSVoZD/kfP3hij/E+cfDKX8T5x/OFTy2zn/WKjl6AX92P8B9zvQ07DfO6IX
9mO//M/oadgv/zPnsV/+F85jv/wvnMd++SjnsV+OjgNVM+zpvgI9/fZm5h3R
8wdGm7n8TvT0lc1Cfifn721G+V2cf7BZyu/i/MPNSr6S8481azl6wSD27+W+
Cj0D+70jeuEg9sv/ip6B/fK/ch775XdzHvvld3Me++WrOY/9cnTJ7/8nu9+D
5vf/3hE9ko9aLr8XPXWlFfJ7OX+vRfl9nH/QSvl9nH/YKvn9nH/Majl6ST/2
f9D9AfQ07PeO6KX92C9/ED0N++UPch775Q9xHvvlD3Ee++VrOI/9cnQ5ULXD
3u5r0dNvb2feET0yMNrO5Q+jp69sF/KHOX9vO8of4fyD7VL+COcfblfyRzn/
WLuWo5cMYv8+7uvQM7DfO6KXDmK//DH0DOyXP8Z57Jc/znnslz/OeeyX15zH
fjm64vf/fe5PoPn9v3dEjxZjIZf/DT1zfSjkf+P8cyHK/875F0Mp/zvnXw6V
/EnOvxpqOXr1EPbv6/4Uehb2e0f0miHsl/8DPQv75f/gPPbL/8l57Jf/k/PY
Lx/jPPbL0dXsuhn2c38aPefJZuYd0aOzx5q5/F/oOeubhfxfnH+uGeX/5vyL
zVL+b86/3Kzk6zn/arOWo1cPY//+7s+g52K/d0SvGcZ++X/Qc7Ff/h/OY7/8
v5zHfvl/OY/98g2cx345uub3/1Pcn0Xz+3/viB4rxiyXP4eeud4K+XOcf86i
/HnOv2il/HnOv2yVfCPnX7Vajt4whP0HuL+AnoX93hG9aQj75S+iZ2G//EXO
Y7/8Jc5jv/wlzmO/fBPnsV+OrmfX7XCg+2b0nCfbmXdEj80ea+fyl9Fz1rcL
+cucf64d5f/j/IvtUv4/zr/cruSvcP7Vdi1HbxjG/oPct6DnYr93RG8axn75
q+i52C9/lfPYL3+N89gvf43z2C8PqzCP/XJ0OAu/yN0b6LMtZN4R3XlWZ8jl
TfTZ40Ihb3J+2xDlHZzfPpTyDs7vFCq5cX7XUMvRXefgFx9yb6HPw37viO4+
B/vlbfR52C9vcx775VtxHvvlW3Ee++WdnMd+OTqcH5rhw+5boy+yZuYd0Z3n
dzZz+RvQF41rFvI3cH7bZpS/kfPbN0v5Gzm/U7OSj+P8rs1aju5ahP0fcd8G
vRj7vSO6exH2y9+EXoz98jdxHvvlb+Y89svfzHnsl3dxHvvl6OysYGGq+1vQ
Z5tl3hHdc1an5fJt0WePs0K+Lee3tSjfjvPbWynfjvM7WSUfz/ldrZaje8/B
/o+6vxV9HvZ7R3TfOdgv3x59HvbLt+c89st34Dz2y3fgPPbLuzmP/XJ0dn5o
h4+574i+yNqZd0T3nN/ZzuU7oS8a1y7kO3F+23aU78z57dulfGfO79Su5BM4
v2u7lqN7F2H/x913QS/Gfu+I7luE/fJd0YuxX74r57FfvhvnsV++G+exX55x
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
/5bzN1kp/y3nb7ZKfgPnb7Vajt5wNfaf4H4j+lrs947oTVdjv/wm9LXYL7+J
89gv/x3nsV/+O85jv3wp57Ffjq6vK9vhq+7L0Dde2c68I3rsupF2Lr8ZfeM1
7UJ+M+evb0f57zl/U7uU/57zN7cr+S2cv7Vdy9EblmH/19yXo5djv3dEb1qG
/fJb0cuxX34r57Ff/gfOY7/8D5zHfnnFeeyXo+NtFf5e6H4b+o7bQ+Yd0fNv
Gw25/I/oO1aGQv5Hzt+Lv0e6/4nzD4ZS/ifOPxwq+e2cfyzUcvSCFdj/dfc7
0Kuw3zuiF67Afvmf0auwX/5nzmO//C+cx375XziP/fJRzmO/HB3vqZrhRPcV
6Adub2beET3/ntFmLr8T/cDKZiG/k/P3NqP8Ls4/2Czld3H+4WYlX8n5x5q1
HL1gLfaf5L4KvQ77vSN64Vrsl/8VvQ775X/lPPbL7+Y89svv5jz2y1dzHvvl
6PK2ysIc93vQd9xumXdEj9w2arn8XvQdK62Q38v5ey3K7+P8g1bK7+P8w1bJ
7+f8Y1bL0UtWYP833B9Ar8J+74heugL75Q+iV2G//EHOY7/8Ic5jv/whzmO/
fA3nsV+OLu+p2uFk97XoB25vZ94RPXLPaDuXP4x+YGW7kD/M+XvbUf4I5x9s
l/JHOP9wu5I/yvnH2rUcvWQt9p/ivg69Dvu9I3rpWuyXP4Zeh/3yxziP/fLH
OY/98sc5j/3ymvPYL0dXT9T4ucj9CfRTT4bMO6JHnxgLufxv6KfWh0L+N84/
h5+j3P/O+RdDKf87518OlfxJzr8aajl69dPYf6r7U+hnsN87otc8jf3yf6Cf
wX75PziP/fJ/ch775f/kPPbLxziP/XJ09WzdDKe5P41+4clm5h3Ro8+ONXP5
v9AvrG8W8n9x/rlmlP+b8y82S/m/Of9ys5Kv5/yrzVqOXr0Z+093fwa9Bfu9
/5+m+4/vqq77P/4+n5+jxCYqoqicbYhDBScqolzJe4A2KmxREUXJ2UAbFrao
iCTlbEMdGjqxEKXkbEMdKjrREMXkvQ11aMDEQpSSM4Y6VGSiAorK9X5/Xs/n
9x9v9+v1eXzhuh2f39P3dt3O7Qqtd35m/3zeP7T+0v75vH/oevvn837A9fbP
5/2A6+2fz3uf6+2fz7t13B2n1J9w/8j67b0pHw6te7t7U5r3g9Zvf5AKeD/o
+oOpkPePXX8oFfH+ses/TxneP3H9V6mYd+u+ffbPvxH3T6332z8fDq2P7LN/
Pu+HrPfbP5/3Q663fz7vh11v/3zeD7ve/vm8H3G9/fN5t44/ijPqJtw/s/50
b8aHQ+vej3ozmvfPrT/9IBPw/rnrD2ZC3o+6/lAm4v2o6z/PGN6/cP1XmZh3
677P7J+/EPcvrb+0fz4cWh/5zP75vH9l/aX983n/yvX2z+f9mOvtn8/7Mdfb
P593tdX29s/n3Tr3Xw5x96wzKeXDoXWe6qc07wnrTH8V8J5w/QAV8p50/UAV
8Z50/WBleE+5foiKebfOz1OeqsE9bX18yvPh0HpQXj9P856xPr6/F/Cecf0A
L+Q96/qBXsR71vWDPcN7nuuHeDHv1rnv/2tx72c9MJXw4dA6L79fQvP+NeuB
/RMB71/bKt//8/511w9MRLx/3fWDE4b341w/JBHzbp0/SCVVHe79rc9MJX04
tB40qF9S83689Zn9kwHvx7t+QDLk/RuuH5iMeP+G6wcnDe/5rh+SjHm39t33
/4twP2GrLsikUj4cWherfinN+4Ctenimfyrg3brAff/P+4muH5iKeLcergan
DO8nuX5IKubduiRPpdXNuJ+8VV9wfCrtw6H1pXn90pr3gdbH908HvFtfkDcg
HfJ+iusHpiPeT3H94LThfZDrh6Rj3q0L3Pf/t+B+qvXAVMaHQ+vh+f0ymvfT
rAf2zwS8n+b6AZmQ98GuH5iJeB/s+sEZw/vprh+SiXm3vmCQyqpbcT/D+sxU
1odD60sH9ctq3s+0PrN/NuD9TNcPyIa8D3H9wGzE+xDXD84a3n3XD8nGvFvn
vv+vx73AethQ5cOhdZk/XGneC62HjVAB74Vb5ft/3otcP1pFvBe5fqwyvA91
/TgV825dXux7ajHuZ1mPHOr5cGg9rXi4p3kfZj1yhBfwPsz1o7yQ97NdP9qL
eD/b9WM9w3ux68d5Me/Wue//b8N9uPXooQkfDq3LSoYnNO/nWI8ekQh4P2er
fP/P+7muH52IeD/X9WMThvfzXD8uEfNuXT7GT6rbcR9hffnQpA+H1tPGDE9q
3kdaXz4iGfA+0vWjkiHv57t+dDLi/XzXj00a3ktcPy4Z825d4b7//zPuF1gP
G5ry4dB6tj88pXkfZT1sRCrgfZTrR6VC3i90/ehUxPuFrh+bMrxf5PpxqZh3
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
rh+VDnm/xPWj0xHvl7h+bNrwPsb149Ix79bXuO//t+J+qfXTQzM+HFrPeWJ4
RvN+mfXTIzIB75e5flQm5H2s60dnIt7Hun5sxvD+f64fl4l5t/79M35WbcP9
m9Ybh2Z9OLS+8ZnhWc375dYbR2QD3i93/ahsyPs414/ORryPc/3YrOFdu35c
NubdOu2+/+/CvdT6pYnKh0Pr/m2TlOZ9vPVLk1XA+3jXT7H//0jcJ7h+qop4
n+D66crwPtH1M1TMu/XJm7WnXsX9CuttEz0fDq3P2DzJ07xfab1tshfwfqXr
p3gh799y/VQv4v1brp/uGd7LXD/Di3m3Trvv/7fjPsn69YkJHw6t+786KaF5
/7b165MTAe/fdv2URMj7d1w/NRHx/h3XT08Y3r/r+hmJmHfrk9/QSfUa7pOt
d09M+nBofcYbk5Ka96usd09OBrxf5fopyZD377l+ajLi/Xuun540vJe7fkYy
5t16mPv+/9+4f9/6pYkpHw6tR7ZNSmnep1i/NDkV8D7F9VNSIe8/cP3UVMT7
D1w/PWV4/6HrZ6Ri3q1Hb9Zp9R/cf2S9bWLah0PryzdPSmvep1pvm5wOeJ/q
+inpkPcfu35qOuL9x66fnja8T3P9jHTMu/Uw9/3/Dtx/Yv36xIwPh9YjX52U
0bz/1Pr1yZmA95+6fkom5H2666dmIt6nu356xvD+M9fPyMS8W49+Q2fV67j/
3Hr3xKwPh9aXvzEpq3m/2nr35GzA+9Wun5INeZ/h+qnZiPcZrp+eNbwHrp+R
jXm3vsJ9/78T9wrrd2cpHw6tJ3fPVpr3Sut356iA90rXz1Uh7zNdP09FvM90
/QJleJ/l+oUq5t36R/sCT72B+zXWB2Z5Phxa/3zfbE/zfq31gTlewPu1rp/r
hbz/wvXzvIj3X7h+gWd4r3L9Qi/m3foK9/3/m7jPtj48K+HDofXkj2YnNO/X
WR+ekwh4v871cxMh7790/bxExPsvXb8gYXj/lesXJmLerX/0WZBUu3CfY31s
VtKHQ+uffzY7qXm/3vrYnGTA+/Wun5sMef+16+clI95/7foFScN7tesXJmPe
ra913///F/ffWL87K+XDofX13bNTmve51u/OSQW8z3X93FTI+29dPy8V8f5b
1y9IGd5/5/qFqZh363n7grT6H+6/tz4wK+3DofVN+2anNe/zrA/MSQe8z3P9
3HTI+x9cPy8d8f4H1y9IG97nu35hOubd+lr3/f9buP/R+vCsjA+H1td/NDuj
eb/B+vCcTMD7Da6fmwl5X+D6eZmI9wWuX5AxvP/J9QszMe/W8z4Lsmo37jda
H5uV9eHQ+qbPZmc17zdZH5uTDXi/yfVzsyHvC10/LxvxvtD1C7KG99D1C7Mx
79a3uO//Y9xrrG9dpHw4tL6jZrHSvNda37pEBbzXun6pCnmvc/0yFfFe5/oV
yvC+yPUrVcy79bLFoae6cb/Z+s5Fng+H1vcvXuxp3m+xvnOJF/B+i+uXeiHv
t7p+mRfxfqvrV3iG93rXr/Ri3q1vcd//78F9sfU9ixI+HFrfcdfihOb9Nut7
liQC3m9z/dJEyPvtrl+WiHi/3fUrEob3P7t+ZSLm3XrZvWFS9eC+xHrloqQP
h9b337s4qXm/w3rlkmTA+x2uX5oMeb/T9cuSEe93un5F0vDe4PqVyZh364fc
9/97cb/L+tZFKR8OrR+vWZzSvC+1vnVJKuB9qeuXpkLe73b9slTE+92uX5Ey
vP/F9StTMe/WTy8O0+pt3P9qfeeitA+H1hsXL05r3pdZ37kkHfC+zPVL0yHv
97h+WTri/R7Xr0gb3pe7fmU65t36Iff9/zu432t9z6KMD4fWj9+1OKN5v8/6
niWZgPf7XL80E/K+wvXLMhHvK1y/ImN4/5vrV2Zi3q2fvjfMqndx/7v1ykVZ
Hw6tN967OKt5v9965ZJswPv9rl+aDXlf6fpl2Yj3la5fkTW8R65fmY15t37R
ff/fi3uj9UOrlA+H1lsbVyvNe5P1Q2tUwHuT69eqkPdm169TEe/Nrt+gDO+r
XL9Rxbxb71gdeWof7g9YP77K8+HQ+q3Vqz3N+4PWj6/xAt4fdP1aL+T9Idev
8yLeH3L9Bs/w3uL6jV7Mu/WL7vv/93Bfbf30qoQPh9Zbn1id0Lw/bP30mkTA
+8OuX5sIeX/E9esSEe+PuH5DwvD+qOs3JmLerXc8EyXV+7ivsd64KunDofVb
z6xOat4fs964Jhnw/pjr1yZD3h93/bpkxPvjrt+QNLy3un5jMubd+l33/f8H
uD9h/dCqlA+H1gcaV6c072utH1qTCnhf6/q1qZD3J12/LhXx/qTrN6QM70+5
fmMq5t368Ooorfbj/g/rx1elfTi0PrZ6dVrzvs768TXpgPd1rl+bDnl/2vXr
0hHvT7t+Q9rwvt71G9Mx79bvuu//P8T9GeunV2V8OLQ+8MTqjOb9Weun12QC
3p91/dpMyPsG16/LRLxvcP2GjOH9OddvzMS8Wx9+JsqqA7j/03rjqqwPh9bH
nlmd1bw/b71xTTbg/XnXr82GvG90/bpsxPtG12/IGt6N6zdmY96tb3Xf//fh
3mb90iblw6H1nW2blea93fqlLSrgvd3121XIe4frd6iI9w7X71KG902u361i
3q3v2Ww89RHuL1hv2+T5cGi9cvNmT/P+ovW2LV7A+4uu3+6FvL/k+h1exPtL
rt/lGd47Xb/bi3m3vtV9/38Q983Wr29K+HBofeermxOa95etX9+SCHh/2fXb
EyHvr7h+RyLi/RXX70oY3v/l+t2JmHfre94wSfUx7lusd29K+nBovfKNzUnN
+1br3VuSAe9bXb89GfK+zfU7khHv21y/K2l473L97mTMu3WL+/7/E9xftX5p
U8qHQ+vWts0pzft265e2pALet7t+eyrk/TXX70hFvL/m+l0pw/u/Xb87FfNu
vX6zSatPcf+P9bZNaR8Orc3mzWnN+w7rbVvSAe87XL89HfL+uut3pCPeX3f9
rrThfafrd6dj3q1b3Pf/h3B/w/r1TRkfDq1bX92c0by/af36lkzA+5uu354J
ed/l+h2ZiPddrt+VMbz/1/W7MzHv1uvfMFl1GPf/We/elPXh0Nq8sTmreX/L
eveWbMD7W67fng153+36HdmI992u35U1vMeu352Nebd+yX3/fwT3but39yof
Dq23de9Tmvc91u/uVwHve1x/UIW897j+kIp473H9UWV43+v6Yyrm3fr1fbGn
PsP9besDez0fDq1379vnad7fsT6w3wt4f8f1B72Q93ddf8iLeH/X9Uc9w3uv
6495Me/WL7nv/z/HfZ/14b0JHw6tt320L6F5f8/68P5EwPt7rj+YCHl/3/WH
EhHv77v+aMLw/oHrjyVi3q1f/yxOqqO477c+tjfpw6H17s/2JTXvH1of258M
eP/Q9QeTIe8HXH8oGfF+wPVHk4b3PtcfS8a8W/e67/+/wP0j63f3pnw4tO7r
3pfSvB+0fnd/KuD9oOsPpkLeP3b9oVTE+8euP5oyvH/i+mOpmHfrI/vitPoS
90+tD+xN+3Bord7bl9a8H7Lu258OeD/k+oPpkPfDrj+Ujng/7PqjacP7Edcf
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
Rpw/HlYXyP4rYS22/3EZvbi4ib24pJ39KNn/HvZinbgXvbisEDbi8vGwulD2
XwlrcVDLXlzVxF5c3c7+Itn/HvbiMHEfenF9IWzEDeNhdbHsvxLW4qiWvbil
ib24tZ39aNn/HvZik1iBXtxZCBtx13hYXSL7r4S1OK5lL+5tYi/ua2c/Rva/
h/0Y2X/yb+jFeUWwEedPgNWlsv+ZsBb7dezFxc3sxSUd7C+T/fewF+vk39GL
y4pgIy6fAKuxsv+ZsBYHdezFVc3sxdUd7P9P9t/DXhwm70cvri+CjbhhAqy+
KfufCWtxVMde3NLMXtzawf5y2X8Pe7FJrkQv7iyCjbhrAqzGyf5nwloc17EX
9zazF/d1sNey/x72YvvfAXpxng8bcb6GVak8/wDWYj9kLy6O2ItLDPvx8vxj
9mKtGtGLy3zYiMs1rCbI8w9gLQ5C9uKqiL242rCfKM8/Zi8OVRN6cb0PG3GD
htUV8vwDWIujkL24JWIvbjXsr5TnH7MXG9WMXtzpw0bcpWH1LXn+AazFcche
3BuxF/cZ9mXy/GP2ZXj/r0JvnXTvf9iU4f0Pq0m5+6AKWIv9Gvbi4kb24pI2
9t/OeUw3e7H2HkAvLiuAjbi8FFbfyXlaBazFQQ17cVUje3F1G/vv5jy/m704
9B5EL64vgI24oRRWk3NeXgFrcVTDXtzSyF7c2sb+qpzXd7MXG+8h9OLOAtiI
u0ph9b2cd1bAWhzXsBf3NrIX97WxL8/5SDf7cnn+iRb04rxC2Ijzx8Pq+7L/
SliL/Vr24uIm9uKSdvZTZP972It1YjV6cVkhbMTl42H1A9l/JazFQS17cVUT
e3F1O/sfyv73sBeHiYfRi+sLYSNuGA+rH8n+K2EtjmrZi1ua2Itb29lPlf3v
YS82iUfQizsLYSPuGg+rH8v+K2EtjmvZi3ub2Iv72tlPk/3vYT8t9++DSj6K
XpxXBBtx/gRY/UT2PxPWYr+Ovbi4mb24pIP9T2X/PezFOrkGvbisCDbi8gmw
mi77nwlrcVDHXlzVzF5c3cH+Z7L/HvbiMPkYenF9EWzEDRNg9XPZ/0xYi6M6
9uKWZvbi1g72V8v+e9iLTfJx9OLOItiIuybAaobsfyasxXEde3FvM3txXwf7
QPbfw15s/4boxXk+bMT5GlYV8vwDWIv9kL24OGIvLjHsK+X5x+zFWj2BXlzm
w0ZcrmE1U55/AGtxELIXV0XsxdWG/Sx5/jF7cajWohfX+7ARN2hYXSPPP4C1
OArZi1si9uJWw/5aef4xe7FRT6IXd/qwEXdpWP1Cnn8Aa3Ecshf3RuzFfYZ9
lTz/mL11yv7Tewq9OK8ANuL8UljNznlQBazFfg17cXEje3FJG/vrch7TzV6s
vX+gF5cVwEZcXgqrX+Y8rQLW4qCGvbiqkb24uo39r3Ke381eHHrr0IvrC2Aj
biiF1Zycl1fAWhzVsBe3NLIXt7axvz7n9d3sxcZ7Gr24swA24q5SWP06550V
sBbHNezFvY3sxX1t7KtzPtLNvlr2n1iPXpxXCBtx/nhY/Ub2XwlrsV/LXlzc
xF5c0s5+rux/D3uxTjyDXlxWCBtx+XhY/Vb2XwlrcVDLXlzVxF5c3c7+d7L/
PezFYeJZ9OL6QtiIG8bD6vey/0pYi6Na9uKWJvbi1nb282T/e9iLTWIDenFn
IWzEXeNh9QfZfyWsxXEte3FvE3txXzv7+bL/Pezny/6Tz6EX5xXBRpw/AVZ/
lP3PhLXYr2MvLm5mLy7pYH+D7L+HvVgn/4leXFYEG3H5BFgtkP3PhLU4qGMv
rmpmL67uYP8n2X8Pe3GYfB69uL4INuKGCbC6UfY/E9biqI69uKWZvbi1g/1N
sv8e9mKT3Ihe3FkEG3HXBFgtlP3PhLU4rmMv7m1mL+7rYB/K/nvYi+0P0Yvz
fNiI8zWsauT5B7AW+yF7cXHEXlxi2NfK84/Zi7VqQy8u82EjLtewqpPnH8Ba
HITsxVURe3G1Yb9Inn/MXhyqdvTieh824gYNq5vl+QewFkche3FLxF7catjf
Is8/Zi82qgO9uNOHjbhLw+pWef4BrMVxyF7cG7EX9xn29fL8Y/b1eP9vQm+d
du9/2IjzS2G1OOdBFbAW+zXsxcWN7MUlbexvy3lMN/vb8P5/Ab3cywpgIy4v
hdXtOU+rgLU4qGEvrmpkL65uY//nnOd3sxeH3ovoxfUFsBE3lMJqSc7LK2At
jmrYi1sa2Ytb29jfkfP6bvZi472EXtxZABtxVyms7sx5ZwWsxXENe3FvI3tx
Xxv7hpyPdLNvkOef6EQvziuEjTh/PKzukv1Xwlrs17IXFzexF5e0s18q+9/D
XqwTm9GLywphIy4fD6u7Zf+VsBYHtezFVU3sxdXt7P8i+9/DXhwmXkYvri+E
jbhhPKz+KvuvhLU4qmUvbmliL25tZ79M9r+HvdgkXkEv7iyEjbhrPKzukf1X
wloc17IX9zaxF/e1s18u+9/Dfnnu3weV/Bd6cV4RbMT5E2B1r+x/JqzFfh17
cXEze3FJB/v7ZP897MU6uQW9uKwINuLyCbBaIfufCWtxUMdeXNXMXlzdwf5v
sv8e9uIwuRW9uL4INuKGCbD6u+x/JqzFUR17cUsze3FrB/v7Zf897MUmuQ29
uLMINuKuCbBaKfufCWtxXMde3NvMXtzXwT6S/fewF9s/Ab04z4eNOF/DqlGe
fwBrsR+yFxdH7MUlhn2TPP+YvVirV9GLy3zYiMs1rJrl+QewFgche3FVxF5c
bdivkucfsxeHajt6cb0PG3GDhtUD8vwDWIujkL24JWIvbjXsH5TnH7MXG/Ua
enGnDxtxl4bVQ/L8A1iL45C9uDdiL+4z7Fvk+cfsrTP2n96/0YvzCmAjzi+F
1eqcB1XAWuzXsBcXN7IXl7SxfzjnMd3sxdr7D3pxWQFsxOWlsHok52kVsBYH
NezFVY3sxdVt7B/NeX43e3Ho7UAvri+AjbihFFZrcl5eAWtxVMNe3NLIXtza
xv6xnNd3sxcb73X04s4C2Ii7SmH1eM47K2AtjmvYi3sb2Yv72ti35nykm32r
7D+xE704rxA24vzxsHpC9l8Ja7Ffy15c3MReXNLOfq3sfw97sU68gV5cVggb
cfl4WD0p+6+EtTioZS+uamIvrm5n/5Tsfw97cZh4E724vhA24obxsPqH7L8S
1uKolr24pYm9uLWd/TrZ/x72YpPYhV7cWQgbcdd4WD0t+6+EtTiuZS/ubWIv
7mtnv172v4f9etl/8r/oxXlFsBHnT4DVM7L/mbAW+3XsxcXN7MUlHeyflf33
sBfr5P/Qi8uKYCMunwCrDbL/mbAWB3XsxVXN7MXVHeyfk/33sBeHybfQi+uL
YCNumACrf8r+Z8JaHNWxF7c0sxe3drB/Xvbfw15skrvRizuLYCPumgCrjbL/
mbAWx3Xsxb3N7MV9HeyN7L+Hvdj+34BenOfDRpyvYdUmzz+AtdgP2YuLI/bi
EsO+XZ5/zF6sVTd6cZkPG3G5hlWHPP8A1uIgZC+uitiLqw37TfL8Y/biUO1B
L673YSNu0LB6QZ5/AGtxFLIXt0Tsxa2G/Yvy/GP2YqN60Is7fdiIuzSsXpLn
H8BaHIfsxb0Re3GfYd8pzz9mb521//T2ohfnFcBGnF8Kq805D6qAtdivYS8u
bmQvLmlj/3LOY7rZi7X3NnpxWQFsxOWlsHol52kVsBYHNezFVY3sxdVt7P+V
8/xu9uLQewe9uL4ANuKGUlhtyXl5BazFUQ17cUsje3FrG/utOa/vZi823rvo
xZ0FsBF3lcJqW847K2AtjmvYi3sb2Yv72th35Xykm32X7D/Ri16cVwgbcf54
WL0q+6+EtdivZS8ubmIvLmlnv132v4e9WCf2oReXFcJGXD4eVq/J/ithLQ5q
2YurmtiLq9vZ/1v2v4e9OEy8h15cXwgbccN4WP1H9l8Ja3FUy17c0sRe3NrO
fofsfw97sUm8j17cWQgbcdd4WL0u+6+EtTiuZS/ubWIv7mtnv1P2v4f9Ttl/
8gP04rwi2IjzJ8DqDdn/TFiL/Tr24uJm9uKSDvZvyv572It1cj96cVkRbMTl
E2C1S/Y/E9bioI69uKqZvbi6g/1/Zf897MVh8kP04voi2IgbJsDqf7L/mbAW
R3XsxS3N7MWtHezfkv33sBeb5AH04s4i2Ii7JsBqt+x/JqzFcR17cW8ze3Ff
B/tY9t/DXmx/gV6c58NGnK9h1S3PP4C12A/Zi4sj9uISw36PPP+YvVirj9CL
y3zYiMs1rHrk+QewFgche3FVxF5cbdjvlecfsxeH6iB6cb0PG3GDhtXb8vwD
WIujkL24JWIvbjXs35HnH7MXG/UxenGnDxtxl4bVu/L8A1iL45C9uDdiL+4z
7Hvl+cfsrfPsP71P0IvzCmAjzi+F1b6cB1XAWuzXsBcXN7IXl7Sxfy/nMd3s
xdr7FL24rAA24vJSWL2f87QKWIuDGvbiqkb24uo29h/kPL+bvTj0DqEX1xfA
RtxQCqv9OS+vgLU4qmEvbmlkL25tY/9hzuu72YuNdxi9uLMANuKuUlgdyHln
BazFcQ17cW8je3FfG/u+nI90s++T/SeOoBfnFcJGnD8eVh/J/ithLfZr2YuL
m9iLS9rZH5T972Ev1onP0IvLCmEjLh8Pq49l/5WwFge17MVVTezF1e3sP5H9
72EvDhOfoxfXF8JG3DAeVp/K/ithLY5q2YtbmtiLW9vZH5L972EvNomj6MWd
hbARd42H1WHZfyWsxXEte3FvE3txXzv7I7L/PeyPyP6TX6AX5xXBRpw/AVaf
yf5nwlrs17EXFzezF5d0sP9c9t/DXqyTX6IXlxXBRlw+AVZHZf8zYS0O6tiL
q5rZi6s72H8h++9hLw6TX6EX1xfBRtwwAVZfyv5nwloc1bEXtzSzF7d2sP9K
9t/DXmySx9CLO4tgI+6aAKtjsv+ZsBbHdezFvc3sxX0d7NX23P572FvLf/1e
6cV5Pmzk9/kaVl7OgwJYe7nf+yF7cXHEXn5fYtgnch4Ts7fOd38ND724zIeN
9SD3/odVMudpAayTud8HIXtxVcRefl9t2Kdynh+zT+X+vqFKoBfX+7BJ5f6+
DRpW6ZyXB7BO534fhezFLRF7+X2rYZ/JeX3MPpP7+xqVRC/u9GGTyf19uzSs
sjnvDGCdzf0+DtmLeyP28vs+wz4v5yMxe2vfPdYUenFeAWysi937H1b9ch5U
Aet+ud/7NezFxY3s5fclbey/lvOYbvbWJe5fozR6cVkBbKzHuPc/rL6e87QK
WH899/ughr24qpG9/L66jf1xOc/vZn9c7u8behn04voC2ByX+/s2lMKqf87L
K2DdP/f7qIa9uKWRvfy+tY398Tmv72Z/fO7va7wsenFnAWyOz/19u0ph9Y2c
d1bA+hu538c17MW9jezl931t7PNzPtLN3lrn/r1AL87zYWNd5vYPqxNyHhTA
+oTc7/2Qvbg4Yi+/LzHsB+Q8JmZvXe723w+9uMyHjfU0t39YnZjztADWJ+Z+
H4TsxVURe/l9tWF/Us7zY/Yn5f6+ofoaenG9D5uTcn/fBg2rk3NeHsD65Nzv
o5C9uCViL79vNewH5rw+Zj8w9/c16uvoxZ0+bAbm/r5dGlan5LwzgPUpud/H
IXtxb8Reft9n2A/K+UjM3jqw//SOQy/OK4CNdZXbP6xOzXlQBaxPzf3er2Ev
Lm5kL78vaWN/Ws5jutlbV7v990cvLiuAjfV8t39YDc55WgWsB+d+H9SwF1c1
spffV7exPz3n+d3sT8/9fUPvePTi+gLYnJ77+zaUwuqMnJdXwPqM3O+jGvbi
lkb28vvWNvZn5ry+m/2Zub+v8b6BXtxZAJszc3/frlJYDcl5ZwWsh+R+H9ew
F/c2spff97Wx93M+0s3el/d/Kh+9OG8obHx5/0+EVYG8/2fBukDe/4vYi4tX
sZffl2xiXyjv/73sC+X9nzoBvbhsKGwK5f0/EVZF8v6fBesief8vYi+uWsVe
fl+9if1Qef/vZT9U3v+pAejF9UNhM1Te/xNhdZa8/2fB+ix5/y9iL25ZxV5+
37qJ/TB5/+9lP0ze/6kT0Ys7h8JmmLz/J8LqbHn/z4L12fL+X8Re3LuKvfy+
bxP7Ynn/72VfLO//9EnoxXlnwaZY3v9XwGq4vP+vgfVwef/fzF5c/AB7+X3J
C+zPkff/2+zPkfd/+mT04rKzYHOOvP+vgNW58v6/Btbnyvv/ZvbiqgfYy++r
X2B/nrz/32Z/nrz/0wPRi+vPgs158v6/AlYj5P1/DaxHyPv/ZvbilgfYy+9b
X2A/Ut7/b7MfKe//9CnoxZ1nwWakvP+vgNX58v6/Btbny/v/Zvbi3gfYy+/7
XmBfIu//t9mXyPs/NQi9OG8obErk/T8RVhfI+38WrC+Q9/8i9uLiVezl9yWb
2I+S9/9e9qPk/Z86Fb24bChsRsn7fyKsLpT3/yxYXyjv/0XsxVWr2Mvvqzex
v0je/3vZXyTv/9Rp6MX1Q2Fzkbz/J8LqYnn/z4L1xfL+X8Re3LKKvfy+dRP7
0fL+38t+tLz/U4PRizuHwma0vP8nwuoSef/PgvUl8v5fxF7cu4q9/L5vE/sx
8v7fy36MvP/Tp6MX550FmzHy/r8CVpfK+/8aWF8q7/+b2YuLH2Avvy95gf1l
8v5/m/1l8v5Pn4FeXHYWbC6T9/8VsBor7/9rYP3/NN15fNxVvf/xM20CKbjU
n1vdJzSBKaAOKhqV5YQmbcIaBCTINmmTdsI6yBZkcdIm7QQQxz0q4qRN2gkg
jooaFfGkTdqJII4X0aiIkzZpJ4A67lFRf+d8Pu/3/ad93c/3+Xic68fx5Htv
hvtBvf8H6bWTY/T6fGqa/hS9/xfoT9H7v/at8NqZRrQ7Re//VrQ5Ve//HrQ9
Ve//QXrt/Bi9Pl+Ypj9N7/8F+tP0/q99G7x2sRHtTtP7vxVtTtf7vwdtT9f7
f5BeuzJGr89Xp+mt3v8L9L7T4S9ReO26KNr5zoSf/9GmWXpVAm2b5floml47
lqPX5+OO/gzppjK972z4+b8eXrstina+h8PP/2izVrozgbZr5flEml47maPX
51OOvkW6r0zfIudNm2PgtTNRtGuR82Yt2rRKDyfQtlWez6XptfM5en2+4OjX
SU+U6dfJeZ1ZDa9djKLdOjlvyaLNeunZBNqul+fLaXrtSo5en686+jbppTK9
75z/M9IAr11Xj3a+8+Hnf7Rpl17Vhbbt8ny0n147NkKvz8cn6c+Ubpqj910I
P/83wmu31aOd74nw8z/anCXd2YW2Z8nziX567eQIvT6fmqQ/W7pvjv5sOW86
ciy8dqYe7c6W82ab0eYc6eEutD1Hns/102vnR+j1+cIk/bnSE3P058p5XeQ4
eO1iPdqdK+ctNaPNedKzXWh7njxf7qfXrozQ6/PVSfoO6aU5et8u/CUGr10X
RTvfxfD5R5vzpVcl0PZ8eT6apteO5ej1+bij/5B0U5nedyl8/tfAa7dF0c73
bPj8o80F0p0JtL1Ank+k6bWTOXp9PuXoL5TuK9NfKOdNm+PhtTNRtLtQzpu1
aHOR9HACbS+S53Npeu18jl6fLzj6D0tPlOk/LOd15gR47WIU7T4s5y1ZtLlY
ejaBthfL8+U0vXYlR6/PVx19p/RSmd532f8ZORFeu64e7XxXwucfbS6RXtWF
tpfI89F+eu3YCL0+H5+k/4h00xy972r4/L8dXrutHu18L4XPP9pcKt3ZhbaX
yvOJfnrt5Ai9Pp+apL9Mum+O/jI5bzryDnjtTD3aXSbnzTajzeXSw11oe7k8
n+un186P0OvzhUn6K6Qn5uivkPO6yDvhtYv1aHeFnLfUjDZXSs92oe2V8ny5
n167MkKvz1cn6RPSS3P0Cb3/a+Lw2nUNaJfQ+78Fbbr0/u9G2y69/wfotWOj
9Pp8fIp+g97/8/Qb9P6vOQleu60B7Tbo/d+CNhv1/u9G2416/w/QaydH6fX5
1BR9t97/8/Tdev/XvAteO9OAdt16/7egTY/e/91o26P3/wC9dn6UXp8vTNFv
0vt/nn6T3v8174bXLjag3Sa9/1vQZrPe/91ou1nv/wF67coovT5fnaJP6v0/
T5/U+7/2PfDadY1ol9T7vxVtevX+70HbXr3/B+m1Y2P0+nx8mv4qvf8X6K/S
+7/2ZHjttka0u0rv/1a0uVrv/x60vVrv/0F67eQYvT6fmqa/Ru//Bfpr9P6v
fS+8dqYR7a7R+78Vba7V+78Hba/V+3+QXjs/Rq/PF6bpr9P7f4H+Or3/a98H
r11sRLvr9P5vRZvr9f7vQdvr9f4fpNeujNHr89Vp+pTe/wv0Kb3/a5rgtesa
0C6l938L2tyg93832t6g9/8AvXZslF6fj0/Rf1Tv/3n6j+r9X/N+eO22BrT7
qN7/LWhzo97/3Wh7o97/A/TayVF6fT41RX+T3v/z9Dfp/V/zAXjtTAPa3aT3
fwva3Kz3fzfa3qz3/wC9dn6UXp8vTNHfovf/PP0tev/XfBBeu9iAdrfo/d+C
Nrfq/d+Ntrfq/T9Ar10Zpdfnq1P0fXr/z9P36f1fewq8dl0j2vXp/d+KNrfp
/d+Dtrfp/T9Irx0bo9fn49P0H9P7f4H+Y3r/154Kr93WiHYf0/u/FW1u1/u/
B21v1/t/kF47OUavz6em6e/Q+3+B/g69/2tPg9fONKLdHXr/t6LNnXr/96Dt
nXr/D9Jr58fo9fnCNP1dev8v0N+l93/t6fDaxUa0u0vv/1a0+bje/z1o+3G9
/wfptStj9Pp8dZo+rff/Ar1vE/4BoBZeuy6Kdr7rIv7nf7Tpl16VQNt+eT6a
pteO5ej1+bij3yLdVKb3vTLif/5vhtdui6Kd71UR//M/2myV7kyg7VZ5PpGm
107m6PX5lKMfkO4r0w/IedPmDHjtTBTtBuS8WYs2g9LDCbQdlOdzaXrtfI5e
ny84+m3SE2X6bXJeZ9bCaxejaLdNzluyaLNdejaBttvl+XKaXruSo9fnq44+
I71Upvcd9fuPtMBr19Wjne+Y338z2gxJr+pC2yF5PtpPrx0bodfn45P0d0s3
zdH7jvv9R1rhtdvq0c53k99/M9rcI93Zhbb3yPOJfnrt5Ai9Pp+apL9Xum+O
/l45bzqyDl47U49298p5s81o8wnp4S60/YQ8n+un186P0OvzhUn6+6Qn5ujv
k/O6yHp47WI92t0n5y01o80npWe70PaT8ny5n167MkKvz1cn6bPSS3P0vuUf
ANwGr10XRTvfbeHzjzafkl6VQNtPyfPRNL12LEevz8cd/aelm8r0vjvC578d
Xrstina+O8PnH20+I92ZQNvPyPOJNL12Mkevz6cc/Wel+8r0n5Xzps2Z8NqZ
KNp9Vs6btWjzOenhBNp+Tp7Ppem18zl6fb7g6D8vPVGm/7yc15mz4LWLUbT7
vJy3ZNHmC9KzCbT9gjxfTtNrV3L0+nzV0Q9LL5XpfSfC5/9seO26erTznQyf
f7T5ovSqLrT9ojwf7afXjo3Q6/PxSfovSTfN0ftOhc//OfDabfVo57svfP7R
5svSnV1o+2V5PtFPr50codfnU5P090v3zdHfL+dNR86F187Uo939ct5sM9p8
RXq4C22/Is/n+um18yP0+nxhkv4B6Yk5+gfkvC5yHrx2sR7tHpDzlprR5qvS
s11o+1V5vtxPr10Zodfnq5P0OemlOfqc3v81HfDadQ1ol9P7vwVtRvT+70bb
Eb3/B+i1Y6P0+nx8in6H3v/z9Dv0/q85H167rQHtduj934I2O/X+70bbnXr/
D9BrJ0fp9fnUFP2o3v/z9KN6/9d8CF4704B2o3r/t6DNmN7/3Wg7pvf/AL12
fpReny9M0e/S+3+efpfe/zUXwGsXG9Bul97/LWizW+//brTdrff/AL12ZZRe
n69O0ef1/p+nz+v9X3shvHZdI9rl9f5vRZtxvf970HZc7/9Beu3YGL0+H5+m
f1Dv/wX6B/X+r70IXrutEe0e1Pu/FW0e0vu/B20f0vt/kF47OUavz6em6R/W
+3+B/mG9/2s/DK+daUS7h/X+b0Wbr+n934O2X9P7f5BeOz9Gr88Xpukf0ft/
gf4Rvf9rL4bXLjai3SN6/7eizdf1/u9B26/r/T9Ir10Zo9fnq9P0Bb3/F+gL
ev/XdMJr1zWgXUHv/xa0+Ybe/91o+w29/wfotWOj9Pp8fIr+m3r/z9N/U+//
mkvgtdsa0O6bev+3oM239P7vRttv6f0/QK+dHKXX51NT9I/q/T9P/6je/zUf
gdfONKDdo3r/t6DNt/X+70bbb+v9P0CvnR+l1+cLU/Tf0ft/nv47ev/XXAqv
XWxAu+/o/d+CNt/V+78bbb+r9/8AvXZllF6fr07RT+j9P08/ofd/7WXw2nWN
aDeh938r2nxP7/8etP2e3v+D9NqxMXp9Pj5N/329/xfov6/3f+3l8NptjWj3
fb3/W9HmB3r/96DtD/T+H6TXTo7R6/OpafrH9P5foH9M7//aK+C1M41o95je
/61o80O9/3vQ9od6/w/Sa+fH6PX5wjT943r/L9A/rvd/7ZXw2sVGtHtc7/9W
tPmR3v89aPsjvf8H6bUrY/T6fHWa3un9v0DvOx1+/k/Aa9dF0c53Jvz8jzaT
0qsSaDspz0fT9NqxHL0+H3f0e6SbyvS+s+Hn/y547bYo2vkeDj//o81e6c4E
2u6V5xNpeu1kjl6fTzn6Kem+Mv2UnDdtNsBrZ6JoNyXnzVq0mZYeTqDttDyf
S9Nr53P0+nzB0e+TnijT75PzOrMRXrsYRbt9ct6SRZv90rMJtN0vz5fT9NqV
HL0+X3X0RemlMr3vXPj5vxteu64e7Xznw8//aDMjvaoLbWfk+Wg/vXZshF6f
j0/S/1i6aY7edyH8/N8Dr91Wj3a+J8LP/2jzhHRnF9o+Ic8n+um1kyP0+nxq
kv5J6b45+iflvOnIJnjtTD3aPSnnzTajzU+kh7vQ9ifyfK6fXjs/Qq/PFybp
n5KemKN/Ss7rIpvhtYv1aPeUnLfUjDY/lZ7tQtufyvPlfnrtygi9Pl+dpC9J
L83R+3bh85+E166Lop3vYvj8o83PpFcl0PZn8nw0Ta8dy9Hr83FH/3/STWV6
36Xw+e+F126Lop3v2fD5R5unpTsTaPu0PJ9I02snc/T6fMrR/1y6r0z/czlv
2lwFr52Jot3P5bxZizbPSA8n0PYZeT6XptfO5+j1+YKj/4X0RJn+F3JeZ66G
1y5G0e4Xct6SRZtfSs8m0PaX8nw5Ta9dydHr81VHPyu9VKb3XQ6f/2vgtevq
0c53JXz+0eZX0qu60PZX8ny0n147NkKvz8cn6X8t3TRH77saPv/Xwmu31aOd
76Xw+Ueb30h3dqHtb+T5RD+9dnKEXp9PTdI/K903R/+snDcduQ5eO1OPds/K
ebPNaPNb6eEutP2tPJ/rp9fOj9Dr84VJ+uekJ+bon5Pzusj18NrFerR7Ts5b
akab30nPdqHt7+T5cj+9dmWEXp+vTtKXpZfm6Mt6/9ek4LXrGtCurPd/C9rM
6f3fjbZzev8P0GvHRun1+fgU/QG9/+fpD+j9X3MDvHZbA9od0Pu/BW0O6v3f
jbYH9f4foNdOjtLr86kp+nm9/+fp5/X+r/kovHamAe3m9f5vQZsFvf+70XZB
7/8Beu38KL0+X5iiP6T3/zz9Ib3/a26E1y42oN0hvf9b0Oaw3v/daHtY7/8B
eu3KKL0+X52ir+j9P09f0fu/9iZ47bpGtKvo/d+KNot6//eg7aLe/4P02rEx
en0+Pk3/vN7/C/TP6/1fezO8dlsj2j2v938r2ryg938P2r6g9/8gvXZyjF6f
T03Tv6j3/wL9i3r/194Cr51pRLsX9f5vRZvf6/3fg7a/1/t/kF47P0avzxem
6f+g9/8C/R/0/q+9FV672Ih2f9D7vxVt/qj3fw/a/lHv/0F67coYvT5fnaav
6v2/QF/V+7+mD167rgHtqnr/t6DNn/T+70bbP+n9P0CvHRul1+fjU/R/1vt/
nv7Pev/X3Aav3daAdn/W+78Fbf6i93832v5F7/8Beu3kKL0+n5qi/6ve//P0
f9X7v+Zj8NqZBrT7q97/LWjzN73/u9H2b3r/D9Br50fp9fnCFP3f9f6fp/+7
3v81t8NrFxvQ7u96/7egzT/0/u9G23/o/T9Ar10Zpdfnq1P0S3r/z9Mv6f1f
ewe8dl0j2i3p/d+KNv/U+78Hbf+p9/8gvXZsjF6fj0/T/0vv/wX6f+n9X3sn
vHZbI9r9S+//VrT5t97/PWj7b73/B+m1k2P0+nxqmv4lvf8X6F/S+7/2Lnjt
TCPavaT3fyva/Efv/x60/Y/e/4P02vkxen2+ME3/X73/F+j/q/d/7cfhtYuN
aPdfvf9b0eZ/ev/3oO3/9P4fpNeujNHr89VpevO03P8L9L7lv52GD73M//yP
dr7l+/9oE/G9zP/8j7YR8dE0fUR8LEcfeVq//0+/THxTmd53+P6f6YcPvcz/
/I92vuX7/2iz3Pcy//M/2i5/Wr//T79cfDJHv/xp/f4/fY34vjJ9jZw/bbbA
18j5M1G0q3lav/+PNrVy/uEE2taKz6Xpa8Xnc/S1T+v3/+mPED9Rpj/iaf3+
/1b4I+T8xSjaHfG0fv8fbY6U888m0PbIp/X7//RHiq/k6I98Wr//T18nfqlM
7zsa1joA77ve778e7XzL9//RZsXTdo3ffxfa+q73+++nXyE+NkIfng+//0t/
lPimOXrf4ft/kUF43yf5/dejne/3h9//RZujffv9d6Gt75PC7//SHy0+OUJ/
tPjUJP3LxPfN0b9Mzp+ObIN/mZw/U492L5PzZ5vR5uVy/uEutH25+Fw//cvF
50foXy6+MEn/CvETc/SvkPO7yHb4V8j5i/Vo9wo5f6kZbV4p55/tQttXii/3
079SfGWE/pXiq5P0K8UvzdH7Dv8GXpaBD+33fwza+Q7f/zsDbV7l2+9/A9q+
Snx0C/2rxMd20L9KfHwP/f8T33SA3nf4/t+yIfjQfv/HoJ3v8P2/M9Dm1b79
/jeg7avFJ7bQv1p8cgf9q8Wn9tC/RnzfAfrXyPnTy+6Gf42cP3MM2r1Gzp89
A21eK+cf3oC2rxWf20L/WvH5HfSvFV/YQ/868RMH6F8n53fL7oF/nZy/eAza
vU7OXzoDbV4v55/dgLavF1/eQv968ZUd9K8XX91Dv0r80gF6313+z+X3wof2
+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
5Cj9RvGpKfpu8X3z9N1y/nTNN+G75fyZBrTrlvNnW9CmR84/3I22PeJzA/Q9
4vOj9D3iC1P0m8RPzNNvkvO7mm/Bb5LzFxvQbpOcv9SCNpvl/LPdaLtZfHmA
frP4yij9ZvHVKfqk+KV5et+j/s/aR+FDh/d/tPP9cHj/R5te3+H9H217xUcH
6XvFx8boe8XHp+mvEt+0QO/70fD+/2340OH9H+18Pxbe/9Hmat/h/R9trxaf
GKS/WnxyjP5q8alp+mvE9y3QXyPnT9d+B/4aOX+mEe2ukfNnW9HmWjn/cA/a
Xis+N0h/rfj8GP214gvT9NeJn1igv07O72q/C3+dnL/YiHbXyflLrWhzvZx/
tgdtrxdfHqS/XnxljP568dVp+pT4pQV633v9n0dMwIcO7/9o5/uJ8P6PNjf4
Du//aHuD+Og2+hvEx3bR3yA+vo/+o+KbDtH7fjq8/38PPnR4/0c7378J7/9o
c6Pv8P6PtjeKT2yjv1F8chf9jeJT++hvEt93iP4mOX/6iO/D3yTnzxyLdjfJ
+bPr0OZmOf/wJrS9WXxuG/3N4vO76G8WX9hHf4v4iUP0t8j53RE/gL9Fzl88
Fu1ukfOX1qHNrXL+2U1oe6v48jb6W8VXdtHfKr66j75P/NIhet/z/s8jH4MP
Hd7/0c73i+H9H21u8x3e/9H2NvHR7fS3iY/tpr9NfHw//cfENx2m9/3X8P7/
Q/jQ4f0f7Xy/FN7/0eZ23+H9H21vF5/YTn+7+ORu+tvFp/bT3yG+7zD9HXL+
9JGPw98h588ch3Z3yPmz69HmTjn/8Ga0vVN8bjv9neLzu+nvFF/YT3+X+InD
9HfJ+d2RP4K/S85fPA7t7pLzl9ajzcfl/LOb0fbj4svb6T8uvrKb/uPiq/vp
0+KXDtP7rgn/BwAHH3q5f/9HO98vC7//izb9vpf793+07RcfTdP3i4/l6PvF
xx39FvFNZXrfrwm//zsJH3q5f/9HO99vDr//izZbfS/37/9ou1V8Ik2/VXwy
R79VfMrRD4jvK9MPyPnTZg/8gJw/E0W7ATl/1qLNoJx/OIG2g+JzafpB8fkc
/aD4gqPfJn6iTL9Nzu/MXvhtcv5iFO22yflLFm22y/lnE2i7XXw5Tb9dfCVH
v1181dFnxC+V6X03hN//nYL33ej3X492vt8efv8XbYZ8+/13oa3vxvD7v/RD
4mMj9EPi45P0d4tvmqP3/Z7w+7/T8L5P9vuvRzvfp4bf/0Wbe3z7/Xehre+T
w+//0t8jPjlCf4/41CT9veL75ujvlfOnI/vg75XzZ+rR7l45f7YZbT4h5x/u
QttPiM/1039CfH6E/hPiC5P094mfmKO/T87vIvvh75PzF+vR7j45f6kZbT4p
55/tQttPii/3039SfGWE/pPiq5P0WfFLc/S+W/z+lxXhQ/v9H4N2vs/2+z8D
bT7l2+9/A9p+Snx0C/2nxMd20H9KfHwP/afFNx2g932h3/+yGfjQfv/HoJ3v
y/z+z0Cbz/j2+9+Atp8Rn9hC/xnxyR30nxGf2kP/WfF9B+g/K+dPL/sx/Gfl
/Jlj0O6zcv7sGWjzOTn/8Aa0/Zz43Bb6z4nP76D/nPjCHvrPi584QP95Ob9b
9gT85+X8xWPQ7vNy/tIZaPMFOf/sBrT9gvjyFvoviK/soP+C+Ooe+mHxSwfo
fff4/S9/Ej603/9qtPN9rd//WrT5om+//41o+0Xx0a30XxQf20n/RfHxvfRf
Et90kN73zX7/y38CH9rvfzXa+b7T738t2nzZt9//RrT9svjEVvovi0/upP+y
+NRe+vvF9x2kv1/On17+FPz9cv7MarS7X86fXYs2X5HzD29E26+Iz22l/4r4
/E76r4gv7KV/QPzEQfoH5Pxu+U/hH5DzF1ej3QNy/tJatPmqnH92I9p+VXx5
K/1XxVd20n9VfHUvfU780kF637Xh939L8KH9/hvQzvfLw+//os2Ib7//brQd
ER8doB8RHxulHxEfn6LfIb5pnt73a8Pv//4MPrTffwPa+X5L+P1ftNnp2++/
G213ik8M0O8Unxyl3yk+NUU/Kr5vnn5Uzp+u+T/4UTl/pgHtRuX82Ra0GZPz
D3ej7Zj43AD9mPj8KP2Y+MIU/S7xE/P0u+T8ruZp+F1y/mID2u2S85da0Ga3
nH+2G213iy8P0O8WXxml3y2+OkWfF780T+/72PD7vz+HD+3334h2vt8Rfv8X
bcZ9+/33oO24+Ogg/bj42Bj9uPj4NP2D4psW6H2/N/z+7zPwof3+G9HO92nh
93/R5iHffv89aPuQ+MQg/UPik2P0D4lPTdM/LL5vgf5hOX+69hfwD8v5M41o
97CcP9uKNl+T8w/3oO3XxOcG6b8mPj9G/zXxhWn6R8RPLNA/Iud3tb+Ef0TO
X2xEu0fk/KVWtPm6nH+2B22/Lr48SP918ZUx+q+Lr07TF8QvLdD7bvX7P2IW
PrTf/7Fo5/scv/91aPMN337/m9D2G+Kj2+i/IT62i/4b4uP76L8pvukQve+L
/P6P+BV8aL//Y9HO9+V+/+vQ5lu+/f43oe23xCe20X9LfHIX/bfEp/bRPyq+
7xD9o3L+9BG/hn9Uzp85Fu0elfNn16HNt+X8w5vQ9tvic9vovy0+v4v+2+IL
++i/I37iEP135PzuiN/Af0fOXzwW7b4j5y+tQ5vvyvlnN6Htd8WXt9F/V3xl
F/13xVf30U+IXzpE73uT3/+Rz8KH9vs/Du18X+f3vx5tvufb738z2n5PfHQ7
/ffEx3bTf098fD/998U3Hab3fYvf/5G/hQ/t938c2vm+y+9/Pdr8wLff/2a0
/YH4xHb6H4hP7qb/gfjUfvrHxPcdpn9Mzp8+8jn4x+T8mePQ7jE5f3Y92vxQ
zj+8GW1/KD63nf6H4vO76X8ovrCf/nHxE4fpH5fzuyN/B/+4nL94HNo9Lucv
rUebH8n5Zzej7Y/El7fT/0h8ZTf9j8RX99M78UuH6X1vC+//ZfjQ4f0f7Xzf
F97/0WbSd3j/R9tJ8dE0/aT4WI5+Unzc0e8R31Sm9/358P4/Bx86vP+jne8H
wvs/2uz1Hd7/0Xav+ESafq/4ZI5+r/iUo58S31emn5Lzp80B+Ck5fyaKdlNy
/qxFm2k5/3ACbafF59L00+LzOfpp8QVHv0/8RJl+n5zfmYPw++T8xSja7ZPz
lyza7JfzzybQdr/4cpp+v/hKjn6/+KqjL4pfKtP73h3e/+fhQ4f3f7Tz/fXw
/o82M77D+z/azoiP9tPPiI+N0M+Ij0/S/1h80xy97++G9/8F+NDh/R/tfP8o
vP+jzRO+w/s/2j4hPtFP/4T45Aj9E+JTk/RPiu+bo39Szp+OHIJ/Us6fqUe7
J+X82Wa0+Ymcf7gLbX8iPtdP/xPx+RH6n4gvTNI/JX5ijv4pOb+LHIZ/Ss5f
rEe7p+T8pWa0+amcf7YLbX8qvtxP/1PxlRH6n4qvTtKXxC/N0fveF97/K/Ch
w/s/2vl+Krz/o83PfIf3f7T9mfjoFvqfiY/toP+Z+Pge+v8T33SA3vcvwvv/
Inzo8P6Pdr6fC+//aPO07/D+j7ZPi09soX9afHIH/dPiU3vofy6+7wD9z+X8
6WXPw/9czp85Bu1+LufPnoE2z8j5hzeg7TPic1vonxGf30H/jPjCHvpfiJ84
QP8LOb9b9gL8L+T8xWPQ7hdy/tIZaPNLOf/sBrT9pfjyFvpfiq/soP+l+Ooe
+lnxSwfofR8O7/8vwocO7/9o5/uP4f0fbX7lO7z/o+2vxEe30v9KfGwn/a/E
x/fS/1p800F63/8I7/+/hw8d3v/Rzvf/wvs/2vzGd3j/R9vfiE9spf+N+ORO
+t+IT+2lf1Z830H6Z+X86eV/gH9Wzp9ZjXbPyvmza9Hmt3L+4Y1o+1vxua30
vxWf30n/W/GFvfTPiZ84SP+cnN8t/yP8c3L+4mq0e07OX1qLNr+T889uRNvf
iS9vpf+d+MpO+t+Jr+6lL4tfOkjve3t4/6/Chw7v/2jn+5Ph/R9t5nyH93+0
nRMfHaCfEx8bpZ8TH5+iPyC+aZ7e9xfC+/+f4EOH93+08/3V8P6PNgd9h/d/
tD0oPjFAf1B8cpT+oPjUFP28+L55+nk5f7rmz/Dzcv5MA9rNy/mzLWizIOcf
7kbbBfG5AfoF8flR+gXxhSn6Q+In5ukPyfldzV/gD8n5iw1od0jOX2pBm8Ny
/tlutD0svjxAf1h8ZZT+sPjqFH1F/NI8ve98eP//K3zo8P6Pdr4L4f0fbRZ9
h/d/tF0UHx2kXxQfG6NfFB+fpn9efNMCve+J8P7/N/jQ4f0f7Xy78P6PNi/4
Du//aPuC+MQg/Qvik2P0L4hPTdO/KL5vgf5FOX+69u/wL8r5M41o96KcP9uK
Nr+X8w/3oO3vxecG6X8vPj9G/3vxhWn6P4ifWKD/g5zf1f4D/g9y/mIj2v1B
zl9qRZs/yvlne9D2j+LLg/R/FF8Zo/+j+Oo0fVX80gK97/3h/X8JPnR4/0c7
3z8N7/9o8yff4f0fbf8kPrqN/k/iY7vo/yQ+vo/+z+KbDtH7/mV4//8nfOjw
/o92vn8X3v/R5i++w/s/2v5FfGIb/V/EJ3fR/0V8ah/9X8X3HaL/q5w/fcS/
4P8q588ci3Z/lfNn16HN3+T8w5vQ9m/ic9vo/yY+v4v+b+IL++j/Ln7iEP3f
5fzuiH/D/13OXzwW7f4u5y+tQ5t/yPlnN6HtP8SXt9H/Q3xlF/0/xFf30S+J
XzpE77sS3v9fgg8d3v/Rznc1vP+jzT99h/d/tP2n+Oh2+n+Kj+2m/6f4+H76
f4lvOkz/L/k+uj3yP/Chw/s/2v1Lvk/dsR5t/u27xr//o+2/xSe20/9bfHI3
/b/Fp/bTvyS+7zD9S3L+9JH/hX9Jzp85Du1ekvNn16PNf+T8w5vR9j/ic9vp
/yM+v5v+P+IL++n/K37iMP1/5fzuyP/B/1fOXzwO7f4r5y+tR5v/yflnN6Pt
/8SXt9P/T3xlN/3/xFf305ufB790mD60/NeX1Ou8Lop2Ol9p0SYi81UJtI3I
PJqm13ksR6/zuKNfJvOmMn3oOn+MCHzol/n3f7TTeYdFm+Uy70yg7XKZJ9L0
Ok/m6HWecvQ1Mu8r04de6f/HXgYf+jX+/R/tdJ61aFMr8+EE2tbKPJem13k+
R6/zgqM/QuYTZfrQq/y/zMvhQ7/Zv/+jnc5LFm2OlPlsAm2PlHk5Ta/zSo5e
51VHXyfzpTJ9ne4/UgNfp/uvRzudr2xGmxW6/y60XaH776fXeWyEXufxSfqj
dP9z9Efp/iO18Efp/uvRTucdzWhztO6/C22P1v330+s8OUKv89Qk/ct0/3P0
L9P9R46Af5nuvx7tdJ5tRpuX6/670Pbluv9+ep3nR+h1Xpikf4Xuf47+Fbr/
yJHwr9D916OdzkvNaPNK3X8X2r5S999Pr/PKCL3Oq5P0K3X/c/Sho+HfF/Ch
G/znH+10vtKizatkviqBtq+SeTRNr/NYjl7ncUf//2TeVKYPHfOf/xXwoU/0
n3+003mHRZtXy7wzgbavlnkiTa/zZI5e5ylH/xqZ95XpQ8f95/8o+NDv8Z9/
tNN51qLNa2U+nEDb18o8l6bXeT5Hr/OCo3+dzCfK9KGb/Of/aPjQp/jPP9rp
vGTR5vUyn02g7etlXk7T67ySo9d51dGvkvlSmX6V7j/yMvhVuv96tNP5yma0
eYPuvwtt36D776fXeWyEXufxSfo36v7n6N+o+4+8HP6Nuv96tNN5RzPavEn3
34W2b9L999PrPDlCr/PUJP2bdf9z9G/W/UdeAf9m3X892uk824w2b9H9d6Ht
W3T//fQ6z4/Q67wwSf9W3f8c/Vt1/5FXwr9V91+PdjovNaPN23T/XWj7Nt1/
P73OKyP0Oq9O0kd1/3P0oa3/y0r40C3+8492Ol9p0aZe5qsSaFsv82iaXuex
HL3O447+GJk3lelDt/knXgUf+mz/+Uc7nXdYtFkt884E2q6WeSJNr/Nkjl7n
KUffIPO+Mn3oDv/5/3/woS/0n3+003nWok2jzIcTaNso81yaXuf5HL3OC47+
WJlPlOlDd/rP/6vhQ1/mP/9op/OSRZvjZD6bQNvjZF5O0+u8kqPXedXRx2S+
VKaP6f4jr4GP6f7r0U7nK5vRZo3uvwtt1+j+++l1Hhuh13l8kv543f8c/fG6
/8hr4Y/X/dejnc47mtHmBN1/F9qeoPvvp9d5coRe56lJ+hN1/3P0J+r+I6+D
P1H3X492Os82o83bdf9daPt23X8/vc7zI/Q6L0zSv0P3P0f/Dt1/5PXw79D9
16OdzkvNaPNO3X8X2r5T999Pr/PKCL3Oq5P0cd3/HH3ohP/LKvjQ3f7zj3Y6
X2nR5iSZr0qg7Ukyj6bpdR7L0es87ujfJfOmMn3opP93yBvgQ1/jP/9op/MO
izbvlnlnAm3fLfNEml7nyRy9zlOO/j0y7yvTh075z/8b4UPf5D//aKfzrEWb
k2U+nEDbk2WeS9PrPJ+j13nB0b9X5hNl+tB9/vP/JvjQd/jPP9rpvGTR5n0y
n02g7ftkXk7T67ySo9d51dE3yXypTN+k+4+8Gb5J91+Pdjpf2Yw279f9d6Ht
+3X//fQ6j43Q6zw+Sf8B3f8c/Qd0/5G3wH9A91+PdjrvaEabD+r+u9D2g7r/
fnqdJ0fodZ6apD9F9z9Hf4ruP/JW+FN0//Vop/NsM9qcqvvvQttTdf/99DrP
j9DrvDBJf5ruf47+NN1/5G3wp+n+69FO56VmtDld99+Ftqfr/vvpdV4Zodd5
dZLe6v7n6EOb8P/wGz60f/+LoZ3OV7ahTbPMVyXRtlnm0Qy9zmN5ep3Hi/Rn
yLypQh/av//V1cOH9u9/MbTTeUcb2qyVeWcSbdfKPJGh13kyT6/zVJG+ReZ9
FfrQ/v2v7hj40P79L4Z2Os+2oU2rzIeTaNsq81yGXuf5PL3OC0X6dTKfqNCH
9u9/davhQ/v3vxja6bzUhjbrZT6bRNv1Mi9n6HVeydPrvFqkb5P5UoW+Tfe/
ogG+Tfe/Bu10vrIdbdp1/71o2677H6LXeWycXufxGfozdf+L9Gfq/lc0wp+p
+1+DdjrvaEebs3T/vWh7lu5/iF7nyXF6nadm6M/W/S/Sn637X3Es/Nm6/zVo
p/NsO9qco/vvRdtzdP9D9DrPj9PrvDBDf67uf5H+XN3/iuPgz9X9r0E7nZfa
0eY83X8v2p6n+x+i13llnF7n1Rn6Dt3/In3oqP/8x+BD+/e/GNrpfGUb2pwv
81VJtD1f5tEMvc5jeXqdx4v0H5J5U4U+tH//q1sDH9q//8XQTucdbWhzgcw7
k2h7gcwTGXqdJ/P0Ok8V6S+UeV+FPrR//6s7Hj60f/+LoZ3Os21oc5HMh5No
e5HMcxl6nefz9DovFOk/LPOJCn1o//5XdwJ8aP/+F0M7nZfa0OZimc8m0fZi
mZcz9Dqv5Ol1Xi3Sd8p8qULfqftfcSJ8p+5/DdrpfGU72lyi++9F20t0/0P0
Oo+N0+s8PkP/Ed3/Iv1HdP8r3g7/Ed3/GrTTeUc72lyq++9F20t1/0P0Ok+O
0+s8NUN/me5/kf4y3f+Kd8Bfpvtfg3Y6z7ajzeW6/160vVz3P0Sv8/w4vc4L
M/RX6P4X6a/Q/a94J/wVuv81aKfzUjvaXKn770XbK3X/Q/Q6r4zT67w6Q5/Q
/S/Sh7b+8x+HD+3f/2Jop/OVbWjTJfNVSbTtknk0Q6/zWJ5e5/Ei/QaZN1Xo
Q/v3v7qT4EP7978Y2um8ow1tNsq8M4m2G2WeyNDrPJmn13mqSN8t874KfWj/
/lf3LvjQ/v0vhnY6z7ahTY/Mh5No2yPzXIZe5/k8vc4LRfpNMp+o0If27391
74YP7d//Ymin81Ib2myW+WwSbTfLvJyh13klT6/zapE+KfOlCn1S97/iPfBJ
3f8atNP5yna06dX996Jtr+5/iF7nsXF6ncdn6K/S/S/SX6X7X3Ey/FW6/zVo
p/OOdrS5Wvffi7ZX6/6H6HWeHKfXeWqG/hrd/yL9Nbr/Fe+Fv0b3vwbtdJ5t
R5trdf+9aHut7n+IXuf5cXqdF2bor9P9L9Jfp/tf8T7463T/a9BO56V2tLle
99+Lttfr/ofodV4Zp9d5dYY+pftfpA+d8J//JvjQ/v0vhnY6X9mGNjfIfFUS
bW+QeTRDr/NYnl7n8SL9R2XeVKEP7d//6t4PH9q//8XQTucdbWhzo8w7k2h7
o8wTGXqdJ/P0Ok8V6W+SeV+FPrR//6v7AHxo//4XQzudZ9vQ5maZDyfR9maZ
5zL0Os/n6XVeKNLfIvOJCn1o//5X90H40P79L4Z2Oi+1oc2tMp9Nou2tMi9n
6HVeydPrvFqk75P5UoW+T/e/4hT4Pt3/GrTT+cp2tLlN99+Ltrfp/ofodR4b
p9d5fIb+Y7r/RfqP6f5XnAr/Md3/GrTTeUc72tyu++9F29t1/0P0Ok+O0+s8
NUN/h+5/kf4O3f+K0+Dv0P2vQTudZ9vR5k7dfy/a3qn7H6LXeX6cXueFGfq7
dP+L9Hfp/lecDn+X7n8N2um81I42H9f996Ltx3X/Q/Q6r4zT67w6Q5/W/S/S
h06Hv8CHHjB1UbTT+UqLNv0yX5VA236ZR9P0Oo/l6HUed/RbZN5Upg+d8TdE
M3zoe01bFO103mHRZqvMOxNou1XmiTS9zpM5ep2nHP2AzPvK9KGz/oRnwIf+
rMlE0U7nWYs2gzIfTqDtoMxzaXqd53P0Oi84+m0ynyjThx42zqyFD32/KUbR
TuclizbbZT6bQNvtMi+n6XVeydHrvOroMzJfKtNndP+RFviM7r8e7XS+shlt
hnT/XWg7pPvvp9d5bIRe5/FJ+rt1/3P0d+v+I63wd+v+69FO5x3NaHOP7r8L
be/R/ffT6zw5Qq/z1CT9vbr/Ofp7df+RdfD36v7r0U7n2Wa0+YTuvwttP6H7
76fXeX6EXueFSfr7dP9z9Pfp/iPr4e/T/dejnc5LzWjzSd1/F9p+UvffT6/z
ygi9zquT9Fnd/xx96Jz/Sxt86FH/+Uc7na+0aPMpma9KoO2nZB5N0+s8lqPX
edzRf1rmTWX60Hn/+W+HD/2w//yjnc47LNp8RuadCbT9jMwTaXqdJ3P0Ok85
+s/KvK9MH7rg/x16JnzoR/3nH+10nrVo8zmZDyfQ9nMyz6XpdZ7P0eu84Og/
L/OJMn3oCf/5Pws+9GP+8492Oi9ZtPmCzGcTaPsFmZfT9Dqv5Oh1XnX0wzJf
KtMP6/4jZ8MP6/7r0U7nK5vR5ou6/y60/aLuv59e57ERep3HJ+m/pPufo/+S
7j9yDvyXdP/1aKfzjma0+bLuvwttv6z776fXeXKEXuepSfr7df9z9Pfr/iPn
wt+v+69HO51nm9HmK7r/LrT9iu6/n17n+RF6nRcm6R/Q/c/RP6D7j5wH/4Du
vx7tdF5qRpuv6v670Paruv9+ep1XRuh1Xp2kz+n+5+hDO/+XDvjQU/7zj3Y6
X2nRZkTmqxJoOyLzaJpe57Ecvc7jjn6HzJvK9KGL/vN/PnzoJ/3nH+103mHR
ZqfMOxNou1PmiTS9zpM5ep2nHP2ozPvK9KFL/vP/IfjQP/eff7TTedaizZjM
hxNoOybzXJpe5/kcvc4Ljn6XzCfK9KFn/b9CF8CHftZ//tFO5yWLNrtlPptA
290yL6fpdV7J0eu86ujzMl8q0+d1/5EL4fO6/3q00/nKZrQZ1/13oe247r+f
XuexEXqdxyfpH9T9z9E/qPuPXAT/oO6/Hu103tGMNg/p/rvQ9iHdfz+9zpMj
9DpPTdI/rPufo39Y9x/5MPzDuv96tNN5thltvqb770Lbr+n+++l1nh+h13lh
kv4R3f8c/SO6/8jF8I/o/uvRTuelZrT5uu6/C22/rvvvp9d5ZYRe59VJ+oLu
f44+dNn/pRM+9Lz//KOdzldatPmGzFcl0PYbMo+m6XUey9HrPO7ovynzpjJ9
6Ir//F8CH/pF//lHO513WLT5lsw7E2j7LZkn0vQ6T+bodZ5y9I/KvK9MH7rq
P/8fgQ/9V//5RzudZy3afFvmwwm0/bbMc2l6nedz9DovOPrvyHyiTB96yX9C
LoUP/ZL//KOdzksWbb4r89kE2n5X5uU0vc4rOXqdVx39hMyXyvQTuv/IZfAT
uv96tNP5yma0+Z7uvwttv6f776fXeWyEXufxSfrv6/7n6L+v+49cDv993X89
2um8oxltfqD770LbH+j+++l1nhyh13lqkv4x3f8c/WO6/8gV8I/p/uvRTufZ
ZrT5oe6/C21/qPvvp9d5foRe54VJ+sd1/3P0j+v+I1fCP677r0c7nZea0eZH
uv8utP2R7r+fXueVEXqdVyfpne5/jj502pi6BHxo//4XQzudr2xDm0mZr0qi
7aTMoxl6ncfy9DqPF+n3yLypQh/av//VdcGH9u9/MbTTeUcb2uyVeWcSbffK
PJGh13kyT6/zVJF+SuZ9FfrQ/v2vbgN8aP/+F0M7nWfb0GZa5sNJtJ2WeS5D
r/N8nl7nhSL9PplPVOhD+/e/uo3wof37XwztdF5qQ5v9Mp9Nou1+mZcz9Dqv
5Ol1Xi3SF2W+VKEv6v5XdMMXdf9r0E7nK9vRZkb334u2M7r/IXqdx8bpdR6f
of+x7n+R/se6/xU98D/W/a9BO513tKPNE7r/XrR9Qvc/RK/z5Di9zlMz9E/q
/hfpn9T9r9gE/6Tufw3a6TzbjjY/0f33ou1PdP9D9DrPj9PrvDBD/5Tuf5H+
Kd3/is3wT+n+16CdzkvtaPNT3X8v2v5U9z9Er/PKOL3OqzP0Jd3/In3onP/8
J+FD+/e/GNrpfGUb2vxM5quSaPszmUcz9DqP5el1Hi/S/5/Mmyr0of37X10v
fGj//hdDO513tKHN0zLvTKLt0zJPZOh1nszT6zxVpP+5zPsq9KH9+1/dVfCh
/ftfDO10nm1Dm2dkPpxE22dknsvQ6zyfp9d5oUj/C5lPVOhD+/e/uqvhQ/v3
vxja6bzUhja/lPlsEm1/KfNyhl7nlTy9zqtF+lmZL1XoZ3X/K66Bn9X9r0E7
na9sR5tf6f570fZXuv8hep3Hxul1Hp+h/7Xuf5H+17r/FdfC/1r3vwbtdN7R
jja/0f33ou1vdP9D9DpPjtPrPDVD/6zuf5H+Wd3/iuvgn9X9r0E7nWfb0ea3
uv9etP2t7n+IXuf5cXqdF2bon9P9L9I/p/tfcT38c7r/NWin81I72vxO99+L
tr/T/Q/R67wyTq/z6gx9Wfe/SB/a+c9/Cj60f/+LoZ3OV7ahzZzMVyXRdk7m
0Qy9zmN5ep3Hi/QHZN5UoQ/t3//qboAP7d//Ymin8442tDko884k2h6UeSJD
r/Nknl7nqSL9vMz7KvSh/ftf3UfhQ/v3vxja6TzbhjYLMh9Oou2CzHMZep3n
8/Q6LxTpD8l8okIf2r//1d0IH9q//8XQTuelNrQ5LPPZJNoelnk5Q6/zSp5e
59UifUXmSxX6iu5/xU3wFd3/GrTT+cp2tFnU/fei7aLuf4he57Fxep3HZ+if
1/0v0j+v+19xM/zzuv81aKfzjna0eUH334u2L+j+h+h1nhyn13lqhv5F3f8i
/Yu6/xW3wL+o+1+DdjrPtqPN73X/vWj7e93/EL3O8+P0Oi/M0P9B979I/wfd
/4pb4f+g+1+DdjovtaPNH3X/vWj7R93/EL3OK+P0Oq/O0Fd1/4v0ocv+898H
H9q//8XQTucr29DmTzJflUTbP8k8mqHXeSxPr/N4kf7PMm+q0If27391t8GH
9u9/MbTTeUcb2vxF5p1JtP2LzBMZep0n8/Q6TxXp/yrzvgp9aP/+V/cx+ND+
/S+GdjrPtqHN32Q+nETbv8k8l6HXeT5Pr/NCkf7vMp+o0If27391t8OH9u9/
MbTTeakNbf4h89kk2v5D5uUMvc4reXqdV4v0SzJfqtAv6f5X3AG/pPtfg3Y6
X9mONv/U/fei7T91/0P0Oo+N0+s8PkP/L93/Iv2/dP8r7oT/l+5/DdrpvKMd
bf6t++9F23/r/ofodZ4cp9d5aob+Jd3/Iv1Luv8Vd8G/pPtfg3Y6z7ajzX90
/71o+x/d/xC9zvPj9DovzND/V/e/SP9f3f+Kj8P/V/e/Bu10XmpHm//p/nvR
9n+6/yF6nVfG6XVenaE3z8j+F+lDC4QPHb7/j3Yyj6y0aBMJ88iqBNpGxEfT
9DI3sRy9zCNxR79MfFOZPnT4/n8/fOjw/X+0k3mkw6LN8jCPdCbQdvkz+v1/
epmbZI5e5pGUo68R31emDx2+/78FPnT4/j/ayTyStWhTG+aR4QTa1j6j3/+n
l7nJ5+hlHik4+iPET5TpQ4fv/2+FDx2+/492Mo+ULNocGeaR2QTaHvmMfv+f
XuamkqOXeaTq6OvEL5Xp63T/kQF435Hw/X+0q9P9N6PNijCPrOpC29Dh+//0
MjexEXqZR+KT9EeJb5qjP0r3HxmED/Pw/X+0C+3334w2R4d5pLMLbUOH7//T
y9wkR+hlHklN0r9MfN8cfejw/f9t8KHD9//RTuaRbDPavDzMI8NdaPty8bl+
epmb/Ai9zCOFSfpXiJ+Yow8dvv+/HT50+P4/2sk8UmpGm1eGeWS2C21fKb7c
Ty9zUxmhl3mkOkm/UvzSHL3v8PvfyzLwoRtM3TFoJ/PIyjPQ5lVhHlm1AW1f
JT66hV7mJraDXuaR+B76/ye+6QB96Jj/j4Eh+NAnmrZj0E7mkY4z0ObVYR7p
3IC2rxaf2EIvc5PcQS/zSGoP/WvE9x2gDx33/7FzN3zo95jMMWgn80j2DLR5
bZhHhjeg7WvF57bQy9zkd9DLPFLYQ/868RMH6EM3+f+Yuwc+9CmmeAzayTxS
OgNtXh/mkdkNaPt68eUt9DI3lR30Mo9U99CvEr90gN53xO9/+b3wof3+V6Od
zCMr16LNG8I8smoj2r5BfHQrvcxNbCe9zCPxvfRvFN90kD603//yT8CH9vtf
jXYyj3SsRZs3hXmkcyPavkl8Yiu9zE1yJ73MI6m99G8W33eQPrTf//L74EP7
/a9GO5lHsmvR5i1hHhneiLZvEZ/bSi9zk99JL/NIYS/9W8VPHKQP7fe//JPw
of3+V6OdzCOltWjztjCPzG5E27eJL2+ll7mp7KSXeaS6lz4qfukgfWjr/5KF
Dx2+/492Mvf3P9rUh7m//9G2Xnw0TS9zf//Ty9zf//THiG8q04cO3///FHzo
8P1/tJO5v//RZnWY+/sfbVeLT6TpZe7vf3qZ+/ufvkF8X5k+dPj+/6fhQ4fv
/6OdzP39jzaNYe7vf7RtFJ9L08vc3//0Mvf3P/2x4ifK9KHD9/8/Ax86fP8f
7WTu73+0OS7M/f2PtseJL6fpZe7vf3qZ+/ufPiZ+qUzve5nff+Sz8KHD9//R
Tub+/kebNWHu73+0XSM+2k8vc3//08vc3//0x4tvmqMPHb7//zn40OH7/2gn
c3//o80JYe7vf7Q9QXyin17m/v6nl7m//+lPFN83Rx86fP//8/Chw/f/0U7m
/v5Hm7eHub//0fbt4nP99DL39z+9zP39T/8O8RNz9KHD9/+/AB86fP8f7WTu
73+0eWeY+/sfbd8pvtxPL3N//9PL3N//9HHxS3P0viMJf/8Pw4fu9vc/2snc
3/9oc1KY+/sfbU8SH91CL3N//9PL3N//9O8S33SAPnTS3/9fhA99jb//0U7m
/v5Hm3eHub//0fbd4hNb6GXu7396mfv7n/494vsO0IdO+fv/S/Chb/L3P9rJ
3N//aHNymPv7H21PFu9/3IeXub//6WXu73/694qfOEAfus/f/1+GD32Hv//R
Tub+/keb94W5v//R9n3iy1voZe7vf3qZ+/ufvkn80gF638v8/pffDx/a7381
2snc3/9o8/4w9/c/2r5ffHQrvcz9/U8vc3//039AfNNB+tB+/8u/Ah/a7381
2snc3/9o88Ew9/c/2n5QfGIrvcz9/U8vc3//058ivu8gfWi//+UPwIf2+1+N
djL39z/anBrm/v5H21PF57bSy9zf//Qy9/c//WniJw7Sh/b7X/5V+NB+/6vR
Tub+/keb08Pc3/9oe7r48lZ6mfv7n17m/v6nt+KXDtKH9n/W5eBDh+//o53M
Iyvb0KY5zCOrkmjbLD6aoZe5ieXpZR6JF+nPEN9UoQ8dvv8/Ah86fP8f7WQe
6WhDm7VhHulMou1a8YkMvcxNMk8v80iqSN8ivq9CHzp8/38HfOjw/X+0k3kk
24Y2rWEeGU6ibav4XIZe5iafp5d5pFCkXyd+okIfOnz/fyd86PD9f7STeaTU
hjbrwzwym0Tb9eLLGXqZm0qeXuaRapG+TfxShb5N979iFN738vD9f7Rr0/23
o017mEdW9aJt6PD9f3qZm9g4vcwj8Rn6M8U3LdKHDt//H4MPHb7/j3Yyj3S0
o81ZYR7p7EXbs8QnhuhlbpLj9DKPpGbozxbft0gfOnz/fxd86PD9f7STeSTb
jjbnhHlkuBdtzxGfG6KXucmP08s8UpihP1f8xCJ96PD9/93wocP3/9FO5pFS
O9qcF+aR2V60PU98eYhe5qYyTi/zSHWGvkP80iK972VRY47Kw4f273/Ho53M
IyvPRJvzwzyy6iq0PV989G56mZvYg/Qyj8R/TP8h8U3P04f2739HjcOH9u9/
x6OdzCMdZ6LNBWEe6bwKbS8Qn7ibXuYm+SC9zCOpH9NfKL7vefrQ/v3vqAfh
Q/v3v+PRTuaR7Jloc1GYR4avQtuLxOfuppe5yT9IL/NI4cf0HxY/8Tx9aP/+
d9RD8KH9+9/xaCfzSOlMtLk4zCOzV6HtxeLLd9PL3FQepJd5pPpj+k7xS8/T
+17u93/0w/Ch/f5PQDuZR1aehTaXhHlk1dVoe4n46D30Mjexh+hlHok/Qf8R
8U0v0If2+z/6a/Ch/f5PQDuZRzrOQptLwzzSeTXaXio+cQ+9zE3yIXqZR1JP
0F8mvu8F+tB+/0c/Ah/a7/8EtJN5JHsW2lwe5pHhq9H2cvG5e+hlbvIP0cs8
UniC/grxEy/Qh/b7P/rr8KH9/k9AO5lHSmehzZVhHpm9Gm2vFF++h17mpvIQ
vcwj1SfoE+KXXqAPbf39X4APHb7/j3Yy9/c/2nSFub//0bZLfDRDL3N//9PL
3N//9BvEN1XoQ4fv/38DPnT4/j/aydzf/2izMcz9/Y+2G8UnMvQy9/c/vcz9
/U/fLb6vQh86fP//m/Chw/f/0U7m/v5Hm54w9/c/2vaIz2XoZe7vf3qZ+/uf
fpP4iQp96PD9/2/Bhw7f/0c7mfv7H202h7m//9F2s/hyhl7m/v6nl7m//+mT
4pcq9L5r/P5XPAofOnz/H+1k7u9/tOkNc3//o22v+OgQvcz9/U8vc3//018l
vmmRPnT4/v+34UOH7/+jncz9/Y82V4e5v//R9mrxiSF6mfv7n17m/v6nv0Z8
3yJ96PD9/+/Ahw7f/0c7mfv7H22uDXN//6PtteJzQ/Qy9/c/vcz9/U9/nfiJ
RfrQ4fv/34UPHb7/j3Yy9/c/2lwf5v7+R9vrxZeH6GXu7396mfv7nz4lfmmR
3vfyhL//J+BD+/e/49FO5v7+R5sbwtzf/2h7g/jo3fQy9/c/vcz9/U//UfFN
z9OH9u9/R30PPrR//zse7WTu73+0uTHM/f2PtjeKT9xNL3N//9PL3N//9DeJ
73uePrR//zvq+/Ch/fvf8Wgnc3//o83NYe7vf7S9WXzubnqZ+/ufXub+/qe/
RfzE8/Sh/fvfUT+AD+3f/45HO5n7+x9tbg1zf/+j7a3iy3fTy9zf//Qy9/c/
fZ/4pefpfdf4/R/9GHxov/8T0E7m/v5Hm9vC3N//aHub+Og99DL39z+9zP39
T/8x8U0v0If2+z/6h/Ch/f5PQDuZ+/sfbW4Pc3//o+3t4hP30Mvc3//0Mvf3
P/0d4vteoA/t93/04/Ch/f5PQDuZ+/sfbe4Mc3//o+2d4nP30Mvc3//0Mvf3
P/1d4ideoA/t93/0j+BD+/2fgHYy9/c/2nw8zP39j/7/NN17fJ1Vne/x9Ty7
hfQGcUQNCrpDW0hvEBV1o4Ar0EIKLcQRNSrqDrSQQgvxOtsbJr1A2lII3ije
2IEWUmghjDqEUQ8r0EIKLQRvDd7YoS2kNwgjDhsvw/l+1/P7nte8XvqeZ31e
OXO+85zN+uN56b8V+8p69fE5fv/Vx+f4/VffGfvqIfV0Jw9aT/P7f3OIz5Na
b3ZdfJ7UFc2+K/b5TvXxuWsoq4/Pk8agfmXsCxX1NL//H7Se5vf/5hCfJy3e
7FbxedJaNPtVsS92qo/PXXtZfXyedAT1q2Nfqqin+f3/I9bT/P7fHOLzpMeb
3Ro+TzYWzX5N7Mud6uNz11dWH58n/UH99bEfqKin+f3/o9bT/P7fHOLzZNib
3Q18nowUzf6G2Fc61cfnbqysPj5PxoP67thXK+q7s/2T7dbDE/n9vznQ2L/J
7NbyeVLXZvY0v/9XH5+7hl718XnSOKh+XewLo+rXZfsnO6znc37/bw409m8y
u/V8nrS2mT3N7//Vx+euvVd9fJ50DKq/MfalUfU0v/9/zHqa3/+bQ3ye9DSZ
3QY+Tza2mf2G2Je71Mfnrq9XfXye9A+qvyn2A6PqaX7//7j1NL//N4f4PBlu
Mrub+TwZaTP7m2Nf6VIfn7uxXvXxeTI+qL4n9tVR9fCEsnPpkPX0JldzkjnE
50ntOWZ3C58ndZeZ/S2xz69UH5+7hjvUx+dJ4yPqvx37wvPq6T7n053W01td
80nmEJ8nLeeY3Xf4PGm9zOy/E/viSvXxuWu/Q318nnQ8ov67sS89r57ud53p
E9bTP3PdJ5lDfJ70nGN23+PzZONlZv+92JdXqo/PXd8d6uPzpP8R9d+P/cDz
6ukBF9Inrad/6YZOMof4PBk+x+xu5fNk5DKzvzX2lZXq43M3dof6+DwZf0T9
xthXn1cPT8T+uV3W09h/ujnE50ntuWZ3G58ndZeb/W2xz69SH5+7hjvVx+dJ
46PqfxD7wl71NPbP7baexv7TzSE+T1rONbsf8nnSernZ/zD2xVXq43PXfqf6
+DzpeFT9j2Jf2quexv65p6ynsf90c4jPk55zze7HfJ5svNzsfxz78ir18bnr
u1N9fJ70P6r+J7Ef2Kuexv65p62nsf90c4jPk+Fzze52Pk9GLjf722NfWaU+
Pndjd6qPz5PxR9WXY1/dq54O+DfD1tP8/t8c4nP8/ptdL5/j99/se2Of71Qf
n+P3X318jt9/9XfEvlBRT/P7/2esp/n9vznE5/j9N7s7+Ry//2Z/Z+yLnerj
c/z+q4/P8fuvflPsSxX1NL///7X1NL//N4f4HL//ZreZz/H7b/abY1/uVB+f
4/dffXyO33/1d8V+oKKe5vf/v7Ge5vf/5hCf4/ff7O7mc/z+m/3dsa90qo/P
8fuvPj7H77/6vthXK+rhowL/Y52sp/n9vznE5/j9N7stfI7ff7PfEvt8l/r4
HL//6uNz/P6rvyf2hVH1NL///531NL//N4f4HL//Zncvn+P33+zvjX2xS318
jt9/9fE5fv/Vb419aVQ9ze//f289ze//zSE+x++/2W3jc/z+m/222Je71Mfn
+P1XH5/j91/9fbEfGFVP8/v/PdbT/P7fHOJz/P6b3f18jt9/s78/9pUu9fE5
fv/Vx+f4/VffH/vqqHp4YgW//yPW0/vw+28O8Tl+/83uAT7H77/ZPxD7/Er1
8Tl+/9XH5/j9V/+fsS88r54ew+//s9bTh/H7bw7xOX7/ze6nfI7ff7P/aeyL
K9XH5/j9Vx+f4/df/c9iX3pePT2O3/8/WE+/it9/c4jP8ftvdj/nc/z+m/3P
Y19eqT4+x++/+vgcv//q/yv2A8+rp6v4/f+j9fQ/8ftvDvE5fv/N7kE+x++/
2T8Y+8pK9fE5fv/Vx+f4/Vc/EPvq8+rho7B/7k/W09h/ujnE5/j9N7uH+By/
/2b/UOzzq9TH5/j9Vx+f4/df/X/HvrBXPY39c3+2nsb+080hPsfvv9n9gs/x
+2/2v4h9cZX6+By//+rjc/z+q/9l7Et71dPYP/cX62nsP90c4nP8/pvdr/gc
v/9m/6vYl1epj8/x+68+Psfvv/r/F/uBvepp7J97znoa+083h/gcv/9m9zCf
4/ff7B+OfWWV+vgcv//q43P8/qsPsa/uVU93OldTsZ7m9//mEJ8ntc1mN8jn
SV272Q/GPt+tPj53DX3q4/OkcUj9I7EvjKmn+f3/qPU0v/83h/g8aWk2u0f5
PGltN/tHY1/sVh+fu/Y+9fF50jGkfnvsS2PqaX7//7z1NL//N4f4POlpNrsd
fJ5sbDf7HbEvd6uPz11fn/r4POkfUv9Y7AfG1NP8/n+v9TS//zeH+DwZbja7
x/k8GWk3+8djX+lWH5+7sT718XkyPqR+KPbVMfXw0dh/0j7raX7/bw7xeVK7
0Ox28nlSt8zsd8Y+v1Z9fO4atqiPz5PGneqfiH3hgHqa3//vt57m9//mEJ8n
LQvN7kk+T1qXmf2TsS+uVR+fu/Yt6uPzpGOn+l2xLx1QT/P7/xesp/n9vznE
50nPQrPbzefJxmVmvzv25bXq43PXt0V9fJ7071T/VOwHDqin+f3/i9bT/P7f
HOLzZHih2T3N58nIMrN/OvaVterjcze2RX18nozvVD8c++oB9fBRZecmj1lP
4/432xzi86T2ArN7hs+TuqvM/pnY59epj89dwz3q4/Ok8Qn1v4594aB6Gve/
yQesp3H/m20O8XnScoHZ/YbPk9arzP43sS+uUx+fu/Z71MfnSccT6n8b+9JB
9TTuf5MPWk/j/jfbHOLzpOcCs/sdnycbrzL738W+vE59fO767lEfnyf9T6j/
fewHDqqncf+bfMh6Gve/2eYQnyfDF5jdHj5PRq4y+z2xr6xTH5+7sXvUx+fJ
+BPqR2JfPagePhr7TzlsPY3955hDfJ7UXmh2z/J5Une12T8b+/x69fG5a7hX
fXyeND6p/g+xLxxST2P/KUesp7H/HHOIz5OWC83uj3yetF5t9n+MfXG9+vjc
td+rPj5POp5U/6fYlw6pp7H/lJesp7H/HHOIz5OeC83uz3yebLza7P8c+/J6
9fG567tXfXye9D+p/i+xHziknsb+U162nsb+c8whPk+GLzS75/g8Gbna7J+L
fWW9+vjcjd2rPj5Pxp9UX4l99ZB6OuD3f9x6mt//m0N8jt9/sxvlc/z+m/1o
7PPd6uNz/P6rj8/x+6/++dgXxtTT/P7/Fetpfv9vDvE5fv/Nbi+f4/ff7PfG
vtitPj7H77/6+By//+r3xb40pp7m9///Yz3N7//NIT7H77/Z7edz/P6b/f7Y
l7vVx+f4/Vcfn+P3X/0LsR8YU0/z+/+/Wk/z+39ziM/x+292L/I5fv/N/sXY
V7rVx+f4/Vcfn+P3X/1Y7Ktj6uEa7D/pVetpfv9vDvE5fv/N7gCf4/ff7A/E
Pr9WfXyO33/18Tl+/9UfjH3hgHqa3///zXqa3/+bQ3yO33+zO8Tn+P03+0Ox
L65VH5/j9199fI7ff/WHY186oJ7m9///az3N7//NIT7H77/ZHeFz/P6b/ZHY
l9eqj8/x+68+Psfvv/qXYj9wQD3N7/9fs57m9//mEJ/j99/sXuZz/P6b/cux
r6xVH5/j9199fI7ff/Xjsa8eUA8fXcHvf9V6Gve/2eYQn+P33+xe4XP8/pv9
K7HPr1Mfn+P3X318jt9/9f8T+8JB9TTuf5Nft57G/W+2OcTn+P03u7/yOX7/
zf6vsS+uUx+f4/dffXyO33/1r8a+dFA9jfvf5L9bT+P+N9sc4nP8/pvd3/gc
v/9m/7fYl9epj8/x+68+Psfvv/r/jf3AQfU07n+T/2E9jfvfbHOIz/H7b3av
8Tl+/83+tdhX1qmPz/H7rz4+x++/+mrsqwfVwzXYf8o/raex/xxziM/x+292
r/M5fv/N/vXY59erj8/x+68+Psfvv/q/x75wSD2N/af8y3oa+88xh/gcv/9m
9w8+x++/2f8j9sX16uNz/P6rj8/x+6/+n7EvHVJPY/8p/2c9jf3nmEN8jt9/
s/sXn+P33+z/FfvyevXxOX7/1cfn+P1X/3+xHziknsb+U96wnsb+c8whPsfv
v9m9wef4/Tf7N2JfWa8+Psfvv/r4HL//6t3v2VcPqYez//4Ps57m9//mwPPO
1XqzS+AJrq5o9gn7NN+pnp6QNpTV87xLG4P6lH1aqKiHa/n9f2I9ze//zQGu
q3Et3uxy8FTXWjT7HPu02Kmenpq2l9XzfE3aEdRPYJ+WKurh+P1/aj3N7//N
Aa6pdT3e7CbCx7mNRbOfyD4td6qnj0v7yup5vjbtD+qPYp8OVNTDtfz+P2c9
ze//zQGuq3PD3uyOhk9wI0WzP5p9WulUT5+QjpXV83xdOh7U17BPqxX1cJ6z
TrCe5vf/5gA3YP8ms5sEY/82s5/EPs13qaexf696nsf+g+ons08Lo+rhRn7/
P9F6mt//mwNcwP5NZjcFxv5tZj+FfVrsUk9j/171PI/9B9VPZZ+WRtXDeX7/
f5T1NL//Nwe4Afs3md00GPu3mf009mm5Sz2N/XvV8zz2H1R/DPt0YFQ93Mjv
/4+2nub3/+YAF7B/k9kdC2P/NrM/ln1a6VJPY/9e9TyP/QfV17JPq6Pq4fi/
ADXW0zPw/psD3JzH+292b4Jn4P03+zexx/uvnp6B9189z+fx/qv/N/Z4/9XD
LQ14/ydZT8/F+28OcGsD3n+zezM8F++/2b+ZPd5/9fRcvP/qeb4B77/649jj
/VcP+0a8/5Otp0/H+28OcHMj3n+zewt8Ot5/s38Le7z/6unT8f6r5/lGvP/q
38oe7796uKWA93+K9fSZeP/NAW4t4P03u7fBZ+L9N/u3scf7r54+E++/ep4v
4P1XX8ce7796uIj9k6nW09i/3hzgduzfZHbHw9i/zeyPZ4/3Xz2N/XvV8zz2
H1T/dvZ4/9XDHdg/mWY9jf3rzQEuYf8ms3sHjP3bzP4d7PH+q6exf696nsf+
g+pPYI/3Xz1cxP7JMdbT2L/eHOB27N9kdifC2L/N7E9kj/dfPY39e9XzPPYf
VP9O9nj/1cMd2D851noa+9ebA1zC/k1m9y4Y+7eZ/bvY4/1XT2P/XvU8j/0H
1efZ4/1XD/M//21CrfX0fFczwxzgGvzCzTe7eni+q1ti9vXs0/xq9fT8tGGT
ep73aeN29SexTwv71MO1zfgZfpP19CLXPMMc4Lpm1zLf7KbDi1zrErOfzj4t
rlZPL0rbN6nn+ea0Y7v6GezT0j71MP/z3yb8m/X0Ja57hjnANS2uZ77ZzYQv
cRuXmP1M9ml5tXr6krRvk3qeb0n7t6s/mX06sE89XNuKf8x4s/X0pW5ohjnA
da1ueL7ZnQJf6kaWmP0p7NPKavX0penYJvU835qOb1ffwD6t7lMP57H/xOOs
p7H/THOAG7D/ArObBWP/pWY/i32aX6Oexv6b1fM89t+hfjb7tLBfPdyI/Se+
xXoa+880B7iA/ReY3RwY+y81+zns0+Ia9TT236ye57H/DvVz2ael/erhPPaf
+Fbraew/0xzgBuy/wOzmwdh/qdnPY5+W16insf9m9TyP/XeoP5V9OrBfPdyI
/Se+zXoa+880B7iA/ReY3Wkw9l9q9qexTytr1NPYf7N6nsf+O9Q3sk+r+9XD
voj3v856egnef3OAm4t4/83u3fASvP9m/272eP/V00vw/qvn+SLef/XvYY/3
Xz3c0o73/3jr6eV4/80Bbm3H+29274WX4/03+/eyx/uvnl6O9189z7fj/Vd/
Onu8/+ph34H3/+3W01/C+28OcHMH3n+zex/8Jbz/Zv8+9nj/1dNfwvuvnuc7
8P6rfz97vP/q4ZYS3v93WE9/A++/OcCtJbz/ZvcB+Bt4/83+A+zx/qunv4H3
Xz3Pl/D+qy+wx/uvHi5i/4knWE9j/5nmALdj/wVmdwaM/Zea/Rns8f6rp7H/
ZvU8j/13qP8ge7z/6uEO7D/xROtp7D/THOAS9l9gdh+Csf9Ss/8Qe7z/6mns
v1k9z2P/HerPZI/3Xz1cxP4T32k9jf1nmgPcjv0XmN1ZMPZfavZnscf7r57G
/pvV8zz236H+bPZ4/9XDHdh/4rusp7H/THOAS9h/gdl9GMb+S83+w+zx/qun
sf9m9TyP/Xeo9+zx/quHO/GvNXnraX7/bw5wN24NzWbXBOP+1272TezTfLd6
Gve/PvU8j/vfkPpz2KeFMfVwD7//r7ee5vf/5gBvxP2v2ezOhXH/azf7c9mn
xW71NO5/fep5Hve/IfXz2aelMfVwJ7//P8l6mt//mwPcjftfs9ktgHH/azf7
BezTcrd6Gve/PvU8j/vfkPrz2KcDY+rhHn7/P916mt//mwO8Efe/ZrM7H8b9
r93sz2efVrrV07j/9annedz/htQ3s0+rY+rhMv510gzraX7/bw5wH/ZfaHYL
Yey/zOwXsk/za9XT2H+Lep7H/jvVX8A+LRxQD/fz+/+Z1tP8/t8c4AHsv9Ds
LoSx/zKzv5B9Wlyrnsb+W9TzPPbfqX4R+7R0QD1c5vf/J1tP8/t/c4D7sP9C
s1sMY/9lZr+YfVpeq57G/lvU8zz236n+IvbpwAH1cD+//z/Feprf/5sDPID9
F5rdxTD2X2b2F7NPK2vV09h/i3qex/471bewT6sH1MMhj/e/wXoa978Gc4CH
cP9rNruPwLj/tZv9R9jj/VdP4/7Xp57ncf8bUv/v7PH+q4eHcf+rmWU9jftf
gznAI7j/NZvdR2Hc/9rN/qPs8f6rp3H/61PP87j/Dam/hD3ef/VwwP2vZrb1
NO5/DeYAD+H+12x2H4Nx/2s3+4+xx/uvnsb9r089z+P+N6T+4+zx/quHh3H/
q5ljPY37X4M5wCO4/zWb3Sdg3P/azf4T7PH+q6dx/+tTz/O4/w2pb2WP9189
XMH+k+ZaT2P/WeYAj2H/hWb3SRj7LzP7T7LH+6+exv5b1PM89t+p/lPs8f6r
h8ex/6R51tPYf5Y5wFXsv9DsPg1j/2Vm/2n2eP/V09h/i3qex/471V/KHu+/
eriC/Sedaj2N/WeZAzyG/Rea3Wdg7L/M7D/DHu+/ehr7b1HP89h/p/rPssf7
rx4ex/6TTrOexv6zzAGuYv+FZvc5GPsvM/vPscf7r57G/lvU8zz236m+yB7v
v3q40zs3tdF6Gve/ueYAd+P+t8js2mDc/5abfRv7NH+jehr3v63qeR73v13q
L2OfFg6rh3tw/5v6butp3P/mmgO8Efe/RWZ3OYz733Kzv5x9WrxRPY3731b1
PI/73y71S9inpcPq4U7c/6a+x3oa97+55gB34/63yOyWwrj/LTf7pezT8o3q
adz/tqrnedz/dqm/gn06cFg93IP739T3Wk/j/jfXHOCNuP8tMrsrYdz/lpv9
lezTyo3qadz/tqrnedz/dqlvZ59WD6uHy9h/2unW09h/njnAfdh/sdktg7H/
CrNfxj7Nb1BPY/9t6nke++9WfxX7tHBEPdyP/ae9z3oa+88zB3gA+y82u6th
7L/C7K9mnxY3qKex/zb1PI/9d6tfzj4tHVEPl7H/tPdbT2P/eeYA92H/xWa3
Asb+K8x+Bfu0vEE9jf23qed57L9b/TXs04Ej6uF+7D/tA9bT2H+eOcAD2H+x
2V0LY/8VZn8t+7SyQT2N/bep53nsv1t9B/u0ekQ9HIp4/wvW07j/zTUHeAj3
v0Vm93kY97/lZv959nj/1dO4/21Vz/O4/+1S/wX2eP/Vw8O4/009w3oa97+5
5gCP4P63yOy+COP+t9zsv8ge7796Gve/rep5Hve/Xeq/xB7vv3o44P439YPW
07j/zTUHeAj3v0Vm92UY97/lZv9l9nj/1dO4/21Vz/O4/+1S/xX2eP/Vw8O4
/039kPU07n9zzQEewf1vkdn9B4z733Kz/w/2eP/V07j/bVXP87j/7VJfYo/3
Xz1cwf7TzrSexv7zzAEew/6Lze6rMPZfYfZfZY/3Xz2N/bep53nsv1v919jj
/VcPj2P/aWdZT2P/eeYAV7H/YrP7Ooz9V5j919nj/VdPY/9t6nke++9W/w32
eP/VwxXsP+1s62nsP88c4DHsv9jsvglj/xVm/032eP/V09h/m3qex/671V/H
Hu+/engc+0/7sPU09p9nDnAV+y82u2/B2H+F2X+LPd5/9TT236ae57H/bvWd
7PH+q4ddF/+N9fQaV5M3B7imy9V6s+uC17i6otl3sU/znerpNWlDWT3Pd6WN
Qf1K9mmhoh6uXeu8a7Ke3uCa8+YA1611Ld7sVsEbXGvR7FexT4ud6ukNaXtZ
Pc+vTTuC+tXs01JFPexucZ3uHOvp77nuvDnANbe4Hm92a+DvuY1Fs1/DPi13
qqe/l/aV1fP8LWl/UH89+3Sgoh6uvc0Fd6719I/dUN4c4Lrb3LA3uxvgH7uR
otnfwD6tdKqnf5yOldXz/G3peFDfzT6tVtTDeeyfzLeexv715gA3YP8ms1sL
Y/82s1/LPs13qaexf696nsf+g+rXsU8Lo+rhRuyfLLCexv715gAXsH+T2a2H
sX+b2a9nnxa71NPYv1c9z2P/QfU3sk9Lo+rhPPZPzrOexv715gA3YP8ms9sA
Y/82s9/APi13qaexf696nsf+g+pvYp8OjKqHG7F/cr71NPavNwe4gP2bzO5m
GPu3mf3N7NNKl3oa+/eq53nsP6i+h31aHVUP+178m2br6c14/80Bbu7F+292
t8Cb8f6b/S3s8f6rpzfj/VfP8714/9V/mz3ef/Vwyxa8/wutp7fh/TcHuHUL
3n+z+w68De+/2X+HPd5/9fQ2vP/qeX4L3n/132WP91897B/A+3+B9fTP8f6b
A9z8AN5/s/se/HO8/2b/PfZ4/9XTP8f7r57nH8D7r/777PH+q4dbHsL7f6H1
9K/w/psD3PoQ3n+zuxX+Fd5/s7+VPd5/9fSv8P6r5/mH8P6r38ge7796uIj9
k0XW09i/3hzgduzfZHa3wdi/zexvY4/3Xz2N/XvV8zz2H1T/A/Z4/9XDHdg/
WWw9jf3rzQEuYf8ms/shjP3bzP6H7PH+q6exf696nsf+g+p/xB7vv3q4iP2T
i6ynsX+9OcDt2L/J7H4MY/82s/8xe7z/6mns36ue57H/oPqfsMf7rx7uwP7J
xdbT2L/eHOAS9m8yu9th7N9m9rezx/uvnsb+vep5HvsPqi+zx/uvHnaDzk1o
sZ7e4WpmmANcM+hq55tdL7zD1S0x+172aX61enpH2rBJPc8Ppo3b1d/BPi3s
Uw/X7nR+wkesp3e75hnmANftdC3zze5OeLdrXWL2d7JPi6vV07vT9k3qeX5n
2rFd/Sb2aWmfetg94zon/Lv19O9c9wxzgGuecT3zzW4z/Du3cYnZb2afller
p3+X9m1Sz/PPpP3b1d/FPh3Ypx6ufdaFCR+1nv6zG5phDnDds254vtndDf/Z
jSwx+7vZp5XV6uk/p2Ob1PP8s+n4dvV97NPqPvVwHvtPvMR6GvvPNAe4Afsv
MLstMPZfavZb2Kf5Nepp7L9ZPc9j/x3q72GfFvarhxux/8SPWU9j/5nmABew
/wKzuxfG/kvN/l72aXGNehr7b1bP89h/h/qt7NPSfvVwHvtP/Lj1NPafaQ5w
A/ZfYHbbYOy/1Oy3sU/La9TT2H+zep7H/jvU38c+HdivHm7E/hM/YT2N/Wea
A1zA/gvM7n4Y+y81+/vZp5U16mnsv1k9z2P/Her72afV/ephP4r3v9V6ej/e
f3OAm0fx/pvdA/B+vP9m/wB7vP/q6f14/9Xz/Cjef/X/yR7vv3q45QDe/09a
Tx/B+28OcOsBvP9m91P4CN5/s/8pe7z/6ukjeP/V8/wBvP/qf8Ye77962L+C
9/9T1tN/w/tvDnDzK3j/ze7n8N/w/pv9z9nj/VdP/w3vv3qefwXvv/r/Yo/3
Xz3c8jre/09bT/8L7785wK2v4/03uwfhf+H9N/sH2eP9V0//C++/ep5/He+/
+gH2eP/Vw0XsP/FS62nsP9Mc4Hbsv8DsHoKx/1Kzf4g93n/1NPbfrJ7nsf8O
9f/NHu+/ergD+0/8jPU09p9pDnAJ+y8wu1/A2H+p2f+CPd5/9TT236ye57H/
DvW/ZI/3Xz1cxP4TP2s9jf1nmgPcjv0XmN2vYOy/1Ox/xR7vv3oa+29Wz/PY
f4f6/8ce7796uAP7T/yc9TT2n2kOcAn7LzC7h2Hsv9TsH2aP9189jf03q+d5
7L9DfWCP91893In7X03Rehr3vwZzgLtx/2s2u0EY9792sx9kn+a71dO4//Wp
53nc/4bUP8I+LYyph3tw/6tps57G/a/BHOCNuP81m92jMO5/7Wb/KPu02K2e
xv2vTz3P4/43pH47+7Q0ph7uxP2v5jLradz/GswB7sb9r9nsdsC4/7Wb/Q72
ablbPY37X596nsf9b0j9Y+zTgTH1cA/ufzWXW0/j/tdgDvBG3P+aze5xGPe/
drN/nH1a6VZP4/7Xp57ncf8bUj/EPq2OqYfL2H/SEutp7D/LHOA+7L/Q7HbC
2H+Z2e9kn+bXqqex/xb1PI/9d6p/gn1aOKAe7sf+k5ZaT2P/WeYAD2D/hWb3
JIz9l5n9k+zT4lr1NPbfop7nsf9O9bvYp6UD6uEy9p90hfU09p9lDnAf9l9o
drth7L/M7HezT8tr1dPYf4t6nsf+O9U/xT4dOKAe7sf+k660nsb+s8wBHsD+
C83uaRj7LzP7p9mnlbXqaey/RT3PY/+d6ofZp9UD6uGA+19Nu/U07n8N5gAP
4f7XbHbPwLj/tZv9M+zx/quncf/rU8/zuP8Nqf81e7z/6uFh3P9qlllP4/7X
YA7wCO5/zWb3Gxj3v3az/w17vP/qadz/+tTzPO5/Q+p/yx7vv3o44P5Xc5X1
NO5/DeYAD+H+12x2v4Nx/2s3+9+xx/uvnsb9r089z+P+N6T+9+zx/quHh3H/
q7naehr3vwZzgEdw/2s2uz0w7n/tZr+HPd5/9TTuf33qeR73vyH1I+zx/quH
K9h/0nLraew/yxzgMey/0OyehbH/MrN/lj3ef/U09t+inuex/071f2CP9189
PI79J62wnsb+s8wBrmL/hWb3Rxj7LzP7P7LH+6+exv5b1PM89t+p/k/s8f6r
hyvYf9I11tPYf5Y5wGPYf6HZ/RnG/svM/s/s8f6rp7H/FvU8j/13qv8Le7z/
6uFx7D/pWutp7D/LHOAq9l9ods/B2H+Z2T/HHu+/ehr7b1HP89h/p/oKe7z/
6uFO3P+mdlhP4/431xzgbtz/FpndKIz733KzH2Wf5m9UT+P+t1U9z+P+t0v9
8+zTwmH1cA/uf1M/bz2N+99cc4A34v63yOz2wrj/LTf7vezT4o3qadz/tqrn
edz/dqnfxz4tHVYPd+L+N/UL1tO4/801B7gb979FZrcfxv1vudnvZ5+Wb1RP
4/63VT3P4/63S/0L7NOBw+rhHtz/pn7Rehr3v7nmAG/E/W+R2b0I4/633Oxf
ZJ9WblRP4/63VT3P4/63S/0Y+7R6WD1cxv7TvmQ9jf3nmQPch/0Xm90BGPuv
MPsD7NP8BvU09t+mnuex/271B9mnhSPq4X7sP+3L1tPYf545wAPYf7HZHYKx
/wqzP8Q+LW5QT2P/bep5HvvvVn+YfVo6oh4uY/9pX7Gexv7zzAHuw/6Lze4I
jP1XmP0R9ml5g3oa+29Tz/PYf7f6l9inA0fUw/3Yf9p/WE9j/3nmAA9g/8Vm
9zKM/VeY/cvs08oG9TT236ae57H/bvXj7NPqEfVwwP1vasl6Gve/ueYAD+H+
t8jsXoFx/1tu9q+wx/uvnsb9b6t6nsf9b5f6/2GP9189PIz739SvWk/j/jfX
HOAR3P8Wmd1fYdz/lpv9X9nj/VdP4/63VT3P4/63S/2r7PH+q4cD7n9Tv2Y9
jfvfXHOAh3D/W2R2f4Nx/1tu9n9jj/dfPY3731b1PI/73y71/8se7796eBj3
v6lft57G/W+uOcAjuP8tMrvXYNz/lpv9a+zx/quncf/bqp7ncf/bpb7KHu+/
eriC/ad9w3oa+88zB3gM+y82u9dh7L/C7F9nj/dfPY39t6nneey/W/3f2eP9
Vw+PY/9p37Sexv7zzAGuYv/FZvcPGPuvMPt/sMf7r57G/tvU8zz2363+n+zx
/quHK9h/2nXW09h/njnAY9h/sdn9C8b+K8z+X+zx/qunsf829TyP/Xer/z/2
eP/Vw+PYf9q3rKex/zxzgKvYf7HZvQFj/xVm/wZ7vP/qaey/TT3PY//d6t0e
9Hj/1cPxv91pPX2Uq8mbA1zjklpvdgl8VFJXNPuEfZrvVE8flTaU1fO8yzUG
9Sn7XKGiHo7f/3dZTx/jmvPmANfVJC3e7HLwMUlr0exze7Lv/9XTx6TtZfU8
X5PrCOonsM+VKurh+P3/Suvpt7ruvDnANbVJjze7ifBbk41Fs5+4J/v+Xz39
1rSvrJ7na3P9Qf1R7HMDFfVw/P5/lfX0O91Q3hzgurpk2Jvd0fA7k5Gi2R+9
J/v+Xz39znSsrJ7n63LjQX0N+1y1oh7Oc9bV1sP12L/eHOAG7N9kdpP2+FnY
v83s4Xp+/6+exv696nke+w+qn8w+VxhVD8fv/9dYD78b+9ebA3wG9m8yuykw
9m8ze/jd/P5fPY39e9XzPPYfVD+Vfa40qh6u5/f/11tPY/96c4BnYf8ms5sG
Y/82s5/GPi13qaexf696nsf+g+qPYZ8bGFUPv5vf/99gPY39680BPgP7N5nd
sTD2bzP7Y9mnlS71NPbvVc/z2H9QfS37XHVUPcz/BUi7radPdjUnmQPcnE9q
zzG7N8EnJ3WXmf2b9sTv/1eqp09OG+5Qz/P5XOMj6v+Nfa7wvHqY3/+na62n
T3XNJ5kD3NqQtJxjdm+GT01aLzP7N++J3/+vVE+fmrbfoZ7nG3Idj6g/jn2u
9Lx6mN//p+usp9/vuk8yB7i5Mek5x+zeAr8/2XiZ2b9lT/z+f6V6+v1p3x3q
eb4x1/+I+reyzw08rx7m9//peuvps93QSeYAtxaS4XPM7m3w2cnIZWb/tj3x
+/+V6umz07E71PN8ITf+iPo69rnq8+rhNuyfu9F6GvtPNwd4GfY/1+yOh7H/
5WZ/PPs0v0o9jf3vVM/z2P9R9W9nnyvsVQ9/HvvnNlhPY//p5gB/Ffufa3bv
gLH/5Wb/DvZpcZV6GvvfqZ7nsf+j6k9gnyvtVQ+3Yf/cTdbT2H+6OcDLsP+5
ZncijP0vN/sT2aflVepp7H+nep7H/o+qfyf73MBe9fDnsX/uZutp7D/dHOCv
Yv9zze5dMPa/3OzfxT6trFJPY/871fM89n9UfZ59rrpXPZx4/Cz2WE+f52pm
mAM8ySe1882uHj4vqVti9vXs0/xq9fR5acMm9Tzvc43b1Z/EPlfYpx5+E7//
v8V6+iLXPMMc4OObk5b5ZjcdvihpXWL209mnxdXq6YvS9k3qeb4517Fd/Qz2
udI+9XDC7/+/bT39cdc9wxzgSS1Jz3yzmwl/PNm4xOxnsk/Lq9XTH0/7Nqnn
+ZZc/3b1J7PPDexTD7+J3/9/x3r6s25ohjnAx7cmw/PN7hT4s8nIErM/hX1a
Wa2e/mw6tkk9z7fmxrerb2Cfq+5TD5+E/Sd+13oa+880B3g29l9gdrNg7L/U
7GexT/Nr1NPYf7N6nsf+O9TPZp8r7FcPv4ff/3/Pehr7zzQH+IPYf4HZzYGx
/1Kzn8M+La5RT2P/zep5HvvvUD+Xfa60Xz18Er///771NPafaQ7wbOy/wOzm
wdh/qdnPY5+W16insf9m9TyP/XeoP5V9bmC/evg9/P7/Vutp7D/THOAPYv8F
ZncajP2Xmv1p7NPKGvU09t+snuex/w71jexz1f3q4aYi/rF0o/X0Fa7mZHOA
FxaT2vPM7t3wFUndFWb/bvZp/nr19BVpw13qeb6Ya3xM/XvY5wovqIc/0o5/
DL7Nevoa13yyOcCfbE9azjO798LXJK1XmP172afF69XT16Ttd6nn+fZcx2Pq
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
p8Vu9TTuf33qeR73vyH129nnSmPq4ev5/f/z1tO4/zWYA3wT7n/NZrcDxv2v
3ex3sE/L3epp3P/61PM87n9D6h9jnxsYUw9/n9//77Wexv2vwRzgn+D+12x2
j8O4/7Wb/ePs00q3ehr3vz71PI/735D6Ifa56ph6+G5+/7/Pehr7zzIH+H7s
v9DsdsLYf5nZ72Sf5teqp7H/FvU8j/13qn+Cfa5wQD38IL//3289jf1nmQP8
MPZfaHZPwth/mdk/yT4trlVPY/8t6nke++9Uv4t9rnRAPXw3v/9/wXoa+88y
B/h+7L/Q7HbD2H+Z2e9mn5bXqqex/xb1PI/9d6p/in1u4IB6+EF+//+i9TT2
n2UO8MPYf6HZPQ1j/2Vm/zT7tLJWPY39t6jneey/U/0w+1z1gHr4Mdz/Jo9Z
T+P+N9sc4Kdw/7vA7J6Bcf+7yuyfYZ/m16mncf+7Rz3P4/73hPpfs88VDqqH
f4/73+QD1tO4/802B/gvuP9dYHa/gXH/u8rsf8M+La5TT+P+d496nsf97wn1
v2WfKx1UDz+G+9/kg9bTuP/NNgf4Kdz/LjC738G4/11l9r9jn5bXqadx/7tH
Pc/j/veE+t+zzw0cVA//Hve/yYesp3H/m20O8F9w/7vA7PbAuP9dZfZ72KeV
depp3P/uUc/zuP89oX6Efa56UD38Ivafcth6GvvPMQf4Zex/odk9C2P/q83+
WfZpfr16Gvvfq57nsf+T6v/APlc4pB5+DftPOWI9jf3nmAP8Bva/0Oz+CGP/
q83+j+zT4nr1NPa/Vz3PY/8n1f+Jfa50SD38Ivaf8pL1NPafYw7wy9j/QrP7
M4z9rzb7P7NPy+vV09j/XvU8j/2fVP8X9rmBQ+rh17D/lJetp7H/HHOA38D+
F5rdczD2v9rsn2OfVtarp7H/vep5Hvs/qb7CPlc9pB6+gd//j1tP4/431xzg
m3H/W2R2ozDuf8vNfpR9mr9RPY3731b1PI/73y71z7PPFQ6rh2/l9/+vWE/j
/jfXHODbcf9bZHZ7Ydz/lpv9XvZp8Ub1NO5/W9XzPO5/u9TvY58rHVYP38Dv
///Hehr3v7nmAN+M+98is9sP4/633Oz3s0/LN6qncf/bqp7ncf/bpf4F9rmB
w+rhW/n9/1+tp3H/m2sO8O24/y0yuxdh3P+Wm/2L7NPKjepp3P+2qud53P92
qR9jn6seVg/38fv/V62nsf88c4D7sf9iszsAY/8VZn+AfZrfoJ7G/tvU8zz2
363+IPtc4Yh6eIDf///Nehr7zzMHOGD/xWZ3CMb+K8z+EPu0uEE9jf23qed5
7L9b/WH2udIR9XAfv///X+tp7D/PHOB+7L/Y7I7A2H+F2R9hn5Y3qKex/zb1
PI/9d6t/iX1u4Ih6eIDf/79mPY3955kDHLD/YrN7Gcb+K8z+ZfZpZYN6Gvtv
U8/z2H+3+nH2ueoR9fDjuP8dU7Wexv3vVHOAn8b97yKzewXG/e8as3+FfZq/
ST2N+9996nke97+n1P8P+1zhJfXwHtz/jnndehr3v1PNAX4O97+LzO6vMO5/
15j9X9mnxZvU07j/3aee53H/e0r9q+xzpZfUw4/j/nfM362ncf871Rzgp3H/
u8js/gbj/neN2f+NfVq+ST2N+9996nke97+n1P8v+9zAS+rhPbj/HfMP62nc
/041B/g53P8uMrvXYNz/rjH719inlZvU07j/3aee53H/e0p9lX2u+pJ6eAz7
H/tP62nsf5o5wOPY/2Kzex3G/tea/evs0/zN6mnsf796nsf+T6v/O/tc4WX1
cBX7H/sv62nsf5o5wO5g0nKx2f0DHk9arzX7f7BPizerp7H//ep5/mCu42n1
/2SfK72sHh7D/sf+n/U09j/NHOBx7H+x2f0Lxv7Xmv2/2Kflm9XT2P9+9TyP
/Z9W/3/scwMvq4er2P/YN6ynsf9p5gC7vyfDF5vdG/F7+5Frzf4N9mnlZvU0
9r9fPc//PTf+tHo3gn5C9WX10fw/P8r67HlN3hyia2q92SX01Lqi2UfX5jvV
Rx/XUFYfXdcY1Kf0CYWK+mj8XyOxPnpCc94comtavNnl4t9vLZp9dG2xU330
ce1l9dF1HUH9hPj3SxX10fgfO7U+ekJ33hyia3q82U2Mf39j0eyja8ud6qOP
6yurj67rD+qPin9/oKI+Gv/PnLM+esJQ3hyia4a92R0d//5I0eyjayud6qOP
Gyurj64bD+pr4t+vVtTXZPsnE6yvyfavN4eabP8ms5uU7d9m9pOy/bvUT8r2
71U/Kdt/UP3kbP9R9ZOz/ZOJ1k/O9q83h8nZ/k1mNyXbv83sp2T7d6mfku3f
q35Ktv+g+qnZ/qPqp2b7J0dZPzXbv94cpmb7N5ndtGz/NrOflu3fpX5atn+v
+mnZ/oPqj8n2H1V/TLZ/crT1x2T715vDMdn+TWZ3bLZ/m9kfm+3fpf7YbP9e
9cdm+w+qr832H1UfncefsD56Rk3eHKIbar3ZvYmeW1c0++jGfKf66NMbyuqj
C41B/b/RZxYq6qPz3k2yPnpGc94cohtavNm9Of791qLZRzcWO9VHn95eVh9d
6Ajqj4t/v1RRH43/72uy9dEzuvPmEN3Q483uLfHvbyyafXRjuVN99Ol9ZfXR
hf6g/q3x7w9U1Efng5tiffSMobw5RDcMe7N7W/z7I0Wzj26sdKqPPn2srD66
MB7U18W/X62or8v2T6ZaX5ftX28Oddn+TWZ3fLZ/m9kfn+3fpf74bP9e9cdn
+w+qf3u2/6j6t2f7J9Osf3u2f705vD3bv8ns3pHt32b278j271L/jmz/XvXv
yPYfVH9Ctv+o+hOy/ZNjrD8h27/eHE7I9m8yuxOz/dvM/sRs/y71J2b796o/
Mdt/UP07s/1H1b8z2z851vp3ZvvXm8M7s/2bzO5d2f5tZv+ubP8u9e/K9u9V
/65s/0H1+Wz/UfXR+K9a66Pn1+TNIbq51ptdPb2ormj20S35TvXRlzSU1Ue3
Ngb1J9GXFirqo713b7I+en5z3hyim1u82U2Pf7+1aPbRLcVO9dGXtJfVR7d2
BPUz4t8vVdRH+073b9ZHz+/Om0N0c483u5nx728smn10S7lTffQlfWX10a39
Qf3J8e8PVNRH++DebH30/KG8OUQ3D3uzOyX+/ZGi2Ue3VDrVR18yVlYf3Toe
1DfEv1+tqG/I9k+Os74h27/eHBqy/ZvMbla2f5vZz8r271I/K9u/V/2sbP9B
9bOz/UfVz872T95i/exs/3pzmJ3t32R2c7L928x+TrZ/l/o52f696udk+w+q
n5vtP6p+brZ/8lbr52b715vD3Gz/JrObl+3fZvbzsv271M/L9u9VPy/bf1D9
qdn+o+pPzfZP3mb9qdn+9eZwarZ/k9mdlu3fZvanZft3qT8t279X/WnZ/oPq
G7P9R9VHF/G7YH30kpq8OUS313qzeze9vK5o9tEd+U710V9qKKuPLjUG9e+h
v1GoqI8uene89dFLmvPmEN3e4s3uvfHvtxbNPrqj2Kk++kvtZfXRpY6g/vT4
90sV9dHFTvd266OXdOfNIbq9x5vd++Lf31g0++iOcqf66C/1ldVHl/qD+vfH
vz9QUR9dDO4d1kcvGcqbQ3T7sDe7D8S/P1I0++iOSqf66C+NldVHl8aD+kL8
+9WK+kK2f3KC9YVs/3pzKGT7N5ndGdn+bWZ/RrZ/l/ozsv171Z+R7T+o/oPZ
/qPqP5jtn5xo/Qez/evN4YPZ/k1m96Fs/zaz/1C2f5f6D2X796r/ULb/oPoz
s/1H1Z+Z7Z+80/ozs/3rzeHMbP8mszsr27/N7M/K9u9Sf1a2f6/6s7L9B9Wf
ne0/qv7sbP/kXdafne1fbw5nZ/s3md2Hs/3bzP7D2f5d6j+c7d+r/sPZ/oPq
fbb/qProTvxzgfXRq2vy5hDdXevNrom+sa5o9tE9+U710d9tKKuP3tgY1J9D
/6hQUR/d6V299dGrm/PmEN3d4s3u3Pj3W4tmH91T7FQf/d32svrojR1B/fz4
90sV9dGdne4k66NXd+fNIbq7x5vdgvj3NxbNPrqn3Kk++rt9ZfXRG/uD+vPi
3x+oqI/uDG669dGrh/LmEN097M3u/Pj3R4pmH91T6VQf/d2xsvrojeNBfXP8
+9WK+uZs/2SG9c3Z/vXm0Jzt32R2C7P928x+YbZ/l/qF2f696hdm+w+qvyDb
f1T9Bdn+yUzrL8j2rzeHC7L9m8zuwmz/NrO/MNu/S/2F2f696i/M9h9Uvyjb
f1T9omz/5GTrF2X715vDomz/JrNbnO3fZvaLs/271C/O9u9Vvzjbf1D9Rdn+
o+ovyvZPTrH+omz/enO4KNu/yewuzvZvM/uLs/271F+c7d+r/uJs/0H1Ldn+
o+qjy/jnQuujN9XkzSG6r9ab3UforXVFs4/uz3eqj/5ZQ1l99EBjUP/v9C8L
FfXRZe9mWR+9qTlvDtF9Ld7sPhr/fmvR7KP7i53qo3/WXlYfPdAR1F8S/36p
oj663OlmWx+9qTtvDtF9Pd7sPhb//sai2Uf3lzvVR/+sr6w+eqA/qP94/PsD
FfXR5eDmWB+9aShvDtF9w97sPhH//kjR7KP7K53qo382VlYfPTAe1LfGv1+t
qG/N9k/mWt+a7V9vDq3Z/k1m98ls/zaz/2S2f5f6T2b796r/ZLb/oPpPZfuP
qv9Utn8yz/pPZfvXm8Onsv2bzO7T2f5tZv/pbP8u9Z/O9u9V/+ls/0H1l2b7
j6q/NNs/OdX6S7P9683h0mz/JrP7TLZ/m9l/Jtu/S/1nsv171X8m239Q/Wez
/UfVfzbbPznN+s9m+9ebw2ez/ZvM7nPZ/m1m/7ls/y71n8v271X/uWz/QfXF
bP9R9dEB9wLro7fX5M0heqjWm10bvauuaPbRw/lO9dG/bSirjx5pDOovo/9U
qKiPDt692/ro7c15c4geavFmd3n8+61Fs48eLnaqj/5te1l99EhHUL8k/v1S
RX106HTvsT56e3feHKKHerzZLY1/f2PR7KOHy53qo3/bV1YfPdIf1F8R//5A
RX10CO691kdvH8qbQ/TQsDe7K+PfHymaffRwpVN99G/HyuqjR8aD+vb496sV
9e3Z/snp1rdn+9ebQ3u2f5PZLcv2bzP7Zdn+XeqXZfv3ql+W7T+o/qps/1H1
V2X7J++z/qps/3pzuCrbv8nsrs72bzP7q7P9u9Rfne3fq/7qbP9B9cuz/UfV
L8/2T95v/fJs/3pzWJ7t32R2K7L928x+RbZ/l/oV2f696ldk+w+qvybbf1T9
Ndn+yQesvybbv94crsn2bzK7a7P928z+2mz/LvXXZvv3qr82239QfUe2/6j6
6AruhdZH76vJm0P0WK03u8/Th+uKZh89nu9UH/1qQ1l9dLUxqP8C/c9CRX10
xbszrI/e15w3h+ixFm92X4x/v7Vo9tHjxU710a+2l9VHVzuC+i/Fv1+qqI+u
dLoPWh+9rztvDtFjPd7svhz//sai2UePlzvVR7/aV1YfXe0P6r8S//5ARX10
JbgPWR+9byhvDtFjw97s/iP+/ZGi2UePVzrVR786VlYfXR0P6kvx71cr6kvZ
/smZ1pey/evNoZTt32R2X832bzP7r2b7d6n/arZ/r/qvZvsPqv9atv+o+q9l
+ydnWf+1bP96c/hatn+T2X0927/N7L+e7d+l/uvZ/r3qv57tP6j+G9n+o+q/
ke2fnG39N7L9683hG9n+TWb3zWz/NrP/ZrZ/l/pvZvv3qv9mtv+g+uuy/UfV
X5ftn3zY+uuy/evN4bps/yaz+1a2f5vZfyvbv0v9t7L9e9V/K9t/UH1ntv+o
+mjnar310RNqGs0huqa2xey66Kl1HWYfXZvvUR99XEO/+ui6xmH1K+kTCuPq
o52vbbI+ekJzozlE17S0mN2q+PdbO8w+urbYoz76uPZ+9dF1HcPqV8e/XxpX
H+06a8+xPnpCd6M5RNf0tJjdmvj3N3aYfXRtuUd99HF9/eqj6/qH1V8f//7A
uPpoF2rPtT56wlCjOUTXDLeY3Q3x7490mH10baVHffRxY/3qo+vGh9V3x79f
HVffne3/pvnWd2f7v9scurP9P2J2/59m+w+L8yrzP34gpB13qw4t0fFr1ElC
2lGjDi3RUaMeEtKSNepMSxTWqENCWuJ23ZmWuuB2dyeEKGLUgVBFjDohRBGj
DpS6iFEPhGiSRp0h1CU/VCBEk7TqDKEuSat+n/N5PvefL3ve193bm+t69I/5
rHv/OK0/696/Q/rPuvcflP6z7v2z0re7989L3+7ev3gz+3b3/mW0aXfvH6HV
59z7x2n9Off+HdJ/zr3/oPSfc++flX6/e/+89Pvd+xffy36/e/8y2ux37x+h
1efd+8dp/Xn3/h3Sf969/6D0n3fvn5X+C+7989J/wb1/8X3sv+Dev4w2X3Dv
H6HVF937x2n9Rff+HdJ/0b3/oPRfdO+flT7p3j8vPexX3ir2cKknSBs44A3T
qsN6nS9GazjoT0oPlwfS0sOhYEb6TusNoZz0sF97t7CHS6uCtIED4TCtDmB+
TYzWcDCalB4ub0hLD4diGem7ML8pJz3sT3j/iT1c2hakDRxIhmn1BOZ3x2gN
B1NJ6eHy/rT0cCidkf5LmD+Skx72G+972cOlJ4O0gQOZMK2+jPnTMVrDwZmk
9HD5lbT0cCiXkb4b85dy0ne79y/eyr7bvX8Zbbrd+0do9RX3/nFaf8W9f4f0
X3HvPyj9V9z7Z6Xvce+fl77HvX/x+9j3uPcvo02Pe/8Irb7q3j9O66+69++Q
/qvu/Qel/6p7/6z0B93756U/6N6/+P3sD7r3L6PNQff+EVp9zb1/nNZfc+/f
If3X3PsPSv819/5Z6b/u3j8v/dfd+xd/gP3X3fuX0ebr7v0jtPqGe/84rb/h
3r9D+m+49x+U/hvu/bPSp9z756WHtfKG2cOVniBt4CpvmFaHrLf6YrSGw/6k
9HB1IC09XBPMSN9rvT2Ukx7W2hthD1dWBWkDV4XDtDqM+TUxWsPhaFJ6uLoh
LT1cE8tI34f5TTnpYZ3w3s8ermwL0gauSoZpdQTzu2O0hsOppPRwdX9aergm
nZH+m5g/kpMe1sb7AHu48mSQNnBVJkyrb2H+dIzWcHgmKT1cfSUtPVyTy0jf
j/lLOen73fsXV7Pvd+9fRpt+9/4RWn3bvX+c1t92798h/bfd+w9K/233/lnp
B9z756UfcO9fvI39gHv/MtoMuPeP0Oo77v3jtP6Oe/8O6b/j3n9Q+u+4989K
f9S9f176o+79iz/I/qh7/zLaHHXvH6HVd937x2n9Xff+HdJ/173/oPTfde+f
lf577v3z0n/PvX/xh9h/z71/GW2+594/Qqvvu/eP0/r77v07pP++e/9B6b/v
3j8rfdq9f156OKq8Nezhek+QNnCDN0yrQeuHfTFawzF/Unq4MZCWHm4KZqQf
sn48lJMejmpvLXu4vipIG7ghHKbVk5hfE6M1HIsmpYcbG9LSw02xjPTDmN+U
kx6OJrz/zB6ubwvSBm5Ihmn1FOZ3x2gNx1JJ6eHG/rT0cFM6I/0PMH8kJz0c
Nd4Ps4frTwZpAzdkwrT6H8yfjtEajs0kpYcbr6Slh5tyGelHMH8pJ/2Ie//i
7exH3PuX0WbEvX+EVj907x+n9Q/d+3dI/0P3/oPS/9C9f1b6Uff+eelH3fsX
f4T9qHv/MtqMuveP0OpH7v3jtP6Re/8O6X/k3n9Q+h+5989Kf8y9f176Y+79
iz/K/ph7/zLaHHPvH6HVj937x2n9Y/f+HdL/2L3/oPQ/du+flf4n7v3z0v/E
vX/xx9j/xL1/GW1+4t4/QqufuveP0/qn7v07pP+pe/9B6X/q3j8rvXHvn5ce
Tjj/D4o93OoJ0gZu84ZpNWa93xejNZz0J6WHuwJp6eHuYEb6ceuDoZz0cEJ7
69jDrVVB2sBt4TCtjmN+TYzWcDKalB7uakhLD3fHMtJPYH5TTno4kfDuYA+3
tgVpA7clw7Q6gfndMVrDyVRSerirPy093J3OSP8zzB/JSQ8njHcne7j1ZJA2
cFsmTKufY/50jNZwciYpPdx1JS093J3LSH8S85dy0p90719cz/6ke/8y2px0
7x+h1Sn3/nFan3Lv3yH9Kff+g9Kfcu+flf60e/+89Kfd+xfvYn/avX8ZbU67
94/Q6mn3/nFaP+3ev0P6p937D0r/tHv/rPRn3PvnpT/j3r/4QfZn3PuX0eaM
e/8IrX7h3j9O61+49++Q/hfu/Qel/4V7/6z0v3Tvn5f+l+79ix9i/0v3/mW0
+aV7/witfuXeP07rX7n375D+V+79B6X/lXv/rPQZ9/556eGU8jawh/s8QdrA
/d4wrbLWR30xWsNpf1J6eDiQlh4eCWakn7Q+FspJD6e0dzd7uK8qSBu4Pxym
1VnMr4nRGk5Hk9LDww1p6eGRWEb6KcxvykkPpxLej7OH+9qCtIH7k2FaPYP5
3TFaw+lUUnp4uD8tPTySzkj/a8wfyUkPp4z3X9jDfSeDtIH7M2Fa/S/mT8do
DadnktLDw1fS0sMjuYz005i/lJN+2r1/8cPsp937l9Fm2r1/hFbn3PvHaX3O
vX+H9Ofc+w9Kf869f1b68+7989Kfd+9f/K/sz7v3L6PNeff+EVpdcO8fp/UF
9/4d0l9w7z8o/QX3/lnpL7r3z0t/0b1/8SfYX3TvX0abi+79I7T6jXv/OK1/
496/Q/rfuPcflP437v2z0v/WvX9e+t+69y/+N/a/de9fRpvfuveP0Op37v3j
tP6de/8O6X/n3n9Q+t+5989KP+PePy89bJQ3xh6e8ARpA5/0hmk1a33GF6M1
nPEnpYenAmnp4elgRvo564uhnPSw0d44e3iiKkgb+GQ4TKtLmF8TozWciSal
h6ca0tLD07GM9POY35STHjYJ7yPs4Ym2IG3gk8kwrS5jfneM1nAmlZQenupP
Sw9PpzPS/x7zR3LSw8Z4H2UPT5wM0gY+mQnT6g+YPx2jNZyZSUoPT11JSw9P
5zLSX8H8pZz0V9z7Fzeyv+Lev4w2V9z7R2h11b1/nNZX3ft3SH/Vvf+g9Ffd
+2elv+bePy/9Nff+xY+xv+bev4w219z7R2j1rHv/OK2fde/fIf2z7v0HpX/W
vX9W+ufc++elf869f/En2T/n3r+MNs+594/Q6o/u/eO0/qN7/w7p/+jef1D6
P7r3z0r/J/f+een/5N6/+N/Z/8m9fxlt/uTeP0KrP7v3j9P6z+79O6T/s3v/
Qen/7N4/K33OvX9eenhGeZvYw/OeIG3gK94wrfLWz/litIZz/qT08GIgLT28
FMxIv2D9YignPTyjvc3s4fmqIG3gK+Ewra5jfk2M1nAumpQeXmxISw8vxTLS
L2J+U056eCbh/RR7eL4tSBv4SjJMq+cxvztGaziXSkoPL/anpYeX0hnp/4L5
Iznp4Rnj/Q/28PzJIG3gK5kwrf4P86djtIZzM0np4cUraenhpVxG+iXMX8pJ
v+Tev/hx9kvu/ctos+TeP0KrG+7947S+4d6/Q/ob7v0Hpb/h3j8r/U33/nnp
b7r3L/5P9jfd+5fR5qZ7/witXnDvH6f1C+79O6R/wb3/oPQvuPfPSv+ie/+8
9C+69y/+L/Yvuvcvo82L7v0jtPqre/84rf/q3r9D+r+69x+U/q/u/bPS/829
f176v7n3L/5v9n9z719Gm7+594/Q6u/u/eO0/rt7/w7p/+7ef1D6v7v3z0qv
zuH+eelhG7KHizx+2sAer6ZVgfVtviitYa8/IT1cEkhJD/uCRvpC65WhGelh
VaH2sIeLtvhpA3simlbLML82SmvYW5eQHi7ZnZIe9sWN9EWY3zwjPeys3cIe
Lmrz0wb2JDWtlmN+d5TWsDeVkB4u6U9JD/vSRvpbMH9kRnpYjam97OGiU37a
wJ6sptWtmH8uSmvYO5uQHi65mpIe9uWN9B7MvzEjvce9f0Ere8cF9vf/tPG4
96+g1UvsP7/NV0dr2OvfIz1cEjgkPewLjkn/D9YrQ7PS/4N7/4J97PHPi7as
og3siVTQ6h8xv7aO1rC3bo/0cMnuQ9LDvviY9LdhfvOs9LDzZ/tp9nBR2yra
wJ5kBa1eivnddbSGvak90sMl/Yekh33pMelfhvkjs9LDaqzgM+zholOraAN7
shW0ejnmn6ujNeyd3SM9XHL1kPSwLz8mvRfzb8xK77X//ftVYRt7uNSzmjZw
wLuRVsXW63w7aA0H/S3Sw+WBXunhUHBc+tutN4TmpIf9FYWfZQ+XbllNGzgQ
2UirOzC/dget4WBdi/Rw+e5e6eFQfFz6EsxvnpMe9icK29nDpW2raQMHkhtp
tQLzu3fQGg6mWqSHy/t7pYdD6XHpX4H5I3PSw/6xws+xh0tPraYNHMhupNUr
Mf/cDlrDwdkW6eHyq73Sw6H8uPQ+zL8xJ73P/j341bL97OFSzxrawAHvJlq9
ynqdbyet4aB/r/RweeCw9HAoeFz6/2e9IXRJethfsezz7OHSLWtoAwcim2j1
asyv3UlrOFi3V3q4fPdh6eFQ/Lj0KzG/+ZL0sD+x7Avs4dK2NbSBA8lNtHoN
5nfvpDUcTO2VHi7vPyw9HEofl/61mD9ySXrYP7bsi+zh0lNraAMHspto9TrM
P7eT1nBwdq/0cPnVw9LDofxx6f2Yf+OS9LDzJ5FkD1d6/LSBq7yaVqust/qi
tIbD/oT0cHUgJT1cEzTSr7beHpqRHtYVqoM9XLnFTxu4KqJptQbza6O0hsN1
Cenh6t0p6eGauJG+FPObZ6SHdUJ1socr2/y0gauSmlZrMb87Sms4nEpID1f3
p6SHa9JG+jsxf2RGeliPqQPs4cpTftrAVVlNq7sw/1yU1nB4NiE9XH01JT1c
kzfSBzD/xoz0jgvt7/+72MOVnlW0gau8FbR6vfVWXx2t4bB/j/RwdeCQ9HBN
cEz6N1hvD81KD+uKgifYw5VbVtEGropU0OqNmF9bR2s4XLdHerh69yHp4Zr4
mPTrML95VnpYJwq+xB6ubFtFG7gqWUGrN2F+dx2t4XBqj/Rwdf8h6eGa9Jj0
b8b8kVnpYT1W8GX2cOWpVbSBq7IVtHoL5p+rozUcnt0jPVx99ZD0cE1+TPog
5t+YlT5o/x6iqrCbPVzvWU0buMG7kVZl1g/7dtAajvlbpIcbA73Sw03Bcenv
tn48NCc9HK0o/Ap7uH7LatrADZGNtLoH82t30BqO1bVIDzfu7pUeboqPS1+O
+c1z0sPRRGEPe7i+bTVt4IbkRlqtx/zuHbSGY6kW6eHG/l7p4ab0uPRvxfyR
Oenh6FjhV9nD9adW0wZuyG6k1dsw/9wOWsOx2Rbp4carvdLDTflx6UOYf2NO
+pD9e4iqZQfZw/WeNbSBG7ybaPV264d9O2kNx5z/u8Iebgwclh5uCh6X/h3W
j4cuSQ9HK5Z9jT1cv2UNbeCGyCZavRPza3fSGo7V7ZUebtx9WHq4KX5c+g2Y
33xJejiaWPZ19nB92xrawA3JTbR6F+Z376Q1HEvtlR5u7D8sPdyUPi79uzF/
5JL0cHRs2TfYw/Wn1tAGbshuotV7MP/cTlrDsdm90sONVw9LDzflj0uvMf/G
JenhhFIp9nCrx08buM2raVVhvd8XpTWc9Cekh7sCKenh7qCRfqP1wdCM9HCi
Qh1iD7du8dMGbotoWm3C/NooreFkXUJ6uGt3Snq4O26kr8T85hnp4URC9bKH
W9v8tIHbkppWmzG/O0prOJlKSA939aekh7vTRvp7MX9kRno4MaYOs4dbT/lp
A7dlNa3uw/xzUVrDydmE9HDX1ZT0cHfeSF+F+TdmpK9y71/Qx97xMvv7f9pU
ufevoNUW+8/3++poDSf9e6SHuwKHpIe7g2PS/5P1wdCs9HCiouAIe7h1yyra
wG2RClq9F/Nr62gNJ+v2SA937T4kPdwdH5N+K+Y3z0oPJxIF32QPt7atog3c
lqyg1fswv7uO1nAytUd6uKv/kPRwd3pM+vdj/sis9HBirOBb7OHWU6toA7dl
K2j1Acw/V0drODm7R3q46+oh6eHu/Jj0Ycy/MSt92N43pQr72cN9ntW0gfu9
G2kVsT7q20FrOO1vkR4eDvRKD48Ex6W/3/pYaE56OFVR+G32cN+W1bSB+yMb
afUA5tfuoDWcrmuRHh7e3Ss9PBIfl74a85vnpIdTicIB9nBf22rawP3JjbTa
hvndO2gNp1Mt0sPD/b3SwyPpcek/iPkjc9LDqbHC77CH+06tpg3cn91Iqw9h
/rkdtIbTsy3Sw8NXe6WHR/Lj0tdg/o056Wvs30NKLTvKHu7zrKEN3O/dRKta
66O+nbSG0/690sPDgcPSwyPB49L/s/Wx0CXp4VTFsu+yh/u2rKEN3B/ZRKsP
Y37tTlrD6bq90sPDuw9LD4/Ej0u/HfObL0kPpxLLvsce7mtbQxu4P7mJVh/B
/O6dtIbTqb3Sw8P9h6WHR9LHpf8o5o9ckh5OjS37Pnu479Qa2sD92U20+hjm
n9tJazg9u1d6ePjqYenhkfxx6aOYf+OS9LBRKs0envD4aQOf9Gpa1Vmf8UVp
DWf8CenhqUBKeng6aKTfYX0xNCM9bCrUIHt4YoufNvDJiKbVTsyvjdIaztQl
pIendqekh6fjRvp6zG+ekR42CTXEHp5o89MGPpnUtNqF+d1RWsOZVEJ6eKo/
JT08nTbSP4j5IzPSw2ZMPckenjjlpw18Mqtp9RDmn4vSGs7MJqSHp66mpIen
80b6Bsy/MSO94yL7+/9h9vCEZxVt4JPeClrttj7jq6M1nPHvkR6eChySHp4O
jkn/ceuLoVnpYVNR8BR7eGLLKtrAJyMVtPoXzK+tozWcqdsjPTy1+5D08HR8
TPqHMb95VnrYJAp+wB6eaFtFG/hksoJW/4r53XW0hjOpPdLDU/2HpIen02PS
fwLzR2alh81Ywf+whydOraINfDJbQat/w/xzdbSGM7N7pIenrh6SHp7Oj0kf
w/wbs9LH7N/DjCocYQ/Pe1bTBr7i3UiruPVzvh20hnP+FunhxUCv9PBScFz6
R6xfDM1JD89UFP6QPTy/ZTVt4CuRjbR6FPNrd9AaztW1SA8v7u6VHl6Kj0vf
iPnNc9LDM4nCUfbwfNtq2sBXkhtp9Rjmd++gNZxLtUgPL/b3Sg8vpcel/yTm
j8xJD8+MFf6IPTx/ajVt4CvZjbT6d8w/t4PWcG62RXp48Wqv9PBSflz6Jsy/
MSd9k/17mFHLjrGH5z1raANf8W6iVbP1c76dtIZz/r3Sw4uBw9LDS8Hj0n/K
+sXQJenhmYplP2YPz29ZQxv4SmQTrf4D82t30hrO1e2VHl7cfVh6eCl+XPrH
Mb/5kvTwTGLZT9jD821raANfSW6i1X9ifvdOWsO51F7p4cX+w9LDS+nj0v8X
5o9ckh6eGVv2U/bw/Kk1tIGvZDfR6r8x/9xOWsO52b3Sw4tXD0sPL+WPS5/A
/BuXpIeV8hr2cJEnSBvY4w3Tao/1bb4YrWGvPyk9XBJISw/7ghnpW6xXhnLS
w6rCO8YeLtoSpA3siYRptRfza2O0hr11Senhkt1p6WFfPCN9K+Y356SHVcI7
zh4uagvSBvYkw7Tah/ndMVrD3lRSerikPy097EtnpP805o/kpIfVmPc4e7jo
VJA2sCcbptVnMP9cjNawdzYpPVxyNS097MtnpG/D/Bs56dvc+xdPsHe83P7+
nzawxxuh1Wetb/PFaQ17/R3SwyWBQelhXzArfbv1ylBe+nb3/sUn2OOfF20p
ow3siURo9TnMr43TGvbWdUgPl+welB72xbPS78f85rz0sEoU/4w9XNRWRhvY
k4zQ6vOY3x2nNexNdUgPl/QPSg/70lnpv4D5I3npYTVW/HP2cNGpMtrAnmyE
Vl/E/HNxWsPe2Q7p4ZKrg9LDvnxW+iTm38hLn7T//fvV7SfZw6Weu2kDB7z3
06rDep3vEVrDQX+n9HB5YEh6OBSclL7TekNoQXrYX3H7KfZw6Za7aQMHIvfT
6gDm1z5CazhY1yk9XL57SHo4FJ+Uvgvzmxekh/2J20+zh0vb7qYNHEjeT6sn
ML/7EVrDwVSn9HB5/5D0cCg9Kf2XMH9kQXrYP3b70+zh0lN30wYOZO+n1Zcx
/9wjtIaDs53Sw+VXh6SHQ/lJ6bsx/8aC9N3278Gv7jjDHi713EMbOOB9gFZf
sV7ne5TWcNB/QHq4PPCk9HAoeFb6HusNoevSw/6KO37BHi7dcg9t4EDkAVp9
FfNrH6U1HKw7ID1cvvtJ6eFQ/Kz0BzG/+br0sD9xxy/Zw6Vt99AGDiQfoNXX
ML/7UVrDwdQB6eHy/ielh0Pps9J/HfNHrksP+8fu+BV7uPTUPbSBA9kHaPUN
zD/3KK3h4OwB6eHyq09KD4fyZ6VPYf6N69LDWnkz7OFKT5A2cJU3TKtD1lt9
MVrDYX9Serg6kJYerglmpO+13h7KSQ/rCm+WPVy5JUgbuCoSptVhzK+N0RoO
1yWlh6t3p6WHa+IZ6fswvzknPawT3kn2cGVbkDZwVTJMqyOY3x2jNRxOJaWH
q/vT0sM16Yz038T8kZz0sB7znmUPV54K0gauyoZp9S3MPxejNRyeTUoPV19N
Sw/X5DPS92P+jZz0jm+xv/+fYg9XespoA1d5I7T6tvVWX5zWcNjfIT1cHRiU
Hq4JZqUfsN4eyksP64riZ9jDlVvKaANXRSK0+g7m18ZpDYfrOqSHq3cPSg/X
xLPSH8X85rz0sE4U/5o9XNlWRhu4Khmh1XcxvztOazic6pAeru4flB6uSWel
/x7mj+Slh/VY8f+yhytPldEGrspGaPV9zD8XpzUcnu2QHq6+Oig9XJPPSp/G
/Bt56dP27yGqbp9mD9d77qYN3OC9n1aD1g/7HqE1HPN3Sg83Boakh5uCk9IP
WT8eWpAejlbcfo49XL/lbtrADZH7afUk5tc+Qms4VtcpPdy4e0h6uCk+Kf0w
5jcvSA9HE7efZw/Xt91NG7gheT+tnsL87kdoDcdSndLDjf1D0sNN6Unpf4D5
IwvSw9Gx2y+wh+tP3U0buCF7P63+B/PPPUJrODbbKT3ceHVIergpPyn9CObf
WJB+xP49RNUdF9nD9Z57aAM3eB+g1Q+tH/Y9Sms45j8gPdwYeFJ6uCl4VvpR
68dD16WHoxV3/IY9XL/lHtrADZEHaPUjzK99lNZwrO6A9HDj7ielh5viZ6U/
hvnN16WHo4k7fsserm+7hzZwQ/IBWv0Y87sfpTUcSx2QHm7sf1J6uCl9Vvqf
YP7Idenh6Ngdv2MP15+6hzZwQ/YBWv0U8889Sms4NntAerjx6pPSw035s9Ib
zL9xXXo4obwz7OFWT5A2cJs3TKsx6/2+GK3hpD8pPdwVSEsPdwcz0o9bHwzl
pIcTFd5Z9nDrliBt4LZImFbHMb82Rms4WZeUHu7anZYe7o5npJ/A/Oac9HAi
4Z1jD7e2BWkDtyXDtDqB+d0xWsPJVFJ6uKs/LT3cnc5I/zPMH8lJDyfGvJfY
w62ngrSB27JhWv0c88/FaA0nZ5PSw11X09LD3fmM9Ccx/0ZOese32t//z7OH
Wz1ltIHbvBFanbLe74vTGk76O6SHuwKD0sPdwaz0p60PhvLSw4mK4svs4dYt
ZbSB2yIRWj2N+bVxWsPJug7p4a7dg9LD3fGs9GcwvzkvPZxIFP+ePdzaVkYb
uC0ZodUvML87Tms4meqQHu7qH5Qe7k5npf8l5o/kpYcTY8V/YA+3niqjDdyW
jdDqV5h/Lk5rODnbIT3cdXVQerg7n5U+g/k38tJn7N9DSt1+hT3c57mbNnC/
935aZa2P+h6hNZz2d0oPDweGpIdHgpPST1ofCy1ID6cqbr/KHu7bcjdt4P7I
/bQ6i/m1j9AaTtd1Sg8P7x6SHh6JT0o/hfnNC9LDqcTt19jDfW130wbuT95P
q2cwv/sRWsPpVKf08HD/kPTwSHpS+l9j/siC9HBq7PZn2cN9p+6mDdyfvZ9W
/4v55x6hNZye7ZQeHr46JD08kp+UfhrzbyxIP23/HlLqjufYw32ee2gD93sf
oNU566O+R2kNp/0HpIeHA09KD48Ez0p/3vpY6Lr0cKrijj+yh/u23EMbuD/y
AK0uYH7to7SG03UHpIeHdz8pPTwSPyv9Rcxvvi49nErc8Sf2cF/bPbSB+5MP
0Oo3mN/9KK3hdOqA9PBw/5PSwyPps9L/FvNHrksPp8bu+DN7uO/UPbSB+7MP
0Op3mH/uUVrD6dkD0sPDV5+UHh7Jn5V+BvNvXJceNsqbYw9PeIK0gU96w7Sa
tT7ji9EazviT0sNTgbT08HQwI/2c9cVQTnrYVHjz7OGJLUHawCcjYVpdwvza
GK3hTF1Senhqd1p6eDqekX4e85tz0sMm4V1gD0+0BWkDn0yGaXUZ87tjtIYz
qaT08FR/Wnp4Op2R/veYP5KTHjZj3uvs4YlTQdrAJ7NhWv0B88/FaA1nZpPS
w1NX09LD0/mM9Fcw/0ZOesce+/v/RfbwhKeMNvBJb4RWV63P+OK0hjP+Dunh
qcCg9PB0MCv9NeuLobz0sKkofp49PLGljDbwyUiEVs9ifm2c1nCmrkN6eGr3
oPTwdDwr/XOY35yXHjaJ4r+whyfaymgDn0xGaPVHzO+O0xrOpDqkh6f6B6WH
p9NZ6f+E+SN56WEzVvx/7OGJU2W0gU9mI7T6M+afi9Mazsx2SA9PXR2UHp7O
Z6XPYf6NvPQ5+/cwo25fYg/Pe+6mDXzFez+t8tbP+R6hNZzzd0oPLwaGpIeX
gpPSL1i/GFqQHp6puP0Ge3h+y920ga9E7qfVdcyvfYTWcK6uU3p4cfeQ9PBS
fFL6RcxvXpAenkncfpM9PN92N23gK8n7afU85nc/Qms4l+qUHl7sH5IeXkpP
Sv8XzB9ZkB6eGbv9Bfbw/Km7aQNfyd5Pq//D/HOP0BrOzXZKDy9eHZIeXspP
Sr+E+TcWpF+yfw8z6o4X2cPznntoA1/xPkCrG9bP+R6lNZzzH5AeXgw8KT28
FDwr/U3rF0PXpYdnKu74K3t4fss9tIGvRB6g1QuYX/soreFc3QHp4cXdT0oP
L8XPSv8i5jdflx6eSdzxN/bwfNs9tIGvJB+g1V8xv/tRWsO51AHp4cX+J6WH
l9Jnpf8b5o9clx6eGbvj7+zh+VP30Aa+kn2AVn/H/HOP0hrOzR6QHl68+qT0
8FL+rPTqvJ1/47r0jt3//GtuDxd5/LTBe49X06rA+jZflNYF9r3Xn5AeLgmk
pMd7X9BIX2i9MjQjvWOv/dcoYA8XVflp49inPGFNq2XWt9VEab3MvvdGE9LD
JQ0p6fHeFzPSF1mvbJqRvgj7t6hC9nBRu582Rdi/U9NqOfbvidJ6OfbvTUgP
lwykpMd735CR/hbsPzoj/S3Yf1wtYw8XnfbT5hbsP6lpdSv2Px+l9a3Yfy4h
PVxyLSU93vsWjPQe7H9zRnrHfnvWIvZwkWcVbRwH7O//afUS69t8dbR+iX3v
9e+RHi4JHJIe733BMen/wXplaFZ6x0H7Z7ScPVxUtYo2jkPO/Sto9Y/Wt9XU
0fof7XtvdI/0cEnDIenx3hcbk/4265VNs9Lfhv1bCm5hDxe1r6LNbdi/s4JW
L8X+PXW0fin2790jPVwycEh6vPcNjUn/Muw/Oiv9y7D/eMGt7OGi06to8zLs
P1lBq5dj//N1tH459p/bIz1ccu2Q9HjvWxiT3ov9b85K71gr578BD3u41OOn
jeMqFfBqWhVbr/NFaV1s3wf9Cenh8kBKerwPBY30t1tvCM1I7zis/Fq9hD1c
WuWnjeMaFQhrWt1hva4mSus77PtgNCE9XN6Qkh7vQzEjfYn1hqYZ6Uuwf4v6
B/ZwabufNiXYv1PTagX274nSegX2701ID5cPpKTH+9CQkf4V2H90RvpXYP9x
9Y/s4dLTftq8AvtPalq9Evufj9L6ldh/LiE9XH4tJT3ehxaM9D7sf3NGesdR
5/4Ft7GHSz2raOO4wbl/Ba1eZb3OV0frV9n3Qf8e6eHywCHp8T4UHJP+/1lv
CM1K7zjm3L/gpezh0qpVtHHc5Ny/glavtl5XU0frV9v3wege6eHyhkPS430o
Nib9SusNTbPSr8T+LQUvYw+Xtq+izUrs31lBq9dg/546Wr8G+/fukR4uHzgk
Pd6Hhsakfy32H52V/rXYf7zg5ezh0tOraPNa7D9ZQavXYf/zdbR+Hfaf2yM9
XH7tkPR4H1oYk96P/W/OSu+33yutirzs4UpPKW389ntV5a2k1Srrrb56Wq+y
78P+Vunh6kCf9HhfE5yQfrX19tC89Kvt90rromL2cGVVKW1W2+9VVbiSVmus
t9bU03qNfR+OtkoPVzf0SY/3NbEJ6UuttzfNS1+K/VuKbmcPV7aX0qYU+3dW
0mot9u+pp/Va7N/bKj1cPdAnPd7XDE1Ifyf2H52X/k7sP150B3u48nQpbe7E
/pOVtLoL+5+vp/Vd2H+uVXq4+lqf9HhfszAhfQD735yXPmC/V1otL2EPV3rW
0iZgv1dV3s20er31Vt8uWr/evg/790kPVweOSI/3NcET0r/BenvosvRvsN8r
rZevYA9XVq2lzRvs96oqvJlWb7TeWrOL1m+078PRfdLD1Q1HpMf7mtgJ6ddZ
b2+6LP067N+y/BXs4cr2tbRZh/07N9PqTdi/Zxet34T9e/dJD1cPHJEe72uG
Tkj/Zuw/eln6N2P/8eWvZA9Xnl5Lmzdj/8nNtHoL9j+/i9Zvwf5z+6SHq68d
kR7vaxZOSB/E/jcvSx+036uoKvKxh+s9pbQJ2u9Vg7eSVmXWD/vqaV1m38f8
rdLDjYE+6fG+KTgh/d3Wj4fmpb/bfq+iuuhV7OH6qlLa3G2/Vw3hSlrdY/1w
TT2t77HvY9FW6eHGhj7p8b4pNiF9ufXjTfPSl2P/lqL/xx6uby+lTTn276yk
1Xrs31NP6/XYv7dVerhxoE96vG8ampD+rdh/dF76t2L/8aJXs4frT5fS5q3Y
f7KSVm/D/ufraf027D/XKj3ceK1PerxvWpiQPoT9b85LH7Lfq6havpI9XO9Z
S5uQ/V41eDfT6u3WD/t20frt9n3Mv096uDFwRHq8bwqekP4d1o+HLkv/Dvu9
iurlr2EP11etpc077PeqIbyZVu+0frhmF63fad/HovukhxsbjkiP902xE9Jv
sH686bL0G7B/y/LXsofr29fSZgP279xMq3dh/55dtH4X9u/dJz3cOHBEerxv
Gjoh/bux/+hl6d+N/ceXv449XH96LW3ejf0nN9PqPdj//C5avwf7z+2THm68
dkR6vG9aOCG9xv43L0vvOGF//+9nD7d6/LRx3GZ//0+rCuv9viitK+z7pD8h
PdwVSEmP991BI/1G64OhGekdJ52pahV7uLXKTxvH3aotrGm1yXp/TZTWm+z7
ZDQhPdzVkJIe77tjRvpK64NNM9JXYv8WtZo93Nrup00l9u/UtNqM/XuitN6M
/XsT0sNdAynp8b57yEh/L/YfnZH+Xuw/rtawh1tP+2lzL/af1LS6D/ufj9L6
Puw/l5Ae7rqWkh7vuxeM9FXY/+aM9I5T9vf/pezhVs8q2jjut7//p9UW6/2+
Olpvse+T/j3Sw12BQ9LjfXdwTPp/sj4YmpXecdq5f8Fa9nBr1SraOB5x7l9B
q/da76+po/V77ftkdI/0cFfDIenxvjs2Jv1W64NNs9Jvxf4tBXeyh1vbV9Fm
K/bvrKDV+7B/Tx2t34f9e/dID3cNHJIe77uHxqR/P/YfnZX+/dh/vOAu9nDr
6VW0eT/2n6yg1Qew//k6Wn8A+8/tkR7uunZIerzvXhiTPoz9b85K79iolPO/
C9nDfR4/bRyfVP1eTauI9VFflNYR+z7tT0gPDwdS0uP9SNBIf7/1sdCM9I4z
KqXV69nDfVV+2jieVv1hTasHrI/WRGn9gH2fjiakh4cbUtLj/UjMSF9tfaxp
Rvpq7N+i3sAe7mv306Ya+3dqWm3D/j1RWm/D/r0J6eHhgZT0eD8yZKT/IPYf
nZH+g9h/XL2RPdx32k+bD2L/SU2rD2H/81Fafwj7zyWkh4evpaTH+5EFI30N
9r85I73jGef+BevYw32eVbRxfMW5fwWtaq2P+upoXWvfp/17pIeHA4ekx/uR
4Jj0/2x9LDQrveOcc/+CN7GH+6pW0cbxknP/Clp92PpoTR2tP2zfp6N7pIeH
Gw5Jj/cjsTHpt1sfa5qVfjv2byl4M3u4r30VbbZj/84KWn0E+/fU0foj2L93
j/Tw8MAh6fF+ZGhM+o9i/9FZ6T+K/ccL3sIe7ju9ijYfxf6TFbT6GPY/X0fr
j2H/uT3Sw8PXDkmP9yMLY9JHsf/NWemj9ntlVFGQPTzhKaVN1H6vTnoraVVn
fcZXT+s6+z7jb5Uengr0SY/308EJ6XdYXwzNS7/Dfq+MLipjD09UldJmh/1e
nQxX0mqn9ZmaelrvtO8z0Vbp4amGPunxfjo2IX299cWmeenrsX9L0d3s4Yn2
UtrUY//OSlrtwv499bTehf17W6WHpwb6pMf76aEJ6R/E/qPz0j+I/ceL7mEP
T5wupc2D2H+yklYPYf/z9bR+CPvPtUoPT13rkx7vpxcmpG/A/jfnpW+w3yuj
lpezhyc8a2nTYL9XJ72babXb+oxvF6132/cZ/z7p4anAEenxfjp4QvqPW18M
XZb+4/Z7ZfTy9ezhiaq1tPm4/V6dDG+m1b9Yn6nZRet/se8z0X3Sw1MNR6TH
++nYCekftr7YdFn6h7F/y/K3socn2tfS5mHs37mZVv+K/Xt20fpfsX/vPunh
qYEj0uP99NAJ6T+B/UcvS/8J7D++/G3s4YnTa2nzCew/uZlW/4b9z++i9b9h
/7l90sNT145Ij/fTCyekj2H/m5elj9nv1YwqCrGH5z2ltInZ79UVbyWt4tbP
+eppHbfvc/5W6eHFQJ/0eL8UnJD+EesXQ/PSP2K/VzO66O3s4fmqUto8Yr9X
V8KVtHrU+rmaelo/at/noq3Sw4sNfdLj/VJsQvpG6xeb5qVvxP4tRe9gD8+3
l9KmEft3VtLqMezfU0/rx7B/b6v08OJAn/R4vzQ0If0nsf/ovPSfxP7jRe9k
D8+fLqXNJ7H/ZCWt/h37n6+n9b9j/7lW6eHFa33S4/3SwoT0Tdj/5rz0TfZ7
NaOWb2APz3vW0qbJfq+ueDfTqtn6Od8uWjfb9zn/PunhxcAR6fF+KXhC+k9Z
vxi6LP2n7PdqRi9/F3t4vmotbT5lv1dXwptp9R/Wz9XsovV/2Pe56D7p4cWG
I9Lj/VLshPSPW7/YdFn6x7F/y/J3s4fn29fS5nHs37mZVv+J/Xt20fo/sX/v
PunhxYEj0uP90tAJ6f8L+49elv6/sP/48vewh+dPr6XNf2H/yc20+m/sf34X
rf8b+8/tkx5evHZEerxfWjghfQL737wsvWNVoJRXs4eLPEHaOPYUeLxhWu2x
vs0Xo/Ue+97rT0oPlwTS0uO9L5iRvsV6ZSgnvWNvgdLeCvZwUVWQNo59BZ5w
mFZ7rW+ridF6r33vjSalh0sa0tLjvS+Wkb7VemVTTvpW7N/i3cgeLmoP0qYV
+3eGabUP+/fEaL0P+/cmpYdLBtLS471vKCP9p7H/aE76T2P/ce8m9nDR6SBt
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
erzvXshKn8H+N/PSOzYFKeVtYA/3eYK0cXyyoN8bplXW+qgvRuusfZ/2J6WH
hwNp6fF+JJiRftL6WCgnveNMQUp7d7OH+6qCtHE8XdAfDtPqrPXRmhitz9r3
6WhSeni4IS093o/EMtJPWR9rykk/hf1bvB9nD/e1B2kzhf07w7R6Bvv3xGj9
DPbvTUoPDw+kpcf7kaGM9L/G/qM56X+N/ce9/8Ie7jsdpM2vsf9kmFb/i/3P
x2j9v9h/Lik9PHwtLT3ejyxkpJ/G/jdz0juece5f/DB7uM9TRhvHV5z7R2h1
zvqoL07rc/Z92t8hPTwcGJQe70eCWenPWx8L5aV3nHPuX/yv7OG+qjLaOF5y
7h+h1QXrozVxWl+w79PRDunh4YZB6fF+JJaV/qL1saa89Bexf0vxJ9jDfe1l
tLmI/TsjtPoN9u+J0/o32L+3Q3p4eGBQerwfGcpK/1vsP5qX/rfYf7z439jD
fafLaPNb7D8ZodXvsP/5OK1/h/3nOqSHh68NSo/3IwtZ6Wew/8289DP2e2VU
SYw9POEpp82M/V6d9FbTatb6jK+R1rP2fcbfJT08FRiWHu+ng1PSz1lfDC1K
P2e/V0aXxNnDE1XltJmz36uT4WpaXbI+U9NI60v2fSbaJT081TAsPd5Px6ak
n7e+2LQo/Tz2byl5hD080V5Om3ns31lNq8vYv6eR1pexf2+X9PDUwLD0eD89
NCX977H/6KL0v8f+4yWPsocnTpfT5vfYf7KaVn/A/ucbaf0H7D/XJT08dW1Y
eryfXpiS/gr2v7ko/RX7vTJqRSN7eMKznjZX7PfqpHcbra5an/E9Ruur9n3G
/4T08FTgKenxfjr4jPTXrC+Gnpf+mv1eGb3iMfbwRNV62lyz36uT4W20etb6
TM1jtH7Wvs9En5Aenmp4Snq8n449I/1z1hebnpf+OezfsuKT7OGJ9vW0eQ77
d26j1R+xf89jtP4j9u99Qnp4auAp6fF+eugZ6f+E/Uefl/5P2H98xb+zhydO
r6fNn7D/5DZa/Rn7n3+M1n/G/nNPSA9PXXtKeryfXnhG+hz2v/m89Dn7vZpR
JU3s4XlPOW1y9nt1xVtNq7z1c75GWuft+5y/S3p4MTAsPd4vBaekX7B+MbQo
/YL9Xs3okmb28HxVOW0W7PfqSriaVtetn6tppPV1+z4X7ZIeXmwYlh7vl2JT
0i9av9i0KP0i9m8p+RR7eL69nDaL2L+zmlbPY/+eRlo/j/17u6SHFweGpcf7
paEp6f+C/UcXpf8L9h8v+Q/28Pzpctr8BftPVtPq/7D/+UZa/x/2n+uSHl68
Niw93i8tTEm/hP1vLkq/ZL9XM2rF4+zhec962izZ79UV7zZa3bB+zvcYrW/Y
9zn/E9LDi4GnpMf7peAz0t+0fjH0vPQ37fdqRq/4T/bwfNV62ty036sr4W20
esH6uZrHaP2CfZ+LPiE9vNjwlPR4vxR7RvoXrV9sel76F7F/y4r/Yg/Pt6+n
zYvYv3Mbrf6K/Xseo/VfsX/vE9LDiwNPSY/3S0PPSP837D/6vPR/w/7jK/6b
PTx/ej1t/ob9J7fR6u/Y//xjtP479p97Qnp48dpT0uP90sIz0qsLdv+bz0vv
GP9xgr11YZHHTxvH+P0/rQocF97mi9K6wPZef0J668KSQEp6+97+/l/6Qtuv
DM1I79irVIXaw966sGiLnzaOfcoT0bRa5rjwttoorZfZ3luXkN66sGR3Snr7
XvniRvoi269snpG+CPu3qBb2Rdi/3U+bogvu7/9ptRz790RpvRz79yakX479
B1LSL7/g/v5f+luw/+iM9Ldg/+NqL/tbsP/Tftrcgv3Palrdiv0vRGl9K/a/
lJD+Vuz/bEr6W7H/dSO9B/u/MCO9Y789ayt7x6uc+6+ijWP8/p9WL7mgX+/c
v47WjlfZ3/9Lb+3c/5D09r39/b/0/2D7laFZ6R0HnfsX7GPvuMy5/yraOH67
c/8KWv2jY+f+dbR2XObcf4/01s79D0lv3zv3H5P+NtuvbJ6V/jb7769aCj7N
/jbs376KNrfZf39PZwWtXor9e+po/VLs37tH+pdi/4FD0r8U+w+NSf8y7D86
K/3L7L+/Ol7wGfYvw/5Pr6LNy7D/2QpavRz7X6ij9cux/6U90r8c+z97SPqX
Y//rY9J7sf8Ls9I7tr//L2xjb11Y6llNG8f29/8baVXsuHCdbwetiy/g9/8t
0lsXlgd6pbfvVSg4Lv3ttt8QmpPecVj5Kwo/y966sHTLato4rlGByEZa3eG4
cF3tDlrfYftgXYv01oXlu3ult+9VKD4ufYntNzTPSV+C/VsK29mXYP/21bQp
wf6dG2m1Avv37KD1Cuzf2yL9Cuw/0Cv9Cuw/NC79K7D/6Jz0r8D+xws/x/4V
2P/p1bR5BfY/u5FWr8T+F3bQ+pXY/1KL9K/E/s/2Sv9K7H99XHof9n9hTnrH
dc79l+1nb+3cfw1tHO927r+JVq9y7Nx/J61fZfugf6/01s79D0tv3zv3Py79
/7P9htAl6R3Hnfsv+zx7a+f+a2jjuNm5/yZavdqxc/+dtH617YN1e6W3du5/
WHr73rn/celX2n5D8yXpV2L/lmVfYL8S+7evoc1K7N+5iVavwf49O2n9Guzf
u1f612D/gcPSvwb7Dx2X/rXYf/SS9K/F/seXfZH9a7H/02to81rsf3YTrV6H
/S/spPXrsP+lvdK/Dvs/e1j612H/68el92P/Fy5J77jA/v4/yd66sNJTShvH
L7G//6fVKseFW331tF5l+7C/VXrrwupAn/T2vf39v/Srbb89NC+942KlK4o6
2FsXVm4ppY3jV6mqSCWt1jgu3FpbT+s1tg/XtUpvXVi9u096+17VxCekL7X9
9uZ56Uuxf0tRJ/tS7N9eSptS7N9ZSau12L+nntZrsX9vq/Rrsf9An/Rrsf/Q
hPR3Yv/ReenvxP7Hiw6wvxP7P11Kmzux/9lKWt2F/S/U0/ou7H+pVfq7sP+z
fdLfhf2vT0gfwP4vzEvveLX9/X8Xe2vn/mtp4/gN9vf/tHq9Y+f+u2j9etuH
/fukt3buf0R6+97+/l/6N9h+e+iy9I7vdu6//An21s7919LG8Tuc+2+m1Rsd
O/ffRes32j5ct096a+f+R6S37537n5B+ne23N1+Wfh32b1n+JfbrsH/7Wtqs
w/6dm2n1Juzfs4vWb8L+vfukfxP2Hzgi/Zuw/9AJ6d+M/UcvS/9m7H98+ZfZ
vxn7P72WNm/G/mc30+ot2P/CLlq/Bftf2if9W7D/s0ekfwv2v35C+iD2f+Gy
9I4rVFTd0s3eurDecydtHG9RDd57aVXmuPBh34O0LrN9zP9p6a0LGwPflN6+
V03Bn0l/t+0fD/1eescRFa245SvsrQvrt9xJG8e1qiFyL63ucVz4cO2DtL7H
9rG6T0tvXdi4+5vS2/eqKf4z6ctt/3jz76Uvx/4tt/SwL8f+7XfSphz7d95L
q/XYv+dBWq/H/r2fln499h/4pvTrsf/Qz6R/K/Yf/b30b8X+x2/5Kvu3Yv+n
76TNW7H/2Xtp9Tbsf+FBWr8N+1/6tPRvw/7PflP6t2H/6z+TPoT9X/i99I53
OPe/9SB7a+f+d9HG8ced+99Hq7c7du7/EK3fbvuY/zPSWzv3/5b09r1z/59L
/w7bPx76g/SOH3Huf+vX2Fs797+LNo4/5dz/Plq907Fz/4do/U7bx5z/Ocze
2rn/t6S37537/1z6DbZ/vPkP0m/A/i23fp39BuzffhdtNmD/zvto9S7s3/MQ
rd+F/Xs/I/27sP/At6R/F/Yf+rn078b+o3+Q/t3Y//it32D/buz/9F20eTf2
P3sfrd6D/S88ROv3YP9Ln5H+Pdj/2W9J/x7sf/3n0mvs/8IfpHfcYn//n2Jv
Xdjq8dPGcbv9/T+tKhwX7vdFaV1h+6Q/Ib11YVcgJb19b3//L/1G2x8MzUjv
uNOp1CH21oWtW/y0cdyj2iKaVpscF+6vjdJ6k+2TdQnprQu7dqekt+9Vd9xI
X2n7g80z0ldi/xbVy74S+7f7aVOJ/Ts1rTZj/54orTdj/96E9Jux/0BK+s3Y
f8hIfy/2H52R/l7sf1wdZn8v9n/aT5t7sf9ZTav7sP+FKK3vw/6XEtLfh/2f
TUl/H/a/bqSvwv4vzEjvuNf+/r+PvePDzv1X0cbxgP39P622XNDfce5fR2vH
h+3v/6W3du5/SHr73v7+X/p/sv3B0Kz0jp907l9whL21c/9VtHH8I+f+FbR6
r2Pn/nW0fq/tk3V7pLd27n9Ievveuf+Y9Fttf7B5Vvqt9t8/0VLwTfZbsX/7
Ktpstf/+bZ0VtHof9u+po/X7sH/vHunfh/0HDkn/Puw/NCb9+7H/6Kz078f+
xwu+xf792P/pVbR5P/Y/W0GrD2D/C3W0/gD2v7RH+g9g/2cPSf8B7H99TPow
9n9hVnrH4yqlCvvZWxf2eVbTxvFp1e/dSKuI48Kjvh20jtg+7W+R3rpwONAr
vX2vRoLj0t9v+2OhOekdT6pUReG32VsX9m1ZTRvH51V/ZCOtHnBceLR2B60f
sH26rkV668Lh3b3S2/dqJD4ufbXtjzXPSV+N/VsKB9hXY//21bSpxv6dG2m1
Dfv37KD1Nuzf2yL9Nuw/0Cv9Nuw/NC79B7H/6Jz0H8T+xwu/w/6D2P/p1bT5
IPY/u5FWH8L+F3bQ+kPY/1KL9B/C/s/2Sv8h7H99XPoa7P/CnPSOLzn3X3aU
vbVz/zW0cfysc/9NtKp17Nx/J61rbZ/275Xe2rn/Yente+f+x6X/Z9sfC12S
3vF15/7Lvsve2rn/Gto4fsG5/yZafdixc/+dtP6w7dN1e6W3du5/WHr73rn/
cem32/5Y8yXpt2P/lmXfY78d+7evoc127N+5iVYfwf49O2n9Eezfu1f6j2D/
gcPSfwT7Dx2X/qPYf/SS9B/F/seXfZ/9R7H/02to81Hsf3YTrT6G/S/spPXH
sP+lvdJ/DPs/e1j6j2H/68elj2L/Fy5J73iv/f1/mr114YSnlDaOP2d//0+r
OseFZ3z1tK6zfcbfKr114VSgT3r73v7+X/odtr8Ympfe8QHnfyUUDbK3LpzY
Ukobx19VJyOVtNrpuPBMbT2td9o+U9cqvXXh1O4+6e17NR2fkL7e9heb56Wv
x/4tRUPs67F/eylt6rF/ZyWtdmH/nnpa78L+va3S78L+A33S78L+QxPSP4j9
R+elfxD7Hy96kv2D2P/pUto8iP3PVtLqIex/oZ7WD2H/S63SP4T9n+2T/iHs
f31C+gbs/8K89I777O//h9lbO/dfSxvH/5+GM46rujz7/41QHQu3o1EdC9ux
2HYs2nO0UzsW9dw03KDweaCwQemeQ+EGpduhsKBwQ6NCw4ZGhYbtaKwOhtvR
qA6G7SaxILWBYkFiOyQWJLaDYkFi+32v63d9+u/d+/t+vbj69MoXf9w10ft/
YVVksbX/UmFdRH2X80n0xNb+f0VP39P7f/QPUN/vPY7e4mZr//PelJ7Y2v/H
wsbiVmv/BcLqQYut/ZcK6wep78p/Ej2xtf9f0dP31v570S+jvr/sOPplfP/q
896Sfhnfv/bHwmYZ379hgbBazvdvWiqsl/P9W59Ev5zv3/ZX9Mv5/p170f+e
7991HP3v+f49570t/e/5/n0/Fja/5/sPLRBWf+D7jywV1n/g+489if4PfP+J
v6L/A99/ei96P99/9jh6i/eoiDo/LD3xlEHbT4SNxfvUkP2XwqrY4ikjjt8K
62Lqo86n0BNPGXO9ip6+V+Pu99E/RP2k9wv0Fh9SkdTzW6QnnjKY8RNhY/ER
NZT9S2H1sMVTRvJ+K6wfpj6a/xR64iljRa+ip+/VePH76Euonyz7An0J37/6
/F3Sl/D9a38ibEr4/g2/FFYr+P5NvxXWK/j+rU+hX8H3b3sV/Qq+f+f76B/h
+3d9gf4Rvn/P+e9I/wjfv+8nwuYRvv/QL4XVo3z/kd8K60f5/mNPoX+U7z/x
KvpH+f7T76Mv5fvPfoHe4kFr/wtapSe29v+psLF4xNr/V8KqzGJr/98J6zLq
o86n0RNb+7+Gnr639v8A/WPUT3q/RG/xmLX/BbulJ7b2/6mwsXjS2v9Xwupx
i639fyesH6c+mv80emJr/9fQ0/fW/h+gL6d+suxL9OV8/+oL3pW+nO9f+1Nh
U873b/iVsFrJ92/6nbBeyfdvfRr9Sr5/22voV/L9Oz9A/0e+f9eX6P/I9++5
4B/S/5Hv3/dTYfNHvv/Qr4TVn/j+I78T1n/i+489jf5PfP+J19D/ie8//QH6
Cr7/7JfoLY6j9/9GeuLYOJtb2FgcT+//hdUqi2PjHX5hvYp6u7MGPXFsgiuE
nr6n9//oV1Of6I2itzghRqXa26Qnjo3LcAsbixNjbNlZwuoJi2Pj8/zC+gnq
7fk16IljE4pC6On7GEdxF/pK6hPLougr+f7V9vekr+T717qFTSXfvyFLWD3J
92/yC+sn+f6tNeif5Pu3hdA/yffv7EL/FN+/K4r+Kb5/j32P9E/x/fvcwuYp
vv9QlrB6mu8/4hfWT/P9x2rQP833nwihf5rvP92FvorvPxtFb3ESvf9vl97i
H1v7zxU2Fl9H7/+F1RqLrf2LhbXFP6b3/+iJrf13oKfv6f0/+rXUJ3pH0Vvs
sfafvld6i2+w9p8rbCy+xdo/W1g9Y7G1f7GwtvgGa//16Imt/Xegp++t/bvR
V1OfWDaKvpp+frV6+vvSV/P9a+cKm2q+f0O2sFrH928qFtbr+P6t69Gv4/u3
7UC/ju/f2Y3+Wb5/1yj6Z+nnV3umfyD9s3z/vrnC5lm+/1C2sPoz33+kWFj/
me8/th79n/n+EzvQ/5nvP92NvobvPzuK3uK0GKea0SE9cWySbZ6wsTgzxmW/
U1ittzg22fGQsF5Pvdu5AT1xrMe1Ez19H+N1H0S/gfoU7yn0FufEOFNndEpP
HJuUMU/YWLw4xpV9p7B6zuLY5LyHhPVz1LvzN6AnjvUU7URP38d4iw+ir6U+
pewU+lq+f/WMD6Wv5fvXzhM2tXz/hjuF1fN8/6aHhPXzfP/WDeif5/u37UT/
PN+/8yD6F/j+XafQv8D375mxT/oX+P5984TNC3z/oTuF1Yt8/5GHhPWLfP+x
Dehf5PtP7ET/It9/+iD6Or7/7Cn0Fi+19r94v/TE1v7XCxuLl1v73yWsNlps
7f+wsN5Ivdv5HHpia/830NP31v6H0G+iPsV7Gr3FK6z9Lz4gPbG1//XCxuKV
1v53CauXLLb2f1hYv0S9O/859MTW/m+gp++t/Q+hr6c+pew0+nq+f/XFH0lf
z/evvV7Y1PP9G+4SVpv5/k0PC+vNfP/W59Bv5vu3vYF+M9+/8xD6l/n+XafR
v8z377n4n9K/zPfvu17YvMz3H7pLWP2F7z/ysLD+C99/7Dn0f+H7T7yB/i98
/+lD6AN8/9nT6C0+j97/d0lPHJtm8wgbi6fR+39htcXi2ExHibDeQn2WsxY9
cWyOqxk9fU/v/9FvpX6xdwy9xZfE6NSEbumJY9MyPMLG4lkx6dk5wuoVi2Mz
80qE9SvUZ+XXoieOzSlqRk/fx+QW96BvoH5x2Rj6Br5/dcJB6Rv4/rUeYdPA
92/IEVZ/5fs3lQjrv/L9W2vR/5Xv39aM/q98/84e9K/y/bvG0L/K9+9JOCT9
q3z/Po+weZXvP5QjrF7j+4+UCOvX+P5jtehf4/tPNKN/je8/3YM+yPefHUNv
8U/o/X+P9MTW/jcIG4t/Ru//hVWjxdb+K4R1I/VZzufRE1v7v4mevqf3/+i3
Ub/Yewa9xTda+19yWHpia/8bhI3Ft1r7LxJWr1ts7b9CWL9OfVb+8+iJrf3f
RE/fW/sfRt9E/eKyM+ib+P7Vl3wsfRPfv/YGYdPE929YJKy28/2bVgjr7Xz/
1ufRb+f7t72Jfjvfv/Mw+r/x/bvOoP8b37/nkk+k/xvfv+8GYfM3vv/QImH1
d77/yAph/Xe+/9jz6P/O9594E/3f+f7Th9GH+P6zZ9BbvCDGpy7tlZ44tsB2
o7CxeGFMof1uYbXD4thljkeE9Q7q/c4X0BPHlrjeQk/fx5S6P0a/k/py7zfo
LV4U40u9tE964tiCjBuFjcVLYgqz7xZWb1gcuyzvEWH9BvX+/BfQE8eWFL2F
nr6PKS3+GH0z9eVl36Bv5vtXX/qp9M18/9obhU0z37/hbmH1Jt+/6RFh/Sbf
v/UF9G/y/dveQv8m37/zY/Rv8f27vkH/Ft+/59Ij0r/F9++7Udi8xfcfultY
vc33H3lEWL/N9x97Af3bfP+Jt9C/zfef/hh9mO8/+w16i39r7X9Zv/TE1v4/
FzYW/97a/9fCqsVia/9HhXUL9X7ni+iJrf3fRk/fW/t/gn4X9eXeb9Fb/Ii1
/2VHpSe29v+5sLH4j9b+vxZW71hs7f+osH6Hen/+i+iJrf3fRk/fW/t/gr6V
+vKyb9G38v2rL/tM+la+f+3PhU0r37/h18JqN9+/6VFhvZvv3/oi+t18/7a3
0e/m+3d+gv5dvn/Xt+jf5fv3XPYv6d/l+/f9XNi8y/cf+rWw+gfff+RRYf0P
vv/Yi+j/wfefeBv9P/j+05+gN3z/2W/RW/wUvf+PSE8cW2lzCxuLn6X3/8Kq
zeLYaodfWLdRX+OsQU8cW+sKoafv6f0/+veor/dG0Vv8QkxFqn1AeuLYygy3
sLH45Ziq7Cxhtcfi2Oo8v7DeQ31Nfg164tjaohB6+j6mrrgLfTv19WVR9O18
/2r759K38/1r3cKmne/fkCWs9vL9m/zCei/fv7UG/V6+f1sI/V6+f2cX+vf5
/l1R9O/z/Xvsx6R/n+/f5xY27/P9h7KE1Qd8/xG/sP6A7z9Wg/4Dvv9ECP0H
fP/pLvQdfP/ZKHqLX6P3/4PSE1v7zxU2Fv+d3v8Lq06Lrf2LhXUn9TXO9eiJ
rf13oKfv6f0/+g+pr/eOorf4bWv/6celJ7b2nytsLP6HtX+2sNpnsbV/sbDe
R31N/nr0xNb+O9DT99b+3ej3U19fNop+P9+/evoX0u/n+9fOFTb7+f4N2cLq
AN+/qVhYH+D7t65Hf4Dv37YD/QG+f2c3+o/4/l2j6D/i+/dM/1L6j/j+fXOF
zUd8/6FsYfVPvv9IsbD+J99/bD36f/L9J3ag/yfff7obfRfff3YUvcXvxwTU
jCHpiWMbbPOEjcUfxQTtdwqrbotjmxwPCetu6kPODeiJY5tdO9HT9zFh90H0
B6lv9Z5Cb/HHMYHUGcPSE8c2ZMwTNhZ/FhPMvlNYHbI4tinvIWF9iPpQ/gb0
xLHNRTvR0/cx4eKD6Huoby07hb6H71894yvpe/j+tfOETQ/fv+FOYXWY79/0
kLA+zPdv3YD+MN+/bSf6w3z/zoPoP+b7d51C/zHfv2fGCek/5vv3zRM2H/P9
h+4UVp/w/UceEtaf8P3HNqD/hO8/sRP9J3z/6YPoe/n+s6fQW/yltf/FI9IT
W/tfL2ws/re1/13Cqs9ia/+HhXUf9SHnc+iJrf3fQE/fW/sfQv8p9a3e0+gt
/tba/+KT0hNb+18vbCz+j7X/XcLqiMXW/g8L6yPUh/KfQ09s7f8Gevre2v8Q
+n7qW8tOo+/n+1df/LX0/Xz/2uuFTT/fv+EuYXWU79/0sLA+yvdvfQ79Ub5/
2xvoj/L9Ow+h/4zv33Ua/Wd8/56L/y39Z3z/vuuFzWd8/6G7hNW/+P4jDwvr
f/H9x55D/y++/8Qb6P/F958+hD7C9589jd7ip+n9f1R64th2m0fYWPxnev8v
rAYsjt3vKBHWA9R3OWvRE8f2uJrR0/f0/h/959T3e8fQW/xijElNGJWeOLY9
wyNsLP5LTEd2jrA6ZnHs/rwSYX2M+q78WvTEsT1Fzejp+5je4h70g9T3l42h
H+T7Vyeckn6Q71/rETaDfP+GHGF1nO/fVCKsj/P9W2vRH+f7tzWjP8737+xB
/wXfv2sM/Rd8/56E09J/wffv8wibL/j+QznC6ku+/0iJsP6S7z9Wi/5Lvv9E
M/ov+f7TPeiH+P6zY+gtDtL7/zHpia39bxA2Fofo/b+wGrbY2n+FsB6mvsv5
PHpia/830dP39P4f/VfU93vPoLc4bO1/yRnpia39bxA2Fhtr/0XC6oTF1v4r
hPUJ6rvyn0dPbO3/Jnr63tr/MPoR6vvLzqAf4ftXX/KN9CN8/9obhM0I379h
kbA6yfdvWiGsT/L9W59Hf5Lv3/Ym+pN8/87D6L/m+3edQf8137/nkm+l/5rv
33eDsPma7z+0SFj9m+8/skJY/5vvP/Y8+n/z/SfeRP9vvv/0YfRRvv/sGfQW
fxATUZeOS08cO2i7UdhY/M+YIfvdwmrU4tgRxyPCepT6qPMF9MSxY6630NP3
MePuj9Gfon7S+w16iz+JiaReOiE9cexgxo3CxuJ/xQxl3y2sTlscO5L3iLA+
TX00/wX0xLFjRW+hp+9jxos/Rj9G/WTZN+jH+P7Vl34n/Rjfv/ZGYTPG92+4
W1id4fs3PSKsz/D9W19Af4bv3/YW+jN8/86P0X/D9+/6Bv03fP+eS89K/w3f
v+9GYfMN33/obmH1Ld9/5BFh/S3ff+wF9N/y/SfeQv8t33/6Y/TjfP/Zb9Bb
PGTtf9mk9MTW/j8XNhZHrf1/LawmLLb2f1RYT1Afdb6Intja/2309L21/yfo
v6N+0vst+u/oPXok9bJz0hNb+/9c2HxH76mHsn8trM5aHDeS96iwPkt9NP9F
9MTW/m+jp++njBd/gn6S+smyb9FP8v2rL/te+km+f+3Phc0k37/h18LqHN+/
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
Xz6Bvp/3r5z5e+n7ef/q+cKGfbA2T1gd5f3ry4T1Ud6/YSN69s1NLejZh5v7
0H/G+7dOoP+M92+f+QfpP+P9988XNuyDPXnC6l+8f3+ZsP4X7z+4ET375pEW
9OzDY33oI7z/5AR6YmOUwy89cXu7zSts2HfYc4XVAPn9jlJhTWy6nHXo2fe4
wujZ97p70X9Ovt87jp64w2hHsfTE+9vTvcKGfUdWrrA6Rn5/bqmwJu7o8tWh
Z99TGEbPvtffi36QfH/pOHriLlPheEh64p72Kq+wYd9RkyusjpPfX1cqrIm7
ugJ16Nn3BMPo2feGetF/Qb4/PI6euNcYx8PSE/e3d3iFDfuOrlxh9SX5/b2l
wpq4tytSh559z1AYPfveaC/6IfL94+Poh3j/uJkl0g/x/vHzhQ37joQ8YTXM
+yeWCeth3j9pI3r2Pckt6Nn3evrQf8X7p0yg/4r3T5u5QvqveP/M+cKGfUdO
nrA6wfsvLhPWJ3j/go3o2fcsa0HPvrekD/0I718+gX6E96+c+Yj0I7x/9Xxh
w76jNk9YneT968uE9Unev2EjevY9TS3o2fc296H/mvdvnUD/Ne/fPvNR6b/m
/ffPFzbsO3ryhNW/ef/+MmH9b95/cCN69j0jLejZ9471oY/y/pMT6IkjEeUo
lZ54cNDmFTbsh+y5wmqU/IijVFgTR6LOOvTsx1xh9OzH3b3oT5Gf9I6jJx6K
aEeZ9MQjg+leYcN+KCtXWJ0mP5JbKqyJh6K+OvTsxwrD6NmP+3vRj5GfLB1H
TxyNVDgek554bLDKK2zYD9XkCqsz5EfqSoU1cTQaqEPPfiwYRs9+PNSL/hvy
k+Fx9MTjEeN4XHriycEOr7BhP9SVK6y+JT/SWyqsicejkTr07MeGwujZj0d7
0Y+TnxwfRz/O+8fNLJd+nPePny9s2A8l5AmrCd4/sUxYT/D+SRvRsx9LbkHP
ftzTh/473j9lAv13vH/azJXSf8f7Z84XNuyHcvKE1Vnef3GZsD7L+xdsRM9+
bFkLevbjJX3oJ3n/8gn0k7x/5cw/Sj/J+1fPFzbsh2rzhNU53r++TFif4/0b
NqJnP9bUgp79eHMf+u95/9YJ9N/z/u0z/yT997z//vnChv1QT56w+g/v318m
rP/D+w9uRM9+bKQFPfvxsT706ijtPzmBnphD6Ynp/b+wYT/VroVVDPlpDp+w
Jqb3/+jZJ7gC6NnPdBv0U8jP8kbQE9tUqlolPXF8XIZT2LCfmq2FVSz5aXk+
YU1ss+dXoGefUBRAz35msUEfR35WWQQ9Mb3/Xy09Mb3/Fzbsp9ZoYXUe+Wl1
PmFNTO//0bNPCAbQs58ZMujPJz8rHEFP7FBt6gnpiRPjOp3Chv3Ubi2sLiA/
rc8nrIkd9oEK9OwThgPo2c8cNeht5GdNRNDbeP+4mErpLY6h9//Chv3UhFRh
NZX8tMR8YU1M7//Rs09I3oKe/UxPG/oLyc9KGUB/Ie+/IOZJ6cnHxy2cLWyI
bVMXpQqri8hPW5IvrIlt9qWr0LNPWL4FPfuZK9rQx5OftXIAPTG9/39KemJ6
/y9s2E+tTRVW08hPq88X1sT0/h89+4SmLejZz2xuQ/8D8rNaB9ATO9TemKel
J06MOzBb2LCfejhVWP2Q/LSj+cKa2GE/vgo9+4STW9Czn3mmDb2d/KxzA+gt
pvf/U6qkJ05Ksl0lbNjPsd8mrKaTv85xn7Amdrqdq9Gz97i2omc/3/0e+hnk
b/F+jp7Y5UydskZ64uSkjKuEDfs52bcJq4vJX5d3n7AmdrnzV6Nn7ynaip79
/OL30CeQv6Xsc/TEbmfFlLXSE3uSqq4SNuzn1NwmrC4hf13dfcKa2O0OrEbP
3hPcip79/NB76C8lf0v4c/TEXmfblGekJ05J6rxK2LCf032bsLqM/HV99wlr
Yq97YDV69p7hrejZzx99D72D/C0Tn6O3OMbpjIutlp44KSn+amHDfk7CL4TV
TPLXJd4vrImd7qQn0LP3JL+Cnv18zx70l5O/JeUYemKXc0HsOumJk5MWXi1s
2M9Z9AthdQX565bcL6yJXe6lT6Bn71n+Cnr281fsQZ9I/paVx9ATu52Vsc9K
T+xJqr5a2LCfU/sLYTWL/HX19wtrYre74Qn07D1Nr6BnP795D/oryd/Segw9
sde5N/bP0hOnJB24Wtiwn3P4F8LqR+SvO3q/sCb2uo8/gZ695+Qr6NnPP7MH
vZP8LeeOoSem9/810hPT+39hwz7DroXVbPILHT5hTUzv/9Gzz3EF0LPPcxv0
V5Ff4o2gJ07XqWq99MSZaRlOYcM+I1sLq6vJL8zzCWvi9Kz8CvTsc4oC6Nnn
FRv0SeSXlEXQE9P7/w3SE9P7f2HDPqNGC6sfk19Y5xPWxPT+Hz37nGAAPfu8
kEH/E/JLwhH0xLm6TT0nPfHitE6nsGGf0a2F1U/JL+zzCWvi3KyBCvTsc4YD
6NnnjRr0LvJLJiLoLZ5C7/9rpSem9//Chn1GQqqwmkN+YWK+sCam9//o2eck
b0HPPs/Thv4a8ktSBtATp+sFMc9LT5yZtnC2sGGfsShVWF1LfuGSfGFNnJ61
dBV69jnLt6Bnn7eiDX0y+SUrB9AT0/v/F6Qnpvf/woZ9Rm2qsLqO/ML6fGFN
TO//0bPPadqCnn1ecxv6n5Ff0jqAnjhX7415UXrixWkHZgsb9hmHU4XVf5Ff
eDRfWBPnZh1fhZ59zskt6NnnnWlD7ya/5NwAeotjfD41pU564oIC21XChn2R
/TZhNZf8csd9wprY53euRs++xLUVPfsy93vo55Ff6f0cPXGhL3XKRumJlxVk
XCVs2Bdl3yasrie/PO8+YU1c6M9fjZ59SdFW9OzLit9D7yG/suxz9MR+X8WU
TdITlxRUXSVs2BfV3CasbiC/vO4+YU3s9wdWo2dfEtyKnn1Z6D30N5JfGf4c
PXGpr23KS9ITlxd0XiVs2Bd13yasfk5+ed99wpq41D+wGj37kuGt6NmXjb6H
3kt+5cTn6C2e4vPFxdZLT1xQEH+1sGFflPALYTWf/PLE+4U1sc+f9AR69iXJ
r6BnX+bZg/4m8itTjqEnLvQtiN0sPfGygoVXCxv2RYt+IaxuJr98yf3CmrjQ
v/QJ9OxLlr+Cnn3Zij3oU8ivXHkMPbHfVxn7svTEJQXVVwsb9kW1vxBWt5Bf
Xn+/sCb2+xueQM++pOkV9OzLmvegv5X8ytZj6IlLfXtj/yI9cXnBgauFDfui
w78QVv9NfvnR+4U1can/+BPo2ZecfAU9+7Ize9Br8ivPHUNPTO//A9IT0/t/
YcN+jT1dWKWSX+coFNbE9P4fPftaVxA9+43uDvS3kd/sHUJPbKtItW2Rnji+
MsMlbNivyU4XVr8gvy6vUFgT22ryq9Czry0Kome/sbgDfRr5zWVD6Inp/f9W
6Ynp/b+wYb+mJl1YLSC/rq5QWBPT+3/07GuDQfTsN4Y60P+S/ObwEHpiR0Wb
7RXpiRMrO13Chv2a7nRh9Svy6/oKhTWxo2agCj372uEgevYbRzvQp5PfPDGE
Pp33j5vaIL3FsfT+X9iwX5OQIawyyK9LLBLWxPT+Hz372uRG9Ow3ejrR305+
c8owemJbxYKpf5WeOL5y4Rxhw37NogxhdQf5dUuKhDWxrWbpGvTsa5c3ome/
cUUn+kzym1cOoyem9/+vSk9M7/+FDfs1tRnCaiH5dfVFwpqY3v+jZ1/b1Iie
/cbmTvT/Q35z6zB6YkfF3qmvSU+cWHlgjrBhv+ZwhrD6X/LrjhYJa2JHzfE1
6NnXnmxEz37jmU70WeQ3nxtGb/EUZ0BdGJSeOKnBdo2wYd9ov11YZZPf7nhA
WBM7Q8616Nk3u7ahZ9/i/hD9neR3e79CT+wKpF7YKD1xckPGNcKGfWP27cLq
LvLb8x4Q1sSuUP5a9Oybi7ahZ99S/CH6HPK7y75CT0z/+75t0hN7GqquETbs
G2tuF1aLyG+ve0BYE7tDgbXo2TcHt6Fn3xL6EP3d5HeHv0JP7A20Xfi69MQp
DZ3XCBv2jd23C6tfk9/e94CwJvaGBtaiZ988vA09+5bRD9Hnkt898RV6i2Od
gbiLmqQnTmqIv1bYsG9MuENY5ZHfnvigsCZ2hpKeQc++Ofl19OxbPPvQ30N+
d8oJ9MSuwIKLtktPnNyw8Fphw75x0R3C6l7y25c8KKyJXaGlz6Bn37z8dfTs
W1bsQ7+Y/O6VJ9ATuwOVF/1NemJPQ/W1woZ9Y+0dwmoJ+e31DwprYneo4Rn0
7JubXkfPvqV5H/rfkN/degI9sTew96K/S0+c0nDgWmHDvvHwHcLq/8hvP/qg
sCb2ho4/g55988nX0bNvObMPvY/87nMn0BPT+/+Q9MT0/l/YsO+0pwurfPIH
HIXCmpje/6Nn3+MKomff5+5Afx/5o94h9MTpJtW2Q3rizPYMl7Bh35mdLqzu
J38gr1BYE6d35VehZ99TFETPvq+4A30B+aNlQ+iJ6f3/TumJ6f2/sGHfWZMu
rJaSP1BXKKyJ6f0/evY9wSB69n2hDvS/JX80PISeONe02d6Qnnhxe6dL2LDv
7E4XVr8jf6CvUFgT53YNVKFn3zMcRM++b7QDfSH5oxND6C2Oo/f/zdIT0/t/
YcO+MyFDWBWRP5BYJKyJ6f0/evY9yY3o2fd5OtE/QP5oyjB64nSzYOqb0hNn
ti+cI2zYdy7KEFYPkj+wpEhYE6d3LV2Dnn3P8kb07PtWdKJfRv7oymH0xPT+
/y3pien9v7Bh31mbIayWkz9QXySsien9P3r2PU2N6Nn3NXei/z35o63D6Ilz
zd6pb0tPvLj9wBxhw77zcIaw+gP5A0eLhDVxbtfxNejZ95xsRM++70wnej/5
o+eG0Vsc64uoC8PSExcM2q4RNuyH7bcLq2LyJx0PCGtiX9S5Fj37Mdc29Own
3B+if4j8Oe9X6IkLI6kXtkhPvGww4xphw344+3Zh9TD5k3kPCGviwmj+WvTs
x4q2oWc/Ufwh+hLy58q+Qk/sj1RcuEt64pLBqmuEDfvhmtuF1QryJ+seENbE
/mhgLXr2Y8Ft6NlPhD5E/wj5c+Gv0BOXRtoufEd64vLBzmuEDfvh7tuF1aPk
T/Y9IKyJS6MDa9GzHxvehp79xOiH6EvJn5v4Cr3Fcb5I3EWt0hMXDMZfK2zY
DyfcIazKyJ9MfFBYE/uiSc+gZz+W/Dp69hOefegfI38u5QR64sLIgot2S0+8
bHDhtcKG/fCiO4TV4+RPLnlQWBMXRpc+g5792PLX0bOfWLEPfTn5cytPoCf2
Ryoveld64pLB6muFDfvh2juE1UryJ+sfFNbE/mjDM+jZjzW9jp79RPM+9H8k
f671BHri0sjei/4hPXH54IFrhQ374cN3CKs/kT959EFhTVwaPf4MevZjJ19H
z37izD70FeTPnTuBnrhCKbuRnpje/wsb9lPtWcJqFflpDr+wJqb3/+jZJ7hC
6NnPdHehX01+ljeKnrhKpdrbpCeujstwCxv2U7OzhNUT5Kfl+YU1cZU9vwY9
+4SiEHr2M4u70FeSn1UWRU9M7//fk56Y3v8LG/ZTa7KE1ZPkp9X5hTUxvf9H
zz4hGELPfmaoC/1T5GeFo+iJ61SbfY/0xPVxnW5hw35qd5awepr8tD6/sCau
sw/UoGefMBxCz37maBf6KvKzJqLoq3j/uOnt0lt8Hr3/FzbEFVMTsoXVGvLT
EouFNTG9/0fPPiF5B3r2Mz3d6NeSn5Uyin4t779g+l7pyVfHLZwrbIirpi7K
FlbPkJ+2pFhYE1fZl65Hzz5h+Q707Geu6EZfTX7WylH0xPT+/33pien9v7Bh
P7U2W1itIz+tvlhYE9P7f/TsE5p2oGc/s7kb/bPkZ7WOoieuU3unfyA9cX3c
gbnChv3Uw9nC6s/kpx0tFtbEdfbj69GzTzi5Az37mWe60deQn3VuFL3FcQGn
mtEhPXFDkm2esGE/x36nsFpP/jrHQ8KaOOB2bkDP3uPaiZ79fPdB9BvI3+I9
hZ446Eyd0Sk9cVNSxjxhw35O9p3C6jny1+U9JKyJg+78DejZe4p2omc/v/gg
+lryt5SdQk8cclbM+FB64uakqnnChv2cmjuF1fPkr6t7SFgTh9yBDejZe4I7
0bOfHzqI/gXyt4RPoScOO9tm7JOeuDWpc56wYT+n+05h9SL56/oeEtbEYffA
BvTsPcM70bOfP3oQfR35WyZOobf4vIAz7uL90hM3JMVfL2zYz0m4S1htJH9d
4sPCmjjgTnoOPXtP8hvo2c/3HEK/ifwtKafREwedCy4+ID1xU9LC64UN+zmL
7hJWL5G/bsnDwpo46F76HHr2nuVvoGc/f8Uh9PXkb1l5Gj1xyFl58UfSEzcn
VV8vbNjPqb1LWG0mf139w8KaOORueA49e0/TG+jZz28+hP5l8re0nkZPHHbu
vfif0hO3Jh24Xtiwn3P4LmH1F/LXHX1YWBOH3cefQ8/ec/IN9OznnzmEPkD+
lnOn0RPT+/8u6Ynp/b+wYZ9hzxJWW8gvdPiFNTG9/0fPPscVQs8+z92Ffiv5
Jd4oeuIOnWrvlp54f1qGW9iwz8jOElavkF+Y5xfWxB1Z+TXo2ecUhdCzzyvu
Qt9AfklZFD0xvf8/KD0xvf8XNuwzarKE1V/JL6zzC2tiev+Pnn1OMISefV6o
C/2r5JeEo+iJe3Wb/ZD0xP1pnW5hwz6jO0tYvUZ+YZ9fWBP3Zg3UoGefMxxC
zz5vtAt9kPySiSh6i8+n9/890hPT+39hwz4jIVtYNZJfmFgsrInp/T969jnJ
O9Czz/N0o99GfknKKHriDr1g+mHpifenLZwrbNhnLMoWVq+TX7ikWFgTd2Qt
XY+efc7yHejZ563oRt9EfsnKUfTE9P7/Y+mJ6f2/sGGfUZstrLaTX1hfLKyJ
6f0/evY5TTvQs89r7kb/N/JLWkfRE/fqvdM/kZ64P+3AXGHDPuNwtrD6O/mF
R4uFNXFv1vH16NnnnNyBnn3emW70IfJLzo2it/i8iE/N6JWeeLDANk/YsC+y
3ymsdpBf7nhIWBNH/M4N6NmXuHaiZ1/mPoh+J/mV3lPoiYd8qTP6pCceKciY
J2zYF2XfKazeIL887yFhTTzkz9+Ann1J0U707MuKD6JvJr+y7BR64qivYsan
0hOPFVTNEzbsi2ruFFZvkl9e95CwJo76AxvQsy8J7kTPvix0EP1b5FeGT6En
Hve1zTgiPfFkQec8YcO+qPtOYfU2+eV9Dwlr4nH/wAb07EuGd6JnXzZ6EH2Y
/MqJU+gtPj/ii7u4X3riwYL464UN+6KEu4RVC/nliQ8La+KIP+k59OxLkt9A
z77Mcwj9LvIrU06jJx7yLbj4qPTEIwULrxc27IsW3SWs3iG/fMnDwpp4yL/0
OfTsS5a/gZ592YpD6FvJr1x5Gj1x1Fd58WfSE48VVF8vbNgX1d4lrHaTX17/
sLAmjvobnkPPvqTpDfTsy5oPoX+X/MrW0+iJx317L/6X9MSTBQeuFzbsiw7f
Jaz+QX750YeFNfG4//hz6NmXnHwDPfuyM4fQG/Irz51GT0zv/yPSE9P7f2HD
fo09V1i1kV/nKBXWxPT+Hz37WlcYPfuN7l7075Hf7B1HT1xVkeoYkJ64ujLD
K2zYr8nOFVZ7yK/LKxXWxFU1+XXo2dcWhdGz31jci76d/OaycfTE9P7/c+mJ
6f2/sGG/piZXWO0lv66uVFgT0/t/9Oxrg2H07DeGetG/T35zeBw9cV1Fm+OY
9MT1lZ1eYcN+TXeusPqA/Lq+UmFNXFczUIeefe1wGD37jaO96DvIb54YR2/x
BfT+f1B6Ynr/L2zYr0nIE1ad5NcllglrYnr/j559bXILevYbPX3oPyS/OWUC
PXFVxYKZx6Unrq5cOF/YsF+zKE9Y7SO/bkmZsCauqlm6ET372uUt6NlvXNGH
fj/5zSsn0BPT+/8vpCem9//Chv2a2jxhdYD8uvoyYU1M7//Rs69takHPfmNz
H/qPyG9unUBPXFexd+aX0hPXVx6YL2zYrzmcJ6z+SX7d0TJhTVxXc3wjeva1
J1vQs994pg99F/nN5ybQW3x+IKAuH5KeuKHBdpOwYd9ov0dYdZPf7nhMWBMH
Qs5N6Nk3u3ahZ9/i/hT9QfK7vd+hJw4GUi8flp64qSHjJmHDvjH7HmF1iPz2
vMeENXEwlL8JPfvmol3o2bcUf4q+h/zusu/QE4cCFZd/JT1xc0PVTcKGfWPN
PcLqMPntdY8Ja+JQKLAJPfvm4C707FtCn6L/mPzu8HfoicOBtstPSE/c2tB5
k7Bh39h9j7D6hPz2vseENXE4NLAJPfvm4V3o2beMfoq+l/zuie/QW3xBIBB3
xYj0xA0N8TcLG/aNCfcKqz7y2xMfF9bEgVDSS+jZNye/g559i+cI+k/J7045
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
FqEvCIyVHnYsDM6WHntjcXil9AHoS6I6pCe3OKVvGzaBe9g5I2EcWye3O2Ul
ebK1xWTno6lBbLUYfUFmrPSwc2FetvTYOxUXVkq/BH1JSYf05Keu6ReH/Y57
2C3j6ji2Tn7hmlXrydaWkt2ONgWx1VL0BQ9ipYfdCp9kS4+9a3FvpfQm9CWv
OqQnb1K6ZuXEPexeZunI1skxqsLai60tI7tfsQtmq2Xoaww7pIfda41Hpcde
NThdkf7v6JtcH0tP3uWhK6uJ3MNeZR6ObJ28z6PCx4ut/YPsdcU/mK3+gb7G
tEN62KvWfFR67D0aQq9IH4i+KfKx9ORNPvoWq0ncw75lcY5snRzjU5HoxdaW
k32vpASz1XL0NYd2SA/71uYclR57n4aCK9KvQN9U/Fh68i5//ZzV77mHA8ou
ObJ18j7/ihovtvZPcsCVhmC2+if6mrs7pIcDah8elR57/4aeK9Kb0TcNPJae
nK50i+HO3MPuZVbj2To5S1XYeLO1ILL7FfsQtgpCX+MQLz3sXuuYKz32qsG5
Svp/oW9y65SefNxDdx8+mXvYq8xrPFsnn/Ko8PVma/8me10JCGGrf6OvCYyX
HvaqDc6VHnuPhvAq6YPRN0V1Sk9O99G3DXfhHvYtSxjP1slZPhVJ3mwthOx7
JTWErULQ12TGSw/71ublSo+9T0NhlfQr0TeVdEpPPu6vXxz+B+7hgLKr49k6
+ZR/Ra03W/sPOeBKUwhb/Qd9zYN46eGA2ie50mPv39BbJX0o+qZXndKTdVOL
ZuXKPRzYaunI1skVpnZrL7a2ihz42C6YrVah7zHskB4O7DUelR5704DTFenD
0L9yfSw9+Zq5RVlN4R4ObvVwZOvkW+Z2Hy+29l9y8GP/YLb6L/oe0w7p4eBe
81HpsTcPhF6RPhz9q8jH0pP10JYtVu9zD4e3xjmydXJFaHuiF1tbTQ5/nBLM
VqvR9xzaIT0c3ptzVHrsQwcKrkgfgf5V8WPpydciW85ZTeUejmq95MjWybci
22u82Nr/yFGPG4LZ6n/oe+7ukB6O6n14VHrsIwd6rkgfif7VwGPpyS2mFovh
btzDga1W49k6ud3UbuPN1taQAx/bh7DVGvQ9DvHSw4G9jrnSY28acK6Sfi36
V26d0pOfmlvch0/jHg5u9RrP1skvzO2+3mxtHTn4cUAIW61D3xMYLz0c3Buc
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
uYXBRdJjn10cXi/9t+hLovqlJ7fkp297eyX38ImMhClsndyen5W0gK3dJp84
mrqGrW6jL8hMlh4+UZhXJD32+cWF9dI3oS8p6Zee/LQo/eLb/+EePpNxdQpb
J78oyqpdwNaayWeONq1hq2b0BQ+SpYfPFD4pkh77ouLeeulb0Je86peevOms
rtmHcg9fKLN0Y+vkmLMV1gFs7Q75whW7KLa6g77G8Jn08IVa49fSY3+2welb
6e+ib3L9Xnryrkpd2a/iHq4q83Bj6+R9lRU+AWztHrnqin8UW91DX2P6THq4
qtb8tfTYVzaEfit9K/qmyO+lJ2+6rm+xD+MevlkW58bWyTHXKxID2Np98s0r
KVFsdR99zaHPpIdv1uZ8LT321xsKvpX+Afqm4u+lJ++q18/Z/5d7+HbZJTe2
Tt5XX1ETwNbayLevNESxVRv6mrufSQ/frn34tfTY1zf0fCt9O/qmge+lJ6ef
1S3eDecevlBmNY2tk7POVtgsZmsd5AtX7NezVQf6GocD0sMXah3PSI/92Qbn
29I/RN/k9lJ68vFK3f3d1dzDVWVe09g6+VRlhe9itvaIXHUlYD1bPUJfE3hA
eriqNviM9NhXNoTflv4x+qaol9KT06/r296N4B6+WZYwja2Ts65XJC1ma53k
m1dS17NVJ/qazAPSwzdr885Ij/31hsLb0j9B31TyUnry8Xr94rv/4x6+XXZ1
Glsnn6qvqF3M1rrIt680rWerLvQ1Dw5ID9+ufXJGeuzrG3pvS/8UfdOrl9KT
9Tstmn0k9/D9Vks3tk6uuNNuHcDWusn3H9tFsVU3+h7DZ9LD93uNX0uP/Z0B
p2+l70H/yvV76cnXOlqU/Rru4c5WDze2Tr7V0e4TwNaekTsf+0ex1TP0PabP
pIc7e81fS499x0Dot9J/h/5V5PfSk/Xuli32a7mHn7fGubF1ckV3e2IAW3tO
fv44JYqtnqPvOfSZ9PDz3pyvpce+e6DgW+l70b8q/l568rX+lnP267iHX7Ze
cmPr5Fv97TUBbK2P/PJxQxRb9aHvufuZ9PDL3odfS499/0DPt9K/QP9q4Hvp
yS13WizejeIevt9qNY2tk9vvtNssZmv95PuP7dezVT/6HocD0sP3ex3PSI/9
nQHn29IPoH/l9lJ68tOOFvd313MPd7Z6TWPr5Bcd7b6L2dogufNxwHq2GkTf
E3hAerizN/iM9Nh3DITflv579K+iXkpPbulu2fbuBu7h560J09g6ub27PWkx
W3tJfv44dT1bvUTfk3lAevh5b94Z6bHvHii8Lf0r9K9KXkpPftrfcvHdjdzD
L1uvTmPr5Bf97bWL2doQ+eXjpvVsNYS+58EB6eGXvU/OSI99/0Dvbem1Zupf
vXopPfn/fm/iHn7dwtLA1smW2jBrxdZ+QH59uJ2JrX6AfoRhk/Tw67bGdOmx
10Y66dL/EP1o1xbpydaW2kxtM/fwGxaeBrZOtrMcNlextR+R3xi+wMRWP0I/
Ytkm6eE3bIPSpcfecuQqXXoL9KPXtEhP/r/7/y3cw7YWcQa2Tra0Hpao2Npr
ZNvhKSa2eq35/9//Sw/b2uakS4+99cgCXfrX0Y8ubpGebG2nndc+4h4eZXHZ
wNbJdnbDbii29mPyqOGNJrb6MfoR9zZJD4+yfZQuPfZ2I5/p0luiHz3YIj3Z
gPv/aO7J771uYfUeWycbtWE2M9nasGY17vXh9svYivwe7v+lh1+3dTwoPfba
SOez0v8E/Wi3O9KTnSy1WT/Yyj154hsW3u+xdfIUy2HzZ7K1n5LfGL54GVuR
J1qOWL5ZevgN25CD0mNvOXL1Wemt0I9ef0d68nu4/9/GPWxrkfAeWyePsx6W
NJOtDSfbDk9dxlbD0Y/I3Cw9bGubd1B67K1HFp6V/g30o0vuSE+eaKeV/2A7
9/Aoi+r32Dp5it2wupls7WfkUcObl7HVz9CPaNssPTzKtuug9Njbjew7K701
+tFDd6Qn4/7/hzHcw2MdLH/J1skehnHWf2Rrb5LHjrf7O1u92fx/9/9bpIfH
uhgPSY+9YarTOelHoJ/held6so/RMPOHsdzDExw8f8nWyf7GcXP/yNZ+Tp4w
fsHf2ern6Cct2yI9PMEl6JD02BunrjonvQ36GWvuSk/G/f8P47iHXRzifsnW
yR5O4xL/yNbeIruMT/k7W73V/H/3/1ukh11ccg5Jj73T1IJz0tuin1F8V3qy
j6vh/A8/5h6e7nD5l2yd7O867sYf2dovyNPHN/6drX6BftK9LdLD010eHZIe
e9epz85Jb4d+xuBd6cnLDAaLH+3gHh7rYPUrtk4OMoyz+YCtvU0eO97+H2z1
NvpJDh9JD491cfxceuwNU53PS/8O+hlu96QnrzIaZv0onnt4goP3r9g6eY1x
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
9Fk/zeUenpDh/Vu2Th40Zs//M1tbRJ6Qu/jfbLUIfcHyj6WHJxSGfCE99sbT
qy9LH4C+dP0j6cn3nNK3/TSPe9glI+G3bJ38yCk76c9sbTHZJTf132y1GH1B
5sfSwy6FeV9Ij73T6cLL0i9BX1rySHryM9f08p8e4x6enlH9W7ZOHnTNrvsz
W1tKnp7b/G+2Woq+oO1j6eHphV1fSI+96+m+y9Kb0JcOPZKe/BHu/49zD88u
s3Rk6+SPVaW1F1tbRp5dZRfMVsvQ1xh2SA/PrjUelR571eh0Rfq/o292fSw9
+RMPfaZVPvfwnDJPR7ZO3u9ROdeLrf2DPKdqQTBb/QN9zbId0sNzaoOOSo+9
R+OqK9IHom9e81h68ke4/y/gHvYri3Nk6+SPfSoTvdjacrJfVUowWy1HX3No
h/SwX23OUemx92ksuCL9CvTNxY+lJ3/ir5+3+pJ7eEnZZUe2Tt7vX3nDi639
k7ykqjGYrf6JvubeDunhJbWPjkqPvX/jsyvSm9E3Dz6WnpyB+/+vuIdnl1mN
Z+vko6rSxputBZFnV9mHsFUQ+hqHeOnh2bWOudJjrxqdq6T/F/pmt07pyV95
6LOGn+AenlPmPZ6tk7/2qJzvzdb+TZ5TtTiErf6NvmZ5vPTwnNqQXOmx92hc
XSV9MPrm9Z3SkzNw/1/IPexXljCerZOP+lQmebO1ELJfVWoIW4Wgr8mMlx72
q83LlR57n8bCKulXom8u6ZSe/JW/Xj78JPfwkrLq8Wyd/LV/ZZ03W/sPeUlV
cwhb/Qd9TVu89PCS2q5c6bH3b+yrkj4UffNQp/Tk86YW7Y1T3MMrWi0nsHXy
ZVOH9Ry2toq8otNuJVutQt9jSJAeXtFrzJMee9Og01Xpw9APuT6RnnzD3DLz
jSLu4ZWtnhPYOrnR3DF3Dlv7L3ll54KVbPVf9D3LEqSHV/YG5UmPvXlw1VXp
w9EPrXkiPfl8aMuWN4q5hyNa4yawdfLl0I7EOWxtNTmiM2UlW61G33MoQXo4
ojcnT3rsQwcLrkofgX6o+In05BuRLeffOM09vKH18gS2Tm6M7Lgxh639j7yh
s3ElW/0Pfc+9BOnhDb2P8qTHPnLw2VXpI9EPDT6RntxqarH42dfcwytarX7H
1smPTR02f2Fra8grOu3/w1Zr0Pc47JQeXtHreEx67E2DztXSr0U/5NYlPfk7
c8usn53hHl7Z6v07tk7+3twx/y9sbR15Zefi/7DVOvQ9y3dKD6/sDTkmPfbm
wdXV0kehH1rfJT25NbRl289KuIcjWhN+x9bJj0M7kv7C1taTIzpT/8NW69H3
ZO6UHo7ozTsmPfahg4XV0m9AP1TSJT35u8iW8p+Vcg9vaK3+HVsnfx/ZUfcX
traRvKGz+T9stRF9T9tO6eENvV3HpMc+crCvWvpN6IeGuqQnW+D+X+ce3m5h
6cTWyVabh1n7sLXN5O3D7ULZajP6EYZd0sPbbY3Hpcd+80ina9JvQT/a9an0
ZJtYbab1We7hnRaeTmydbB87bK4PW/uIvHP4glC2+gj9iGW7pId32gYdlx77
2JGrrkkfjX70mqfSky1w/3+Oe3ivRZwTWydb7R6W6MPWtpL3Dk8JZaut6Ecc
2iU9vNc257j02O8eWXBN+m3oRxc/lZ5sk6ydtz7PPZxmcdmJrZPtk4fd8GFr
28lpwxtD2Wo7+hH3dkkPp9k+Oi499skjn12TPgb96MGn0pMdcP9fxj15zHYL
q4lsnTx+8zCbuWwtlrx9uP0qtiKPwf2/9PB2W8d86bHfPNL5uvRx6Ee7dUtP
do7VZr15gXvy5J0W3hPZOnla7LD5c9nax+SdwxevYivy5NgRy3dLD++0DcmX
HvvYkauvS78D/ej13dKTx+D+/yL38F6LhIlsnTx+97CkuWwtnrx3eOoqtopH
PyJzt/TwXtu8fOmx3z2y8Lr0CehHl3RLT56crJW/Wc49nGZRPZGtk6clD6ub
y9Z2ktOGN69iq53oR7Ttlh5Os+3Klx775JF916XfhX70ULf0ZPeDBm1EBffw
EQfLSWyd7HVwnPU8trabfGS8XRhb7UY/yZAoPXzExVggPfYHpzrVSJ+IfoZr
j/Rk32zDzBGV3MPHHDwnsXVyQPa4ufPY2ifkY+MXhLHVJ+gnLUuUHj7mElQg
PfbZU1fVSP8p+hlreqQnu+cbtoy4xD180iFuElsne+WPS5zH1vaQT45PCWOr
PegnHUqUHj7pklMgPfb5UwtqpE9CP6O4R3qyb5Hh/IjL3MOlDpcnsXVyQNG4
G/PY2l5y6fjGMLbai37SvUTp4VKXRwXSY1809VmN9PvQzxjskZ68/KDB4udX
uIePOFj9nq2TQw6Os/krW0smHxlv/1+2SkY/yeET6eEjLo5fSo/9wanON6RP
QT/D7Zn05NXZhlk/r+IePubg/Xu2Tl6fPW7+X9nafvKx8Yv/y1b70U9a/on0
8DGXkC+lxz576uob0n+Gfsb6Z9KTl+cbtv38KvfwSYeE37N1ckj+uKS/srUD
5JPjU//LVgfQT8r8RHr4pEvel9Jjnz+18Ib0qehnlDyTnry6yFD+82ru4VKH
6t+zdfL6onF1f2VraeTS8c3/Zas09JPaPpEeLnXp+lJ67Ium9t2QPh39jKFn
0pNfw/3/Ne7hcndLZ7ZOHn7W09qXrR0kl3vbhbPVQfTzDJ9KD5f7Gb+SHvuz
i5y+kf4Q+qWu30lPfqtSzbS5zj1c7e7pzNbJ71Z6zvVla5+Tq70XhLPV5+jn
LftUerjaL+gr6bGvXLTqG+kz0C9d85305Ndw/1/DPVznHufM1snDr3sm+rK1
w+Q675RwtjqMft6hT6WH6/xyvpIe++uLCr6RPhP90uLvpCe/Va/O29zgHm52
v+zM1snv1nve8GVrR8jN3o3hbHUE/bx7n0oPN/s9+kp67OsXPftG+iz0Swe/
k548Fvf/33APl7tbTWbr5AlnPW3ms7Vscrm3/Wq2ykY/z2GP9HC5n+MJ6bE/
u8j5pvQ56Je6PZee7FKpZr11k3u42t17MlsnT6/0nD+frX1BrvZevJqtvkA/
b/ke6eFqv5AT0mNfuWj1TemPol+6/rn05LG4/6/lHq5zT5jM1skTrnsmzWdr
ueQ679TVbJWLfl7mHunhOr+8E9Jjf31R4U3p89AvLXkuPdmlXpW/Vcc93Oxe
PZmtk6fXe9bNZ2vHyM3ezavZ6hj6eW17pIeb/bpOSI99/aK+m9IfR7906Ln0
5Fl3TJrtLe7htkBLF7ZO9r4TZO3H1vLJbSF2EWyVjz7MkCQ93BZhLJQe+zvr
nGqlL0C/0bVXevL8DtNM23ru4a5ATxe2Tl7cETTXj619Se4KWRDBVl+iD1uW
JD3cFRFUKD32HetW1Ur/FfqNa3qlJ8/qNm2xbeAe7guMc2HrZO/uoEQ/tnaC
3BeSEsFWJ9CHHUqSHu6LyCmUHvvudQW10hei31jcKz15fr/pvG0j9/BQ4GUX
tk5e3B90w4+tnSQPhTRGsNVJ9GH3kqSHhyIeFUqPff+6Z7XSn0K/cbBXevKK
OyaLX3zLPdwWaPUHtk5eeSfI5m9srYjcFmL/P7YqQh/msFd6uC3C8aT02N9Z
51wnfTH6jW590pMjOkyzfnGbe7gr0PsPbJ28oSNo/t/Y2mlyV8ji/7HVafRh
y/dKD3dFhJyUHvuOdavrpP8a/cb1fdKTV3Sbtv2iiXu4LzDhD2ydvLI7KOlv
bO0MuS8k9X9sdQZ9WOZe6eG+iLyT0mPfva6wTvoS9BtL+qQnR/Sbyn/RzD08
FFj9B7ZO3tAfVPc3tlZKHgpp/h9blaIPa9srPTwU0XVSeuz71/XVSa+j3zjU
Jz15G+7/W7iHt0dburJ1csLmWGt/tnaWvD3eLpKtzqJPNOyTHt6eZDwlPfab
9zvdkv4c+jTXF9KTk2I3zbS7wz28M9rTla2TU2Nj5/qztfPknfELItnqPPrE
Zfukh3cmBZ2SHvvY/atuSV+GPm3NC+nJ23D/f5d7eG90nCtbJyfsjk30Z2sX
yHvjUyLZ6gL6xEP7pIf3JuWckh773fsLbkl/EX1a8QvpyUnJm87b3eMeTou+
7MrWyanJsTf82Vo5OS2+MZKtytEn3tsnPZyW9OiU9Ngn7392S/oK9GmDL6Qn
H8H9fyv38PZoqylsnXxsc6zNArZWSd4eb7+GrSrRJzokSw9vT3Iskh77zfud
66W/hD7NrV968snYTbPevs89vDPaewpbJ5fGxs5fwNYuk3fGL17DVpfRJy5P
lh7emRRSJD32sftX10t/BX3a+n7pyUdw//+Ae3hvdMIUtk4+tjs2aQFbqyLv
jU9dw1ZV6BMzk6WH9yblFUmP/e79hfXSX0WfVtIvPflk8qbyt9u4h9Oiq6ew
dXJpcmzdArZWTU6Lb17DVtXoE9uSpYfTkrqKpMc+eX9fvfTX0KcN9UtPvngw
XXunnXv4SIbl+2ydfPVgtvVCtnadfCTXbi1bXUdfYEiRHj5SaCyWHvuDp50a
pK9BX+o6ID25Njt95jsd3MPHMjzfZ+vkpuzsuQvZ2g3ysdwFa9nqBvqCZSnS
w8cKg4qlxz779KoG6b9BX7pmQHryxfz0Le885B4+mRH3PlsnX83PTlzI1m6S
T+amrGWrm+gLDqVID58szCmWHvv80wUN0teiLy0ekJ5cW5R+/p1H3MOlGZff
Z+vkpqLsGwvZWh25NLdxLVvVoS+4lyI9XFr4qFh67ItOP2uQ/hb60sEB6clt
B9MtRj7mHj6SYTWVrZO7DmbbLGJr9eQjufbr2KoefYHDfunhI4WOp6XH/uBp
50bpG9CXug1KT+7LTp81spN7+FiG91S2Th7Kzp6/iK01ko/lLl7HVo3oC5bv
lx4+VhhyWnrss0+vbpT+W/Sl6welJ7flp28b+YR7+GRGwlS2Tu7Kz05axNZu
k0/mpq5jq9voCzL3Sw+fLMw7LT32+acLG6VvQl9aMig9ua8ovXxkF/dwaUb1
VLZOHirKrlvE1prJpbnN69iqGX1B237p4dLCrtPSY190uq9R+hb0pUOD0pO3
4/7/KfdweZmlG1sn7zxbaR3A1u6Qy6vsotjqDvoaw2fSw+W1xq+lx/5so9O3
0t9F3+z6vfTkvZX6TPtu7uHqMk83tk5Oq6ycG8DW7pGrqxZEsdU99DXLPpMe
rq4N+lp67CsbV30rfSv65jXfS0/ejvv/Hu7hurI4N7ZO3nm9MjGArd0n11Wl
RLHVffQ1hz6THq6rzflaeuyvNxZ8K/0D9M3F30tP3luvn7d/xj3cXHbZja2T
0+orbwSwtTZyc1VjFFu1oa+595n0cHPto6+lx76+8dm30rejbx78XnpyFu7/
v+MeLi+zmsbWycfPVtosZmsd5PIq+/Vs1YG+xuGA9HB5reMZ6bE/2+h8W/qH
6JvdXkpPPlWpz3r3OfdwdZn3NLZO1isr5y9ma4/I1VWL17PVI/Q1yw9ID1fX
hpyRHvvKxtW3pX+Mvnn9S+nJWbj/7+UeritLmMbWycevVyYtZmud5Lqq1PVs
1Ym+JvOA9HBdbd4Z6bG/3lh4W/on6JtLXkpPPlWvl7/bxz3cXFY9ja2T9frK
usVsrYvcXNW8nq260Ne0HZAebq7tOiM99vWNfbelf4q+eeil9OTyOy3aqBfc
w22tltPZOrn6Tof1ErbWTW7rtNvAVt3oewyp0sNtvcYS6bG/M+jUJH0P+iHX
V9KT6zpaZo7q5x7uavWcztbJzR0dc5ewtWfkrs4FG9jqGfqeZanSw129QSXS
Y98xuKpJ+u/QD615JT25vLtly6gB7uG+1rjpbJ1c3d2RuIStPSf3daZsYKvn
6HsOpUoP9/XmlEiPffdgQZP0veiHil9JT67rbzk/apB7eKj18nS2Tm7u77ix
hK31kYc6GzewVR/6nnup0sNDvY9KpMe+f/BZk/Qv0A8NvpKe3H6nxWL099zD
ba1WM9g6+emdDpulbK2f3NZpv5Gt+tH3OKRJD7f1OpZKj/2dQedm6QfQD7kN
SU9+0dEya/RL7uGuVu8ZbJ2sPeyYv5StDZKfdi7eyFaD6HuWp0kPd/WGlEqP
/cPB1c3Sf49+aP2Q9OT27pZto19xD/e1Jsxg6+Sn3R1JS9naS3JfZ+pGtnqJ
viczTXq4rzevVHrsuwcLm6V/hX6oZEh68ov+lvLRQ9zDQ63VM9g6WRvoqFvK
1oZwb/+keSNbDaHvaUuTHh7q7SqVHvuBwb5m6bUW9f+/6V7/D0hteX0=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1264., Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 32768.}, {0, 1.2855504354071922`*^61}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.818270659370552*^9},
 CellLabel->
  "Out[710]=",ExpressionUUID->"1a74c524-d8e7-4885-b46c-53e909479259"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"keys", "=", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Keys", "[", "allGraphs5", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"VertexCount", "[", 
              RowBox[{"allGraphs5", "[", 
               RowBox[{"#", ",", "\"\<graph\>\""}], "]"}], "]"}], "\[Equal]", 
             "5"}], "&"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{
           RowBox[{"BaseCoeff", "[", 
            RowBox[{"k", ",", "\"\<C\>\""}], "]"}], ",", "2"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "keys"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
       "]"}], "//", "Sort"}], "//", "Differences"}], "//", "Tally"}], "//", 
  "Sort"}]], "Input",
 CellChangeTimes->{{3.8182732918663425`*^9, 3.8182733098634987`*^9}, {
  3.8182733613195744`*^9, 3.81827336238582*^9}},
 CellLabel->
  "In[765]:=",ExpressionUUID->"9cd0be5e-9072-4386-ad3d-4e25c9de7b21"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"284063454550", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"567942355354", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"851468934622", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1132797682146", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1133409001984", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1408271185398", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1408815396352", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1676116007424", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1676119177728", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1683560135162", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1683632224768", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1683634584064", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1683635370496", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1942460454400", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1942464945664", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1942465738240", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1942466002432", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958496763390", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958499515904", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958501744128", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958503972352", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958504103424", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958504758784", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958504889856", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958505020928", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958566622720", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958571081216", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958571865600", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1958572129792", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1959573249536", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1959575477760", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1959577705984", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1959578500608", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1959578631680", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1959578762752", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2164663582210", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2165274902048", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2173594041960", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2173597187712", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2173843472044", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2173847928560", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2173848714944", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2173848977152", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2173849108310", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2174393319264", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2182712459128", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2182715604864", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2182850084762", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2182924533664", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2182978666496", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2182983122944", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2182983909376", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2182984171520", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2189364953088", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2189366919168", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2189367312288", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2189367705536", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2189367967744", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2189368098816", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2189368360868", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2189370851268", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2191493103548", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2191497560064", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2191498346432", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2191498608640", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2191498739678", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2191506079712", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2191512109056", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2191515254784", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197946499072", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197948465152", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197948727296", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197948858336", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197949251552", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197949251584", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197949513728", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197949579234", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197949644800", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197949775872", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197949906912", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197950300128", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197950562304", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2197952397312", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198015574016", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198015836160", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198016360416", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198016622592", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198016884736", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198017409000", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198017671176", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198290104296", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198293250048", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198424649704", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198426615792", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198427009024", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198427402240", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198427664384", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198427795456", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198428057580", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198430547956", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198539534316", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198543990768", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198544777216", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198545039360", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198545170422", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198552444912", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198552707056", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198553231360", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198553493504", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198553755648", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198554279928", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198554542072", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198560899072", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198818586616", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198821732352", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198953132024", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198955098112", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198955491328", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198955884544", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198956146688", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198956212218", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198956277760", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198956539896", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2198959030272", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199009296380", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199013752832", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199014539264", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199014801408", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199014932478", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199017684992", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199019913216", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199020240896", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199022141440", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199022206976", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199022272512", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199022469120", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199022600192", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199022927872", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199022993408", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199023058944", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199023190016", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199023255552", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199023321088", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199023386624", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199023517696", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199023648768", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199023779840", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199023845376", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199024041984", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199024304128", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199024369664", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199024828416", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199024893954", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199026139136", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199028301824", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199028629504", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199030595584", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199030661120", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199030988800", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199031382016", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199031447552", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199031644160", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199031775232", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199032037380", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199034527748", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199084793856", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199089250304", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199089315840", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199089381376", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199089577984", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199090036736", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199090102272", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199090298880", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199090364416", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199090626560", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199091150856", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199091413000", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199560126464", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199560192000", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199560650752", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199560716288", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199561175056", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199561240592", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199561699344", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199561764882", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2199634632736", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200091426816", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200093655040", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200095883264", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200096669696", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200096800768", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200096931840", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200096997376", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200097062912", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200097521696", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200097587232", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200098045952", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200098111488", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200098570272", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200098635810", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200633868288", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200633934080", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200634392608", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200634458400", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200634916880", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200634982672", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200635441200", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200635506994", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2205940842600", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2205942808560", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2205943201824", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2205943594944", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2205943857152", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2205943988352", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2205944250380", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2205946740660", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206068637680", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206068899888", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206069424160", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206069686272", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206069948480", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206070472728", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206070734840", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206538399744", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206538661952", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206539186208", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206539448320", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206539710528", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206540234784", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2206540496896", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2207953754216", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2207956924544", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2208203166892", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2208207658224", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2208208450752", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2208208715008", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2215059259512", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2215061225472", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2215061618784", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2215062011904", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2215062274048", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2215062405248", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2215062667352", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2215065157632", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2223724667904", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2223726649344", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2223727051680", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2223727443904", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2223727706112", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2223727838208", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2223728075684", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2223730581444", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2225852833212", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2225857289728", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2225858084288", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2225858346496", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232306229248", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232308195328", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232308457472", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232308596704", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232308989920", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232308989952", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232309252096", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232309383168", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232309514240", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232309637088", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232310030304", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232310292480", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232312127488", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232375304192", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232375568384", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232376100832", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232376360960", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232376625152", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232377141224", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232377401352", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232649841128", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232652986880", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232784389096", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232786354160", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232786742272", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232787138560", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232787402752", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232787534848", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232787790828", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232790284276", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232899270124", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232903728624", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232904513024", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232904777216", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232912183280", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232912447472", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232912967680", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232913231872", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232913496064", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232914016248", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2232914280440", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233312870392", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233314836480", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233315227648", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233315620864", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233315885056", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233316016128", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233316276216", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233318766592", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233369034236", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233373490688", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233374277120", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233374539264", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233379979264", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233381945344", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233382207488", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233382338560", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233382731776", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233382993920", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233383059968", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233383124992", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233383256064", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233383387136", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233383518208", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233383584256", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233383780352", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233384042496", ",", "31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233384108544", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233384566784", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233384632834", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233385877504", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233388368896", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233390333952", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233390728192", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233391120384", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233391382528", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233391514624", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233391776772", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233394266116", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233449054208", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233449318400", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233449842688", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233450102784", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233450366976", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233450891272", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233451151368", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233919864832", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233919930880", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233920393216", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233920459264", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233920913424", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233920979472", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233921441808", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2233921507858", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234456735744", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234456801792", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234457260064", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234457326112", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234457792512", ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234457858560", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234458316832", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234458382882", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234993606656", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234993672960", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234994135072", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234994201376", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234994663440", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234994729744", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234995191856", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2234995258163", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240300557416", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240302538736", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240302935072", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240303331264", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240303595520", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240303727744", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240303991820", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240306501556", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240428367856", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240428632112", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240429160480", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240429424640", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240429688896", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240430217240", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240430481400", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240898129920", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240898392128", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240898924576", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240899186688", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240899448896", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240899981344", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2240900243456", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2249418989688", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2249420955648", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2249421355104", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2249421748224", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2249422012416", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2249422143616", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2249422428248", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2249424918528", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2483630962016", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2491950095736", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2491953249664", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2508056231416", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2508059377152", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2767040084384", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3050499538400", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8182732924773417`*^9, 3.818273310858321*^9}, 
   3.818273363372464*^9},
 CellLabel->
  "Out[765]=",ExpressionUUID->"d729e8b9-ebc6-491b-858f-8e06ee6dcd2b"]
}, Open  ]]
},
WindowSize->{1904, 997},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"bf155c18-b60e-4843-921a-7422a76a2555"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 324, 8, 28, "Input",ExpressionUUID->"e083b20e-88cd-4649-91b1-2bb4f516fcf0"],
Cell[907, 32, 210, 5, 32, "Output",ExpressionUUID->"7aec5841-1b94-490a-8f5d-bc56e6c7c51d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1154, 42, 399, 10, 28, "Input",ExpressionUUID->"aa4d8fa3-2548-44ee-9738-dabb47b05b50"],
Cell[1556, 54, 3497, 79, 69, "Output",ExpressionUUID->"34c4f3cb-cadf-4a12-9d5c-a9381964139d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5090, 138, 505, 13, 28, "Input",ExpressionUUID->"8591d090-f6ba-4b82-a185-006fb2ae5812"],
Cell[5598, 153, 327, 9, 36, "Output",ExpressionUUID->"6ca578a1-821a-4bc4-9d4b-08b5d5e7e5b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5962, 167, 521, 10, 124, "Input",ExpressionUUID->"e7ebe876-25ef-47ff-95f3-2c3521a6de56"],
Cell[6486, 179, 26117, 509, 240, "Output",ExpressionUUID->"2d2f4019-c0ff-4351-a300-760719dd028d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32640, 693, 1609, 39, 219, "Input",ExpressionUUID->"cfbb0bd4-b2f2-44a4-881a-e96dbf6d564f"],
Cell[34252, 734, 30899, 618, 240, "Output",ExpressionUUID->"c72f34d1-9f14-4be7-a7cc-bb89d21925a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65188, 1357, 1917, 48, 257, "Input",ExpressionUUID->"58c8ba08-66fa-47e2-afb4-71a64a29eedd"],
Cell[67108, 1407, 117497, 2199, 514, "Output",ExpressionUUID->"522f5575-8fab-44ff-8cf2-5942e185cba5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184642, 3611, 1916, 48, 257, "Input",ExpressionUUID->"20783a90-507f-4648-b673-877d868b4166"],
Cell[186561, 3661, 1126560, 20656, 514, "Output",ExpressionUUID->"644e8951-0cbd-4994-8bf0-2eecad4a1a88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1313158, 24322, 803, 20, 105, "Input",ExpressionUUID->"7757f473-2b6b-4dcb-b799-e77cfba4627a"],
Cell[1313964, 24344, 8241, 156, 238, "Output",ExpressionUUID->"5c5ec0c5-f2f5-47fa-9c49-ee0955d26384"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1322242, 24505, 982, 26, 67, "Input",ExpressionUUID->"baac07d7-1c02-4253-b64d-c5c8d83d9011"],
Cell[1323227, 24533, 2281, 48, 449, "Output",ExpressionUUID->"fd7c3e74-2ea3-45f4-a881-ad82dc0e0a08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1325545, 24586, 1006, 27, 67, "Input",ExpressionUUID->"dc968163-0213-4707-875e-a9b22edc3df6"],
Cell[1326554, 24615, 1722, 44, 228, "Output",ExpressionUUID->"b24c2338-0e09-4ee0-a3b1-dacd14c169bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1328313, 24664, 931, 25, 67, "Input",ExpressionUUID->"84b61dde-cdbb-4f7a-8c55-8d72c3806112"],
Cell[1329247, 24691, 2152, 49, 449, "Output",ExpressionUUID->"d7766866-8044-4260-b865-11d43b028a5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1331436, 24745, 1003, 27, 67, "Input",ExpressionUUID->"925ca18d-b5c2-4f0d-b64e-51b8ecb47122"],
Cell[1332442, 24774, 10208, 184, 231, "Output",ExpressionUUID->"c26c5070-ef20-4fbc-8aee-235ea11937a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1342687, 24963, 1006, 27, 67, "Input",ExpressionUUID->"c6c8af0c-48a1-49eb-9934-acd2f10c8b17"],
Cell[1343696, 24992, 239492, 3944, 784, "Output",ExpressionUUID->"1a74c524-d8e7-4885-b46c-53e909479259"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1583225, 28941, 1163, 31, 67, "Input",ExpressionUUID->"9cd0be5e-9072-4386-ad3d-4e25c9de7b21"],
Cell[1584391, 28974, 28848, 812, 745, "Output",ExpressionUUID->"d729e8b9-ebc6-491b-858f-8e06ee6dcd2b"]
}, Open  ]]
}
]
*)

